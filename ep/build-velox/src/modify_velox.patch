diff --git a/CMake/resolve_dependency_modules/simdjson.cmake b/CMake/resolve_dependency_modules/simdjson.cmake
index ddd232050..b6ed2432b 100644
--- a/CMake/resolve_dependency_modules/simdjson.cmake
+++ b/CMake/resolve_dependency_modules/simdjson.cmake
@@ -29,4 +29,6 @@ FetchContent_Declare(
   URL ${VELOX_SIMDJSON_SOURCE_URL}
   URL_HASH ${VELOX_SIMDJSON_BUILD_SHA256_CHECKSUM})
 
+set(SIMDJSON_SKIPUTF8VALIDATION ON)
+
 FetchContent_MakeAvailable(simdjson)
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7fd99b6dc..e7e03a800 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -428,7 +428,7 @@ velox_resolve_dependency(Boost 1.77.0 COMPONENTS ${BOOST_INCLUDE_LIBRARIES})
 # for reference. find_package(range-v3)
 
 velox_set_source(gflags)
-velox_resolve_dependency(gflags COMPONENTS ${VELOX_GFLAGS_TYPE})
+velox_resolve_dependency(gflags)
 if(NOT TARGET gflags::gflags)
   # This is a bit convoluted, but we want to be able to use gflags::gflags as a
   # target even when velox is built as a subproject which uses
   