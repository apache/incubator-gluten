diff --git a/CMake/Findlz4.cmake b/CMake/Findlz4.cmake
index d49115f12..1aaa8e532 100644
--- a/CMake/Findlz4.cmake
+++ b/CMake/Findlz4.cmake
@@ -21,18 +21,19 @@ find_package_handle_standard_args(lz4 DEFAULT_MSG LZ4_LIBRARY LZ4_INCLUDE_DIR)
 
 mark_as_advanced(LZ4_LIBRARY LZ4_INCLUDE_DIR)
 
-get_filename_component(liblz4_ext ${LZ4_LIBRARY} EXT)
-if(liblz4_ext STREQUAL ".a")
-  set(liblz4_type STATIC)
-else()
-  set(liblz4_type SHARED)
-endif()
-
 if(NOT TARGET lz4::lz4)
-  add_library(lz4::lz4 ${liblz4_type} IMPORTED)
-  set_target_properties(lz4::lz4 PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
-                                            "${LZ4_INCLUDE_DIR}")
-  set_target_properties(
-    lz4::lz4 PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES "C"
-                        IMPORTED_LOCATION "${LZ4_LIBRARIES}")
+  add_library(lz4::lz4 UNKNOWN IMPORTED)
+  set_target_properties(lz4::lz4 PROPERTIES
+    INTERFACE_INCLUDE_DIRECTORIES "${LZ4_INCLUDE_DIR}"
+    IMPORTED_LINK_INTERFACE_LANGUAGES "C"
+    IMPORTED_LOCATION_RELEASE "${LZ4_LIBRARY_RELEASE}")
+  set_property(TARGET lz4::lz4 APPEND PROPERTY
+      IMPORTED_CONFIGURATIONS RELEASE)
+
+  if(LZ4_LIBRARY_DEBUG)
+      set_property(TARGET lz4::lz4 APPEND PROPERTY
+          IMPORTED_CONFIGURATIONS DEBUG)
+      set_property(TARGET lz4::lz4 PROPERTY
+          IMPORTED_LOCATION_DEBUG "${LZ4_LIBRARY_DEBUG}")
+  endif()
 endif()
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 82fed089f..91e4cc0df 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -249,10 +249,15 @@ if(VELOX_ENABLE_ABFS)
 endif()
 
 if(VELOX_ENABLE_HDFS)
-  find_library(
-    LIBHDFS3
-    NAMES libhdfs3.so libhdfs3.dylib
-    HINTS "${CMAKE_SOURCE_DIR}/hawq/depends/libhdfs3/_build/src/" REQUIRED)
+  find_package(libhdfs3)
+  if(libhdfs3_FOUND AND TARGET HDFS::hdfs3)
+    set(LIBHDFS3 HDFS::hdfs3)
+  else()
+    find_library(
+      LIBHDFS3
+      NAMES libhdfs3.so libhdfs3.dylib
+      HINTS "${CMAKE_SOURCE_DIR}/hawq/depends/libhdfs3/_build/src/" REQUIRED)
+  endif()
   add_definitions(-DVELOX_ENABLE_HDFS3)
 endif()
 
@@ -399,7 +404,7 @@ resolve_dependency(Boost 1.66.0 COMPONENTS ${BOOST_INCLUDE_LIBRARIES})
 # for reference. find_package(range-v3)
 
 set_source(gflags)
-resolve_dependency(gflags COMPONENTS shared)
+resolve_dependency(gflags)
 if(NOT TARGET gflags::gflags)
   # This is a bit convoluted, but we want to be able to use gflags::gflags as a
   # target even when velox is built as a subproject which uses
diff --git a/third_party/CMakeLists.txt b/third_party/CMakeLists.txt
index ce4c24dbe..785a2acc6 100644
--- a/third_party/CMakeLists.txt
+++ b/third_party/CMakeLists.txt
@@ -26,7 +26,9 @@ if(VELOX_ENABLE_ARROW)
   endif()
   set(ARROW_PREFIX "${CMAKE_CURRENT_BINARY_DIR}/arrow_ep")
   set(ARROW_CMAKE_ARGS
-      -DARROW_PARQUET=OFF
+      -DARROW_PARQUET=ON
+      -DARROW_FILESYSTEM=ON
+      -DARROW_PROTOBUF_USE_SHARED=OFF
       -DARROW_WITH_THRIFT=ON
       -DARROW_WITH_LZ4=ON
       -DARROW_WITH_SNAPPY=ON
@@ -69,6 +71,7 @@ if(VELOX_ENABLE_ARROW)
     arrow_ep
     PREFIX ${ARROW_PREFIX}
     URL ${VELOX_ARROW_SOURCE_URL}
+    PATCH_COMMAND patch -p1 < ${CMAKE_CURRENT_SOURCE_DIR}/modify_arrow.patch
     URL_HASH ${VELOX_ARROW_BUILD_SHA256_CHECKSUM}
     SOURCE_SUBDIR cpp
     CMAKE_ARGS ${ARROW_CMAKE_ARGS}
diff --git a/velox/common/process/tests/CMakeLists.txt b/velox/common/process/tests/CMakeLists.txt
index 2fce354e3..64cfcb2ab 100644
--- a/velox/common/process/tests/CMakeLists.txt
+++ b/velox/common/process/tests/CMakeLists.txt
@@ -19,4 +19,4 @@ add_executable(
 add_test(velox_process_test velox_process_test)
 
 target_link_libraries(velox_process_test PRIVATE velox_process fmt::fmt gtest
-                                                 velox_time gtest_main)
+                                                 velox_time gtest_main glog::glog gflags::gflags)
diff --git a/velox/connectors/hive/storage_adapters/abfs/RegisterAbfsFileSystem.cpp b/velox/connectors/hive/storage_adapters/abfs/RegisterAbfsFileSystem.cpp
index e2a638df6..e383cf205 100644
--- a/velox/connectors/hive/storage_adapters/abfs/RegisterAbfsFileSystem.cpp
+++ b/velox/connectors/hive/storage_adapters/abfs/RegisterAbfsFileSystem.cpp
@@ -38,7 +38,6 @@ std::shared_ptr<FileSystem> abfsFileSystemGenerator(
 
 void registerAbfsFileSystem() {
 #ifdef VELOX_ENABLE_ABFS
-  LOG(INFO) << "Register ABFS";
   registerFileSystem(isAbfsFile, std::function(abfsFileSystemGenerator));
 #endif
 }
diff --git a/velox/connectors/hive/storage_adapters/hdfs/tests/HdfsMiniCluster.cpp b/velox/connectors/hive/storage_adapters/hdfs/tests/HdfsMiniCluster.cpp
index 10ee508ba..027a58ecc 100644
--- a/velox/connectors/hive/storage_adapters/hdfs/tests/HdfsMiniCluster.cpp
+++ b/velox/connectors/hive/storage_adapters/hdfs/tests/HdfsMiniCluster.cpp
@@ -72,7 +72,7 @@ HdfsMiniCluster::HdfsMiniCluster() {
         "Failed to find minicluster executable {}'", miniClusterExecutableName);
   }
   boost::filesystem::path hadoopHomeDirectory = exePath_;
-  hadoopHomeDirectory.remove_leaf().remove_leaf();
+  hadoopHomeDirectory.remove_filename().remove_filename();
   setupEnvironment(hadoopHomeDirectory.string());
 }
 
diff --git a/velox/dwio/common/CMakeLists.txt b/velox/dwio/common/CMakeLists.txt
index 25e8bb56a..5b2aa526b 100644
--- a/velox/dwio/common/CMakeLists.txt
+++ b/velox/dwio/common/CMakeLists.txt
@@ -76,4 +76,5 @@ target_link_libraries(
   velox_memory
   Boost::regex
   Folly::folly
-  glog::glog)
+  glog::glog
+  protobuf::libprotobuf)
diff --git a/velox/dwio/parquet/writer/arrow/tests/CMakeLists.txt b/velox/dwio/parquet/writer/arrow/tests/CMakeLists.txt
index 2cabfc29a..54329ce23 100644
--- a/velox/dwio/parquet/writer/arrow/tests/CMakeLists.txt
+++ b/velox/dwio/parquet/writer/arrow/tests/CMakeLists.txt
@@ -39,7 +39,9 @@ target_link_libraries(
   gtest
   gtest_main
   arrow
-  arrow_testing)
+  arrow_testing
+  glog::glog
+  gflags::gflags)
 
 add_library(
   velox_dwio_arrow_parquet_writer_test_lib
