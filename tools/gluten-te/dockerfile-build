FROM hongzezhang/gluten-buildenv:latest AS gluten-build
MAINTAINER Hongze Zhang<hongze.zhang@intel.com>

# Whether debug build is enabled
ARG JDK_DEBUG_BUILD
ARG VELOX_DEBUG_BUILD
ARG ARROW_DEBUG_BUILD
ARG GLUTEN_DEBUG_BUILD
RUN echo "JDK debug build is [$JDK_DEBUG_BUILD]!"
RUN echo "Velox debug build is [$VELOX_DEBUG_BUILD]!"
RUN echo "Arrow debug build is [$ARROW_DEBUG_BUILD]!"
RUN echo "Gluten debug build is [$GLUTEN_DEBUG_BUILD]!"

# If JDK debug is on
RUN if [ "$JDK_DEBUG_BUILD" == "ON" ]; \
    then \
      apt-get update; \
      DEBIAN_FRONTEND=noninteractive apt-get uninstall -y openjdk-8-jdk; \
      DEBIAN_FRONTEND=noninteractive apt-get uninstall -y maven; \
      mkdir -p /opt/jdk/ \
      && mkdir -p /opt/maven/ \
      && cd /opt/jdk/ \
      && wget https://builds.shipilev.net/openjdk-jdk8/openjdk-jdk8-linux-x86_64-server-fastdebug-gcc8-glibc2.28.tar.xz \
      && tar -xvf openjdk-jdk8-linux-x86_64-server-fastdebug-gcc8-glibc2.28.tar.xz \
      && rm -f openjdk-jdk8-linux-x86_64-server-fastdebug-gcc8-glibc2.28.tar.xz \
      && cd /opt/maven/ \
      && wget https://dlcdn.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz \
      && tar -xvf apache-maven-3.6.3-bin.tar.gz \
      && rm -f apache-maven-3.6.3-bin.tar.gz \
      && cp -rs /opt/jdk/j2sdk-image/bin/* /usr/local/bin/ \
      && cp -rs /opt/maven/apache-maven-3.6.3/bin/mvn /usr/local/bin/ \
      && echo "JAVA_HOME=/opt/jdk/j2sdk-image" > ~/.mavenrc; \
    fi

# These branches are mainly for pre-downloading dependencies to speed-up builds. 
# Thus it should not be required to change these values every time when the build branch
# is changed.
ARG CACHE_GLUTEN_REPO
ARG CACHE_GLUTEN_BRANCH

RUN test -n "$CACHE_GLUTEN_REPO" || (echo "CACHE_GLUTEN_REPO not set" && false)
RUN test -n "$CACHE_GLUTEN_BRANCH" || (echo "CACHE_GLUTEN_BRANCH not set" && false)

RUN cd /opt/ \
    && git clone $CACHE_GLUTEN_REPO -b $CACHE_GLUTEN_BRANCH gluten

# Set ccache size
RUN ccache -M 128G
RUN ccache -s

# Default Gluten Maven build options (empty as of now)
ENV GLUTEN_MAVEN_OPTIONS="-Ddebug_build=$GLUTEN_DEBUG_BUILD"

ARG BUILD_BACKEND_TYPE

RUN test -n "$BUILD_BACKEND_TYPE" || (echo "BUILD_BACKEND_TYPE not set" && false)

RUN if [ "$BUILD_BACKEND_TYPE" == "velox" ]; \
    then \
      EXTRA_MAVEN_OPTIONS="-Pspark-3.2 \
                           -Pbackends-velox \
                           -Dbuild_protobuf=ON \
                           -Dbuild_cpp=ON \
                           -Dbuild_arrow=ON \
                           -Dbuild_velox=ON \
                           -Dbuild_velox_from_source=ON \
                           -Dbuild_gazelle_cpp=OFF \
                           -DskipTests \
                           -Dscalastyle.skip=true \
                           -Dcheckstyle.skip=true \
                           -Denable_ep_cache=ON"; \
    elif [ "$BUILD_BACKEND_TYPE" == "gazelle-cpp" ]; \
    then \
      EXTRA_MAVEN_OPTIONS="-Pspark-3.2 \
                           -Pbackends-gazelle \
                           -Dbuild_protobuf=ON \
                           -Dbuild_cpp=ON \
                           -Dbuild_arrow=ON \
                           -Dbuild_velox=OFF \
                           -Dbuild_velox_from_source=OFF \
                           -Dbuild_gazelle_cpp=ON \
                           -DskipTests \
                           -Dscalastyle.skip=true \
                           -Dcheckstyle.skip=true \
                           -Denable_ep_cache=ON"; \
    else \
      echo "Unrecognizable backend type: $BUILD_BACKEND_TYPE"; \
      exit 1; \
    fi && echo $EXTRA_MAVEN_OPTIONS > ~/.gluten-mvn-options;

# Prebuild Gluten
RUN EXTRA_MAVEN_OPTIONS=$(cat ~/.gluten-mvn-options) \
    && cd /opt/gluten \
    && bash -c "mvn clean install $GLUTEN_MAVEN_OPTIONS $EXTRA_MAVEN_OPTIONS"

# Build Gluten
ARG TARGET_GLUTEN_REPO
ARG TARGET_GLUTEN_COMMIT

RUN test -n "$TARGET_GLUTEN_REPO" || (echo "TARGET_GLUTEN_REPO not set" && false)
RUN test -n "$TARGET_GLUTEN_COMMIT" || (echo "TARGET_GLUTEN_COMMIT not set" && false)

RUN cd /opt/gluten \
    && git fetch $TARGET_GLUTEN_REPO $TARGET_GLUTEN_COMMIT:build_$TARGET_GLUTEN_COMMIT \
    && git checkout build_$TARGET_GLUTEN_COMMIT

RUN EXTRA_MAVEN_OPTIONS=$(cat ~/.gluten-mvn-options) \
    && cd /opt/gluten \
    && bash -c "mvn clean install $GLUTEN_MAVEN_OPTIONS $EXTRA_MAVEN_OPTIONS"

# EOF
