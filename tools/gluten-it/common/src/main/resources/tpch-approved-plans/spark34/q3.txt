== Physical Plan ==
VeloxColumnarToRowExec (26)
+- TakeOrderedAndProjectExecTransformer (25)
   +- ^ RegularHashAggregateExecTransformer (23)
      +- ^ RegularHashAggregateExecTransformer (22)
         +- ^ ProjectExecTransformer (21)
            +- ^ ShuffledHashJoinExecTransformer Inner (20)
               :- ^ InputIteratorTransformer (13)
               :  +- ColumnarExchange (12)
               :     +- ^ ProjectExecTransformer (10)
               :        +- ^ GlutenBroadcastHashJoinExecTransformer Inner (9)
               :           :- ^ InputIteratorTransformer (6)
               :           :  +- ColumnarBroadcastExchange (5)
               :           :     +- ^ ProjectExecTransformer (3)
               :           :        +- ^ FilterExecTransformer (2)
               :           :           +- ^ Scan parquet spark_catalog.default.customer (1)
               :           +- ^ FilterExecTransformer (8)
               :              +- ^ Scan parquet spark_catalog.default.orders (7)
               +- ^ InputIteratorTransformer (19)
                  +- ColumnarExchange (18)
                     +- ^ ProjectExecTransformer (16)
                        +- ^ FilterExecTransformer (15)
                           +- ^ Scan parquet spark_catalog.default.lineitem (14)


(1) Scan parquet spark_catalog.default.customer
Output [2]: [c_custkey#1479L, c_mktsegment#1486]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-1.0/customer]
PushedFilters: [IsNotNull(c_mktsegment), EqualTo(c_mktsegment,BUILDING), IsNotNull(c_custkey)]
ReadSchema: struct<c_custkey:bigint,c_mktsegment:string>

(2) FilterExecTransformer
Input [2]: [c_custkey#1479L, c_mktsegment#1486]
Arguments: ((isnotnull(c_mktsegment#1486) AND (c_mktsegment#1486 = BUILDING)) AND isnotnull(c_custkey#1479L))

(3) ProjectExecTransformer
Input [2]: [c_custkey#1479L, c_mktsegment#1486]
Arguments: [c_custkey#1479L]

(4) WholeStageCodegenTransformer (19)
Input [1]: [c_custkey#1479L]
Arguments: false
Native Plan:
-- Project[expressions: (n1_2:BIGINT, "n0_0")] -> n1_2:BIGINT
  -- TableScan[table: hive_table, range filters: [(c_custkey, Filter(IsNotNull, deterministic, null not allowed)), (c_mktsegment, BytesRange: [BUILDING, BUILDING] no nulls)]] -> n0_0:BIGINT, n0_1:VARCHAR

(5) ColumnarBroadcastExchange
Input [1]: [c_custkey#1479L]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=2205]

(6) InputIteratorTransformer
Input [1]: [c_custkey#1479L]

(7) Scan parquet spark_catalog.default.orders
Output [4]: [o_orderkey#1560L, o_custkey#1561L, o_shippriority#1566, o_orderdate#1568]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-1.0/orders]
PushedFilters: [IsNotNull(o_orderdate), LessThan(o_orderdate,1995-03-15), IsNotNull(o_custkey), IsNotNull(o_orderkey)]
ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_shippriority:int,o_orderdate:date>

(8) FilterExecTransformer
Input [4]: [o_orderkey#1560L, o_custkey#1561L, o_shippriority#1566, o_orderdate#1568]
Arguments: (((isnotnull(o_orderdate#1568) AND (o_orderdate#1568 < 1995-03-15)) AND isnotnull(o_custkey#1561L)) AND isnotnull(o_orderkey#1560L))

(9) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [c_custkey#1479L]
Right keys [1]: [o_custkey#1561L]
Join type: Inner
Join condition: None

(10) ProjectExecTransformer
Input [5]: [c_custkey#1479L, o_orderkey#1560L, o_custkey#1561L, o_shippriority#1566, o_orderdate#1568]
Arguments: [hash(o_orderkey#1560L, 42) AS hash_partition_key#1675, o_orderkey#1560L, o_shippriority#1566, o_orderdate#1568]

(11) WholeStageCodegenTransformer (20)
Input [4]: [hash_partition_key#1675, o_orderkey#1560L, o_shippriority#1566, o_orderdate#1568]
Arguments: false
Native Plan:
-- Project[expressions: (n4_5:INTEGER, hash_with_seed(42,"n3_6")), (n4_6:BIGINT, "n3_6"), (n4_7:INTEGER, "n3_8"), (n4_8:DATE, "n3_9")] -> n4_5:INTEGER, n4_6:BIGINT, n4_7:INTEGER, n4_8:DATE
  -- Project[expressions: (n3_5:BIGINT, "n0_0"), (n3_6:BIGINT, "n1_0"), (n3_7:BIGINT, "n1_1"), (n3_8:INTEGER, "n1_2"), (n3_9:DATE, "n1_3")] -> n3_5:BIGINT, n3_6:BIGINT, n3_7:BIGINT, n3_8:INTEGER, n3_9:DATE
    -- HashJoin[INNER n1_1=n0_0] -> n1_0:BIGINT, n1_1:BIGINT, n1_2:INTEGER, n1_3:DATE, n0_0:BIGINT
      -- TableScan[table: hive_table, range filters: [(o_custkey, Filter(IsNotNull, deterministic, null not allowed)), (o_orderdate, BigintRange: [-2147483648, 9203] no nulls), (o_orderkey, Filter(IsNotNull, deterministic, null not allowed))]] -> n1_0:BIGINT, n1_1:BIGINT, n1_2:INTEGER, n1_3:DATE
      -- ValueStream[] -> n0_0:BIGINT

(12) ColumnarExchange
Input [4]: [hash_partition_key#1675, o_orderkey#1560L, o_shippriority#1566, o_orderdate#1568]
Arguments: hashpartitioning(o_orderkey#1560L, 100), ENSURE_REQUIREMENTS, [o_orderkey#1560L, o_shippriority#1566, o_orderdate#1568], [plan_id=2211], [id=#2211]

(13) InputIteratorTransformer
Input [3]: [o_orderkey#1560L, o_shippriority#1566, o_orderdate#1568]

(14) Scan parquet spark_catalog.default.lineitem
Output [4]: [l_orderkey#1614L, l_extendedprice#1619, l_discount#1620, l_shipdate#1629]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-1.0/lineitem]
PushedFilters: [IsNotNull(l_shipdate), GreaterThan(l_shipdate,1995-03-15), IsNotNull(l_orderkey)]
ReadSchema: struct<l_orderkey:bigint,l_extendedprice:decimal(12,2),l_discount:decimal(12,2),l_shipdate:date>

(15) FilterExecTransformer
Input [4]: [l_orderkey#1614L, l_extendedprice#1619, l_discount#1620, l_shipdate#1629]
Arguments: ((isnotnull(l_shipdate#1629) AND (l_shipdate#1629 > 1995-03-15)) AND isnotnull(l_orderkey#1614L))

(16) ProjectExecTransformer
Input [4]: [l_orderkey#1614L, l_extendedprice#1619, l_discount#1620, l_shipdate#1629]
Arguments: [hash(l_orderkey#1614L, 42) AS hash_partition_key#1676, l_orderkey#1614L, l_extendedprice#1619, l_discount#1620]

(17) WholeStageCodegenTransformer (21)
Input [4]: [hash_partition_key#1676, l_orderkey#1614L, l_extendedprice#1619, l_discount#1620]
Arguments: false
Native Plan:
-- Project[expressions: (n1_4:INTEGER, hash_with_seed(42,"n0_0")), (n1_5:BIGINT, "n0_0"), (n1_6:DECIMAL(12, 2), "n0_1"), (n1_7:DECIMAL(12, 2), "n0_2")] -> n1_4:INTEGER, n1_5:BIGINT, n1_6:DECIMAL(12, 2), n1_7:DECIMAL(12, 2)
  -- TableScan[table: hive_table, range filters: [(l_orderkey, Filter(IsNotNull, deterministic, null not allowed)), (l_shipdate, BigintRange: [9205, 2147483647] no nulls)]] -> n0_0:BIGINT, n0_1:DECIMAL(12, 2), n0_2:DECIMAL(12, 2), n0_3:DATE

(18) ColumnarExchange
Input [4]: [hash_partition_key#1676, l_orderkey#1614L, l_extendedprice#1619, l_discount#1620]
Arguments: hashpartitioning(l_orderkey#1614L, 100), ENSURE_REQUIREMENTS, [l_orderkey#1614L, l_extendedprice#1619, l_discount#1620], [plan_id=2215], [id=#2215]

(19) InputIteratorTransformer
Input [3]: [l_orderkey#1614L, l_extendedprice#1619, l_discount#1620]

(20) ShuffledHashJoinExecTransformer
Left keys [1]: [o_orderkey#1560L]
Right keys [1]: [l_orderkey#1614L]
Join type: Inner
Join condition: None

(21) ProjectExecTransformer
Input [6]: [o_orderkey#1560L, o_shippriority#1566, o_orderdate#1568, l_orderkey#1614L, l_extendedprice#1619, l_discount#1620]
Arguments: [o_shippriority#1566, o_orderdate#1568, l_orderkey#1614L, l_extendedprice#1619, l_discount#1620]

(22) RegularHashAggregateExecTransformer
Input [5]: [o_shippriority#1566, o_orderdate#1568, l_orderkey#1614L, l_extendedprice#1619, l_discount#1620]
Keys [3]: [l_orderkey#1614L, o_orderdate#1568, o_shippriority#1566]
Functions [1]: [partial_sum((l_extendedprice#1619 * (1 - l_discount#1620)))]
Aggregate Attributes [2]: [sum#1671, isEmpty#1672]
Results [5]: [l_orderkey#1614L, o_orderdate#1568, o_shippriority#1566, sum#1673, isEmpty#1674]

(23) RegularHashAggregateExecTransformer
Input [5]: [l_orderkey#1614L, o_orderdate#1568, o_shippriority#1566, sum#1673, isEmpty#1674]
Keys [3]: [l_orderkey#1614L, o_orderdate#1568, o_shippriority#1566]
Functions [1]: [sum((l_extendedprice#1619 * (1 - l_discount#1620)))]
Aggregate Attributes [1]: [sum((l_extendedprice#1619 * (1 - l_discount#1620)))#1666]
Results [4]: [l_orderkey#1614L, sum((l_extendedprice#1619 * (1 - l_discount#1620)))#1666 AS revenue#1662, o_orderdate#1568, o_shippriority#1566]

(24) WholeStageCodegenTransformer (22)
Input [4]: [l_orderkey#1614L, revenue#1662, o_orderdate#1568, o_shippriority#1566]
Arguments: false
Native Plan:
-- Project[expressions: (n10_4:BIGINT, "n8_5"), (n10_5:DECIMAL(36, 4), "n9_3"), (n10_6:DATE, "n8_6"), (n10_7:INTEGER, "n8_7")] -> n10_4:BIGINT, n10_5:DECIMAL(36, 4), n10_6:DATE, n10_7:INTEGER
  -- Aggregation[SINGLE [n8_5, n8_6, n8_7] n9_3 := sum_merge_extract("n8_8")] -> n8_5:BIGINT, n8_6:DATE, n8_7:INTEGER, n9_3:DECIMAL(36, 4)
    -- Project[expressions: (n8_5:BIGINT, "n7_4"), (n8_6:DATE, "n7_5"), (n8_7:INTEGER, "n7_6"), (n8_8:ROW<col_0:DECIMAL(36, 4),col_1:BOOLEAN>, row_constructor("n7_7","n7_8"))] -> n8_5:BIGINT, n8_6:DATE, n8_7:INTEGER, n8_8:ROW<col_0:DECIMAL(36, 4),col_1:BOOLEAN>
      -- Project[expressions: (n7_4:BIGINT, "n5_5"), (n7_5:DATE, "n5_6"), (n7_6:INTEGER, "n5_7"), (n7_7:DECIMAL(36, 4), "n6_3"["col_0"]), (n7_8:BOOLEAN, "n6_3"["col_1"])] -> n7_4:BIGINT, n7_5:DATE, n7_6:INTEGER, n7_7:DECIMAL(36, 4), n7_8:BOOLEAN
        -- Aggregation[SINGLE [n5_5, n5_6, n5_7] n6_3 := sum_partial("n5_8")] -> n5_5:BIGINT, n5_6:DATE, n5_7:INTEGER, n6_3:ROW<col_0:DECIMAL(36, 4),col_1:BOOLEAN>
          -- Project[expressions: (n5_5:BIGINT, "n4_8"), (n5_6:DATE, "n4_7"), (n5_7:INTEGER, "n4_6"), (n5_8:DECIMAL(26, 4), multiply("n4_9",subtract(1,"n4_10")))] -> n5_5:BIGINT, n5_6:DATE, n5_7:INTEGER, n5_8:DECIMAL(26, 4)
            -- Project[expressions: (n4_6:INTEGER, "n3_7"), (n4_7:DATE, "n3_8"), (n4_8:BIGINT, "n3_9"), (n4_9:DECIMAL(12, 2), "n3_10"), (n4_10:DECIMAL(12, 2), "n3_11")] -> n4_6:INTEGER, n4_7:DATE, n4_8:BIGINT, n4_9:DECIMAL(12, 2), n4_10:DECIMAL(12, 2)
              -- Project[expressions: (n3_6:BIGINT, "n0_0"), (n3_7:INTEGER, "n0_1"), (n3_8:DATE, "n0_2"), (n3_9:BIGINT, "n1_0"), (n3_10:DECIMAL(12, 2), "n1_1"), (n3_11:DECIMAL(12, 2), "n1_2")] -> n3_6:BIGINT, n3_7:INTEGER, n3_8:DATE, n3_9:BIGINT, n3_10:DECIMAL(12, 2), n3_11:DECIMAL(12, 2)
                -- HashJoin[INNER n0_0=n1_0] -> n0_0:BIGINT, n0_1:INTEGER, n0_2:DATE, n1_0:BIGINT, n1_1:DECIMAL(12, 2), n1_2:DECIMAL(12, 2)
                  -- ValueStream[] -> n0_0:BIGINT, n0_1:INTEGER, n0_2:DATE
                  -- ValueStream[] -> n1_0:BIGINT, n1_1:DECIMAL(12, 2), n1_2:DECIMAL(12, 2)

(25) TakeOrderedAndProjectExecTransformer
Input [4]: [l_orderkey#1614L, revenue#1662, o_orderdate#1568, o_shippriority#1566]
Arguments: 10, [revenue#1662 DESC NULLS LAST, o_orderdate#1568 ASC NULLS FIRST], [l_orderkey#1614L, revenue#1662, o_orderdate#1568, o_shippriority#1566]

(26) VeloxColumnarToRowExec
Input [4]: [l_orderkey#1614L, revenue#1662, o_orderdate#1568, o_shippriority#1566]

