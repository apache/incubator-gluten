== Physical Plan ==
AdaptiveSparkPlan (63)
+- == Final Plan ==
   VeloxColumnarToRowExec (39)
   +- TakeOrderedAndProjectExecTransformer (38)
      +- ^ RegularHashAggregateExecTransformer (36)
         +- ^ InputIteratorTransformer (35)
            +- AQEShuffleRead (34)
               +- ShuffleQueryStage (33), Statistics(***)
                  +- ColumnarExchange (32)
                     +- ^ ProjectExecTransformer (30)
                        +- ^ FlushableHashAggregateExecTransformer (29)
                           +- ^ ProjectExecTransformer (28)
                              +- ^ GlutenBroadcastHashJoinExecTransformer Inner (27)
                                 :- ^ ProjectExecTransformer (20)
                                 :  +- ^ GlutenBroadcastHashJoinExecTransformer Inner (19)
                                 :     :- ^ ProjectExecTransformer (11)
                                 :     :  +- ^ GlutenBroadcastHashJoinExecTransformer Inner (10)
                                 :     :     :- ^ FilterExecTransformer (2)
                                 :     :     :  +- ^ Scan parquet default.customer (1)
                                 :     :     +- ^ InputIteratorTransformer (9)
                                 :     :        +- BroadcastQueryStage (8), Statistics(***)
                                 :     :           +- ColumnarBroadcastExchange (7)
                                 :     :              +- ^ ProjectExecTransformer (5)
                                 :     :                 +- ^ FilterExecTransformer (4)
                                 :     :                    +- ^ Scan parquet default.orders (3)
                                 :     +- ^ InputIteratorTransformer (18)
                                 :        +- BroadcastQueryStage (17), Statistics(***)
                                 :           +- ColumnarBroadcastExchange (16)
                                 :              +- ^ ProjectExecTransformer (14)
                                 :                 +- ^ FilterExecTransformer (13)
                                 :                    +- ^ Scan parquet default.lineitem (12)
                                 +- ^ InputIteratorTransformer (26)
                                    +- BroadcastQueryStage (25), Statistics(***)
                                       +- ColumnarBroadcastExchange (24)
                                          +- ^ FilterExecTransformer (22)
                                             +- ^ Scan parquet default.nation (21)
+- == Initial Plan ==
   TakeOrderedAndProject (62)
   +- HashAggregate (61)
      +- Exchange (60)
         +- HashAggregate (59)
            +- Project (58)
               +- BroadcastHashJoin Inner BuildRight (57)
                  :- Project (53)
                  :  +- BroadcastHashJoin Inner BuildRight (52)
                  :     :- Project (47)
                  :     :  +- BroadcastHashJoin Inner BuildRight (46)
                  :     :     :- Filter (41)
                  :     :     :  +- Scan parquet default.customer (40)
                  :     :     +- BroadcastExchange (45)
                  :     :        +- Project (44)
                  :     :           +- Filter (43)
                  :     :              +- Scan parquet default.orders (42)
                  :     +- BroadcastExchange (51)
                  :        +- Project (50)
                  :           +- Filter (49)
                  :              +- Scan parquet default.lineitem (48)
                  +- BroadcastExchange (56)
                     +- Filter (55)
                        +- Scan parquet default.nation (54)


(1) Scan parquet default.customer
Output [7]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/customer]
PushedFilters: [IsNotNull(c_custkey), IsNotNull(c_nationkey)]
ReadSchema: struct<c_custkey:bigint,c_name:string,c_address:string,c_nationkey:bigint,c_phone:string,c_acctbal:decimal(12,2),c_comment:string>

(2) FilterExecTransformer
Input [7]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***]
Arguments: (isnotnull(c_custkey#***) AND isnotnull(c_nationkey#***))

(3) Scan parquet default.orders
Output [3]: [o_orderkey#***, o_custkey#***, o_orderdate#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/orders]
PushedFilters: [IsNotNull(o_orderdate), GreaterThanOrEqual(o_orderdate,1993-10-01), LessThan(o_orderdate,1994-01-01), IsNotNull(o_custkey), IsNotNull(o_orderkey)]
ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_orderdate:date>

(4) FilterExecTransformer
Input [3]: [o_orderkey#***, o_custkey#***, o_orderdate#***]
Arguments: ((((isnotnull(o_orderdate#***) AND (o_orderdate#*** >= 1993-10-01)) AND (o_orderdate#*** < 1994-01-01)) AND isnotnull(o_custkey#***)) AND isnotnull(o_orderkey#***))

(5) ProjectExecTransformer
Input [3]: [o_orderkey#***, o_custkey#***, o_orderdate#***]
Arguments: [o_orderkey#***, o_custkey#***]

(6) WholeStageCodegenTransformer (63)
Input [2]: [o_orderkey#***, o_custkey#***]
Arguments: false

(7) ColumnarBroadcastExchange
Input [2]: [o_orderkey#***, o_custkey#***]
Arguments: HashedRelationBroadcastMode(List(input[1, bigint, true]),false), [plan_id=***]

(8) BroadcastQueryStage
Output [2]: [o_orderkey#***, o_custkey#***]
Arguments: 0

(9) InputIteratorTransformer
Input [2]: [o_orderkey#***, o_custkey#***]

(10) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [c_custkey#***]
Right keys [1]: [o_custkey#***]
Join condition: None

(11) ProjectExecTransformer
Input [9]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***, o_orderkey#***, o_custkey#***]
Arguments: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***, o_orderkey#***]

(12) Scan parquet default.lineitem
Output [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_returnflag#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/lineitem]
PushedFilters: [IsNotNull(l_returnflag), EqualTo(l_returnflag,R), IsNotNull(l_orderkey)]
ReadSchema: struct<l_orderkey:bigint,l_extendedprice:decimal(12,2),l_discount:decimal(12,2),l_returnflag:string>

(13) FilterExecTransformer
Input [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_returnflag#***]
Arguments: ((isnotnull(l_returnflag#***) AND (l_returnflag#*** = R)) AND isnotnull(l_orderkey#***))

(14) ProjectExecTransformer
Input [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_returnflag#***]
Arguments: [l_orderkey#***, l_extendedprice#***, l_discount#***]

(15) WholeStageCodegenTransformer (64)
Input [3]: [l_orderkey#***, l_extendedprice#***, l_discount#***]
Arguments: false

(16) ColumnarBroadcastExchange
Input [3]: [l_orderkey#***, l_extendedprice#***, l_discount#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(17) BroadcastQueryStage
Output [3]: [l_orderkey#***, l_extendedprice#***, l_discount#***]
Arguments: 1

(18) InputIteratorTransformer
Input [3]: [l_orderkey#***, l_extendedprice#***, l_discount#***]

(19) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [o_orderkey#***]
Right keys [1]: [l_orderkey#***]
Join condition: None

(20) ProjectExecTransformer
Input [11]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***, o_orderkey#***, l_orderkey#***, l_extendedprice#***, l_discount#***]
Arguments: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***, l_extendedprice#***, l_discount#***]

(21) Scan parquet default.nation
Output [2]: [n_nationkey#***, n_name#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/nation]
PushedFilters: [IsNotNull(n_nationkey)]
ReadSchema: struct<n_nationkey:bigint,n_name:string>

(22) FilterExecTransformer
Input [2]: [n_nationkey#***, n_name#***]
Arguments: isnotnull(n_nationkey#***)

(23) WholeStageCodegenTransformer (65)
Input [2]: [n_nationkey#***, n_name#***]
Arguments: false

(24) ColumnarBroadcastExchange
Input [2]: [n_nationkey#***, n_name#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [plan_id=***]

(25) BroadcastQueryStage
Output [2]: [n_nationkey#***, n_name#***]
Arguments: 2

(26) InputIteratorTransformer
Input [2]: [n_nationkey#***, n_name#***]

(27) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [c_nationkey#***]
Right keys [1]: [n_nationkey#***]
Join condition: None

(28) ProjectExecTransformer
Input [11]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***, l_extendedprice#***, l_discount#***, n_nationkey#***, n_name#***]
Arguments: [c_custkey#***, c_name#***, c_address#***, c_phone#***, c_acctbal#***, c_comment#***, l_extendedprice#***, l_discount#***, n_name#***]

(29) FlushableHashAggregateExecTransformer
Input [9]: [c_custkey#***, c_name#***, c_address#***, c_phone#***, c_acctbal#***, c_comment#***, l_extendedprice#***, l_discount#***, n_name#***]
Keys [7]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))]
Aggregate Attributes [2]: [sum#***, isEmpty#***]
Results [9]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]

(30) ProjectExecTransformer
Input [9]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]
Arguments: [hash(c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, 42) AS hash_partition_key#***, c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]

(31) WholeStageCodegenTransformer (66)
Input [10]: [hash_partition_key#***, c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]
Arguments: false

(32) ColumnarExchange
Input [10]: [hash_partition_key#***, c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]
Arguments: hashpartitioning(c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, 100), ENSURE_REQUIREMENTS, [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***], [plan_id=***], [id=#***]

(33) ShuffleQueryStage
Output [9]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]
Arguments: 3

(34) AQEShuffleRead
Input [9]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]
Arguments: coalesced

(35) InputIteratorTransformer
Input [9]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]

(36) RegularHashAggregateExecTransformer
Input [9]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]
Keys [7]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***]
Functions [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#***]
Results [8]: [c_custkey#***, c_name#***, sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#*** AS revenue#***, c_acctbal#***, n_name#***, c_address#***, c_phone#***, c_comment#***]

(37) WholeStageCodegenTransformer (67)
Input [8]: [c_custkey#***, c_name#***, revenue#***, c_acctbal#***, n_name#***, c_address#***, c_phone#***, c_comment#***]
Arguments: false

(38) TakeOrderedAndProjectExecTransformer
Input [8]: [c_custkey#***, c_name#***, revenue#***, c_acctbal#***, n_name#***, c_address#***, c_phone#***, c_comment#***]
Arguments: 20, [revenue#*** DESC NULLS LAST], [c_custkey#***, c_name#***, revenue#***, c_acctbal#***, n_name#***, c_address#***, c_phone#***, c_comment#***]

(39) VeloxColumnarToRowExec
Input [8]: [c_custkey#***, c_name#***, revenue#***, c_acctbal#***, n_name#***, c_address#***, c_phone#***, c_comment#***]

(40) Scan parquet default.customer
Output [7]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/customer]
PushedFilters: [IsNotNull(c_custkey), IsNotNull(c_nationkey)]
ReadSchema: struct<c_custkey:bigint,c_name:string,c_address:string,c_nationkey:bigint,c_phone:string,c_acctbal:decimal(12,2),c_comment:string>

(41) Filter
Input [7]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***]
Condition : (isnotnull(c_custkey#***) AND isnotnull(c_nationkey#***))

(42) Scan parquet default.orders
Output [3]: [o_orderkey#***, o_custkey#***, o_orderdate#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/orders]
PushedFilters: [IsNotNull(o_orderdate), GreaterThanOrEqual(o_orderdate,1993-10-01), LessThan(o_orderdate,1994-01-01), IsNotNull(o_custkey), IsNotNull(o_orderkey)]
ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_orderdate:date>

(43) Filter
Input [3]: [o_orderkey#***, o_custkey#***, o_orderdate#***]
Condition : ((((isnotnull(o_orderdate#***) AND (o_orderdate#*** >= 1993-10-01)) AND (o_orderdate#*** < 1994-01-01)) AND isnotnull(o_custkey#***)) AND isnotnull(o_orderkey#***))

(44) Project
Output [2]: [o_orderkey#***, o_custkey#***]
Input [3]: [o_orderkey#***, o_custkey#***, o_orderdate#***]

(45) BroadcastExchange
Input [2]: [o_orderkey#***, o_custkey#***]
Arguments: HashedRelationBroadcastMode(List(input[1, bigint, true]),false), [plan_id=***]

(46) BroadcastHashJoin
Left keys [1]: [c_custkey#***]
Right keys [1]: [o_custkey#***]
Join condition: None

(47) Project
Output [8]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***, o_orderkey#***]
Input [9]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***, o_orderkey#***, o_custkey#***]

(48) Scan parquet default.lineitem
Output [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_returnflag#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/lineitem]
PushedFilters: [IsNotNull(l_returnflag), EqualTo(l_returnflag,R), IsNotNull(l_orderkey)]
ReadSchema: struct<l_orderkey:bigint,l_extendedprice:decimal(12,2),l_discount:decimal(12,2),l_returnflag:string>

(49) Filter
Input [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_returnflag#***]
Condition : ((isnotnull(l_returnflag#***) AND (l_returnflag#*** = R)) AND isnotnull(l_orderkey#***))

(50) Project
Output [3]: [l_orderkey#***, l_extendedprice#***, l_discount#***]
Input [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_returnflag#***]

(51) BroadcastExchange
Input [3]: [l_orderkey#***, l_extendedprice#***, l_discount#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(52) BroadcastHashJoin
Left keys [1]: [o_orderkey#***]
Right keys [1]: [l_orderkey#***]
Join condition: None

(53) Project
Output [9]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***, l_extendedprice#***, l_discount#***]
Input [11]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***, o_orderkey#***, l_orderkey#***, l_extendedprice#***, l_discount#***]

(54) Scan parquet default.nation
Output [2]: [n_nationkey#***, n_name#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/nation]
PushedFilters: [IsNotNull(n_nationkey)]
ReadSchema: struct<n_nationkey:bigint,n_name:string>

(55) Filter
Input [2]: [n_nationkey#***, n_name#***]
Condition : isnotnull(n_nationkey#***)

(56) BroadcastExchange
Input [2]: [n_nationkey#***, n_name#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [plan_id=***]

(57) BroadcastHashJoin
Left keys [1]: [c_nationkey#***]
Right keys [1]: [n_nationkey#***]
Join condition: None

(58) Project
Output [9]: [c_custkey#***, c_name#***, c_address#***, c_phone#***, c_acctbal#***, c_comment#***, l_extendedprice#***, l_discount#***, n_name#***]
Input [11]: [c_custkey#***, c_name#***, c_address#***, c_nationkey#***, c_phone#***, c_acctbal#***, c_comment#***, l_extendedprice#***, l_discount#***, n_nationkey#***, n_name#***]

(59) HashAggregate
Input [9]: [c_custkey#***, c_name#***, c_address#***, c_phone#***, c_acctbal#***, c_comment#***, l_extendedprice#***, l_discount#***, n_name#***]
Keys [7]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))]
Aggregate Attributes [2]: [sum#***, isEmpty#***]
Results [9]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]

(60) Exchange
Input [9]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]
Arguments: hashpartitioning(c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, 100), ENSURE_REQUIREMENTS, [plan_id=***]

(61) HashAggregate
Input [9]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***, sum#***, isEmpty#***]
Keys [7]: [c_custkey#***, c_name#***, c_acctbal#***, c_phone#***, n_name#***, c_address#***, c_comment#***]
Functions [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#***]
Results [8]: [c_custkey#***, c_name#***, sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#*** AS revenue#***, c_acctbal#***, n_name#***, c_address#***, c_phone#***, c_comment#***]

(62) TakeOrderedAndProject
Input [8]: [c_custkey#***, c_name#***, revenue#***, c_acctbal#***, n_name#***, c_address#***, c_phone#***, c_comment#***]
Arguments: 20, [revenue#*** DESC NULLS LAST], [c_custkey#***, c_name#***, revenue#***, c_acctbal#***, n_name#***, c_address#***, c_phone#***, c_comment#***]

(63) AdaptiveSparkPlan
Output [8]: [c_custkey#***, c_name#***, revenue#***, c_acctbal#***, n_name#***, c_address#***, c_phone#***, c_comment#***]
Arguments: isFinalPlan=true
