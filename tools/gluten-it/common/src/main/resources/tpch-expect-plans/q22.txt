== Physical Plan ==
AdaptiveSparkPlan (28)
+- == Final Plan ==
   * Sort (18)
   +- AQEShuffleRead (17)
      +- ShuffleQueryStage (16), Statistics(***)
         +- Exchange (15)
            +- * HashAggregate (14)
               +- AQEShuffleRead (13)
                  +- ShuffleQueryStage (12), Statistics(***)
                     +- Exchange (11)
                        +- * HashAggregate (10)
                           +- * Project (9)
                              +- * BroadcastHashJoin LeftAnti BuildRight (8)
                                 :- * Filter (3)
                                 :  +- * ColumnarToRow (2)
                                 :     +- Scan parquet default.customer (1)
                                 +- BroadcastQueryStage (7), Statistics(***)
                                    +- BroadcastExchange (6)
                                       +- * ColumnarToRow (5)
                                          +- Scan parquet default.orders (4)
+- == Initial Plan ==
   Sort (27)
   +- Exchange (26)
      +- HashAggregate (25)
         +- Exchange (24)
            +- HashAggregate (23)
               +- Project (22)
                  +- BroadcastHashJoin LeftAnti BuildRight (21)
                     :- Filter (19)
                     :  +- Scan parquet default.customer (1)
                     +- BroadcastExchange (20)
                        +- Scan parquet default.orders (4)


(1) Scan parquet default.customer
Output [3]: [c_custkey#***, c_phone#***, c_acctbal#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/customer]
PushedFilters: [IsNotNull(c_acctbal)]
ReadSchema: struct<c_custkey:bigint,c_phone:string,c_acctbal:decimal(12,2)>

(2) ColumnarToRow [codegen id : 2]
Input [3]: [c_custkey#***, c_phone#***, c_acctbal#***]

(3) Filter [codegen id : 2]
Input [3]: [c_custkey#***, c_phone#***, c_acctbal#***]
Condition : ((isnotnull(c_acctbal#***) AND substring(c_phone#***, 1, 2) IN (13,31,23,29,30,18,17)) AND (cast(c_acctbal#*** as decimal(16,6)) > Subquery subquery#***, [id=#***]))

(4) Scan parquet default.orders
Output [1]: [o_custkey#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/orders]
ReadSchema: struct<o_custkey:bigint>

(5) ColumnarToRow [codegen id : 1]
Input [1]: [o_custkey#***]

(6) BroadcastExchange
Input [1]: [o_custkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(7) BroadcastQueryStage
Output [1]: [o_custkey#***]
Arguments: 0

(8) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [c_custkey#***]
Right keys [1]: [o_custkey#***]
Join condition: None

(9) Project [codegen id : 2]
Output [2]: [substring(c_phone#***, 1, 2) AS cntrycode#***, c_acctbal#***]
Input [3]: [c_custkey#***, c_phone#***, c_acctbal#***]

(10) HashAggregate [codegen id : 2]
Input [2]: [cntrycode#***, c_acctbal#***]
Keys [1]: [cntrycode#***]
Functions [2]: [partial_count(1), partial_sum(c_acctbal#***)]
Aggregate Attributes [3]: [count#***, sum#***, isEmpty#***]
Results [4]: [cntrycode#***, count#***, sum#***, isEmpty#***]

(11) Exchange
Input [4]: [cntrycode#***, count#***, sum#***, isEmpty#***]
Arguments: hashpartitioning(cntrycode#***, 100), ENSURE_REQUIREMENTS, [plan_id=***]

(12) ShuffleQueryStage
Output [4]: [cntrycode#***, count#***, sum#***, isEmpty#***]
Arguments: 1

(13) AQEShuffleRead
Input [4]: [cntrycode#***, count#***, sum#***, isEmpty#***]
Arguments: coalesced

(14) HashAggregate [codegen id : 3]
Input [4]: [cntrycode#***, count#***, sum#***, isEmpty#***]
Keys [1]: [cntrycode#***]
Functions [2]: [count(1), sum(c_acctbal#***)]
Aggregate Attributes [2]: [count(1)#***, sum(c_acctbal#***)#***]
Results [3]: [cntrycode#***, count(1)#*** AS numcust#***, sum(c_acctbal#***)#*** AS totacctbal#***]

(15) Exchange
Input [3]: [cntrycode#***, numcust#***, totacctbal#***]
Arguments: rangepartitioning(cntrycode#*** ASC NULLS FIRST, 100), ENSURE_REQUIREMENTS, [plan_id=***]

(16) ShuffleQueryStage
Output [3]: [cntrycode#***, numcust#***, totacctbal#***]
Arguments: 2

(17) AQEShuffleRead
Input [3]: [cntrycode#***, numcust#***, totacctbal#***]
Arguments: coalesced

(18) Sort [codegen id : 4]
Input [3]: [cntrycode#***, numcust#***, totacctbal#***]
Arguments: [cntrycode#*** ASC NULLS FIRST], true, 0

(19) Filter
Input [3]: [c_custkey#***, c_phone#***, c_acctbal#***]
Condition : ((isnotnull(c_acctbal#***) AND substring(c_phone#***, 1, 2) IN (13,31,23,29,30,18,17)) AND (cast(c_acctbal#*** as decimal(16,6)) > Subquery subquery#***, [id=#***]))

(20) BroadcastExchange
Input [1]: [o_custkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(21) BroadcastHashJoin
Left keys [1]: [c_custkey#***]
Right keys [1]: [o_custkey#***]
Join condition: None

(22) Project
Output [2]: [substring(c_phone#***, 1, 2) AS cntrycode#***, c_acctbal#***]
Input [3]: [c_custkey#***, c_phone#***, c_acctbal#***]

(23) HashAggregate
Input [2]: [cntrycode#***, c_acctbal#***]
Keys [1]: [cntrycode#***]
Functions [2]: [partial_count(1), partial_sum(c_acctbal#***)]
Aggregate Attributes [3]: [count#***, sum#***, isEmpty#***]
Results [4]: [cntrycode#***, count#***, sum#***, isEmpty#***]

(24) Exchange
Input [4]: [cntrycode#***, count#***, sum#***, isEmpty#***]
Arguments: hashpartitioning(cntrycode#***, 100), ENSURE_REQUIREMENTS, [plan_id=***]

(25) HashAggregate
Input [4]: [cntrycode#***, count#***, sum#***, isEmpty#***]
Keys [1]: [cntrycode#***]
Functions [2]: [count(1), sum(c_acctbal#***)]
Aggregate Attributes [2]: [count(1)#***, sum(c_acctbal#***)#***]
Results [3]: [cntrycode#***, count(1)#*** AS numcust#***, sum(c_acctbal#***)#*** AS totacctbal#***]

(26) Exchange
Input [3]: [cntrycode#***, numcust#***, totacctbal#***]
Arguments: rangepartitioning(cntrycode#*** ASC NULLS FIRST, 100), ENSURE_REQUIREMENTS, [plan_id=***]

(27) Sort
Input [3]: [cntrycode#***, numcust#***, totacctbal#***]
Arguments: [cntrycode#*** ASC NULLS FIRST], true, 0

(28) AdaptiveSparkPlan
Output [3]: [cntrycode#***, numcust#***, totacctbal#***]
Arguments: isFinalPlan=true

===== Subqueries =====

Subquery:1 Hosting operator id = 3 Hosting Expression = Subquery subquery#***, [id=#***]
AdaptiveSparkPlan (42)
+- == Final Plan ==
   * HashAggregate (36)
   +- ShuffleQueryStage (35), Statistics(***)
      +- Exchange (34)
         +- * HashAggregate (33)
            +- * Project (32)
               +- * Filter (31)
                  +- * ColumnarToRow (30)
                     +- Scan parquet default.customer (29)
+- == Initial Plan ==
   HashAggregate (41)
   +- Exchange (40)
      +- HashAggregate (39)
         +- Project (38)
            +- Filter (37)
               +- Scan parquet default.customer (29)


(29) Scan parquet default.customer
Output [2]: [c_phone#***, c_acctbal#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/customer]
PushedFilters: [IsNotNull(c_acctbal), GreaterThan(c_acctbal,0.00)]
ReadSchema: struct<c_phone:string,c_acctbal:decimal(12,2)>

(30) ColumnarToRow [codegen id : 1]
Input [2]: [c_phone#***, c_acctbal#***]

(31) Filter [codegen id : 1]
Input [2]: [c_phone#***, c_acctbal#***]
Condition : ((isnotnull(c_acctbal#***) AND (c_acctbal#*** > 0.00)) AND substring(c_phone#***, 1, 2) IN (13,31,23,29,30,18,17))

(32) Project [codegen id : 1]
Output [1]: [c_acctbal#***]
Input [2]: [c_phone#***, c_acctbal#***]

(33) HashAggregate [codegen id : 1]
Input [1]: [c_acctbal#***]
Keys: []
Functions [1]: [partial_avg(c_acctbal#***)]
Aggregate Attributes [2]: [sum#***, count#***]
Results [2]: [sum#***, count#***]

(34) Exchange
Input [2]: [sum#***, count#***]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=***]

(35) ShuffleQueryStage
Output [2]: [sum#***, count#***]
Arguments: 0

(36) HashAggregate [codegen id : 2]
Input [2]: [sum#***, count#***]
Keys: []
Functions [1]: [avg(c_acctbal#***)]
Aggregate Attributes [1]: [avg(c_acctbal#***)#***]
Results [1]: [avg(c_acctbal#***)#*** AS avg(c_acctbal)#***]

(37) Filter
Input [2]: [c_phone#***, c_acctbal#***]
Condition : ((isnotnull(c_acctbal#***) AND (c_acctbal#*** > 0.00)) AND substring(c_phone#***, 1, 2) IN (13,31,23,29,30,18,17))

(38) Project
Output [1]: [c_acctbal#***]
Input [2]: [c_phone#***, c_acctbal#***]

(39) HashAggregate
Input [1]: [c_acctbal#***]
Keys: []
Functions [1]: [partial_avg(c_acctbal#***)]
Aggregate Attributes [2]: [sum#***, count#***]
Results [2]: [sum#***, count#***]

(40) Exchange
Input [2]: [sum#***, count#***]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=***]

(41) HashAggregate
Input [2]: [sum#***, count#***]
Keys: []
Functions [1]: [avg(c_acctbal#***)]
Aggregate Attributes [1]: [avg(c_acctbal#***)#***]
Results [1]: [avg(c_acctbal#***)#*** AS avg(c_acctbal)#***]

(42) AdaptiveSparkPlan
Output [1]: [avg(c_acctbal)#***]
Arguments: isFinalPlan=true
