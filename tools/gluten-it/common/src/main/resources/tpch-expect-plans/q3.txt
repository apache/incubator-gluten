== Physical Plan ==
AdaptiveSparkPlan (41)
+- == Final Plan ==
   TakeOrderedAndProject (25)
   +- * HashAggregate (24)
      +- AQEShuffleRead (23)
         +- ShuffleQueryStage (22), Statistics(***)
            +- Exchange (21)
               +- * HashAggregate (20)
                  +- * Project (19)
                     +- * BroadcastHashJoin Inner BuildRight (18)
                        :- * Project (11)
                        :  +- * BroadcastHashJoin Inner BuildLeft (10)
                        :     :- BroadcastQueryStage (6), Statistics(***)
                        :     :  +- BroadcastExchange (5)
                        :     :     +- * Project (4)
                        :     :        +- * Filter (3)
                        :     :           +- * ColumnarToRow (2)
                        :     :              +- Scan parquet default.customer (1)
                        :     +- * Filter (9)
                        :        +- * ColumnarToRow (8)
                        :           +- Scan parquet default.orders (7)
                        +- BroadcastQueryStage (17), Statistics(***)
                           +- BroadcastExchange (16)
                              +- * Project (15)
                                 +- * Filter (14)
                                    +- * ColumnarToRow (13)
                                       +- Scan parquet default.lineitem (12)
+- == Initial Plan ==
   TakeOrderedAndProject (40)
   +- HashAggregate (39)
      +- Exchange (38)
         +- HashAggregate (37)
            +- Project (36)
               +- BroadcastHashJoin Inner BuildRight (35)
                  :- Project (31)
                  :  +- BroadcastHashJoin Inner BuildLeft (30)
                  :     :- BroadcastExchange (28)
                  :     :  +- Project (27)
                  :     :     +- Filter (26)
                  :     :        +- Scan parquet default.customer (1)
                  :     +- Filter (29)
                  :        +- Scan parquet default.orders (7)
                  +- BroadcastExchange (34)
                     +- Project (33)
                        +- Filter (32)
                           +- Scan parquet default.lineitem (12)


(1) Scan parquet default.customer
Output [2]: [c_custkey#***, c_mktsegment#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/customer]
PushedFilters: [IsNotNull(c_mktsegment), EqualTo(c_mktsegment,BUILDING), IsNotNull(c_custkey)]
ReadSchema: struct<c_custkey:bigint,c_mktsegment:string>

(2) ColumnarToRow [codegen id : 1]
Input [2]: [c_custkey#***, c_mktsegment#***]

(3) Filter [codegen id : 1]
Input [2]: [c_custkey#***, c_mktsegment#***]
Condition : ((isnotnull(c_mktsegment#***) AND (c_mktsegment#*** = BUILDING)) AND isnotnull(c_custkey#***))

(4) Project [codegen id : 1]
Output [1]: [c_custkey#***]
Input [2]: [c_custkey#***, c_mktsegment#***]

(5) BroadcastExchange
Input [1]: [c_custkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(6) BroadcastQueryStage
Output [1]: [c_custkey#***]
Arguments: 0

(7) Scan parquet default.orders
Output [4]: [o_orderkey#***, o_custkey#***, o_shippriority#***, o_orderdate#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/orders]
PushedFilters: [IsNotNull(o_orderdate), LessThan(o_orderdate,1995-03-15), IsNotNull(o_custkey), IsNotNull(o_orderkey)]
ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_shippriority:int,o_orderdate:date>

(8) ColumnarToRow
Input [4]: [o_orderkey#***, o_custkey#***, o_shippriority#***, o_orderdate#***]

(9) Filter
Input [4]: [o_orderkey#***, o_custkey#***, o_shippriority#***, o_orderdate#***]
Condition : (((isnotnull(o_orderdate#***) AND (o_orderdate#*** < 1995-03-15)) AND isnotnull(o_custkey#***)) AND isnotnull(o_orderkey#***))

(10) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [c_custkey#***]
Right keys [1]: [o_custkey#***]
Join condition: None

(11) Project [codegen id : 3]
Output [3]: [o_orderkey#***, o_shippriority#***, o_orderdate#***]
Input [5]: [c_custkey#***, o_orderkey#***, o_custkey#***, o_shippriority#***, o_orderdate#***]

(12) Scan parquet default.lineitem
Output [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_shipdate#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/lineitem]
PushedFilters: [IsNotNull(l_shipdate), GreaterThan(l_shipdate,1995-03-15), IsNotNull(l_orderkey)]
ReadSchema: struct<l_orderkey:bigint,l_extendedprice:decimal(12,2),l_discount:decimal(12,2),l_shipdate:date>

(13) ColumnarToRow [codegen id : 2]
Input [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_shipdate#***]

(14) Filter [codegen id : 2]
Input [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_shipdate#***]
Condition : ((isnotnull(l_shipdate#***) AND (l_shipdate#*** > 1995-03-15)) AND isnotnull(l_orderkey#***))

(15) Project [codegen id : 2]
Output [3]: [l_orderkey#***, l_extendedprice#***, l_discount#***]
Input [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_shipdate#***]

(16) BroadcastExchange
Input [3]: [l_orderkey#***, l_extendedprice#***, l_discount#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(17) BroadcastQueryStage
Output [3]: [l_orderkey#***, l_extendedprice#***, l_discount#***]
Arguments: 1

(18) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [o_orderkey#***]
Right keys [1]: [l_orderkey#***]
Join condition: None

(19) Project [codegen id : 3]
Output [5]: [o_shippriority#***, o_orderdate#***, l_orderkey#***, l_extendedprice#***, l_discount#***]
Input [6]: [o_orderkey#***, o_shippriority#***, o_orderdate#***, l_orderkey#***, l_extendedprice#***, l_discount#***]

(20) HashAggregate [codegen id : 3]
Input [5]: [o_shippriority#***, o_orderdate#***, l_orderkey#***, l_extendedprice#***, l_discount#***]
Keys [3]: [l_orderkey#***, o_orderdate#***, o_shippriority#***]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))]
Aggregate Attributes [2]: [sum#***, isEmpty#***]
Results [5]: [l_orderkey#***, o_orderdate#***, o_shippriority#***, sum#***, isEmpty#***]

(21) Exchange
Input [5]: [l_orderkey#***, o_orderdate#***, o_shippriority#***, sum#***, isEmpty#***]
Arguments: hashpartitioning(l_orderkey#***, o_orderdate#***, o_shippriority#***, 100), ENSURE_REQUIREMENTS, [plan_id=***]

(22) ShuffleQueryStage
Output [5]: [l_orderkey#***, o_orderdate#***, o_shippriority#***, sum#***, isEmpty#***]
Arguments: 2

(23) AQEShuffleRead
Input [5]: [l_orderkey#***, o_orderdate#***, o_shippriority#***, sum#***, isEmpty#***]
Arguments: coalesced

(24) HashAggregate [codegen id : 4]
Input [5]: [l_orderkey#***, o_orderdate#***, o_shippriority#***, sum#***, isEmpty#***]
Keys [3]: [l_orderkey#***, o_orderdate#***, o_shippriority#***]
Functions [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#***]
Results [4]: [l_orderkey#***, sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#*** AS revenue#***, o_orderdate#***, o_shippriority#***]

(25) TakeOrderedAndProject
Input [4]: [l_orderkey#***, revenue#***, o_orderdate#***, o_shippriority#***]
Arguments: 10, [revenue#*** DESC NULLS LAST, o_orderdate#*** ASC NULLS FIRST], [l_orderkey#***, revenue#***, o_orderdate#***, o_shippriority#***]

(26) Filter
Input [2]: [c_custkey#***, c_mktsegment#***]
Condition : ((isnotnull(c_mktsegment#***) AND (c_mktsegment#*** = BUILDING)) AND isnotnull(c_custkey#***))

(27) Project
Output [1]: [c_custkey#***]
Input [2]: [c_custkey#***, c_mktsegment#***]

(28) BroadcastExchange
Input [1]: [c_custkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(29) Filter
Input [4]: [o_orderkey#***, o_custkey#***, o_shippriority#***, o_orderdate#***]
Condition : (((isnotnull(o_orderdate#***) AND (o_orderdate#*** < 1995-03-15)) AND isnotnull(o_custkey#***)) AND isnotnull(o_orderkey#***))

(30) BroadcastHashJoin
Left keys [1]: [c_custkey#***]
Right keys [1]: [o_custkey#***]
Join condition: None

(31) Project
Output [3]: [o_orderkey#***, o_shippriority#***, o_orderdate#***]
Input [5]: [c_custkey#***, o_orderkey#***, o_custkey#***, o_shippriority#***, o_orderdate#***]

(32) Filter
Input [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_shipdate#***]
Condition : ((isnotnull(l_shipdate#***) AND (l_shipdate#*** > 1995-03-15)) AND isnotnull(l_orderkey#***))

(33) Project
Output [3]: [l_orderkey#***, l_extendedprice#***, l_discount#***]
Input [4]: [l_orderkey#***, l_extendedprice#***, l_discount#***, l_shipdate#***]

(34) BroadcastExchange
Input [3]: [l_orderkey#***, l_extendedprice#***, l_discount#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(35) BroadcastHashJoin
Left keys [1]: [o_orderkey#***]
Right keys [1]: [l_orderkey#***]
Join condition: None

(36) Project
Output [5]: [o_shippriority#***, o_orderdate#***, l_orderkey#***, l_extendedprice#***, l_discount#***]
Input [6]: [o_orderkey#***, o_shippriority#***, o_orderdate#***, l_orderkey#***, l_extendedprice#***, l_discount#***]

(37) HashAggregate
Input [5]: [o_shippriority#***, o_orderdate#***, l_orderkey#***, l_extendedprice#***, l_discount#***]
Keys [3]: [l_orderkey#***, o_orderdate#***, o_shippriority#***]
Functions [1]: [partial_sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))]
Aggregate Attributes [2]: [sum#***, isEmpty#***]
Results [5]: [l_orderkey#***, o_orderdate#***, o_shippriority#***, sum#***, isEmpty#***]

(38) Exchange
Input [5]: [l_orderkey#***, o_orderdate#***, o_shippriority#***, sum#***, isEmpty#***]
Arguments: hashpartitioning(l_orderkey#***, o_orderdate#***, o_shippriority#***, 100), ENSURE_REQUIREMENTS, [plan_id=***]

(39) HashAggregate
Input [5]: [l_orderkey#***, o_orderdate#***, o_shippriority#***, sum#***, isEmpty#***]
Keys [3]: [l_orderkey#***, o_orderdate#***, o_shippriority#***]
Functions [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))]
Aggregate Attributes [1]: [sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#***]
Results [4]: [l_orderkey#***, sum(CheckOverflow((promote_precision(cast(l_extendedprice#*** as decimal(13,2))) * promote_precision(CheckOverflow((1.00 - promote_precision(cast(l_discount#*** as decimal(13,2)))), DecimalType(13,2)))), DecimalType(26,4)))#*** AS revenue#***, o_orderdate#***, o_shippriority#***]

(40) TakeOrderedAndProject
Input [4]: [l_orderkey#***, revenue#***, o_orderdate#***, o_shippriority#***]
Arguments: 10, [revenue#*** DESC NULLS LAST, o_orderdate#*** ASC NULLS FIRST], [l_orderkey#***, revenue#***, o_orderdate#***, o_shippriority#***]

(41) AdaptiveSparkPlan
Output [4]: [l_orderkey#***, revenue#***, o_orderdate#***, o_shippriority#***]
Arguments: isFinalPlan=true
