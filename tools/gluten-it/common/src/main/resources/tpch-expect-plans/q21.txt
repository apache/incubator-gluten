== Physical Plan ==
AdaptiveSparkPlan (87)
+- == Final Plan ==
   VeloxColumnarToRowExec (54)
   +- TakeOrderedAndProjectExecTransformer (53)
      +- ^ RegularHashAggregateExecTransformer (51)
         +- ^ InputIteratorTransformer (50)
            +- AQEShuffleRead (49)
               +- ShuffleQueryStage (48), Statistics(***)
                  +- ColumnarExchange (47)
                     +- ^ ProjectExecTransformer (45)
                        +- ^ FlushableHashAggregateExecTransformer (44)
                           +- ^ ProjectExecTransformer (43)
                              +- ^ GlutenBroadcastHashJoinExecTransformer Inner (42)
                                 :- ^ ProjectExecTransformer (34)
                                 :  +- ^ GlutenBroadcastHashJoinExecTransformer Inner (33)
                                 :     :- ^ ProjectExecTransformer (25)
                                 :     :  +- ^ GlutenBroadcastHashJoinExecTransformer Inner (24)
                                 :     :     :- ^ InputIteratorTransformer (6)
                                 :     :     :  +- BroadcastQueryStage (5), Statistics(***)
                                 :     :     :     +- ColumnarBroadcastExchange (4)
                                 :     :     :        +- ^ FilterExecTransformer (2)
                                 :     :     :           +- ^ Scan parquet default.supplier (1)
                                 :     :     +- ^ GlutenBroadcastHashJoinExecTransformer LeftAnti (23)
                                 :     :        :- ^ GlutenBroadcastHashJoinExecTransformer LeftSemi (15)
                                 :     :        :  :- ^ ProjectExecTransformer (9)
                                 :     :        :  :  +- ^ FilterExecTransformer (8)
                                 :     :        :  :     +- ^ Scan parquet default.lineitem (7)
                                 :     :        :  +- ^ InputIteratorTransformer (14)
                                 :     :        :     +- BroadcastQueryStage (13), Statistics(***)
                                 :     :        :        +- ColumnarBroadcastExchange (12)
                                 :     :        :           +- ^ Scan parquet default.lineitem (10)
                                 :     :        +- ^ InputIteratorTransformer (22)
                                 :     :           +- BroadcastQueryStage (21), Statistics(***)
                                 :     :              +- ColumnarBroadcastExchange (20)
                                 :     :                 +- ^ ProjectExecTransformer (18)
                                 :     :                    +- ^ FilterExecTransformer (17)
                                 :     :                       +- ^ Scan parquet default.lineitem (16)
                                 :     +- ^ InputIteratorTransformer (32)
                                 :        +- BroadcastQueryStage (31), Statistics(***)
                                 :           +- ColumnarBroadcastExchange (30)
                                 :              +- ^ ProjectExecTransformer (28)
                                 :                 +- ^ FilterExecTransformer (27)
                                 :                    +- ^ Scan parquet default.orders (26)
                                 +- ^ InputIteratorTransformer (41)
                                    +- BroadcastQueryStage (40), Statistics(***)
                                       +- ColumnarBroadcastExchange (39)
                                          +- ^ ProjectExecTransformer (37)
                                             +- ^ FilterExecTransformer (36)
                                                +- ^ Scan parquet default.nation (35)
+- == Initial Plan ==
   TakeOrderedAndProject (86)
   +- HashAggregate (85)
      +- Exchange (84)
         +- HashAggregate (83)
            +- Project (82)
               +- BroadcastHashJoin Inner BuildRight (81)
                  :- Project (76)
                  :  +- BroadcastHashJoin Inner BuildRight (75)
                  :     :- Project (70)
                  :     :  +- BroadcastHashJoin Inner BuildLeft (69)
                  :     :     :- BroadcastExchange (57)
                  :     :     :  +- Filter (56)
                  :     :     :     +- Scan parquet default.supplier (55)
                  :     :     +- BroadcastHashJoin LeftAnti BuildRight (68)
                  :     :        :- BroadcastHashJoin LeftSemi BuildRight (63)
                  :     :        :  :- Project (60)
                  :     :        :  :  +- Filter (59)
                  :     :        :  :     +- Scan parquet default.lineitem (58)
                  :     :        :  +- BroadcastExchange (62)
                  :     :        :     +- Scan parquet default.lineitem (61)
                  :     :        +- BroadcastExchange (67)
                  :     :           +- Project (66)
                  :     :              +- Filter (65)
                  :     :                 +- Scan parquet default.lineitem (64)
                  :     +- BroadcastExchange (74)
                  :        +- Project (73)
                  :           +- Filter (72)
                  :              +- Scan parquet default.orders (71)
                  +- BroadcastExchange (80)
                     +- Project (79)
                        +- Filter (78)
                           +- Scan parquet default.nation (77)


(1) Scan parquet default.supplier
Output [3]: [s_suppkey#***, s_name#***, s_nationkey#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/supplier]
PushedFilters: [IsNotNull(s_suppkey), IsNotNull(s_nationkey)]
ReadSchema: struct<s_suppkey:bigint,s_name:string,s_nationkey:bigint>

(2) FilterExecTransformer
Input [3]: [s_suppkey#***, s_name#***, s_nationkey#***]
Arguments: (isnotnull(s_suppkey#***) AND isnotnull(s_nationkey#***))

(3) WholeStageCodegenTransformer (130)
Input [3]: [s_suppkey#***, s_name#***, s_nationkey#***]
Arguments: false

(4) ColumnarBroadcastExchange
Input [3]: [s_suppkey#***, s_name#***, s_nationkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [plan_id=***]

(5) BroadcastQueryStage
Output [3]: [s_suppkey#***, s_name#***, s_nationkey#***]
Arguments: 0

(6) InputIteratorTransformer
Input [3]: [s_suppkey#***, s_name#***, s_nationkey#***]

(7) Scan parquet default.lineitem
Output [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/lineitem]
PushedFilters: [IsNotNull(l_receiptdate), IsNotNull(l_commitdate), IsNotNull(l_suppkey), IsNotNull(l_orderkey)]
ReadSchema: struct<l_orderkey:bigint,l_suppkey:bigint,l_commitdate:date,l_receiptdate:date>

(8) FilterExecTransformer
Input [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]
Arguments: ((((isnotnull(l_receiptdate#***) AND isnotnull(l_commitdate#***)) AND (l_receiptdate#*** > l_commitdate#***)) AND isnotnull(l_suppkey#***)) AND isnotnull(l_orderkey#***))

(9) ProjectExecTransformer
Input [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]
Arguments: [l_orderkey#***, l_suppkey#***]

(10) Scan parquet default.lineitem
Output [2]: [l_orderkey#***, l_suppkey#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/lineitem]
ReadSchema: struct<l_orderkey:bigint,l_suppkey:bigint>

(11) WholeStageCodegenTransformer (131)
Input [2]: [l_orderkey#***, l_suppkey#***]
Arguments: false

(12) ColumnarBroadcastExchange
Input [2]: [l_orderkey#***, l_suppkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(13) BroadcastQueryStage
Output [2]: [l_orderkey#***, l_suppkey#***]
Arguments: 1

(14) InputIteratorTransformer
Input [2]: [l_orderkey#***, l_suppkey#***]

(15) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [l_orderkey#***]
Right keys [1]: [l_orderkey#***]
Join condition: NOT (l_suppkey#*** = l_suppkey#***)

(16) Scan parquet default.lineitem
Output [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/lineitem]
PushedFilters: [IsNotNull(l_receiptdate), IsNotNull(l_commitdate)]
ReadSchema: struct<l_orderkey:bigint,l_suppkey:bigint,l_commitdate:date,l_receiptdate:date>

(17) FilterExecTransformer
Input [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]
Arguments: ((isnotnull(l_receiptdate#***) AND isnotnull(l_commitdate#***)) AND (l_receiptdate#*** > l_commitdate#***))

(18) ProjectExecTransformer
Input [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]
Arguments: [l_orderkey#***, l_suppkey#***]

(19) WholeStageCodegenTransformer (132)
Input [2]: [l_orderkey#***, l_suppkey#***]
Arguments: false

(20) ColumnarBroadcastExchange
Input [2]: [l_orderkey#***, l_suppkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(21) BroadcastQueryStage
Output [2]: [l_orderkey#***, l_suppkey#***]
Arguments: 2

(22) InputIteratorTransformer
Input [2]: [l_orderkey#***, l_suppkey#***]

(23) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [l_orderkey#***]
Right keys [1]: [l_orderkey#***]
Join condition: NOT (l_suppkey#*** = l_suppkey#***)

(24) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [s_suppkey#***]
Right keys [1]: [l_suppkey#***]
Join condition: None

(25) ProjectExecTransformer
Input [5]: [s_suppkey#***, s_name#***, s_nationkey#***, l_orderkey#***, l_suppkey#***]
Arguments: [s_name#***, s_nationkey#***, l_orderkey#***]

(26) Scan parquet default.orders
Output [2]: [o_orderkey#***, o_orderstatus#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/orders]
PushedFilters: [IsNotNull(o_orderstatus), EqualTo(o_orderstatus,F), IsNotNull(o_orderkey)]
ReadSchema: struct<o_orderkey:bigint,o_orderstatus:string>

(27) FilterExecTransformer
Input [2]: [o_orderkey#***, o_orderstatus#***]
Arguments: ((isnotnull(o_orderstatus#***) AND (o_orderstatus#*** = F)) AND isnotnull(o_orderkey#***))

(28) ProjectExecTransformer
Input [2]: [o_orderkey#***, o_orderstatus#***]
Arguments: [o_orderkey#***]

(29) WholeStageCodegenTransformer (133)
Input [1]: [o_orderkey#***]
Arguments: false

(30) ColumnarBroadcastExchange
Input [1]: [o_orderkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(31) BroadcastQueryStage
Output [1]: [o_orderkey#***]
Arguments: 3

(32) InputIteratorTransformer
Input [1]: [o_orderkey#***]

(33) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [l_orderkey#***]
Right keys [1]: [o_orderkey#***]
Join condition: None

(34) ProjectExecTransformer
Input [4]: [s_name#***, s_nationkey#***, l_orderkey#***, o_orderkey#***]
Arguments: [s_name#***, s_nationkey#***]

(35) Scan parquet default.nation
Output [2]: [n_nationkey#***, n_name#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/nation]
PushedFilters: [IsNotNull(n_name), EqualTo(n_name,SAUDI ARABIA), IsNotNull(n_nationkey)]
ReadSchema: struct<n_nationkey:bigint,n_name:string>

(36) FilterExecTransformer
Input [2]: [n_nationkey#***, n_name#***]
Arguments: ((isnotnull(n_name#***) AND (n_name#*** = SAUDI ARABIA)) AND isnotnull(n_nationkey#***))

(37) ProjectExecTransformer
Input [2]: [n_nationkey#***, n_name#***]
Arguments: [n_nationkey#***]

(38) WholeStageCodegenTransformer (134)
Input [1]: [n_nationkey#***]
Arguments: false

(39) ColumnarBroadcastExchange
Input [1]: [n_nationkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(40) BroadcastQueryStage
Output [1]: [n_nationkey#***]
Arguments: 4

(41) InputIteratorTransformer
Input [1]: [n_nationkey#***]

(42) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [s_nationkey#***]
Right keys [1]: [n_nationkey#***]
Join condition: None

(43) ProjectExecTransformer
Input [3]: [s_name#***, s_nationkey#***, n_nationkey#***]
Arguments: [s_name#***]

(44) FlushableHashAggregateExecTransformer
Input [1]: [s_name#***]
Keys [1]: [s_name#***]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#***]
Results [2]: [s_name#***, count#***]

(45) ProjectExecTransformer
Input [2]: [s_name#***, count#***]
Arguments: [hash(s_name#***, 42) AS hash_partition_key#***, s_name#***, count#***]

(46) WholeStageCodegenTransformer (135)
Input [3]: [hash_partition_key#***, s_name#***, count#***]
Arguments: false

(47) ColumnarExchange
Input [3]: [hash_partition_key#***, s_name#***, count#***]
Arguments: hashpartitioning(s_name#***, 100), ENSURE_REQUIREMENTS, [s_name#***, count#***], [plan_id=***], [id=#***]

(48) ShuffleQueryStage
Output [2]: [s_name#***, count#***]
Arguments: 5

(49) AQEShuffleRead
Input [2]: [s_name#***, count#***]
Arguments: coalesced

(50) InputIteratorTransformer
Input [2]: [s_name#***, count#***]

(51) RegularHashAggregateExecTransformer
Input [2]: [s_name#***, count#***]
Keys [1]: [s_name#***]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#***]
Results [2]: [s_name#***, count(1)#*** AS numwait#***]

(52) WholeStageCodegenTransformer (136)
Input [2]: [s_name#***, numwait#***]
Arguments: false

(53) TakeOrderedAndProjectExecTransformer
Input [2]: [s_name#***, numwait#***]
Arguments: 100, [numwait#*** DESC NULLS LAST, s_name#*** ASC NULLS FIRST], [s_name#***, numwait#***]

(54) VeloxColumnarToRowExec
Input [2]: [s_name#***, numwait#***]

(55) Scan parquet default.supplier
Output [3]: [s_suppkey#***, s_name#***, s_nationkey#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/supplier]
PushedFilters: [IsNotNull(s_suppkey), IsNotNull(s_nationkey)]
ReadSchema: struct<s_suppkey:bigint,s_name:string,s_nationkey:bigint>

(56) Filter
Input [3]: [s_suppkey#***, s_name#***, s_nationkey#***]
Condition : (isnotnull(s_suppkey#***) AND isnotnull(s_nationkey#***))

(57) BroadcastExchange
Input [3]: [s_suppkey#***, s_name#***, s_nationkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [plan_id=***]

(58) Scan parquet default.lineitem
Output [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/lineitem]
PushedFilters: [IsNotNull(l_receiptdate), IsNotNull(l_commitdate), IsNotNull(l_suppkey), IsNotNull(l_orderkey)]
ReadSchema: struct<l_orderkey:bigint,l_suppkey:bigint,l_commitdate:date,l_receiptdate:date>

(59) Filter
Input [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]
Condition : ((((isnotnull(l_receiptdate#***) AND isnotnull(l_commitdate#***)) AND (l_receiptdate#*** > l_commitdate#***)) AND isnotnull(l_suppkey#***)) AND isnotnull(l_orderkey#***))

(60) Project
Output [2]: [l_orderkey#***, l_suppkey#***]
Input [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]

(61) Scan parquet default.lineitem
Output [2]: [l_orderkey#***, l_suppkey#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/lineitem]
ReadSchema: struct<l_orderkey:bigint,l_suppkey:bigint>

(62) BroadcastExchange
Input [2]: [l_orderkey#***, l_suppkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(63) BroadcastHashJoin
Left keys [1]: [l_orderkey#***]
Right keys [1]: [l_orderkey#***]
Join condition: NOT (l_suppkey#*** = l_suppkey#***)

(64) Scan parquet default.lineitem
Output [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/lineitem]
PushedFilters: [IsNotNull(l_receiptdate), IsNotNull(l_commitdate)]
ReadSchema: struct<l_orderkey:bigint,l_suppkey:bigint,l_commitdate:date,l_receiptdate:date>

(65) Filter
Input [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]
Condition : ((isnotnull(l_receiptdate#***) AND isnotnull(l_commitdate#***)) AND (l_receiptdate#*** > l_commitdate#***))

(66) Project
Output [2]: [l_orderkey#***, l_suppkey#***]
Input [4]: [l_orderkey#***, l_suppkey#***, l_commitdate#***, l_receiptdate#***]

(67) BroadcastExchange
Input [2]: [l_orderkey#***, l_suppkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(68) BroadcastHashJoin
Left keys [1]: [l_orderkey#***]
Right keys [1]: [l_orderkey#***]
Join condition: NOT (l_suppkey#*** = l_suppkey#***)

(69) BroadcastHashJoin
Left keys [1]: [s_suppkey#***]
Right keys [1]: [l_suppkey#***]
Join condition: None

(70) Project
Output [3]: [s_name#***, s_nationkey#***, l_orderkey#***]
Input [5]: [s_suppkey#***, s_name#***, s_nationkey#***, l_orderkey#***, l_suppkey#***]

(71) Scan parquet default.orders
Output [2]: [o_orderkey#***, o_orderstatus#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/orders]
PushedFilters: [IsNotNull(o_orderstatus), EqualTo(o_orderstatus,F), IsNotNull(o_orderkey)]
ReadSchema: struct<o_orderkey:bigint,o_orderstatus:string>

(72) Filter
Input [2]: [o_orderkey#***, o_orderstatus#***]
Condition : ((isnotnull(o_orderstatus#***) AND (o_orderstatus#*** = F)) AND isnotnull(o_orderkey#***))

(73) Project
Output [1]: [o_orderkey#***]
Input [2]: [o_orderkey#***, o_orderstatus#***]

(74) BroadcastExchange
Input [1]: [o_orderkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(75) BroadcastHashJoin
Left keys [1]: [l_orderkey#***]
Right keys [1]: [o_orderkey#***]
Join condition: None

(76) Project
Output [2]: [s_name#***, s_nationkey#***]
Input [4]: [s_name#***, s_nationkey#***, l_orderkey#***, o_orderkey#***]

(77) Scan parquet default.nation
Output [2]: [n_nationkey#***, n_name#***]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-0.1/nation]
PushedFilters: [IsNotNull(n_name), EqualTo(n_name,SAUDI ARABIA), IsNotNull(n_nationkey)]
ReadSchema: struct<n_nationkey:bigint,n_name:string>

(78) Filter
Input [2]: [n_nationkey#***, n_name#***]
Condition : ((isnotnull(n_name#***) AND (n_name#*** = SAUDI ARABIA)) AND isnotnull(n_nationkey#***))

(79) Project
Output [1]: [n_nationkey#***]
Input [2]: [n_nationkey#***, n_name#***]

(80) BroadcastExchange
Input [1]: [n_nationkey#***]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=***]

(81) BroadcastHashJoin
Left keys [1]: [s_nationkey#***]
Right keys [1]: [n_nationkey#***]
Join condition: None

(82) Project
Output [1]: [s_name#***]
Input [3]: [s_name#***, s_nationkey#***, n_nationkey#***]

(83) HashAggregate
Input [1]: [s_name#***]
Keys [1]: [s_name#***]
Functions [1]: [partial_count(1)]
Aggregate Attributes [1]: [count#***]
Results [2]: [s_name#***, count#***]

(84) Exchange
Input [2]: [s_name#***, count#***]
Arguments: hashpartitioning(s_name#***, 100), ENSURE_REQUIREMENTS, [plan_id=***]

(85) HashAggregate
Input [2]: [s_name#***, count#***]
Keys [1]: [s_name#***]
Functions [1]: [count(1)]
Aggregate Attributes [1]: [count(1)#***]
Results [2]: [s_name#***, count(1)#*** AS numwait#***]

(86) TakeOrderedAndProject
Input [2]: [s_name#***, numwait#***]
Arguments: 100, [numwait#*** DESC NULLS LAST, s_name#*** ASC NULLS FIRST], [s_name#***, numwait#***]

(87) AdaptiveSparkPlan
Output [2]: [s_name#***, numwait#***]
Arguments: isFinalPlan=true
