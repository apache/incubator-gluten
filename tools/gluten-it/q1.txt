== Physical Plan ==
VeloxColumnarToRowExec (15)
+- ^ SortExecTransformer (13)
   +- ^ InputIteratorTransformer (12)
      +- ColumnarExchange (11)
         +- ^ RegularHashAggregateExecTransformer (9)
            +- ^ InputIteratorTransformer (8)
               +- ColumnarExchange (7)
                  +- ^ ProjectExecTransformer (5)
                     +- ^ FlushableHashAggregateExecTransformer (4)
                        +- ^ ProjectExecTransformer (3)
                           +- ^ FilterExecTransformer (2)
                              +- ^ Scan parquet spark_catalog.default.lineitem (1)


(1) Scan parquet spark_catalog.default.lineitem
Output [7]: [l_quantity#647, l_extendedprice#648, l_discount#649, l_tax#650, l_returnflag#651, l_linestatus#652, l_shipdate#658]
Batched: true
Location: InMemoryFileIndex [file:/tmp/tpch-generated-1.0/lineitem]
PushedFilters: [IsNotNull(l_shipdate), LessThanOrEqual(l_shipdate,1998-09-02)]
ReadSchema: struct<l_quantity:decimal(12,2),l_extendedprice:decimal(12,2),l_discount:decimal(12,2),l_tax:decimal(12,2),l_returnflag:string,l_linestatus:string,l_shipdate:date>

(2) FilterExecTransformer
Input [7]: [l_quantity#647, l_extendedprice#648, l_discount#649, l_tax#650, l_returnflag#651, l_linestatus#652, l_shipdate#658]
Arguments: (isnotnull(l_shipdate#658) AND (l_shipdate#658 <= 1998-09-02))

(3) ProjectExecTransformer
Input [7]: [l_quantity#647, l_extendedprice#648, l_discount#649, l_tax#650, l_returnflag#651, l_linestatus#652, l_shipdate#658]
Arguments: [l_quantity#647, l_extendedprice#648, l_discount#649, l_tax#650, l_returnflag#651, l_linestatus#652]

(4) FlushableHashAggregateExecTransformer
Input [6]: [l_quantity#647, l_extendedprice#648, l_discount#649, l_tax#650, l_returnflag#651, l_linestatus#652]
Keys [2]: [l_returnflag#651, l_linestatus#652]
Functions [8]: [partial_sum(l_quantity#647), partial_sum(l_extendedprice#648), partial_sum((l_extendedprice#648 * (1 - l_discount#649))), partial_sum(((l_extendedprice#648 * (1 - l_discount#649)) * (1 + l_tax#650))), partial_avg(l_quantity#647), partial_avg(l_extendedprice#648), partial_avg(l_discount#649), partial_count(1)]
Aggregate Attributes [15]: [sum#718, isEmpty#719, sum#720, isEmpty#721, sum#722, isEmpty#723, sum#724, isEmpty#725, sum#726, count#727L, sum#728, count#729L, sum#730, count#731L, count#732L]
Results [17]: [l_returnflag#651, l_linestatus#652, sum#733, isEmpty#734, sum#735, isEmpty#736, sum#737, isEmpty#738, sum#739, isEmpty#740, sum#741, count#742L, sum#743, count#744L, sum#745, count#746L, count#747L]

(5) ProjectExecTransformer
Input [17]: [l_returnflag#651, l_linestatus#652, sum#733, isEmpty#734, sum#735, isEmpty#736, sum#737, isEmpty#738, sum#739, isEmpty#740, sum#741, count#742L, sum#743, count#744L, sum#745, count#746L, count#747L]
Arguments: [hash(l_returnflag#651, l_linestatus#652, 42) AS hash_partition_key#748, l_returnflag#651, l_linestatus#652, sum#733, isEmpty#734, sum#735, isEmpty#736, sum#737, isEmpty#738, sum#739, isEmpty#740, sum#741, count#742L, sum#743, count#744L, sum#745, count#746L, count#747L]

(6) WholeStageCodegenTransformer (1)
Input [18]: [hash_partition_key#748, l_returnflag#651, l_linestatus#652, sum#733, isEmpty#734, sum#735, isEmpty#736, sum#737, isEmpty#738, sum#739, isEmpty#740, sum#741, count#742L, sum#743, count#744L, sum#745, count#746L, count#747L]
Arguments: false
Native Plan:
-- Project[expressions: (n5_17:INTEGER, hash_with_seed(42,"n4_10","n4_11")), (n5_18:VARCHAR, "n4_10"), (n5_19:VARCHAR, "n4_11"), (n5_20:DECIMAL(22, 2), "n4_12"), (n5_21:BOOLEAN, "n4_13"), (n5_22:DECIMAL(22, 2), "n4_14"), (n5_23:BOOLEAN, "n4_15"), (n5_24:DECIMAL(36, 4), "n4_16"), (n5_25:BOOLEAN, "n4_17"), (n5_26:DECIMAL(38, 6), "n4_18"), (n5_27:BOOLEAN, "n4_19"), (n5_28:DECIMAL(22, 2), "n4_20"), (n5_29:BIGINT, "n4_21"), (n5_30:DECIMAL(22, 2), "n4_22"), (n5_31:BIGINT, "n4_23"), (n5_32:DECIMAL(22, 2), "n4_24"), (n5_33:BIGINT, "n4_25"), (n5_34:BIGINT, "n4_26")] -> n5_17:INTEGER, n5_18:VARCHAR, n5_19:VARCHAR, n5_20:DECIMAL(22, 2), n5_21:BOOLEAN, n5_22:DECIMAL(22, 2), n5_23:BOOLEAN, n5_24:DECIMAL(36, 4), n5_25:BOOLEAN, n5_26:DECIMAL(38, 6), n5_27:BOOLEAN, n5_28:DECIMAL(22, 2), n5_29:BIGINT, n5_30:DECIMAL(22, 2), n5_31:BIGINT, n5_32:DECIMAL(22, 2), n5_33:BIGINT, n5_34:BIGINT
  -- Project[expressions: (n4_10:VARCHAR, "n2_6"), (n4_11:VARCHAR, "n2_7"), (n4_12:DECIMAL(22, 2), "n3_2"["col_0"]), (n4_13:BOOLEAN, "n3_2"["col_1"]), (n4_14:DECIMAL(22, 2), "n3_3"["col_0"]), (n4_15:BOOLEAN, "n3_3"["col_1"]), (n4_16:DECIMAL(36, 4), "n3_4"["col_0"]), (n4_17:BOOLEAN, "n3_4"["col_1"]), (n4_18:DECIMAL(38, 6), "n3_5"["col_0"]), (n4_19:BOOLEAN, "n3_5"["col_1"]), (n4_20:DECIMAL(22, 2), "n3_6"["col_0"]), (n4_21:BIGINT, "n3_6"["col_1"]), (n4_22:DECIMAL(22, 2), "n3_7"["col_0"]), (n4_23:BIGINT, "n3_7"["col_1"]), (n4_24:DECIMAL(22, 2), "n3_8"["col_0"]), (n4_25:BIGINT, "n3_8"["col_1"]), (n4_26:BIGINT, "n3_9")] -> n4_10:VARCHAR, n4_11:VARCHAR, n4_12:DECIMAL(22, 2), n4_13:BOOLEAN, n4_14:DECIMAL(22, 2), n4_15:BOOLEAN, n4_16:DECIMAL(36, 4), n4_17:BOOLEAN, n4_18:DECIMAL(38, 6), n4_19:BOOLEAN, n4_20:DECIMAL(22, 2), n4_21:BIGINT, n4_22:DECIMAL(22, 2), n4_23:BIGINT, n4_24:DECIMAL(22, 2), n4_25:BIGINT, n4_26:BIGINT
    -- Aggregation[PARTIAL [n2_6, n2_7] n3_2 := sum_partial("n2_8"), n3_3 := sum_partial("n2_9"), n3_4 := sum_partial("n2_10"), n3_5 := sum_partial("n2_11"), n3_6 := avg_partial("n2_8"), n3_7 := avg_partial("n2_9"), n3_8 := avg_partial("n2_12"), n3_9 := count_partial("n2_13")] -> n2_6:VARCHAR, n2_7:VARCHAR, n3_2:ROW<col_0:DECIMAL(22, 2),col_1:BOOLEAN>, n3_3:ROW<col_0:DECIMAL(22, 2),col_1:BOOLEAN>, n3_4:ROW<col_0:DECIMAL(36, 4),col_1:BOOLEAN>, n3_5:ROW<col_0:DECIMAL(38, 6),col_1:BOOLEAN>, n3_6:ROW<col_0:DECIMAL(22, 2),col_1:BIGINT>, n3_7:ROW<col_0:DECIMAL(22, 2),col_1:BIGINT>, n3_8:ROW<col_0:DECIMAL(22, 2),col_1:BIGINT>, n3_9:BIGINT
      -- Project[expressions: (n2_6:VARCHAR, "n1_11"), (n2_7:VARCHAR, "n1_12"), (n2_8:DECIMAL(12, 2), "n1_7"), (n2_9:DECIMAL(12, 2), "n1_8"), (n2_10:DECIMAL(26, 4), multiply("n1_8",subtract(1,"n1_9"))), (n2_11:DECIMAL(38, 6), multiply(multiply("n1_8",subtract(1,"n1_9")),add(1,"n1_10"))), (n2_12:DECIMAL(12, 2), "n1_9"), (n2_13:INTEGER, 1)] -> n2_6:VARCHAR, n2_7:VARCHAR, n2_8:DECIMAL(12, 2), n2_9:DECIMAL(12, 2), n2_10:DECIMAL(26, 4), n2_11:DECIMAL(38, 6), n2_12:DECIMAL(12, 2), n2_13:INTEGER
        -- Project[expressions: (n1_7:DECIMAL(12, 2), "n0_0"), (n1_8:DECIMAL(12, 2), "n0_1"), (n1_9:DECIMAL(12, 2), "n0_2"), (n1_10:DECIMAL(12, 2), "n0_3"), (n1_11:VARCHAR, "n0_4"), (n1_12:VARCHAR, "n0_5")] -> n1_7:DECIMAL(12, 2), n1_8:DECIMAL(12, 2), n1_9:DECIMAL(12, 2), n1_10:DECIMAL(12, 2), n1_11:VARCHAR, n1_12:VARCHAR
          -- TableScan[table: hive_table, range filters: [(l_shipdate, BigintRange: [-2147483648, 10471] no nulls)]] -> n0_0:DECIMAL(12, 2), n0_1:DECIMAL(12, 2), n0_2:DECIMAL(12, 2), n0_3:DECIMAL(12, 2), n0_4:VARCHAR, n0_5:VARCHAR, n0_6:DATE

(7) ColumnarExchange
Input [18]: [hash_partition_key#748, l_returnflag#651, l_linestatus#652, sum#733, isEmpty#734, sum#735, isEmpty#736, sum#737, isEmpty#738, sum#739, isEmpty#740, sum#741, count#742L, sum#743, count#744L, sum#745, count#746L, count#747L]
Arguments: hashpartitioning(l_returnflag#651, l_linestatus#652, 100), ENSURE_REQUIREMENTS, [l_returnflag#651, l_linestatus#652, sum#733, isEmpty#734, sum#735, isEmpty#736, sum#737, isEmpty#738, sum#739, isEmpty#740, sum#741, count#742L, sum#743, count#744L, sum#745, count#746L, count#747L], [plan_id=516], [id=#516]

(8) InputIteratorTransformer
Input [17]: [l_returnflag#651, l_linestatus#652, sum#733, isEmpty#734, sum#735, isEmpty#736, sum#737, isEmpty#738, sum#739, isEmpty#740, sum#741, count#742L, sum#743, count#744L, sum#745, count#746L, count#747L]

(9) RegularHashAggregateExecTransformer
Input [17]: [l_returnflag#651, l_linestatus#652, sum#733, isEmpty#734, sum#735, isEmpty#736, sum#737, isEmpty#738, sum#739, isEmpty#740, sum#741, count#742L, sum#743, count#744L, sum#745, count#746L, count#747L]
Keys [2]: [l_returnflag#651, l_linestatus#652]
Functions [8]: [sum(l_quantity#647), sum(l_extendedprice#648), sum((l_extendedprice#648 * (1 - l_discount#649))), sum(((l_extendedprice#648 * (1 - l_discount#649)) * (1 + l_tax#650))), avg(l_quantity#647), avg(l_extendedprice#648), avg(l_discount#649), count(1)]
Aggregate Attributes [8]: [sum(l_quantity#647)#700, sum(l_extendedprice#648)#701, sum((l_extendedprice#648 * (1 - l_discount#649)))#706, sum(((l_extendedprice#648 * (1 - l_discount#649)) * (1 + l_tax#650)))#707, avg(l_quantity#647)#702, avg(l_extendedprice#648)#703, avg(l_discount#649)#704, count(1)#699L]
Results [10]: [l_returnflag#651, l_linestatus#652, sum(l_quantity#647)#700 AS sum_qty#691, sum(l_extendedprice#648)#701 AS sum_base_price#692, sum((l_extendedprice#648 * (1 - l_discount#649)))#706 AS sum_disc_price#693, sum(((l_extendedprice#648 * (1 - l_discount#649)) * (1 + l_tax#650)))#707 AS sum_charge#694, avg(l_quantity#647)#702 AS avg_qty#695, avg(l_extendedprice#648)#703 AS avg_price#696, avg(l_discount#649)#704 AS avg_disc#697, count(1)#699L AS count_order#698L]

(10) WholeStageCodegenTransformer (2)
Input [10]: [l_returnflag#651, l_linestatus#652, sum_qty#691, sum_base_price#692, sum_disc_price#693, sum_charge#694, avg_qty#695, avg_price#696, avg_disc#697, count_order#698L]
Arguments: false
Native Plan:
-- Project[expressions: (n3_10:VARCHAR, "n1_17"), (n3_11:VARCHAR, "n1_18"), (n3_12:DECIMAL(22, 2), "n2_2"), (n3_13:DECIMAL(22, 2), "n2_3"), (n3_14:DECIMAL(36, 4), "n2_4"), (n3_15:DECIMAL(38, 6), "n2_5"), (n3_16:DECIMAL(16, 6), "n2_6"), (n3_17:DECIMAL(16, 6), "n2_7"), (n3_18:DECIMAL(16, 6), "n2_8"), (n3_19:BIGINT, "n2_9")] -> n3_10:VARCHAR, n3_11:VARCHAR, n3_12:DECIMAL(22, 2), n3_13:DECIMAL(22, 2), n3_14:DECIMAL(36, 4), n3_15:DECIMAL(38, 6), n3_16:DECIMAL(16, 6), n3_17:DECIMAL(16, 6), n3_18:DECIMAL(16, 6), n3_19:BIGINT
  -- Aggregation[SINGLE [n1_17, n1_18] n2_2 := sum_merge_extract("n1_19"), n2_3 := sum_merge_extract("n1_20"), n2_4 := sum_merge_extract("n1_21"), n2_5 := sum_merge_extract("n1_22"), n2_6 := avg_merge_extract("n1_23"), n2_7 := avg_merge_extract("n1_24"), n2_8 := avg_merge_extract("n1_25"), n2_9 := count_merge_extract("n1_26")] -> n1_17:VARCHAR, n1_18:VARCHAR, n2_2:DECIMAL(22, 2), n2_3:DECIMAL(22, 2), n2_4:DECIMAL(36, 4), n2_5:DECIMAL(38, 6), n2_6:DECIMAL(16, 6), n2_7:DECIMAL(16, 6), n2_8:DECIMAL(16, 6), n2_9:BIGINT
    -- Project[expressions: (n1_17:VARCHAR, "n0_0"), (n1_18:VARCHAR, "n0_1"), (n1_19:ROW<col_0:DECIMAL(22, 2),col_1:BOOLEAN>, row_constructor("n0_2","n0_3")), (n1_20:ROW<col_0:DECIMAL(22, 2),col_1:BOOLEAN>, row_constructor("n0_4","n0_5")), (n1_21:ROW<col_0:DECIMAL(36, 4),col_1:BOOLEAN>, row_constructor("n0_6","n0_7")), (n1_22:ROW<col_0:DECIMAL(38, 6),col_1:BOOLEAN>, row_constructor("n0_8","n0_9")), (n1_23:ROW<col_0:DECIMAL(22, 2),col_1:BIGINT>, row_constructor("n0_10","n0_11")), (n1_24:ROW<col_0:DECIMAL(22, 2),col_1:BIGINT>, row_constructor("n0_12","n0_13")), (n1_25:ROW<col_0:DECIMAL(22, 2),col_1:BIGINT>, row_constructor("n0_14","n0_15")), (n1_26:BIGINT, "n0_16")] -> n1_17:VARCHAR, n1_18:VARCHAR, n1_19:ROW<col_0:DECIMAL(22, 2),col_1:BOOLEAN>, n1_20:ROW<col_0:DECIMAL(22, 2),col_1:BOOLEAN>, n1_21:ROW<col_0:DECIMAL(36, 4),col_1:BOOLEAN>, n1_22:ROW<col_0:DECIMAL(38, 6),col_1:BOOLEAN>, n1_23:ROW<col_0:DECIMAL(22, 2),col_1:BIGINT>, n1_24:ROW<col_0:DECIMAL(22, 2),col_1:BIGINT>, n1_25:ROW<col_0:DECIMAL(22, 2),col_1:BIGINT>, n1_26:BIGINT
      -- ValueStream[] -> n0_0:VARCHAR, n0_1:VARCHAR, n0_2:DECIMAL(22, 2), n0_3:BOOLEAN, n0_4:DECIMAL(22, 2), n0_5:BOOLEAN, n0_6:DECIMAL(36, 4), n0_7:BOOLEAN, n0_8:DECIMAL(38, 6), n0_9:BOOLEAN, n0_10:DECIMAL(22, 2), n0_11:BIGINT, n0_12:DECIMAL(22, 2), n0_13:BIGINT, n0_14:DECIMAL(22, 2), n0_15:BIGINT, n0_16:BIGINT

(11) ColumnarExchange
Input [10]: [l_returnflag#651, l_linestatus#652, sum_qty#691, sum_base_price#692, sum_disc_price#693, sum_charge#694, avg_qty#695, avg_price#696, avg_disc#697, count_order#698L]
Arguments: rangepartitioning(l_returnflag#651 ASC NULLS FIRST, l_linestatus#652 ASC NULLS FIRST, 100), ENSURE_REQUIREMENTS, [plan_id=521], [id=#521]

(12) InputIteratorTransformer
Input [10]: [l_returnflag#651, l_linestatus#652, sum_qty#691, sum_base_price#692, sum_disc_price#693, sum_charge#694, avg_qty#695, avg_price#696, avg_disc#697, count_order#698L]

(13) SortExecTransformer
Input [10]: [l_returnflag#651, l_linestatus#652, sum_qty#691, sum_base_price#692, sum_disc_price#693, sum_charge#694, avg_qty#695, avg_price#696, avg_disc#697, count_order#698L]
Arguments: [l_returnflag#651 ASC NULLS FIRST, l_linestatus#652 ASC NULLS FIRST], true, 0

(14) WholeStageCodegenTransformer (3)
Input [10]: [l_returnflag#651, l_linestatus#652, sum_qty#691, sum_base_price#692, sum_disc_price#693, sum_charge#694, avg_qty#695, avg_price#696, avg_disc#697, count_order#698L]
Arguments: false
Native Plan:
-- OrderBy[n0_0 ASC NULLS FIRST, n0_1 ASC NULLS FIRST] -> n0_0:VARCHAR, n0_1:VARCHAR, n0_2:DECIMAL(22, 2), n0_3:DECIMAL(22, 2), n0_4:DECIMAL(36, 4), n0_5:DECIMAL(38, 6), n0_6:DECIMAL(16, 6), n0_7:DECIMAL(16, 6), n0_8:DECIMAL(16, 6), n0_9:BIGINT
  -- ValueStream[] -> n0_0:VARCHAR, n0_1:VARCHAR, n0_2:DECIMAL(22, 2), n0_3:DECIMAL(22, 2), n0_4:DECIMAL(36, 4), n0_5:DECIMAL(38, 6), n0_6:DECIMAL(16, 6), n0_7:DECIMAL(16, 6), n0_8:DECIMAL(16, 6), n0_9:BIGINT

(15) VeloxColumnarToRowExec
Input [10]: [l_returnflag#651, l_linestatus#652, sum_qty#691, sum_base_price#692, sum_disc_price#693, sum_charge#694, avg_qty#695, avg_price#696, avg_disc#697, count_order#698L]

