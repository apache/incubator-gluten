== Physical Plan ==
AdaptiveSparkPlan (71)
+- == Final Plan ==
   VeloxColumnarToRowExec (41)
   +- TakeOrderedAndProjectExecTransformer (40)
      +- ^ RegularHashAggregateExecTransformer (38)
         +- ^ RegularHashAggregateExecTransformer (37)
            +- ^ ProjectExecTransformer (36)
               +- ^ GlutenBroadcastHashJoinExecTransformer Inner (35)
                  :- ^ ProjectExecTransformer (22)
                  :  +- ^ GlutenBroadcastHashJoinExecTransformer Inner (21)
                  :     :- ^ InputIteratorTransformer (7)
                  :     :  +- ^ InputAdapter (6)
                  :     :     +- ^ BroadcastQueryStage (5)
                  :     :        +- ColumnarBroadcastExchange (4)
                  :     :           +- ^ FilterExecTransformer (2)
                  :     :              +- ^ BatchScanExecTransformer (1)
                  :     +- ^ GlutenBroadcastHashJoinExecTransformer LeftSemi (20)
                  :        :- ^ FilterExecTransformer (9)
                  :        :  +- ^ BatchScanExecTransformer (8)
                  :        +- ^ InputIteratorTransformer (19)
                  :           +- ^ InputAdapter (18)
                  :              +- ^ BroadcastQueryStage (17)
                  :                 +- ColumnarBroadcastExchange (16)
                  :                    +- ^ ProjectExecTransformer (14)
                  :                       +- ^ FilterExecTransformer (13)
                  :                          +- ^ RegularHashAggregateExecTransformer (12)
                  :                             +- ^ RegularHashAggregateExecTransformer (11)
                  :                                +- ^ BatchScanExecTransformer (10)
                  +- ^ InputIteratorTransformer (34)
                     +- ^ InputAdapter (33)
                        +- ^ BroadcastQueryStage (32)
                           +- ColumnarBroadcastExchange (31)
                              +- ^ GlutenBroadcastHashJoinExecTransformer LeftSemi (29)
                                 :- ^ FilterExecTransformer (24)
                                 :  +- ^ BatchScanExecTransformer (23)
                                 +- ^ InputIteratorTransformer (28)
                                    +- ^ InputAdapter (27)
                                       +- ^ BroadcastQueryStage (26)
                                          +- ReusedExchange (25)
+- == Initial Plan ==
   TakeOrderedAndProject (70)
   +- HashAggregate (69)
      +- HashAggregate (68)
         +- Project (67)
            +- BroadcastHashJoin Inner BuildRight (66)
               :- Project (55)
               :  +- BroadcastHashJoin Inner BuildLeft (54)
               :     :- BroadcastExchange (44)
               :     :  +- Filter (43)
               :     :     +- BatchScan (42)
               :     +- BroadcastHashJoin LeftSemi BuildRight (53)
               :        :- Filter (46)
               :        :  +- BatchScan (45)
               :        +- BroadcastExchange (52)
               :           +- Project (51)
               :              +- Filter (50)
               :                 +- HashAggregate (49)
               :                    +- HashAggregate (48)
               :                       +- BatchScan (47)
               +- BroadcastExchange (65)
                  +- BroadcastHashJoin LeftSemi BuildRight (64)
                     :- Filter (57)
                     :  +- BatchScan (56)
                     +- BroadcastExchange (63)
                        +- Project (62)
                           +- Filter (61)
                              +- HashAggregate (60)
                                 +- HashAggregate (59)
                                    +- BatchScan (58)


(1) BatchScanExecTransformer
Output [2]: [c_custkey#X, c_name#X]
DataFilters: [isnotnull(c_custkey#X)]
Format: parquet
Location: InMemoryFileIndex(1 paths)[*]
PushedFilters: [IsNotNull(c_custkey)]
ReadSchema: struct<c_custkey:bigint,c_name:string>

(2) FilterExecTransformer
Input [2]: [c_custkey#X, c_name#X]
Arguments: isnotnull(c_custkey#X)

(3) WholeStageCodegenTransformer (X)
Input [2]: [c_custkey#X, c_name#X]
Arguments: false

(4) ColumnarBroadcastExchange
Input [2]: [c_custkey#X, c_name#X]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [plan_id=X]

(5) BroadcastQueryStage
Output [2]: [c_custkey#X, c_name#X]
Arguments: 0

(6) InputAdapter
Input [2]: [c_custkey#X, c_name#X]

(7) InputIteratorTransformer
Input [2]: [c_custkey#X, c_name#X]

(8) BatchScanExecTransformer
Output [4]: [o_orderkey#X, o_custkey#X, o_totalprice#X, o_orderdate#X]
DataFilters: [isnotnull(o_custkey#X), isnotnull(o_orderkey#X)]
Format: parquet
Location: InMemoryFileIndex(1 paths)[*]
PushedFilters: [IsNotNull(o_custkey), IsNotNull(o_orderkey)]
ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_totalprice:decimal(12,2),o_orderdate:date>

(9) FilterExecTransformer
Input [4]: [o_orderkey#X, o_custkey#X, o_totalprice#X, o_orderdate#X]
Arguments: (isnotnull(o_custkey#X) AND isnotnull(o_orderkey#X))

(10) BatchScanExecTransformer
Output [2]: [l_orderkey#X, l_quantity#X]
Format: parquet
Location: InMemoryFileIndex(1 paths)[*]
ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>

(11) RegularHashAggregateExecTransformer
Input [2]: [l_orderkey#X, l_quantity#X]
Keys [1]: [l_orderkey#X]
Functions [1]: [partial_sum(l_quantity#X)]
Aggregate Attributes [2]: [sum#X, isEmpty#X]
Results [3]: [l_orderkey#X, sum#X, isEmpty#X]

(12) RegularHashAggregateExecTransformer
Input [3]: [l_orderkey#X, sum#X, isEmpty#X]
Keys [1]: [l_orderkey#X]
Functions [1]: [sum(l_quantity#X)]
Aggregate Attributes [1]: [sum(l_quantity#X)#X]
Results [2]: [l_orderkey#X, sum(l_quantity#X)#X AS sum(l_quantity#X)#X]

(13) FilterExecTransformer
Input [2]: [l_orderkey#X, sum(l_quantity#X)#X]
Arguments: (isnotnull(sum(l_quantity#X)#X) AND (sum(l_quantity#X)#X > 300.00))

(14) ProjectExecTransformer
Output [1]: [l_orderkey#X]
Input [2]: [l_orderkey#X, sum(l_quantity#X)#X]

(15) WholeStageCodegenTransformer (X)
Input [1]: [l_orderkey#X]
Arguments: false

(16) ColumnarBroadcastExchange
Input [1]: [l_orderkey#X]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=X]

(17) BroadcastQueryStage
Output [1]: [l_orderkey#X]
Arguments: 1

(18) InputAdapter
Input [1]: [l_orderkey#X]

(19) InputIteratorTransformer
Input [1]: [l_orderkey#X]

(20) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [o_orderkey#X]
Right keys [1]: [l_orderkey#X]
Join condition: None

(21) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [c_custkey#X]
Right keys [1]: [o_custkey#X]
Join condition: None

(22) ProjectExecTransformer
Output [5]: [c_custkey#X, c_name#X, o_orderkey#X, o_totalprice#X, o_orderdate#X]
Input [6]: [c_custkey#X, c_name#X, o_orderkey#X, o_custkey#X, o_totalprice#X, o_orderdate#X]

(23) BatchScanExecTransformer
Output [2]: [l_orderkey#X, l_quantity#X]
DataFilters: [isnotnull(l_orderkey#X)]
Format: parquet
Location: InMemoryFileIndex(1 paths)[*]
PushedFilters: [IsNotNull(l_orderkey)]
ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>

(24) FilterExecTransformer
Input [2]: [l_orderkey#X, l_quantity#X]
Arguments: isnotnull(l_orderkey#X)

(25) ReusedExchange [Reuses operator id: 16]
Output [1]: [l_orderkey#X]

(26) BroadcastQueryStage
Output [1]: [l_orderkey#X]
Arguments: 3

(27) InputAdapter
Input [1]: [l_orderkey#X]

(28) InputIteratorTransformer
Input [1]: [l_orderkey#X]

(29) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [l_orderkey#X]
Right keys [1]: [l_orderkey#X]
Join condition: None

(30) WholeStageCodegenTransformer (X)
Input [2]: [l_orderkey#X, l_quantity#X]
Arguments: false

(31) ColumnarBroadcastExchange
Input [2]: [l_orderkey#X, l_quantity#X]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [plan_id=X]

(32) BroadcastQueryStage
Output [2]: [l_orderkey#X, l_quantity#X]
Arguments: 4

(33) InputAdapter
Input [2]: [l_orderkey#X, l_quantity#X]

(34) InputIteratorTransformer
Input [2]: [l_orderkey#X, l_quantity#X]

(35) GlutenBroadcastHashJoinExecTransformer
Left keys [1]: [o_orderkey#X]
Right keys [1]: [l_orderkey#X]
Join condition: None

(36) ProjectExecTransformer
Output [6]: [c_custkey#X, c_name#X, o_orderkey#X, o_totalprice#X, o_orderdate#X, l_quantity#X]
Input [7]: [c_custkey#X, c_name#X, o_orderkey#X, o_totalprice#X, o_orderdate#X, l_orderkey#X, l_quantity#X]

(37) RegularHashAggregateExecTransformer
Input [6]: [c_custkey#X, c_name#X, o_orderkey#X, o_totalprice#X, o_orderdate#X, l_quantity#X]
Keys [5]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X]
Functions [1]: [partial_sum(l_quantity#X)]
Aggregate Attributes [2]: [sum#X, isEmpty#X]
Results [7]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum#X, isEmpty#X]

(38) RegularHashAggregateExecTransformer
Input [7]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum#X, isEmpty#X]
Keys [5]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X]
Functions [1]: [sum(l_quantity#X)]
Aggregate Attributes [1]: [sum(l_quantity#X)#X]
Results [6]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum(l_quantity#X)#X AS sum(l_quantity)#X]

(39) WholeStageCodegenTransformer (X)
Input [6]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum(l_quantity)#X]
Arguments: false

(40) TakeOrderedAndProjectExecTransformer
Input [6]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum(l_quantity)#X]
Arguments: 100, [o_totalprice#X DESC NULLS LAST, o_orderdate#X ASC NULLS FIRST], [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum(l_quantity)#X], 0

(41) VeloxColumnarToRowExec
Input [6]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum(l_quantity)#X]

(42) BatchScan
Output [2]: [c_custkey#X, c_name#X]
DataFilters: [isnotnull(c_custkey#X)]
Format: parquet
Location: InMemoryFileIndex(1 paths)[*]
PushedFilters: [IsNotNull(c_custkey)]
ReadSchema: struct<c_custkey:bigint,c_name:string>

(43) Filter
Input [2]: [c_custkey#X, c_name#X]
Condition : isnotnull(c_custkey#X)

(44) BroadcastExchange
Input [2]: [c_custkey#X, c_name#X]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [plan_id=X]

(45) BatchScan
Output [4]: [o_orderkey#X, o_custkey#X, o_totalprice#X, o_orderdate#X]
DataFilters: [isnotnull(o_custkey#X), isnotnull(o_orderkey#X)]
Format: parquet
Location: InMemoryFileIndex(1 paths)[*]
PushedFilters: [IsNotNull(o_custkey), IsNotNull(o_orderkey)]
ReadSchema: struct<o_orderkey:bigint,o_custkey:bigint,o_totalprice:decimal(12,2),o_orderdate:date>

(46) Filter
Input [4]: [o_orderkey#X, o_custkey#X, o_totalprice#X, o_orderdate#X]
Condition : (isnotnull(o_custkey#X) AND isnotnull(o_orderkey#X))

(47) BatchScan
Output [2]: [l_orderkey#X, l_quantity#X]
Format: parquet
Location: InMemoryFileIndex(1 paths)[*]
ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>

(48) HashAggregate
Input [2]: [l_orderkey#X, l_quantity#X]
Keys [1]: [l_orderkey#X]
Functions [1]: [partial_sum(l_quantity#X)]
Aggregate Attributes [2]: [sum#X, isEmpty#X]
Results [3]: [l_orderkey#X, sum#X, isEmpty#X]

(49) HashAggregate
Input [3]: [l_orderkey#X, sum#X, isEmpty#X]
Keys [1]: [l_orderkey#X]
Functions [1]: [sum(l_quantity#X)]
Aggregate Attributes [1]: [sum(l_quantity#X)#X]
Results [2]: [l_orderkey#X, sum(l_quantity#X)#X AS sum(l_quantity#X)#X]

(50) Filter
Input [2]: [l_orderkey#X, sum(l_quantity#X)#X]
Condition : (isnotnull(sum(l_quantity#X)#X) AND (sum(l_quantity#X)#X > 300.00))

(51) Project
Output [1]: [l_orderkey#X]
Input [2]: [l_orderkey#X, sum(l_quantity#X)#X]

(52) BroadcastExchange
Input [1]: [l_orderkey#X]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=X]

(53) BroadcastHashJoin
Left keys [1]: [o_orderkey#X]
Right keys [1]: [l_orderkey#X]
Join condition: None

(54) BroadcastHashJoin
Left keys [1]: [c_custkey#X]
Right keys [1]: [o_custkey#X]
Join condition: None

(55) Project
Output [5]: [c_custkey#X, c_name#X, o_orderkey#X, o_totalprice#X, o_orderdate#X]
Input [6]: [c_custkey#X, c_name#X, o_orderkey#X, o_custkey#X, o_totalprice#X, o_orderdate#X]

(56) BatchScan
Output [2]: [l_orderkey#X, l_quantity#X]
DataFilters: [isnotnull(l_orderkey#X)]
Format: parquet
Location: InMemoryFileIndex(1 paths)[*]
PushedFilters: [IsNotNull(l_orderkey)]
ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>

(57) Filter
Input [2]: [l_orderkey#X, l_quantity#X]
Condition : isnotnull(l_orderkey#X)

(58) BatchScan
Output [2]: [l_orderkey#X, l_quantity#X]
Format: parquet
Location: InMemoryFileIndex(1 paths)[*]
ReadSchema: struct<l_orderkey:bigint,l_quantity:decimal(12,2)>

(59) HashAggregate
Input [2]: [l_orderkey#X, l_quantity#X]
Keys [1]: [l_orderkey#X]
Functions [1]: [partial_sum(l_quantity#X)]
Aggregate Attributes [2]: [sum#X, isEmpty#X]
Results [3]: [l_orderkey#X, sum#X, isEmpty#X]

(60) HashAggregate
Input [3]: [l_orderkey#X, sum#X, isEmpty#X]
Keys [1]: [l_orderkey#X]
Functions [1]: [sum(l_quantity#X)]
Aggregate Attributes [1]: [sum(l_quantity#X)#X]
Results [2]: [l_orderkey#X, sum(l_quantity#X)#X AS sum(l_quantity#X)#X]

(61) Filter
Input [2]: [l_orderkey#X, sum(l_quantity#X)#X]
Condition : (isnotnull(sum(l_quantity#X)#X) AND (sum(l_quantity#X)#X > 300.00))

(62) Project
Output [1]: [l_orderkey#X]
Input [2]: [l_orderkey#X, sum(l_quantity#X)#X]

(63) BroadcastExchange
Input [1]: [l_orderkey#X]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, true]),false), [plan_id=X]

(64) BroadcastHashJoin
Left keys [1]: [l_orderkey#X]
Right keys [1]: [l_orderkey#X]
Join condition: None

(65) BroadcastExchange
Input [2]: [l_orderkey#X, l_quantity#X]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [plan_id=X]

(66) BroadcastHashJoin
Left keys [1]: [o_orderkey#X]
Right keys [1]: [l_orderkey#X]
Join condition: None

(67) Project
Output [6]: [c_custkey#X, c_name#X, o_orderkey#X, o_totalprice#X, o_orderdate#X, l_quantity#X]
Input [7]: [c_custkey#X, c_name#X, o_orderkey#X, o_totalprice#X, o_orderdate#X, l_orderkey#X, l_quantity#X]

(68) HashAggregate
Input [6]: [c_custkey#X, c_name#X, o_orderkey#X, o_totalprice#X, o_orderdate#X, l_quantity#X]
Keys [5]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X]
Functions [1]: [partial_sum(l_quantity#X)]
Aggregate Attributes [2]: [sum#X, isEmpty#X]
Results [7]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum#X, isEmpty#X]

(69) HashAggregate
Input [7]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum#X, isEmpty#X]
Keys [5]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X]
Functions [1]: [sum(l_quantity#X)]
Aggregate Attributes [1]: [sum(l_quantity#X)#X]
Results [6]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum(l_quantity#X)#X AS sum(l_quantity)#X]

(70) TakeOrderedAndProject
Input [6]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum(l_quantity)#X]
Arguments: 100, [o_totalprice#X DESC NULLS LAST, o_orderdate#X ASC NULLS FIRST], [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum(l_quantity)#X]

(71) AdaptiveSparkPlan
Output [6]: [c_name#X, c_custkey#X, o_orderkey#X, o_orderdate#X, o_totalprice#X, sum(l_quantity)#X]
Arguments: isFinalPlan=true