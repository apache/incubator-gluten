# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Gluten Unit Tests Suite

on:
  pull_request

jobs:
  arrow-backend-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: sudo swapoff -a
      - run: free
      - run: sudo apt-get update
      - run: sudo apt-get install cmake ccache
      - run: sudo apt-get install libboost-all-dev libcurl4-openssl-dev
      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ github.job }}-ccache
          restore-keys: |
            ${{ github.job }}-ccache
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install Googletest
        run: |
          sudo apt-get install libgtest-dev
          cd /usr/src/gtest
          sudo cmake CMakeLists.txt -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr/local
          sudo make
          sudo apt-get install google-mock
      - name: Install OAP optimized Arrow (C++ libs)
        run: |
          bash tools/build_arrow.sh --build_arrow=ON
          mvn clean package -DskipTests -Dcheckstyle.skip -Dbuild_cpp=ON -Dbuild_gazelle_cpp=ON -Darrow_root=/tmp/arrow_install.8
      - name: Run unit tests
        run: |
          cd cpp/
          mkdir -p build
          cd build
          cmake .. -DBUILD_ARROW=0 -DTESTS=1
          make

#  velox-backend-test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - run: sudo swapoff -a
#      - run: free
#      - run: sudo apt-get update
#      - run: sudo apt-get install cmake ccache
#      - run: sudo apt-get install libboost-all-dev
#      - name: Install Googletest
#        run: |
#          sudo apt-get install libgtest-dev
#          cd /usr/src/gtest
#          sudo cmake CMakeLists.txt -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr/local
#          sudo make
#          sudo apt-get install google-mock
#      - name: Install Velox
#        run: |
#          cd /tmp
#          git clone https://github.com/oap-project/velox
#          cd velox
#          sudo bash scripts/setup-ubuntu.sh
#          make VELOX_BUILD_MINIMAL=1  MAX_HIGH_MEM_JOBS=8 TREAT_WARNINGS_AS_ERRORS=0 MAX_LINK_JOBS=8
#      - name: Run unit tests
#        run: |
#          cd cpp/
#          mkdir -p build
#          cd build
#          cmake .. -DBUILD_ARROW=0 -DTESTS=1
#          make


  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run clang-format style check for C/C++ programs.
      uses: jidicula/clang-format-action@v3.5.1
      with:
        clang-format-version: '10'
        check-path: 'gluten/cpp/src'
        fallback-style: 'Google' # optional
