# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Velox backend

on:
  issue_comment:
    types: [created]

  pull_request:
    paths:
      - '.github/**'
      - 'pom.xml'
      - 'backends-velox/**'
      - 'gluten-core/**'
      - 'gluten-data/**'
      - 'gluten-ut/**'
      - 'shims/**'
      - 'tools/gluten-it/**'
      - 'tools/gluten-te/**'
      - 'ep/build-arrow/**'
      - 'ep/build-velox/**'
      - 'cpp/*'
      - 'cpp/CMake/**'
      - 'cpp/velox/**'
      - 'cpp/core/**'
#      - 'substrait/substrait-spark/**'


concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  velox-backend-ubuntu2004-test:
    if: ${{ (github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/test Velox backend')) || github.event_name == 'pull_request' }}
    runs-on: velox-self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Setup docker container
        run: |
          EXTRA_DOCKER_OPTIONS="--name velox-backend-ubuntu2004-test-$GITHUB_RUN_ID -e NUM_THREADS=30 --detach" \
          NON_INTERACTIVE=ON \
          MOUNT_MAVEN_CACHE=OFF \
          OS_IMAGE=ubuntu:20.04 \
          tools/gluten-te/ubuntu/cbash.sh sleep 14400
      - name: Setup maven cache
        run: |
          docker cp ~/.m2/repository velox-backend-ubuntu2004-test-$GITHUB_RUN_ID:/root/.m2/
      - name: Build Gluten Velox-backend third party
        run: |
          docker exec velox-backend-ubuntu2004-test-$GITHUB_RUN_ID bash -c '
          cd /opt/gluten/ep/build-arrow/src && \
          ./get_arrow.sh  && \
          ./build_arrow.sh --build_tests=ON --build_benchmarks=ON && \
          cd /opt/gluten/ep/build-velox/src && \
          ./get_velox.sh && \
          ./build_velox.sh --build_benchmarks=ON'
      - name: Build Gluten CPP library
        run: |
          docker exec velox-backend-ubuntu2004-test-$GITHUB_RUN_ID bash -c '
          cd /opt/gluten/cpp && \
          mkdir build && cd build && cmake -DBUILD_TESTS=ON -DBUILD_BENCHMARKS=ON .. && make -j'
      - name: Build for Spark 3.2.0
        run: |
          docker exec velox-backend-ubuntu2004-test-$GITHUB_RUN_ID bash -c '
          cd /opt/gluten && \
          mvn clean install -Pspark-3.2 -Pbackends-velox -DskipTests -Dspark32.version=3.2.0'
      - name: Build for Spark 3.2.1
        run: |
          docker exec velox-backend-ubuntu2004-test-$GITHUB_RUN_ID bash -c '
          cd /opt/gluten && \
          mvn clean install -Pspark-3.2 -Pbackends-velox -DskipTests -Dspark32.version=3.2.1'
      - name: Build and run unit test for Spark 3.2.2(other tests)
        run: |
          docker exec velox-backend-ubuntu2004-test-$GITHUB_RUN_ID bash -c '
          cd /opt/gluten && \
          mvn clean install -Pspark-3.2 -Pspark-ut -Pbackends-velox -DargLine="-Dspark.test.home=/opt/spark322" -DtagsToExclude=org.apache.spark.tags.ExtendedSQLTest'
      - name: Run CPP unit test
        run: |
          docker exec velox-backend-ubuntu2004-test-$GITHUB_RUN_ID bash -c 'cd /opt/gluten/cpp/build && \
          ctest -V -E OrcTest'
      # Cpp micro benchmarks will use generated files from unit test in backends-velox module.
      - name: Run micro benchmarks
        run: |
          docker exec velox-backend-ubuntu2004-test-$GITHUB_RUN_ID bash -c 'cd /opt/gluten/cpp/build/velox/benchmarks && \
          ./generic_benchmark --threads 1 --iterations 1'
      - name: Run HBM CPP unit test
        run: |
          docker exec velox-backend-ubuntu2004-test-$GITHUB_RUN_ID bash -c 'cd /opt/gluten/cpp/build && \
          cmake -DBUILD_TESTS=ON -DENABLE_HBM=ON .. && \
          cmake --build . --target hbw_allocator_test -- -j && \
          ctest -V -R TestHbw'
      - name: Exit docker container
        if: ${{ always() }}
        run: |
          docker stop velox-backend-ubuntu2004-test-$GITHUB_RUN_ID || true

