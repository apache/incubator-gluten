-- Automatically generated by GlutenSqlLogicTestSuite
-- Number of queries: 3356


-- !query
DROP DATABASE IF EXISTS mydb1 CASCADE
-- !query schema
struct<>
-- !query output



-- !query
CREATE DATABASE mydb1
-- !query schema
struct<>
-- !query output



-- !query
USE mydb1
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t1
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t2
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t1(a int, b int, c int, d int, e int) USING PARQUET
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(NULL,102,NULL,101,104)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(107,106,108,109,105)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(110,114,112,NULL,113)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(116,119,117,115,NULL)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(123,122,124,NULL,121)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(127,128,129,126,125)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(132,134,131,133,130)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(138,136,139,135,137)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(144,141,140,142,143)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(145,149,146,NULL,147)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(151,150,153,NULL,NULL)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(155,157,159,NULL,158)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(161,160,163,164,162)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(167,NULL,168,165,166)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(171,170,172,173,174)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(177,176,179,NULL,175)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(181,180,182,183,184)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(187,188,186,189,185)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(190,194,193,192,191)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(199,197,198,196,195)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(NULL,202,203,201,204)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(208,NULL,NULL,206,207)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(214,210,213,212,211)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(218,215,216,217,219)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(223,221,222,220,224)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(226,227,228,229,225)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(234,231,232,230,233)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(237,236,239,NULL,238)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(NULL,244,240,243,NULL)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(246,248,247,249,245)
-- !query schema
struct<>
-- !query output



-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1020
1060
1140
1190
1220
1280
1340
1360
1410
1490
1500
1570
1600
1700
354
362
374
380
398
428
436
446
452
468
474
492
NULL
NULL
NULL
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL
NULL
NULL
NULL
354
362
374
380
398
428
436
446
452
468
474
492
1020
1060
1140
1190
1220
1280
1340
1360
1410
1490
1500
1570
1600
1700


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1604	107.0
1899	127.0
1975	132.0
2052	137.0
2129	142.0
2436	162.0
2589	172.0
2739	182.0
2802	187.0
2880	192.0
2946	197.0
3176	212.0
3259	217.0
3331	222.0
3405	227.0
3477	232.0
3704	247.0
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
1604	107.0
1899	127.0
1975	132.0
2052	137.0
2129	142.0
2436	162.0
2589	172.0
2739	182.0
2802	187.0
2880	192.0
2946	197.0
3176	212.0
3259	217.0
3331	222.0
3405	227.0
3477	232.0
3704	247.0


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       (a+b+c+d+e)/5,
       a+b*2+c*3
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int>
-- !query output
1604	333	2	107.0	643
1899	222	1	127.0	770
1975	222	3	132.0	793
2436	333	3	162.0	970
2802	222	2	187.0	1121
2880	111	1	192.0	1157
2946	333	1	197.0	1187
3176	444	3	212.0	1273
3405	222	1	227.0	1364
3704	222	1	247.0	1483


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       (a+b+c+d+e)/5,
       a+b*2+c*3
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,4
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int>
-- !query output
2880	111	1	192.0	1157
1899	222	1	127.0	770
1975	222	3	132.0	793
2802	222	2	187.0	1121
3405	222	1	227.0	1364
3704	222	1	247.0	1483
1604	333	2	107.0	643
2436	333	3	162.0	970
2946	333	1	197.0	1187
3176	444	3	212.0	1273


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       (a+b+c+d+e)/5,
       a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int>
-- !query output
1604	333	2	107.0	643
1899	222	1	127.0	770
1975	222	3	132.0	793
2436	333	3	162.0	970
2802	222	2	187.0	1121
2880	111	1	192.0	1157
2946	333	1	197.0	1187
3176	444	3	212.0	1273
3405	222	1	227.0	1364
3704	222	1	247.0	1483


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       (a+b+c+d+e)/5,
       a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
 ORDER BY 3,2,5,1,4
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int>
-- !query output
2880	111	1	192.0	1157
1899	222	1	127.0	770
3405	222	1	227.0	1364
3704	222	1	247.0	1483
2946	333	1	197.0	1187
2802	222	2	187.0	1121
1604	333	2	107.0	643
1975	222	3	132.0	793
2436	333	3	162.0	970
3176	444	3	212.0	1273


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       (a+b+c+d+e)/5,
       a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int>
-- !query output
1604	333	2	107.0	643
1899	222	1	127.0	770
1975	222	3	132.0	793
2436	333	3	162.0	970
2802	222	2	187.0	1121
2880	111	1	192.0	1157
2946	333	1	197.0	1187
3176	444	3	212.0	1273
3405	222	1	227.0	1364
3704	222	1	247.0	1483


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       (a+b+c+d+e)/5,
       a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,2,1,5
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int>
-- !query output
2880	111	1	192.0	1157
1899	222	1	127.0	770
3405	222	1	227.0	1364
3704	222	1	247.0	1483
2946	333	1	197.0	1187
2802	222	2	187.0	1121
1604	333	2	107.0	643
1975	222	3	132.0	793
2436	333	3	162.0	970
3176	444	3	212.0	1273


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       e,
       d,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,d:int,(a + (b * 2)):int>
-- !query output
110	NULL	113	NULL	338
145	NULL	147	NULL	443
190	1925	191	192	578


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       e,
       d,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 4,2,3,5
-- !query schema
struct<a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,d:int,(a + (b * 2)):int>
-- !query output
110	NULL	113	NULL	338
145	NULL	147	NULL	443
190	1925	191	192	578


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1079	333	1604
1165	222	NULL
1274	222	1899
1325	222	1975
1367	333	2052
1414	444	2129
1626	333	2436
1719	333	2589
1819	333	2739
1877	222	2802
1925	111	2880
1971	333	2946
2121	444	3176
2164	444	3259
2211	333	3331
2280	222	3405
2312	444	3477
2479	222	3704
NULL	111	NULL
NULL	111	NULL
NULL	222	NULL
NULL	333	NULL
NULL	333	NULL
NULL	333	NULL
NULL	333	NULL
NULL	444	NULL
NULL	444	NULL
NULL	444	NULL
NULL	444	NULL
NULL	444	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 1,2,3
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	111	NULL
NULL	111	NULL
NULL	222	NULL
NULL	333	NULL
NULL	333	NULL
NULL	333	NULL
NULL	333	NULL
NULL	444	NULL
NULL	444	NULL
NULL	444	NULL
NULL	444	NULL
NULL	444	NULL
1079	333	1604
1165	222	NULL
1274	222	1899
1325	222	1975
1367	333	2052
1414	444	2129
1626	333	2436
1719	333	2589
1819	333	2739
1877	222	2802
1925	111	2880
1971	333	2946
2121	444	3176
2164	444	3259
2211	333	3331
2280	222	3405
2312	444	3477
2479	222	3704


-- !query
SELECT b,
       a+b*2+c*3,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
   AND b>c
-- !query schema
struct<b:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT b,
       a+b*2+c*3,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
   AND b>c
 ORDER BY 3,2
-- !query schema
struct<b:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT b,
       a+b*2+c*3,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<b:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT b,
       a+b*2+c*3,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,3,1
-- !query schema
struct<b:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT b,
       a+b*2+c*3,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
   AND b>c
-- !query schema
struct<b:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT b,
       a+b*2+c*3,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
   AND b>c
 ORDER BY 1,2
-- !query schema
struct<b:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT b,
       a+b*2+c*3,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
   AND (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
-- !query schema
struct<b:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT b,
       a+b*2+c*3,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
   AND (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
 ORDER BY 4,2
-- !query schema
struct<b:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT e,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d>e
-- !query schema
struct<e:int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int>
-- !query output
105	107	1060	107.0	4
125	127	1280	127.0	1
130	132	1340	132.0	3
137	138	1360	137.0	-2
143	144	1410	142.0	-1
162	161	1600	162.0	2
166	167	NULL	NULL	-1
185	187	374	187.0	4
191	190	380	192.0	1
195	199	398	197.0	1
204	NULL	NULL	NULL	-3
211	214	428	212.0	1
224	223	446	222.0	-4
225	226	452	227.0	4
233	234	468	232.0	-3
245	246	492	247.0	4
NULL	116	1190	NULL	NULL
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT e,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d>e
 ORDER BY 3,1,5,2,4
-- !query schema
struct<e:int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int>
-- !query output
NULL	NULL	NULL	NULL	NULL
166	167	NULL	NULL	-1
204	NULL	NULL	NULL	-3
185	187	374	187.0	4
191	190	380	192.0	1
195	199	398	197.0	1
211	214	428	212.0	1
224	223	446	222.0	-4
225	226	452	227.0	4
233	234	468	232.0	-3
245	246	492	247.0	4
105	107	1060	107.0	4
NULL	116	1190	NULL	NULL
125	127	1280	127.0	1
130	132	1340	132.0	3
137	138	1360	137.0	-2
143	144	1410	142.0	-1
162	161	1600	162.0	2


-- !query
SELECT e,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       d-e
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<e:int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int>
-- !query output
105	107	1060	107.0	4
125	127	1280	127.0	1
130	132	1340	132.0	3
137	138	1360	137.0	-2
143	144	1410	142.0	-1
162	161	1600	162.0	2
166	167	NULL	NULL	-1
185	187	374	187.0	4
191	190	380	192.0	1
195	199	398	197.0	1
204	NULL	NULL	NULL	-3
211	214	428	212.0	1
224	223	446	222.0	-4
225	226	452	227.0	4
233	234	468	232.0	-3
245	246	492	247.0	4
NULL	116	1190	NULL	NULL
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT e,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       d-e
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 4,1,5,3,2
-- !query schema
struct<e:int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int>
-- !query output
NULL	NULL	NULL	NULL	NULL
NULL	116	1190	NULL	NULL
166	167	NULL	NULL	-1
204	NULL	NULL	NULL	-3
105	107	1060	107.0	4
125	127	1280	127.0	1
130	132	1340	132.0	3
137	138	1360	137.0	-2
143	144	1410	142.0	-1
162	161	1600	162.0	2
185	187	374	187.0	4
191	190	380	192.0	1
195	199	398	197.0	1
211	214	428	212.0	1
224	223	446	222.0	-4
225	226	452	227.0	4
233	234	468	232.0	-3
245	246	492	247.0	4


-- !query
SELECT a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1604
1899
1975
2052
2129
2436
2589
2739
2802
2880
2946
3176
3259
3331
3405
3477
3704
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
1604
1899
1975
2052
2129
2436
2589
2739
2802
2880
2946
3176
3259
3331
3405
3477
3704


-- !query
SELECT d-e
  FROM t1
 WHERE b>c
    OR a>b
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-2
-2
-3
-4
1
1
1
2
3
4
4
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE b>c
    OR a>b
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
-4
-3
-2
-2
-1
-1
-1
1
1
1
2
3
4
4
4


-- !query
SELECT d
  FROM t1
 WHERE a>b
    OR d>e
-- !query schema
struct<d:int>
-- !query output
109
126
133
135
142
164
173
183
189
192
196
212
217
220
229
230
249
NULL
NULL
NULL
NULL


-- !query
SELECT d
  FROM t1
 WHERE a>b
    OR d>e
 ORDER BY 1
-- !query schema
struct<d:int>
-- !query output
NULL
NULL
NULL
NULL
109
126
133
135
142
164
173
183
189
192
196
212
217
220
229
230
249


-- !query
SELECT d
  FROM t1
 WHERE d>e
    OR a>b
-- !query schema
struct<d:int>
-- !query output
109
126
133
135
142
164
173
183
189
192
196
212
217
220
229
230
249
NULL
NULL
NULL
NULL


-- !query
SELECT d
  FROM t1
 WHERE d>e
    OR a>b
 ORDER BY 1
-- !query schema
struct<d:int>
-- !query output
NULL
NULL
NULL
NULL
109
126
133
135
142
164
173
183
189
192
196
212
217
220
229
230
249


-- !query
SELECT abs(a),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE a>b
 ORDER BY 7,3,5,1,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<d:int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
101	NULL	NULL
109	107	1604
115	116	NULL
126	127	1899
133	132	1975
135	138	2052
142	144	2129
164	161	2436
165	167	NULL
173	171	2589
183	181	2739
189	187	2802
192	190	2880
196	199	2946
201	NULL	NULL
206	208	NULL
212	214	3176
217	218	3259
220	223	3331
229	226	3405
230	234	3477
243	NULL	NULL
249	246	3704
NULL	110	NULL
NULL	123	NULL
NULL	145	NULL
NULL	151	NULL
NULL	155	NULL
NULL	177	NULL
NULL	237	NULL


-- !query
SELECT d,
       a,
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 2,3
-- !query schema
struct<d:int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
201	NULL	NULL
101	NULL	NULL
243	NULL	NULL
109	107	1604
NULL	110	NULL
115	116	NULL
NULL	123	NULL
126	127	1899
133	132	1975
135	138	2052
142	144	2129
NULL	145	NULL
NULL	151	NULL
NULL	155	NULL
164	161	2436
165	167	NULL
173	171	2589
NULL	177	NULL
183	181	2739
189	187	2802
192	190	2880
196	199	2946
206	208	NULL
212	214	3176
217	218	3259
220	223	3331
229	226	3405
230	234	3477
NULL	237	NULL
249	246	3704


-- !query
SELECT d-e,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
    OR b>c
-- !query schema
struct<(d - e):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	-1	172.0
-1	-1	182.0
-1	-2	142.0
-1	3	NULL
-1	NULL	NULL
-2	-1	217.0
-3	2	232.0
-3	2	NULL
-3	NULL	NULL
-4	2	222.0
1	1	192.0
1	1	212.0
1	2	197.0
1	3	127.0
2	-1	162.0
3	-2	132.0
4	-1	107.0
4	-1	227.0
4	-2	247.0
4	-3	187.0
NULL	-3	NULL
NULL	2	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT d-e,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
    OR b>c
 ORDER BY 2,1,3
-- !query schema
struct<(d - e):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	NULL
NULL	NULL	NULL
-3	NULL	NULL
-1	NULL	NULL
NULL	-3	NULL
4	-3	187.0
-1	-2	142.0
3	-2	132.0
4	-2	247.0
-2	-1	217.0
-1	-1	172.0
-1	-1	182.0
2	-1	162.0
4	-1	107.0
4	-1	227.0
1	1	192.0
1	1	212.0
NULL	2	NULL
-4	2	222.0
-3	2	NULL
-3	2	232.0
1	2	197.0
-1	3	NULL
1	3	127.0


-- !query
SELECT d-e,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(d - e):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	-1	172.0
-1	-1	182.0
-1	-2	142.0
-1	3	NULL
-1	NULL	NULL
-2	-1	217.0
-3	2	232.0
-3	2	NULL
-3	NULL	NULL
-4	2	222.0
1	1	192.0
1	1	212.0
1	2	197.0
1	3	127.0
2	-1	162.0
3	-2	132.0
4	-1	107.0
4	-1	227.0
4	-2	247.0
4	-3	187.0
NULL	-3	NULL
NULL	2	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT d-e,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,1,3
-- !query schema
struct<(d - e):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	NULL
NULL	NULL	NULL
-3	NULL	NULL
-1	NULL	NULL
NULL	-3	NULL
4	-3	187.0
-1	-2	142.0
3	-2	132.0
4	-2	247.0
-2	-1	217.0
-1	-1	172.0
-1	-1	182.0
2	-1	162.0
4	-1	107.0
4	-1	227.0
1	1	192.0
1	1	212.0
NULL	2	NULL
-4	2	222.0
-3	2	NULL
-3	2	232.0
1	2	197.0
-1	3	NULL
1	3	127.0


-- !query
SELECT d-e,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
    OR d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(d - e):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	-1	172.0
-1	-1	182.0
-1	-2	142.0
-1	3	NULL
-1	NULL	NULL
-2	-1	217.0
-3	2	232.0
-3	2	NULL
-3	NULL	NULL
-4	2	222.0
1	1	192.0
1	1	212.0
1	2	197.0
1	3	127.0
2	-1	162.0
3	-2	132.0
4	-1	107.0
4	-1	227.0
4	-2	247.0
4	-3	187.0
NULL	-3	NULL
NULL	2	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT d-e,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
    OR d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,3,1
-- !query schema
struct<(d - e):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	NULL
NULL	NULL	NULL
-3	NULL	NULL
-1	NULL	NULL
NULL	-3	NULL
4	-3	187.0
3	-2	132.0
-1	-2	142.0
4	-2	247.0
4	-1	107.0
2	-1	162.0
-1	-1	172.0
-1	-1	182.0
-2	-1	217.0
4	-1	227.0
1	1	192.0
1	1	212.0
NULL	2	NULL
-3	2	NULL
1	2	197.0
-4	2	222.0
-3	2	232.0
-1	3	NULL
1	3	127.0


-- !query
SELECT d-e,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR b>c
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(d - e):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	-1	172.0
-1	-1	182.0
-1	-2	142.0
-1	3	NULL
-1	NULL	NULL
-2	-1	217.0
-3	2	232.0
-3	2	NULL
-3	NULL	NULL
-4	2	222.0
1	1	192.0
1	1	212.0
1	2	197.0
1	3	127.0
2	-1	162.0
3	-2	132.0
4	-1	107.0
4	-1	227.0
4	-2	247.0
4	-3	187.0
NULL	-3	NULL
NULL	2	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT d-e,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR b>c
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1,2
-- !query schema
struct<(d - e):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	NULL
NULL	NULL	NULL
NULL	-3	NULL
NULL	2	NULL
-4	2	222.0
-3	NULL	NULL
-3	2	232.0
-3	2	NULL
-2	-1	217.0
-1	NULL	NULL
-1	-2	142.0
-1	-1	172.0
-1	-1	182.0
-1	3	NULL
1	1	192.0
1	1	212.0
1	2	197.0
1	3	127.0
2	-1	162.0
3	-2	132.0
4	-3	187.0
4	-2	247.0
4	-1	227.0
4	-1	107.0


-- !query
SELECT a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c,
       (a+b+c+d+e)/5,
       d-e,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,c:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1027	1700	172	172.0	-1	2589
1066	354	179	NULL	NULL	NULL
1087	362	182	182.0	-1	2739
1121	374	186	187.0	4	2802
1157	380	193	192.0	1	2880
1187	398	198	197.0	1	2946
1273	428	213	212.0	1	3176
1296	436	216	217.0	-2	3259
1331	446	222	222.0	-4	3331
1364	452	228	227.0	4	3405
1392	468	232	232.0	-3	3477
1426	474	239	NULL	NULL	NULL
1483	492	247	247.0	4	3704
643	1060	108	107.0	4	1604
674	1140	112	NULL	NULL	NULL
705	1190	117	NULL	NULL	NULL
739	1220	124	NULL	NULL	NULL
770	1280	129	127.0	1	1899
793	1340	131	132.0	3	1975
827	1360	139	137.0	-2	2052
846	1410	140	142.0	-1	2129
881	1490	146	NULL	NULL	NULL
910	1500	153	NULL	NULL	NULL
946	1570	159	NULL	NULL	NULL
970	1600	163	162.0	2	2436
NULL	1020	NULL	NULL	-3	NULL
NULL	NULL	168	NULL	-1	NULL
NULL	NULL	203	NULL	-3	NULL
NULL	NULL	240	NULL	NULL	NULL
NULL	NULL	NULL	NULL	-1	NULL


-- !query
SELECT a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c,
       (a+b+c+d+e)/5,
       d-e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 4,5
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,c:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
674	1140	112	NULL	NULL	NULL
705	1190	117	NULL	NULL	NULL
946	1570	159	NULL	NULL	NULL
1426	474	239	NULL	NULL	NULL
739	1220	124	NULL	NULL	NULL
881	1490	146	NULL	NULL	NULL
1066	354	179	NULL	NULL	NULL
NULL	NULL	240	NULL	NULL	NULL
910	1500	153	NULL	NULL	NULL
NULL	NULL	203	NULL	-3	NULL
NULL	1020	NULL	NULL	-3	NULL
NULL	NULL	168	NULL	-1	NULL
NULL	NULL	NULL	NULL	-1	NULL
643	1060	108	107.0	4	1604
770	1280	129	127.0	1	1899
793	1340	131	132.0	3	1975
827	1360	139	137.0	-2	2052
846	1410	140	142.0	-1	2129
970	1600	163	162.0	2	2436
1027	1700	172	172.0	-1	2589
1087	362	182	182.0	-1	2739
1121	374	186	187.0	4	2802
1157	380	193	192.0	1	2880
1187	398	198	197.0	1	2946
1273	428	213	212.0	1	3176
1296	436	216	217.0	-2	3259
1331	446	222	222.0	-4	3331
1364	452	228	227.0	4	3405
1392	468	232	232.0	-3	3477
1483	492	247	247.0	4	3704


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       b-c,
       c
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       b-c,
       c
  FROM t1
 WHERE c>d
 ORDER BY 1,5,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	107.0
1626	162.0
1877	187.0
1925	192.0
1971	197.0
2121	212.0
2280	227.0
2479	247.0


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	107.0
1626	162.0
1877	187.0
1925	192.0
1971	197.0
2121	212.0
2280	227.0
2479	247.0


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND d>e
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	107.0
1626	162.0
1877	187.0
1925	192.0
1971	197.0
2121	212.0
2280	227.0
2479	247.0


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND d>e
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	107.0
1626	162.0
1877	187.0
1925	192.0
1971	197.0
2121	212.0
2280	227.0
2479	247.0


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
   AND d>e
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	107.0
1626	162.0
1877	187.0
1925	192.0
1971	197.0
2121	212.0
2280	227.0
2479	247.0


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
   AND d>e
 ORDER BY 1,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	107.0
1626	162.0
1877	187.0
1925	192.0
1971	197.0
2121	212.0
2280	227.0
2479	247.0


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c,
       b,
       abs(a),
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c,
       b,
       abs(a),
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
   AND a>b
 ORDER BY 5,1,3,4,2,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c,
       b,
       abs(a),
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c,
       b,
       abs(a),
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 6,5,1,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c,
       b,
       abs(a),
       a-b
  FROM t1
 WHERE a>b
   AND d NOT BETWEEN 110 AND 150
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c,
       b,
       abs(a),
       a-b
  FROM t1
 WHERE a>b
   AND d NOT BETWEEN 110 AND 150
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2,3,4,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c,
       b,
       abs(a),
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c,
       b,
       abs(a),
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
 ORDER BY 4,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       d,
       c-d,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
-- !query schema
struct<(a - b):int,d:int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	126	3	1274	111
-1	189	-3	1877	111
-1	229	-1	2280	111
-2	133	-2	1325	333
-2	249	-2	2479	222
-3	115	2	1165	222
-4	192	1	1925	444
-4	NULL	NULL	NULL	222
-4	NULL	NULL	NULL	555
1	109	-1	1079	222
1	164	-1	1626	444
1	173	-1	1719	222
1	183	-1	1819	222
2	196	2	1971	555
2	220	2	2211	444
3	142	-2	1414	555
3	217	-1	2164	444
3	230	2	2312	555
4	212	1	2121	555
NULL	201	2	NULL	555
NULL	243	-3	NULL	555


-- !query
SELECT a-b,
       d,
       c-d,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
 ORDER BY 3,5,1,2
-- !query schema
struct<(a - b):int,d:int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-4	NULL	NULL	NULL	222
-4	NULL	NULL	NULL	555
-1	189	-3	1877	111
NULL	243	-3	NULL	555
-2	249	-2	2479	222
-2	133	-2	1325	333
3	142	-2	1414	555
-1	229	-1	2280	111
1	109	-1	1079	222
1	173	-1	1719	222
1	183	-1	1819	222
1	164	-1	1626	444
3	217	-1	2164	444
-4	192	1	1925	444
4	212	1	2121	555
-3	115	2	1165	222
2	220	2	2211	444
NULL	201	2	NULL	555
2	196	2	1971	555
3	230	2	2312	555
-1	126	3	1274	111


-- !query
SELECT a-b,
       d,
       c-d,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
-- !query schema
struct<(a - b):int,d:int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	126	3	1274	111
-1	189	-3	1877	111
-1	229	-1	2280	111
-2	133	-2	1325	333
-2	249	-2	2479	222
-3	115	2	1165	222
-4	192	1	1925	444
-4	NULL	NULL	NULL	222
-4	NULL	NULL	NULL	555
1	109	-1	1079	222
1	164	-1	1626	444
1	173	-1	1719	222
1	183	-1	1819	222
2	196	2	1971	555
2	220	2	2211	444
3	142	-2	1414	555
3	217	-1	2164	444
3	230	2	2312	555
4	212	1	2121	555
NULL	201	2	NULL	555
NULL	243	-3	NULL	555


-- !query
SELECT a-b,
       d,
       c-d,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
 ORDER BY 5,1,3
-- !query schema
struct<(a - b):int,d:int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	189	-3	1877	111
-1	229	-1	2280	111
-1	126	3	1274	111
-4	NULL	NULL	NULL	222
-3	115	2	1165	222
-2	249	-2	2479	222
1	173	-1	1719	222
1	183	-1	1819	222
1	109	-1	1079	222
-2	133	-2	1325	333
-4	192	1	1925	444
1	164	-1	1626	444
2	220	2	2211	444
3	217	-1	2164	444
NULL	243	-3	NULL	555
NULL	201	2	NULL	555
-4	NULL	NULL	NULL	555
2	196	2	1971	555
3	142	-2	1414	555
3	230	2	2312	555
4	212	1	2121	555


-- !query
SELECT d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       a+b*2+c*3+d*4,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int>
-- !query output
-1	222	NULL	NULL	NULL
-1	555	426	1414	1
-2	222	410	1367	-3
-3	555	696	2312	-1
-3	555	NULL	NULL	-1
-4	444	665	2211	-1
1	111	383	1274	-1
1	555	593	1971	-1
3	333	400	1325	3
4	111	563	1877	2
4	222	742	2479	1
NULL	222	354	1165	2
NULL	555	NULL	NULL	4


-- !query
SELECT d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       a+b*2+c*3+d*4,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 3,1,4
-- !query schema
struct<(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int>
-- !query output
NULL	555	NULL	NULL	4
-3	555	NULL	NULL	-1
-1	222	NULL	NULL	NULL
NULL	222	354	1165	2
1	111	383	1274	-1
3	333	400	1325	3
-2	222	410	1367	-3
-1	555	426	1414	1
4	111	563	1877	2
1	555	593	1971	-1
-4	444	665	2211	-1
-3	555	696	2312	-1
4	222	742	2479	1


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c)
  FROM t1
 ORDER BY 3,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       b,
       abs(a),
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs(a):int,a:int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       b,
       abs(a),
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
 ORDER BY 3,2,4,5
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs(a):int,a:int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       b,
       abs(a),
       a
  FROM t1
 WHERE b>c
   AND e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs(a):int,a:int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       b,
       abs(a),
       a
  FROM t1
 WHERE b>c
   AND e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2,4
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs(a):int,a:int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       b,
       abs(a),
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs(a):int,a:int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       b,
       abs(a),
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 5,1,4,3,2
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs(a):int,a:int>
-- !query output



-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       c,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       c,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,5,4,7,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       c,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       c,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
 ORDER BY 4,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       c,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       c,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
   AND d>e
 ORDER BY 5,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       b
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<a:int,(((((a + b) + c) + d) + e) / 5):double,b:int>
-- !query output
127	127.0	128
190	192.0	194
199	197.0	197
214	212.0	210
223	222.0	221
234	232.0	231
NULL	NULL	202


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       b
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,3
-- !query schema
struct<a:int,(((((a + b) + c) + d) + e) / 5):double,b:int>
-- !query output
NULL	NULL	202
127	127.0	128
190	192.0	194
199	197.0	197
214	212.0	210
223	222.0	221
234	232.0	231


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       b
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
-- !query schema
struct<a:int,(((((a + b) + c) + d) + e) / 5):double,b:int>
-- !query output
127	127.0	128
190	192.0	194
199	197.0	197
214	212.0	210
223	222.0	221
234	232.0	231
NULL	NULL	202


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       b
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
 ORDER BY 3,1,2
-- !query schema
struct<a:int,(((((a + b) + c) + d) + e) / 5):double,b:int>
-- !query output
127	127.0	128
190	192.0	194
199	197.0	197
NULL	NULL	202
214	212.0	210
223	222.0	221
234	232.0	231


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
   AND (e>c OR e<d)
-- !query schema
struct<a:int,(((((a + b) + c) + d) + e) / 5):double,b:int>
-- !query output
127	127.0	128
190	192.0	194
199	197.0	197
214	212.0	210
223	222.0	221
234	232.0	231
NULL	NULL	202


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
   AND (e>c OR e<d)
 ORDER BY 2,1
-- !query schema
struct<a:int,(((((a + b) + c) + d) + e) / 5):double,b:int>
-- !query output
NULL	NULL	202
127	127.0	128
190	192.0	194
199	197.0	197
214	212.0	210
223	222.0	221
234	232.0	231


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       d-e,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       d-e,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
 ORDER BY 7,5,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       d-e,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       d-e,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,6,4,5,3,1,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
   AND a>b
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output



-- !query
SELECT a+b*2+c*3,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
   AND a>b
 ORDER BY 2,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output



-- !query
SELECT a+b*2+c*3,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
   AND a>b
   AND (e>a AND e<b)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output



-- !query
SELECT a+b*2+c*3,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
   AND a>b
   AND (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output



-- !query
SELECT a+b*2+c*3,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
   AND a>b
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output



-- !query
SELECT a+b*2+c*3,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
   AND a>b
 ORDER BY 2,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output



-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       d,
       d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,d:int,(d - e):int>
-- !query output



-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       d,
       d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
 ORDER BY 3,1,4,2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,d:int,(d - e):int>
-- !query output



-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       d,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,d:int,(d - e):int>
-- !query output



-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       d,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,2,4
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,d:int,(d - e):int>
-- !query output



-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       d,
       d-e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,d:int,(d - e):int>
-- !query output



-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       d,
       d-e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
 ORDER BY 3,4,1,2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,d:int,(d - e):int>
-- !query output



-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       d,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,d:int,(d - e):int>
-- !query output



-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       d,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,3
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,d:int,(d - e):int>
-- !query output



-- !query
SELECT b-c,
       b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT b-c,
       b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 3,1,2
-- !query schema
struct<(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT b-c,
       b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
   AND a>b
-- !query schema
struct<(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT b-c,
       b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
   AND a>b
 ORDER BY 3,1
-- !query schema
struct<(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT b-c,
       b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
   AND a>b
-- !query schema
struct<(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT b-c,
       b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
   AND a>b
 ORDER BY 1,2,3
-- !query schema
struct<(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT b-c,
       b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT b-c,
       b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,2,3
-- !query schema
struct<(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       e,
       d-e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,e:int,(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	-1	185	4	2802
222	-2	245	4	3704
222	-3	NULL	NULL	NULL
222	-4	147	NULL	NULL
333	-2	130	3	1975
444	-4	191	1	2880
555	-4	113	NULL	NULL
555	3	143	-1	2129
555	NULL	NULL	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       e,
       d-e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE b>c
 ORDER BY 2,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,e:int,(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
555	NULL	NULL	NULL	NULL
555	-4	113	NULL	NULL
222	-4	147	NULL	NULL
444	-4	191	1	2880
222	-3	NULL	NULL	NULL
333	-2	130	3	1975
222	-2	245	4	3704
111	-1	185	4	2802
555	3	143	-1	2129


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444
444
444
444


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       b-c
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       b-c
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 6,5,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a,
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
-- !query schema
struct<(a - b):int,a:int,c:int>
-- !query output
1	107	108
1	161	163
1	171	172
1	181	182
2	199	198
2	223	222
3	144	140
3	218	216
3	234	232
4	214	213


-- !query
SELECT a-b,
       a,
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
 ORDER BY 1,3,2
-- !query schema
struct<(a - b):int,a:int,c:int>
-- !query output
1	107	108
1	161	163
1	171	172
1	181	182
2	199	198
2	223	222
3	144	140
3	218	216
3	234	232
4	214	213


-- !query
SELECT a-b,
       a,
       c
  FROM t1
 WHERE a>b
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(a - b):int,a:int,c:int>
-- !query output
1	107	108
1	161	163
1	171	172
1	181	182
2	199	198
2	223	222
3	144	140
3	218	216
3	234	232
4	214	213


-- !query
SELECT a-b,
       a,
       c
  FROM t1
 WHERE a>b
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,3,1
-- !query schema
struct<(a - b):int,a:int,c:int>
-- !query output
1	107	108
3	144	140
1	161	163
1	171	172
1	181	182
2	199	198
4	214	213
3	218	216
2	223	222
3	234	232


-- !query
SELECT b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       b,
       c-d,
       a+b*2
  FROM t1
-- !query schema
struct<(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,b:int,(c - d):int,(a + (b * 2)):int>
-- !query output
-1	1280	770	128	3	383
-1	398	1187	197	2	593
-1	436	1296	215	-1	648
-1	446	1331	221	2	665
-1	452	1364	227	-1	680
-1	468	1392	231	2	696
-1	NULL	NULL	202	2	NULL
-2	1060	643	106	-1	319
-2	1220	739	122	NULL	367
-2	1570	946	157	NULL	469
-2	1700	1027	170	-1	511
-2	362	1087	180	-1	541
-3	1360	827	136	4	410
-3	1500	910	150	NULL	451
-3	1600	970	160	-1	481
-3	354	1066	176	NULL	529
-3	428	1273	210	1	634
-3	474	1426	236	NULL	709
1	1410	846	141	-2	426
1	380	1157	194	1	578
1	492	1483	248	-2	742
2	1140	674	114	NULL	338
2	1190	705	119	2	354
2	374	1121	188	-3	563
3	1340	793	134	-2	400
3	1490	881	149	NULL	443
4	NULL	NULL	244	-3	NULL
NULL	1020	NULL	102	NULL	NULL
NULL	NULL	NULL	NULL	3	NULL
NULL	NULL	NULL	NULL	NULL	NULL


-- !query
SELECT b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       b,
       c-d,
       a+b*2
  FROM t1
 ORDER BY 4,5,1,2,3
-- !query schema
struct<(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,b:int,(c - d):int,(a + (b * 2)):int>
-- !query output
NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	3	NULL
NULL	1020	NULL	102	NULL	NULL
-2	1060	643	106	-1	319
2	1140	674	114	NULL	338
2	1190	705	119	2	354
-2	1220	739	122	NULL	367
-1	1280	770	128	3	383
3	1340	793	134	-2	400
-3	1360	827	136	4	410
1	1410	846	141	-2	426
3	1490	881	149	NULL	443
-3	1500	910	150	NULL	451
-2	1570	946	157	NULL	469
-3	1600	970	160	-1	481
-2	1700	1027	170	-1	511
-3	354	1066	176	NULL	529
-2	362	1087	180	-1	541
2	374	1121	188	-3	563
1	380	1157	194	1	578
-1	398	1187	197	2	593
-1	NULL	NULL	202	2	NULL
-3	428	1273	210	1	634
-1	436	1296	215	-1	648
-1	446	1331	221	2	665
-1	452	1364	227	-1	680
-1	468	1392	231	2	696
-3	474	1426	236	NULL	709
4	NULL	NULL	244	-3	NULL
1	492	1483	248	-2	742


-- !query
SELECT d-e,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1	1899	111	127	1274
4	1604	222	107	1079


-- !query
SELECT d-e,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 5,2,4
-- !query schema
struct<(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
4	1604	222	107	1079
1	1899	111	127	1274


-- !query
SELECT a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
367
383
410
426
451
481
511
529
541
593
634
648
665
696
709


-- !query
SELECT a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
 ORDER BY 1
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
367
383
410
426
451
481
511
529
541
593
634
648
665
696
709


-- !query
SELECT a+b*2
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
367
383
410
426
451
481
511
529
541
593
634
648
665
696
709


-- !query
SELECT a+b*2
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
367
383
410
426
451
481
511
529
541
593
634
648
665
696
709


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       a,
       d-e,
       b
  FROM t1
 WHERE d>e
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,a:int,(d - e):int,b:int>
-- !query output
111	1899	383	127	1	128
111	2802	563	187	4	188
111	3405	680	226	4	227
222	1604	319	107	4	106
222	3704	742	246	4	248
333	1975	400	132	3	134
444	2436	481	161	2	160
444	2880	578	190	1	194
555	2946	593	199	1	197
555	3176	634	214	1	210


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       a,
       d-e,
       b
  FROM t1
 WHERE d>e
 ORDER BY 6,2,1,4,5,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,a:int,(d - e):int,b:int>
-- !query output
222	1604	319	107	4	106
111	1899	383	127	1	128
333	1975	400	132	3	134
444	2436	481	161	2	160
111	2802	563	187	4	188
444	2880	578	190	1	194
555	2946	593	199	1	197
555	3176	634	214	1	210
111	3405	680	226	4	227
222	3704	742	246	4	248


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b-c,
       abs(a),
       abs(b-c),
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
    OR b>c
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,abs(a):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1899	-1	127	1	127.0	111
1975	3	132	3	132.0	333
2052	-3	138	3	137.0	222
2129	1	144	1	142.0	555
2802	2	187	2	187.0	111
2880	1	190	1	192.0	444
2946	-1	199	1	197.0	555
3331	-1	223	1	222.0	444
3477	-1	234	1	232.0	555
3704	1	246	1	247.0	222
NULL	-1	NULL	1	NULL	555
NULL	2	110	2	NULL	555
NULL	2	116	2	NULL	222
NULL	3	145	3	NULL	222
NULL	4	NULL	4	NULL	555
NULL	NULL	167	NULL	NULL	222


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b-c,
       abs(a),
       abs(b-c),
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
    OR b>c
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,4,5,3
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,abs(a):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	NULL	167	NULL	NULL	222
2052	-3	138	3	137.0	222
NULL	-1	NULL	1	NULL	555
1899	-1	127	1	127.0	111
2946	-1	199	1	197.0	555
3331	-1	223	1	222.0	444
3477	-1	234	1	232.0	555
2129	1	144	1	142.0	555
2880	1	190	1	192.0	444
3704	1	246	1	247.0	222
NULL	2	110	2	NULL	555
NULL	2	116	2	NULL	222
2802	2	187	2	187.0	111
NULL	3	145	3	NULL	222
1975	3	132	3	132.0	333
NULL	4	NULL	4	NULL	555


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b-c,
       abs(a),
       abs(b-c),
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
    OR (e>a AND e<b)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,abs(a):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1899	-1	127	1	127.0	111
1975	3	132	3	132.0	333
2052	-3	138	3	137.0	222
2129	1	144	1	142.0	555
2802	2	187	2	187.0	111
2880	1	190	1	192.0	444
2946	-1	199	1	197.0	555
3331	-1	223	1	222.0	444
3477	-1	234	1	232.0	555
3704	1	246	1	247.0	222
NULL	-1	NULL	1	NULL	555
NULL	2	110	2	NULL	555
NULL	2	116	2	NULL	222
NULL	3	145	3	NULL	222
NULL	4	NULL	4	NULL	555
NULL	NULL	167	NULL	NULL	222


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b-c,
       abs(a),
       abs(b-c),
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
    OR (e>a AND e<b)
 ORDER BY 3,4,6,1,5
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,abs(a):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	-1	NULL	1	NULL	555
NULL	4	NULL	4	NULL	555
NULL	2	110	2	NULL	555
NULL	2	116	2	NULL	222
1899	-1	127	1	127.0	111
1975	3	132	3	132.0	333
2052	-3	138	3	137.0	222
2129	1	144	1	142.0	555
NULL	3	145	3	NULL	222
NULL	NULL	167	NULL	NULL	222
2802	2	187	2	187.0	111
2880	1	190	1	192.0	444
2946	-1	199	1	197.0	555
3331	-1	223	1	222.0	444
3477	-1	234	1	232.0	555
3704	1	246	1	247.0	222


-- !query
SELECT e,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
113	NULL	NULL
125	1274	1899
130	1325	1975
137	1367	2052
143	1414	2129
147	NULL	NULL
166	NULL	NULL
185	1877	2802
191	1925	2880
195	1971	2946
204	NULL	NULL
224	2211	3331
233	2312	3477
245	2479	3704
NULL	1165	NULL
NULL	NULL	NULL


-- !query
SELECT e,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	NULL	NULL
113	NULL	NULL
147	NULL	NULL
166	NULL	NULL
204	NULL	NULL
NULL	1165	NULL
125	1274	1899
130	1325	1975
137	1367	2052
143	1414	2129
185	1877	2802
191	1925	2880
195	1971	2946
224	2211	3331
233	2312	3477
245	2479	3704


-- !query
SELECT e,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>a AND e<b)
-- !query schema
struct<e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
113	NULL	NULL
125	1274	1899
130	1325	1975
137	1367	2052
143	1414	2129
147	NULL	NULL
166	NULL	NULL
185	1877	2802
191	1925	2880
195	1971	2946
204	NULL	NULL
224	2211	3331
233	2312	3477
245	2479	3704
NULL	1165	NULL
NULL	NULL	NULL


-- !query
SELECT e,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>a AND e<b)
 ORDER BY 2,1,3
-- !query schema
struct<e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	NULL	NULL
113	NULL	NULL
147	NULL	NULL
166	NULL	NULL
204	NULL	NULL
NULL	1165	NULL
125	1274	1899
130	1325	1975
137	1367	2052
143	1414	2129
185	1877	2802
191	1925	2880
195	1971	2946
224	2211	3331
233	2312	3477
245	2479	3704


-- !query
SELECT (a+b+c+d+e)/5,
       d-e,
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND d>e
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(d - e):int,d:int>
-- !query output
107.0	4	109
162.0	2	164
187.0	4	189
192.0	1	192
197.0	1	196
212.0	1	212
227.0	4	229
247.0	4	249


-- !query
SELECT (a+b+c+d+e)/5,
       d-e,
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND d>e
 ORDER BY 1,2,3
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(d - e):int,d:int>
-- !query output
107.0	4	109
162.0	2	164
187.0	4	189
192.0	1	192
197.0	1	196
212.0	1	212
227.0	4	229
247.0	4	249


-- !query
SELECT (a+b+c+d+e)/5,
       d-e,
       d
  FROM t1
 WHERE d>e
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(d - e):int,d:int>
-- !query output
107.0	4	109
162.0	2	164
187.0	4	189
192.0	1	192
197.0	1	196
212.0	1	212
227.0	4	229
247.0	4	249


-- !query
SELECT (a+b+c+d+e)/5,
       d-e,
       d
  FROM t1
 WHERE d>e
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,3,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(d - e):int,d:int>
-- !query output
192.0	1	192
197.0	1	196
212.0	1	212
162.0	2	164
107.0	4	109
187.0	4	189
227.0	4	229
247.0	4	249


-- !query
SELECT a,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<a:int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	-2	333
110	2	111
116	2	222
123	-2	333
127	-1	222
132	3	222
138	-3	333
144	1	444
145	3	111
151	-3	333
155	-2	222
161	-3	333
167	NULL	444
171	-2	333
177	-3	333
181	-2	333
187	2	222
190	1	111
199	-1	333
208	NULL	444
214	-3	444
218	-1	444
223	-1	333
226	-1	222
234	-1	444
237	-3	333
246	1	222
NULL	-1	444
NULL	4	444
NULL	NULL	444


-- !query
SELECT a,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 1,3
-- !query schema
struct<a:int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	-1	444
NULL	NULL	444
NULL	4	444
107	-2	333
110	2	111
116	2	222
123	-2	333
127	-1	222
132	3	222
138	-3	333
144	1	444
145	3	111
151	-3	333
155	-2	222
161	-3	333
167	NULL	444
171	-2	333
177	-3	333
181	-2	333
187	2	222
190	1	111
199	-1	333
208	NULL	444
214	-3	444
218	-1	444
223	-1	333
226	-1	222
234	-1	444
237	-3	333
246	1	222


-- !query
SELECT abs(b-c),
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       c-d,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<abs((b - c)):int,e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1	125	222	1899	770	3	1274
1	143	444	2129	846	-2	1414
1	191	111	2880	1157	1	1925
1	195	333	2946	1187	2	1971
1	204	444	NULL	NULL	2	NULL
1	219	444	3259	1296	-1	2164
1	224	333	3331	1331	2	2211
1	225	222	3405	1364	-1	2280
1	233	444	3477	1392	2	2312
1	245	222	3704	1483	-2	2479
2	105	333	1604	643	-1	1079
2	113	111	NULL	674	NULL	NULL
2	121	333	NULL	739	NULL	NULL
2	158	222	NULL	946	NULL	NULL
2	174	333	2589	1027	-1	1719
2	184	333	2739	1087	-1	1819
2	185	222	2802	1121	-3	1877
2	NULL	222	NULL	705	2	1165
3	130	222	1975	793	-2	1325
3	137	333	2052	827	4	1367
3	147	111	NULL	881	NULL	NULL
3	162	333	2436	970	-1	1626
3	175	333	NULL	1066	NULL	NULL
3	211	444	3176	1273	1	2121
3	238	333	NULL	1426	NULL	NULL
3	NULL	333	NULL	910	NULL	NULL
4	NULL	444	NULL	NULL	-3	NULL
NULL	104	444	NULL	NULL	NULL	NULL
NULL	166	444	NULL	NULL	3	NULL
NULL	207	444	NULL	NULL	NULL	NULL


-- !query
SELECT abs(b-c),
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 ORDER BY 4,3,1,7,2
-- !query schema
struct<abs((b - c)):int,e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
2	113	111	NULL	674	NULL	NULL
3	147	111	NULL	881	NULL	NULL
2	158	222	NULL	946	NULL	NULL
2	NULL	222	NULL	705	2	1165
2	121	333	NULL	739	NULL	NULL
3	NULL	333	NULL	910	NULL	NULL
3	175	333	NULL	1066	NULL	NULL
3	238	333	NULL	1426	NULL	NULL
NULL	104	444	NULL	NULL	NULL	NULL
NULL	166	444	NULL	NULL	3	NULL
NULL	207	444	NULL	NULL	NULL	NULL
1	204	444	NULL	NULL	2	NULL
4	NULL	444	NULL	NULL	-3	NULL
2	105	333	1604	643	-1	1079
1	125	222	1899	770	3	1274
3	130	222	1975	793	-2	1325
3	137	333	2052	827	4	1367
1	143	444	2129	846	-2	1414
3	162	333	2436	970	-1	1626
2	174	333	2589	1027	-1	1719
2	184	333	2739	1087	-1	1819
2	185	222	2802	1121	-3	1877
1	191	111	2880	1157	1	1925
1	195	333	2946	1187	2	1971
3	211	444	3176	1273	1	2121
1	219	444	3259	1296	-1	2164
1	224	333	3331	1331	2	2211
1	225	222	3405	1364	-1	2280
1	233	444	3477	1392	2	2312
1	245	222	3704	1483	-2	2479


-- !query
SELECT a-b
  FROM t1
 WHERE a>b
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-2
-3
-4
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4
NULL


-- !query
SELECT a-b
  FROM t1
 WHERE a>b
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
-4
-3
-2
-1
-1
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
   AND c>d
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1925


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
   AND c>d
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1925


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND b>c
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1925


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND b>c
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1925


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c>d
   AND b>c
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1925


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c>d
   AND b>c
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1925


-- !query
SELECT a+b*2+c*3
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1066
1087
1121
1157
1187
1273
1296
1331
1364
1392
1426
1483
643
674
705
739
770
793
827
846
881
910
946
970
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
643
674
705
739
770
793
827
846
881
910
946
970
1027
1066
1087
1121
1157
1187
1273
1296
1331
1364
1392
1426
1483


-- !query
SELECT b,
       a+b*2,
       a
  FROM t1
 WHERE b>c
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<b:int,(a + (b * 2)):int,a:int>
-- !query output
188	563	187


-- !query
SELECT b,
       a+b*2,
       a
  FROM t1
 WHERE b>c
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,1,2
-- !query schema
struct<b:int,(a + (b * 2)):int,a:int>
-- !query output
188	563	187


-- !query
SELECT b,
       a+b*2,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND b>c
-- !query schema
struct<b:int,(a + (b * 2)):int,a:int>
-- !query output
188	563	187


-- !query
SELECT b,
       a+b*2,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND b>c
 ORDER BY 1,3
-- !query schema
struct<b:int,(a + (b * 2)):int,a:int>
-- !query output
188	563	187


-- !query
SELECT b,
       a+b*2,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<b:int,(a + (b * 2)):int,a:int>
-- !query output
188	563	187


-- !query
SELECT b,
       a+b*2,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<b:int,(a + (b * 2)):int,a:int>
-- !query output
188	563	187


-- !query
SELECT abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       c-d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       c-d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       c-d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       c-d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 6,1,5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       d-e,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       d-e,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 1,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c),
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c),
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,3,2,5,4,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a+b*2+c*3,
       abs(b-c),
       e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,e:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int>
-- !query output
-1	1364	1	225	111	680
-2	1027	2	174	222	511
-2	1087	2	184	222	541
-2	643	2	105	222	319
-3	970	3	162	444	481
2	1121	2	185	111	563


-- !query
SELECT b-c,
       a+b*2+c*3,
       abs(b-c),
       e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
 ORDER BY 4,1,3,6,2
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,e:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int>
-- !query output
-2	643	2	105	222	319
-3	970	3	162	444	481
-2	1027	2	174	222	511
-2	1087	2	184	222	541
2	1121	2	185	111	563
-1	1364	1	225	111	680


-- !query
SELECT b-c,
       a+b*2+c*3,
       abs(b-c),
       e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,e:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int>
-- !query output
-1	1364	1	225	111	680
-2	1027	2	174	222	511
-2	1087	2	184	222	541
-2	643	2	105	222	319
-3	970	3	162	444	481
2	1121	2	185	111	563


-- !query
SELECT b-c,
       a+b*2+c*3,
       abs(b-c),
       e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,2,3
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,e:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int>
-- !query output
-3	970	3	162	444	481
-2	643	2	105	222	319
-2	1027	2	174	222	511
-2	1087	2	184	222	541
-1	1364	1	225	111	680
2	1121	2	185	111	563


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,a:int>
-- !query output
108	1604	1060	643	107
112	NULL	1140	674	110
117	NULL	1190	705	116
124	NULL	1220	739	123
129	1899	1280	770	127
131	1975	1340	793	132
139	2052	1360	827	138
140	2129	1410	846	144
146	NULL	1490	881	145
153	NULL	1500	910	151
159	NULL	1570	946	155
163	2436	1600	970	161
172	2589	1700	1027	171
179	NULL	354	1066	177
182	2739	362	1087	181
186	2802	374	1121	187
193	2880	380	1157	190
198	2946	398	1187	199
203	NULL	NULL	NULL	NULL
213	3176	428	1273	214
216	3259	436	1296	218
222	3331	446	1331	223
228	3405	452	1364	226
232	3477	468	1392	234
239	NULL	474	1426	237
240	NULL	NULL	NULL	NULL
247	3704	492	1483	246


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 4,5,2,1,3
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,a:int>
-- !query output
203	NULL	NULL	NULL	NULL
240	NULL	NULL	NULL	NULL
108	1604	1060	643	107
112	NULL	1140	674	110
117	NULL	1190	705	116
124	NULL	1220	739	123
129	1899	1280	770	127
131	1975	1340	793	132
139	2052	1360	827	138
140	2129	1410	846	144
146	NULL	1490	881	145
153	NULL	1500	910	151
159	NULL	1570	946	155
163	2436	1600	970	161
172	2589	1700	1027	171
179	NULL	354	1066	177
182	2739	362	1087	181
186	2802	374	1121	187
193	2880	380	1157	190
198	2946	398	1187	199
213	3176	428	1273	214
216	3259	436	1296	218
222	3331	446	1331	223
228	3405	452	1364	226
232	3477	468	1392	234
239	NULL	474	1426	237
247	3704	492	1483	246


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       a-b,
       abs(a),
       d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       a-b,
       abs(a),
       d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 4,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       a-b,
       abs(a),
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       a-b,
       abs(a),
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 3,2,1,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,5,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       abs(a),
       a,
       b-c,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       abs(a),
       a,
       b-c,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 4,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       (a+b+c+d+e)/5,
       c-d,
       abs(a),
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(((((a + b) + c) + d) + e) / 5):double,(c - d):int,abs(a):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
111	222	-1	127.0	3	127	770
222	333	1	107.0	-1	107	643


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       (a+b+c+d+e)/5,
       c-d,
       abs(a),
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 7,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(((((a + b) + c) + d) + e) / 5):double,(c - d):int,abs(a):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
222	333	1	107.0	-1	107	643
111	222	-1	127.0	3	127	770


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1020	NULL
1060	1604
1140	NULL
1190	NULL
1220	NULL
1280	1899
1340	1975
1360	2052
1410	2129
1490	NULL
1500	NULL
1570	NULL
1600	2436
1700	2589
354	NULL
362	2739
374	2802
380	2880
398	2946
428	3176
436	3259
446	3331
452	3405
468	3477
474	NULL
492	3704
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
354	NULL
474	NULL
1020	NULL
1140	NULL
1190	NULL
1220	NULL
1490	NULL
1500	NULL
1570	NULL
1060	1604
1280	1899
1340	1975
1360	2052
1410	2129
1600	2436
1700	2589
362	2739
374	2802
380	2880
398	2946
428	3176
436	3259
446	3331
452	3405
468	3477
492	3704


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       abs(b-c),
       d
  FROM t1
 WHERE b>c
    OR d NOT BETWEEN 110 AND 150
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       abs(b-c),
       d
  FROM t1
 WHERE b>c
    OR d NOT BETWEEN 110 AND 150
    OR d>e
 ORDER BY 2,4,3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       abs(b-c),
       d
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       abs(b-c),
       d
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
    OR b>c
 ORDER BY 1,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       abs(b-c),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       abs(b-c),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
    OR d>e
 ORDER BY 3,4,5,6,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(b - c):int>
-- !query output
-1
-1
-1
-1
-1
-1
-1
-2
-2
-2
-2
-2
-3
-3
-3
-3
-3
-3
1
1
1
2
2
2
3
3
4


-- !query
SELECT b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<(b - c):int>
-- !query output
-3
-3
-3
-3
-3
-3
-2
-2
-2
-2
-2
-1
-1
-1
-1
-1
-1
-1
1
1
1
2
2
2
3
3
4


-- !query
SELECT c,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       abs(b-c),
       b-c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs((b - c)):int,(b - c):int>
-- !query output
108	1079	1604	2	-2


-- !query
SELECT c,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       abs(b-c),
       b-c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,5,2,3
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs((b - c)):int,(b - c):int>
-- !query output
108	1079	1604	2	-2


-- !query
SELECT a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
 ORDER BY 2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 4,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a+b*2,
       c,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	383	129	1274
-1	593	198	1971
-1	648	216	2164
-1	665	222	2211
-1	680	228	2280
-1	696	232	2312
-1	NULL	203	NULL
-2	319	108	1079
-2	367	124	NULL
-2	469	159	NULL
-2	511	172	1719
-2	541	182	1819
-3	410	139	1367
-3	451	153	NULL
-3	481	163	1626
-3	529	179	NULL
-3	634	213	2121
-3	709	239	NULL
1	426	140	1414
1	578	193	1925
1	742	247	2479
2	338	112	NULL
2	354	117	1165
2	563	186	1877
3	400	131	1325
3	443	146	NULL
4	NULL	240	NULL
NULL	NULL	168	NULL
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT b-c,
       a+b*2,
       c,
       a+b*2+c*3+d*4
  FROM t1
 ORDER BY 3,1
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL
-2	319	108	1079
2	338	112	NULL
2	354	117	1165
-2	367	124	NULL
-1	383	129	1274
3	400	131	1325
-3	410	139	1367
1	426	140	1414
3	443	146	NULL
-3	451	153	NULL
-2	469	159	NULL
-3	481	163	1626
NULL	NULL	168	NULL
-2	511	172	1719
-3	529	179	NULL
-2	541	182	1819
2	563	186	1877
1	578	193	1925
-1	593	198	1971
-1	NULL	203	NULL
-3	634	213	2121
-1	648	216	2164
-1	665	222	2211
-1	680	228	2280
-1	696	232	2312
-3	709	239	NULL
4	NULL	240	NULL
1	742	247	2479


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND d>e
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
333	107.0	319
333	162.0	481


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND d>e
 ORDER BY 1,3,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
333	107.0	319
333	162.0	481


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE d>e
   AND a>b
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
333	107.0	319
333	162.0	481


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE d>e
   AND a>b
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
333	107.0	319
333	162.0	481


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND a>b
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
333	107.0	319
333	162.0	481


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND a>b
 ORDER BY 3,2,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
333	107.0	319
333	162.0	481


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE a>b
   AND (a>b-2 AND a<b+2)
   AND d>e
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
333	107.0	319
333	162.0	481


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE a>b
   AND (a>b-2 AND a<b+2)
   AND d>e
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
333	107.0	319
333	162.0	481


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
222
222
333
444
444
444
444
444
555
555
555
555
555
555
555
555
555
555
555
555


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 ORDER BY 1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
222
222
333
444
444
444
444
444
555
555
555
555
555
555
555
555
555
555
555
555


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b>c
   AND (e>a AND e<b)
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b>c
   AND (e>a AND e<b)
 ORDER BY 3,1,2
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
   AND b>c
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
   AND b>c
 ORDER BY 2,1
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND b>c
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND b>c
 ORDER BY 1,3,2
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 2,1,5,4,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c-d
  FROM t1
-- !query schema
struct<d:int,(c - d):int>
-- !query output
101	NULL
109	-1
115	2
126	3
133	-2
135	4
142	-2
164	-1
165	3
173	-1
183	-1
189	-3
192	1
196	2
201	2
206	NULL
212	1
217	-1
220	2
229	-1
230	2
243	-3
249	-2
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT d,
       c-d
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<d:int,(c - d):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
101	NULL
206	NULL
189	-3
243	-3
133	-2
142	-2
249	-2
109	-1
164	-1
173	-1
183	-1
217	-1
229	-1
192	1
212	1
115	2
196	2
201	2
220	2
230	2
126	3
165	3
135	4


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e
  FROM t1
 WHERE b>c
   AND d>e
-- !query schema
struct<e:int>
-- !query output
130
185
191
245


-- !query
SELECT e
  FROM t1
 WHERE b>c
   AND d>e
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
130
185
191
245


-- !query
SELECT abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<abs(a):int>
-- !query output
107
116
144
161
171
181
187
190
199
214
218
223
226
234
246
NULL


-- !query
SELECT abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<abs(a):int>
-- !query output
NULL
107
116
144
161
171
181
187
190
199
214
218
223
226
234
246


-- !query
SELECT d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
1
2
4
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
1
2
4
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
1
2
4
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
1
2
4
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
1
2
4
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
1
2
4
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
1
2
4
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
1
2
4
4
4


-- !query
SELECT e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
-- !query schema
struct<e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
105	1060
113	1140
125	1280
130	1340
143	1410
147	1490
162	1600
174	1700
184	362
185	374
191	380
195	398
204	NULL
211	428
219	436
224	446
225	452
233	468
245	492


-- !query
SELECT e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
 ORDER BY 1,2
-- !query schema
struct<e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
105	1060
113	1140
125	1280
130	1340
143	1410
147	1490
162	1600
174	1700
184	362
185	374
191	380
195	398
204	NULL
211	428
219	436
224	446
225	452
233	468
245	492


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
 ORDER BY 3,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a,
       d,
       (a+b+c+d+e)/5,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a,
       d,
       (a+b+c+d+e)/5,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       abs(b-c),
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
    OR a>b
-- !query schema
struct<a:int,abs((b - c)):int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int>
-- !query output
107	2	1	1060	-2
110	2	-4	1140	2
123	2	1	1220	-2
138	3	2	1360	-3
144	1	3	1410	1
145	3	-4	1490	3
151	3	1	1500	-3
161	3	1	1600	-3
171	2	1	1700	-2
177	3	1	354	-3
181	2	1	362	-2
190	1	-4	380	1
199	1	2	398	-1
214	3	4	428	-3
218	1	3	436	-1
223	1	2	446	-1
234	1	3	468	-1
237	3	1	474	-3


-- !query
SELECT a,
       abs(b-c),
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
    OR a>b
 ORDER BY 3,1,2
-- !query schema
struct<a:int,abs((b - c)):int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int>
-- !query output
110	2	-4	1140	2
145	3	-4	1490	3
190	1	-4	380	1
107	2	1	1060	-2
123	2	1	1220	-2
151	3	1	1500	-3
161	3	1	1600	-3
171	2	1	1700	-2
177	3	1	354	-3
181	2	1	362	-2
237	3	1	474	-3
138	3	2	1360	-3
199	1	2	398	-1
223	1	2	446	-1
144	1	3	1410	1
218	1	3	436	-1
234	1	3	468	-1
214	3	4	428	-3


-- !query
SELECT a,
       abs(b-c),
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c
  FROM t1
 WHERE a>b
    OR (e>a AND e<b)
-- !query schema
struct<a:int,abs((b - c)):int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int>
-- !query output
107	2	1	1060	-2
110	2	-4	1140	2
123	2	1	1220	-2
138	3	2	1360	-3
144	1	3	1410	1
145	3	-4	1490	3
151	3	1	1500	-3
161	3	1	1600	-3
171	2	1	1700	-2
177	3	1	354	-3
181	2	1	362	-2
190	1	-4	380	1
199	1	2	398	-1
214	3	4	428	-3
218	1	3	436	-1
223	1	2	446	-1
234	1	3	468	-1
237	3	1	474	-3


-- !query
SELECT a,
       abs(b-c),
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c
  FROM t1
 WHERE a>b
    OR (e>a AND e<b)
 ORDER BY 2,4,5,3
-- !query schema
struct<a:int,abs((b - c)):int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int>
-- !query output
190	1	-4	380	1
199	1	2	398	-1
218	1	3	436	-1
223	1	2	446	-1
234	1	3	468	-1
144	1	3	1410	1
181	2	1	362	-2
107	2	1	1060	-2
110	2	-4	1140	2
123	2	1	1220	-2
171	2	1	1700	-2
177	3	1	354	-3
214	3	4	428	-3
237	3	1	474	-3
138	3	2	1360	-3
145	3	-4	1490	3
151	3	1	1500	-3
161	3	1	1600	-3


-- !query
SELECT abs(b-c),
       d-e,
       c-d,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d-e,
       c-d,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
 ORDER BY 1,3,7,2,5,4,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d-e,
       c-d,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d-e,
       c-d,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
 ORDER BY 7,3,4,6,2,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a - b):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	1121
-1	1364
-2	1483
-4	1157
1	1027
1	1087
1	643
1	970
2	1187
2	1331
3	1296
3	1392
4	1273
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a-b,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 1,2
-- !query schema
struct<(a - b):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
-4	1157
-2	1483
-1	1121
-1	1364
1	643
1	970
1	1027
1	1087
2	1187
2	1331
3	1296
3	1392
4	1273


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       a+b*2,
       d-e,
       b
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,(a + (b * 2)):int,(d - e):int,b:int>
-- !query output
111	-1	383	1	128
111	-1	563	4	188
111	-1	680	4	227
222	-2	742	4	248
222	1	319	4	106
333	-2	400	3	134
444	-4	578	1	194
444	1	481	2	160
555	2	593	1	197
555	4	634	1	210


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       a+b*2,
       d-e,
       b
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,2,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,(a + (b * 2)):int,(d - e):int,b:int>
-- !query output
222	1	319	4	106
111	-1	383	1	128
333	-2	400	3	134
444	1	481	2	160
111	-1	563	4	188
444	-4	578	1	194
555	2	593	1	197
555	4	634	1	210
111	-1	680	4	227
222	-2	742	4	248


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       b,
       a+b*2+c*3+d*4,
       abs(a)
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int>
-- !query output
111	222	383	128	1274	127
111	222	563	188	1877	187
111	222	680	227	2280	226
222	111	443	149	NULL	145
222	222	354	119	1165	116
222	222	742	248	2479	246
222	333	319	106	1079	107
222	333	367	122	NULL	123
222	333	410	136	1367	138
222	333	511	170	1719	171
222	333	541	180	1819	181
222	444	NULL	NULL	NULL	167
333	222	400	134	1325	132
444	111	578	194	1925	190
444	333	481	160	1626	161
444	333	665	221	2211	223
444	333	709	236	NULL	237
444	444	648	215	2164	218
555	111	338	114	NULL	110
555	222	469	157	NULL	155
555	333	451	150	NULL	151
555	333	529	176	NULL	177
555	333	593	197	1971	199
555	444	426	141	1414	144
555	444	634	210	2121	214
555	444	696	231	2312	234
555	444	NULL	102	NULL	NULL
555	444	NULL	202	NULL	NULL
555	444	NULL	244	NULL	NULL
555	444	NULL	NULL	NULL	208


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       b,
       a+b*2+c*3+d*4,
       abs(a)
  FROM t1
 ORDER BY 6,5
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int>
-- !query output
555	444	NULL	202	NULL	NULL
555	444	NULL	102	NULL	NULL
555	444	NULL	244	NULL	NULL
222	333	319	106	1079	107
555	111	338	114	NULL	110
222	222	354	119	1165	116
222	333	367	122	NULL	123
111	222	383	128	1274	127
333	222	400	134	1325	132
222	333	410	136	1367	138
555	444	426	141	1414	144
222	111	443	149	NULL	145
555	333	451	150	NULL	151
555	222	469	157	NULL	155
444	333	481	160	1626	161
222	444	NULL	NULL	NULL	167
222	333	511	170	1719	171
555	333	529	176	NULL	177
222	333	541	180	1819	181
111	222	563	188	1877	187
444	111	578	194	1925	190
555	333	593	197	1971	199
555	444	NULL	NULL	NULL	208
555	444	634	210	2121	214
444	444	648	215	2164	218
444	333	665	221	2211	223
111	222	680	227	2280	226
555	444	696	231	2312	234
444	333	709	236	NULL	237
222	222	742	248	2479	246


-- !query
SELECT abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a-b,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,e:int>
-- !query output
107	1060	1079	1	105
123	1220	NULL	1	121
127	1280	1274	-1	125
151	1500	NULL	1	NULL
161	1600	1626	1	162
171	1700	1719	1	174
177	354	NULL	1	175
181	362	1819	1	184
187	374	1877	-1	185
226	452	2280	-1	225
237	474	NULL	1	238


-- !query
SELECT abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a-b,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 3,5,4
-- !query schema
struct<abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,e:int>
-- !query output
151	1500	NULL	1	NULL
123	1220	NULL	1	121
177	354	NULL	1	175
237	474	NULL	1	238
107	1060	1079	1	105
127	1280	1274	-1	125
161	1600	1626	1	162
171	1700	1719	1	174
181	362	1819	1	184
187	374	1877	-1	185
226	452	2280	-1	225


-- !query
SELECT a+b*2,
       abs(a),
       e,
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,abs(a):int,e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
319	107	105	1079	1060
338	110	113	NULL	1140
354	116	NULL	1165	1190
367	123	121	NULL	1220
383	127	125	1274	1280
400	132	130	1325	1340
410	138	137	1367	1360
426	144	143	1414	1410
443	145	147	NULL	1490
451	151	NULL	NULL	1500
469	155	158	NULL	1570
481	161	162	1626	1600
511	171	174	1719	1700
529	177	175	NULL	354
541	181	184	1819	362
563	187	185	1877	374
578	190	191	1925	380
593	199	195	1971	398
634	214	211	2121	428
648	218	219	2164	436
665	223	224	2211	446
680	226	225	2280	452
696	234	233	2312	468
709	237	238	NULL	474
742	246	245	2479	492
NULL	167	166	NULL	NULL
NULL	208	207	NULL	NULL
NULL	NULL	104	NULL	1020
NULL	NULL	204	NULL	NULL
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2,
       abs(a),
       e,
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 5,2
-- !query schema
struct<(a + (b * 2)):int,abs(a):int,e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL	204	NULL	NULL
NULL	NULL	NULL	NULL	NULL
NULL	167	166	NULL	NULL
NULL	208	207	NULL	NULL
529	177	175	NULL	354
541	181	184	1819	362
563	187	185	1877	374
578	190	191	1925	380
593	199	195	1971	398
634	214	211	2121	428
648	218	219	2164	436
665	223	224	2211	446
680	226	225	2280	452
696	234	233	2312	468
709	237	238	NULL	474
742	246	245	2479	492
NULL	NULL	104	NULL	1020
319	107	105	1079	1060
338	110	113	NULL	1140
354	116	NULL	1165	1190
367	123	121	NULL	1220
383	127	125	1274	1280
400	132	130	1325	1340
410	138	137	1367	1360
426	144	143	1414	1410
443	145	147	NULL	1490
451	151	NULL	NULL	1500
469	155	158	NULL	1570
481	161	162	1626	1600
511	171	174	1719	1700


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       c,
       e,
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
    OR a>b
-- !query schema
struct<abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,c:int,e:int,d:int>
-- !query output
1	1414	444	846	140	143	142
1	1925	111	1157	193	191	192
1	1971	333	1187	198	195	196
1	2164	444	1296	216	219	217
1	2211	333	1331	222	224	220
1	2280	222	1364	228	225	229
1	2312	444	1392	232	233	230
1	2479	222	1483	247	245	249
1	NULL	444	NULL	203	204	201
2	1079	333	643	108	105	109
2	1165	222	705	117	NULL	115
2	1719	333	1027	172	174	173
2	1819	333	1087	182	184	183
2	1877	222	1121	186	185	189
2	NULL	333	739	124	121	NULL
3	1367	333	827	139	137	135
3	1626	333	970	163	162	164
3	2121	444	1273	213	211	212
3	NULL	333	1066	179	175	NULL
3	NULL	333	1426	239	238	NULL
3	NULL	333	910	153	NULL	NULL
4	NULL	444	NULL	240	NULL	243
NULL	NULL	444	NULL	168	166	165
NULL	NULL	444	NULL	NULL	104	101
NULL	NULL	444	NULL	NULL	207	206


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       c,
       e,
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
    OR a>b
 ORDER BY 4,2,5
-- !query schema
struct<abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,c:int,e:int,d:int>
-- !query output
NULL	NULL	444	NULL	NULL	104	101
NULL	NULL	444	NULL	NULL	207	206
NULL	NULL	444	NULL	168	166	165
1	NULL	444	NULL	203	204	201
4	NULL	444	NULL	240	NULL	243
2	1079	333	643	108	105	109
2	1165	222	705	117	NULL	115
2	NULL	333	739	124	121	NULL
3	1367	333	827	139	137	135
1	1414	444	846	140	143	142
3	NULL	333	910	153	NULL	NULL
3	1626	333	970	163	162	164
2	1719	333	1027	172	174	173
3	NULL	333	1066	179	175	NULL
2	1819	333	1087	182	184	183
2	1877	222	1121	186	185	189
1	1925	111	1157	193	191	192
1	1971	333	1187	198	195	196
3	2121	444	1273	213	211	212
1	2164	444	1296	216	219	217
1	2211	333	1331	222	224	220
1	2280	222	1364	228	225	229
1	2312	444	1392	232	233	230
3	NULL	333	1426	239	238	NULL
1	2479	222	1483	247	245	249


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       c,
       e,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR a>b
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,c:int,e:int,d:int>
-- !query output
1	1414	444	846	140	143	142
1	1925	111	1157	193	191	192
1	1971	333	1187	198	195	196
1	2164	444	1296	216	219	217
1	2211	333	1331	222	224	220
1	2280	222	1364	228	225	229
1	2312	444	1392	232	233	230
1	2479	222	1483	247	245	249
1	NULL	444	NULL	203	204	201
2	1079	333	643	108	105	109
2	1165	222	705	117	NULL	115
2	1719	333	1027	172	174	173
2	1819	333	1087	182	184	183
2	1877	222	1121	186	185	189
2	NULL	333	739	124	121	NULL
3	1367	333	827	139	137	135
3	1626	333	970	163	162	164
3	2121	444	1273	213	211	212
3	NULL	333	1066	179	175	NULL
3	NULL	333	1426	239	238	NULL
3	NULL	333	910	153	NULL	NULL
4	NULL	444	NULL	240	NULL	243
NULL	NULL	444	NULL	168	166	165
NULL	NULL	444	NULL	NULL	104	101
NULL	NULL	444	NULL	NULL	207	206


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       c,
       e,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR a>b
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1,6,7,5,3
-- !query schema
struct<abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,c:int,e:int,d:int>
-- !query output
NULL	NULL	444	NULL	NULL	104	101
NULL	NULL	444	NULL	168	166	165
NULL	NULL	444	NULL	NULL	207	206
1	1414	444	846	140	143	142
1	1925	111	1157	193	191	192
1	1971	333	1187	198	195	196
1	NULL	444	NULL	203	204	201
1	2164	444	1296	216	219	217
1	2211	333	1331	222	224	220
1	2280	222	1364	228	225	229
1	2312	444	1392	232	233	230
1	2479	222	1483	247	245	249
2	1165	222	705	117	NULL	115
2	1079	333	643	108	105	109
2	NULL	333	739	124	121	NULL
2	1719	333	1027	172	174	173
2	1819	333	1087	182	184	183
2	1877	222	1121	186	185	189
3	NULL	333	910	153	NULL	NULL
3	1367	333	827	139	137	135
3	1626	333	970	163	162	164
3	NULL	333	1066	179	175	NULL
3	2121	444	1273	213	211	212
3	NULL	333	1426	239	238	NULL
4	NULL	444	NULL	240	NULL	243


-- !query
SELECT c-d,
       b-c
  FROM t1
 WHERE a>b
    OR c>d
    OR d>e
-- !query schema
struct<(c - d):int,(b - c):int>
-- !query output
-1	-1
-1	-1
-1	-2
-1	-2
-1	-2
-1	-3
-2	1
-2	1
-2	3
-3	2
1	-3
1	1
2	-1
2	-1
2	-1
2	-1
2	2
3	-1
3	NULL
4	-3
NULL	-2
NULL	-3
NULL	-3
NULL	-3


-- !query
SELECT c-d,
       b-c
  FROM t1
 WHERE a>b
    OR c>d
    OR d>e
 ORDER BY 1,2
-- !query schema
struct<(c - d):int,(b - c):int>
-- !query output
NULL	-3
NULL	-3
NULL	-3
NULL	-2
-3	2
-2	1
-2	1
-2	3
-1	-3
-1	-2
-1	-2
-1	-2
-1	-1
-1	-1
1	-3
1	1
2	-1
2	-1
2	-1
2	-1
2	2
3	NULL
3	-1
4	-3


-- !query
SELECT c-d,
       b-c
  FROM t1
 WHERE d>e
    OR c>d
    OR a>b
-- !query schema
struct<(c - d):int,(b - c):int>
-- !query output
-1	-1
-1	-1
-1	-2
-1	-2
-1	-2
-1	-3
-2	1
-2	1
-2	3
-3	2
1	-3
1	1
2	-1
2	-1
2	-1
2	-1
2	2
3	-1
3	NULL
4	-3
NULL	-2
NULL	-3
NULL	-3
NULL	-3


-- !query
SELECT c-d,
       b-c
  FROM t1
 WHERE d>e
    OR c>d
    OR a>b
 ORDER BY 2,1
-- !query schema
struct<(c - d):int,(b - c):int>
-- !query output
3	NULL
NULL	-3
NULL	-3
NULL	-3
-1	-3
1	-3
4	-3
NULL	-2
-1	-2
-1	-2
-1	-2
-1	-1
-1	-1
2	-1
2	-1
2	-1
2	-1
3	-1
-2	1
-2	1
1	1
-3	2
2	2
-2	3


-- !query
SELECT c-d,
       b-c
  FROM t1
 WHERE d>e
    OR a>b
    OR c>d
-- !query schema
struct<(c - d):int,(b - c):int>
-- !query output
-1	-1
-1	-1
-1	-2
-1	-2
-1	-2
-1	-3
-2	1
-2	1
-2	3
-3	2
1	-3
1	1
2	-1
2	-1
2	-1
2	-1
2	2
3	-1
3	NULL
4	-3
NULL	-2
NULL	-3
NULL	-3
NULL	-3


-- !query
SELECT c-d,
       b-c
  FROM t1
 WHERE d>e
    OR a>b
    OR c>d
 ORDER BY 1,2
-- !query schema
struct<(c - d):int,(b - c):int>
-- !query output
NULL	-3
NULL	-3
NULL	-3
NULL	-2
-3	2
-2	1
-2	1
-2	3
-1	-3
-1	-2
-1	-2
-1	-2
-1	-1
-1	-1
1	-3
1	1
2	-1
2	-1
2	-1
2	-1
2	2
3	NULL
3	-1
4	-3


-- !query
SELECT abs(b-c),
       a
  FROM t1
 WHERE c>d
-- !query schema
struct<abs((b - c)):int,a:int>
-- !query output
1	127
1	190
1	199
1	223
1	234
1	NULL
2	116
3	138
3	214
NULL	167


-- !query
SELECT abs(b-c),
       a
  FROM t1
 WHERE c>d
 ORDER BY 1,2
-- !query schema
struct<abs((b - c)):int,a:int>
-- !query output
NULL	167
1	NULL
1	127
1	190
1	199
1	223
1	234
2	116
3	138
3	214


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       a+b*2+c*3+d*4+e*5,
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       a+b*2+c*3+d*4+e*5,
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
   AND b>c
 ORDER BY 3,1,5,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       a+b*2+c*3+d*4+e*5,
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       a+b*2+c*3+d*4+e*5,
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,5,4,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       a+b*2+c*3+d*4+e*5,
       c
  FROM t1
 WHERE b>c
   AND (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       a+b*2+c*3+d*4+e*5,
       c
  FROM t1
 WHERE b>c
   AND (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-1	222	1899
-2	333	1604


-- !query
SELECT b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,1,2
-- !query schema
struct<(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-2	333	1604
-1	222	1899


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a,
       d,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int,d:int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int>
-- !query output
107.0	1060	107	109	643	333	1
127.0	1280	127	126	770	222	-1
132.0	1340	132	133	793	222	-2
137.0	1360	138	135	827	333	2
142.0	1410	144	142	846	444	3
162.0	1600	161	164	970	333	1
172.0	1700	171	173	1027	333	1
182.0	362	181	183	1087	333	1
187.0	374	187	189	1121	222	-1
192.0	380	190	192	1157	111	-4
197.0	398	199	196	1187	333	2
212.0	428	214	212	1273	444	4
217.0	436	218	217	1296	444	3
222.0	446	223	220	1331	333	2
227.0	452	226	229	1364	222	-1
232.0	468	234	230	1392	444	3
247.0	492	246	249	1483	222	-2
NULL	1020	NULL	101	NULL	444	NULL
NULL	1140	110	NULL	674	111	-4
NULL	1190	116	115	705	222	-3
NULL	1220	123	NULL	739	333	1
NULL	1490	145	NULL	881	111	-4
NULL	1500	151	NULL	910	333	1
NULL	1570	155	NULL	946	222	-2
NULL	354	177	NULL	1066	333	1
NULL	474	237	NULL	1426	333	1
NULL	NULL	167	165	NULL	444	NULL
NULL	NULL	208	206	NULL	444	NULL
NULL	NULL	NULL	201	NULL	444	NULL
NULL	NULL	NULL	243	NULL	444	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a,
       d,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b
  FROM t1
 ORDER BY 3,1,5,2,6,4,7
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int,d:int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int>
-- !query output
NULL	NULL	NULL	201	NULL	444	NULL
NULL	NULL	NULL	243	NULL	444	NULL
NULL	1020	NULL	101	NULL	444	NULL
107.0	1060	107	109	643	333	1
NULL	1140	110	NULL	674	111	-4
NULL	1190	116	115	705	222	-3
NULL	1220	123	NULL	739	333	1
127.0	1280	127	126	770	222	-1
132.0	1340	132	133	793	222	-2
137.0	1360	138	135	827	333	2
142.0	1410	144	142	846	444	3
NULL	1490	145	NULL	881	111	-4
NULL	1500	151	NULL	910	333	1
NULL	1570	155	NULL	946	222	-2
162.0	1600	161	164	970	333	1
NULL	NULL	167	165	NULL	444	NULL
172.0	1700	171	173	1027	333	1
NULL	354	177	NULL	1066	333	1
182.0	362	181	183	1087	333	1
187.0	374	187	189	1121	222	-1
192.0	380	190	192	1157	111	-4
197.0	398	199	196	1187	333	2
NULL	NULL	208	206	NULL	444	NULL
212.0	428	214	212	1273	444	4
217.0	436	218	217	1296	444	3
222.0	446	223	220	1331	333	2
227.0	452	226	229	1364	222	-1
232.0	468	234	230	1392	444	3
NULL	474	237	NULL	1426	333	1
247.0	492	246	249	1483	222	-2


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       a+b*2+c*3+d*4+e*5,
       abs(a)
  FROM t1
-- !query schema
struct<a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int>
-- !query output
107	1079	333	319	1604	107
110	NULL	111	338	NULL	110
116	1165	222	354	NULL	116
123	NULL	333	367	NULL	123
127	1274	222	383	1899	127
132	1325	222	400	1975	132
138	1367	333	410	2052	138
144	1414	444	426	2129	144
145	NULL	111	443	NULL	145
151	NULL	333	451	NULL	151
155	NULL	222	469	NULL	155
161	1626	333	481	2436	161
167	NULL	444	NULL	NULL	167
171	1719	333	511	2589	171
177	NULL	333	529	NULL	177
181	1819	333	541	2739	181
187	1877	222	563	2802	187
190	1925	111	578	2880	190
199	1971	333	593	2946	199
208	NULL	444	NULL	NULL	208
214	2121	444	634	3176	214
218	2164	444	648	3259	218
223	2211	333	665	3331	223
226	2280	222	680	3405	226
234	2312	444	696	3477	234
237	NULL	333	709	NULL	237
246	2479	222	742	3704	246
NULL	NULL	444	NULL	NULL	NULL
NULL	NULL	444	NULL	NULL	NULL
NULL	NULL	444	NULL	NULL	NULL


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       a+b*2+c*3+d*4+e*5,
       abs(a)
  FROM t1
 ORDER BY 2,6,1,4,3
-- !query schema
struct<a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int>
-- !query output
NULL	NULL	444	NULL	NULL	NULL
NULL	NULL	444	NULL	NULL	NULL
NULL	NULL	444	NULL	NULL	NULL
110	NULL	111	338	NULL	110
123	NULL	333	367	NULL	123
145	NULL	111	443	NULL	145
151	NULL	333	451	NULL	151
155	NULL	222	469	NULL	155
167	NULL	444	NULL	NULL	167
177	NULL	333	529	NULL	177
208	NULL	444	NULL	NULL	208
237	NULL	333	709	NULL	237
107	1079	333	319	1604	107
116	1165	222	354	NULL	116
127	1274	222	383	1899	127
132	1325	222	400	1975	132
138	1367	333	410	2052	138
144	1414	444	426	2129	144
161	1626	333	481	2436	161
171	1719	333	511	2589	171
181	1819	333	541	2739	181
187	1877	222	563	2802	187
190	1925	111	578	2880	190
199	1971	333	593	2946	199
214	2121	444	634	3176	214
218	2164	444	648	3259	218
223	2211	333	665	3331	223
226	2280	222	680	3405	226
234	2312	444	696	3477	234
246	2479	222	742	3704	246


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       d,
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       d,
       a
  FROM t1
 ORDER BY 5,3,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE d>e
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a+b*2+c*3+d*4+e*5,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       d-e,
       abs(a)
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a+b*2+c*3+d*4+e*5,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       d-e,
       abs(a)
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 7,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       b-c,
       a+b*2+c*3,
       abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<c:int,(b - c):int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int>
-- !query output
108	-2	643	107	1060	107
124	-2	739	123	1220	123
129	-1	770	127	1280	127
153	-3	910	151	1500	151
163	-3	970	161	1600	161
172	-2	1027	171	1700	171
179	-3	1066	177	354	177
182	-2	1087	181	362	181
186	2	1121	187	374	187
228	-1	1364	226	452	226
239	-3	1426	237	474	237


-- !query
SELECT c,
       b-c,
       a+b*2+c*3,
       abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 4,1,2,3,6,5
-- !query schema
struct<c:int,(b - c):int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int>
-- !query output
108	-2	643	107	1060	107
124	-2	739	123	1220	123
129	-1	770	127	1280	127
153	-3	910	151	1500	151
163	-3	970	161	1600	161
172	-2	1027	171	1700	171
179	-3	1066	177	354	177
182	-2	1087	181	362	181
186	2	1121	187	374	187
228	-1	1364	226	452	226
239	-3	1426	237	474	237


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       abs(b-c),
       d,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       abs(b-c),
       d,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 ORDER BY 3,1,5,6,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a)
  FROM t1
 WHERE b>c
    OR a>b
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int>
-- !query output
-1	1079	2	222	107
-1	1626	3	444	161
-1	1719	2	222	171
-1	1819	2	222	181
-1	2164	1	444	218
-2	1325	3	333	132
-2	1414	1	555	144
-2	2479	1	222	246
-3	1877	2	111	187
-3	NULL	4	555	NULL
1	1925	1	444	190
1	2121	3	555	214
2	1165	2	222	116
2	1971	1	555	199
2	2211	1	444	223
2	2312	1	555	234
2	NULL	1	555	NULL
3	1274	1	111	127
3	NULL	NULL	222	167
4	1367	3	222	138
NULL	NULL	2	222	123
NULL	NULL	2	555	110
NULL	NULL	3	222	145
NULL	NULL	3	444	237
NULL	NULL	3	555	151
NULL	NULL	3	555	177


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a)
  FROM t1
 WHERE b>c
    OR a>b
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,4,5
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int>
-- !query output
NULL	NULL	2	222	123
NULL	NULL	3	222	145
3	NULL	NULL	222	167
NULL	NULL	3	444	237
2	NULL	1	555	NULL
-3	NULL	4	555	NULL
NULL	NULL	2	555	110
NULL	NULL	3	555	151
NULL	NULL	3	555	177
-1	1079	2	222	107
2	1165	2	222	116
3	1274	1	111	127
-2	1325	3	333	132
4	1367	3	222	138
-2	1414	1	555	144
-1	1626	3	444	161
-1	1719	2	222	171
-1	1819	2	222	181
-3	1877	2	111	187
1	1925	1	444	190
2	1971	1	555	199
1	2121	3	555	214
-1	2164	1	444	218
2	2211	1	444	223
2	2312	1	555	234
-2	2479	1	222	246


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR a>b
    OR b>c
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int>
-- !query output
-1	1079	2	222	107
-1	1626	3	444	161
-1	1719	2	222	171
-1	1819	2	222	181
-1	2164	1	444	218
-2	1325	3	333	132
-2	1414	1	555	144
-2	2479	1	222	246
-3	1877	2	111	187
-3	NULL	4	555	NULL
1	1925	1	444	190
1	2121	3	555	214
2	1165	2	222	116
2	1971	1	555	199
2	2211	1	444	223
2	2312	1	555	234
2	NULL	1	555	NULL
3	1274	1	111	127
3	NULL	NULL	222	167
4	1367	3	222	138
NULL	NULL	2	222	123
NULL	NULL	2	555	110
NULL	NULL	3	222	145
NULL	NULL	3	444	237
NULL	NULL	3	555	151
NULL	NULL	3	555	177


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR a>b
    OR b>c
 ORDER BY 4,5,1
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int>
-- !query output
3	1274	1	111	127
-3	1877	2	111	187
-1	1079	2	222	107
2	1165	2	222	116
NULL	NULL	2	222	123
4	1367	3	222	138
NULL	NULL	3	222	145
3	NULL	NULL	222	167
-1	1719	2	222	171
-1	1819	2	222	181
-2	2479	1	222	246
-2	1325	3	333	132
-1	1626	3	444	161
1	1925	1	444	190
-1	2164	1	444	218
2	2211	1	444	223
NULL	NULL	3	444	237
-3	NULL	4	555	NULL
2	NULL	1	555	NULL
NULL	NULL	2	555	110
-2	1414	1	555	144
NULL	NULL	3	555	151
NULL	NULL	3	555	177
2	1971	1	555	199
1	2121	3	555	214
2	2312	1	555	234


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a)
  FROM t1
 WHERE a>b
    OR (c<=d-2 OR c>=d+2)
    OR b>c
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int>
-- !query output
-1	1079	2	222	107
-1	1626	3	444	161
-1	1719	2	222	171
-1	1819	2	222	181
-1	2164	1	444	218
-2	1325	3	333	132
-2	1414	1	555	144
-2	2479	1	222	246
-3	1877	2	111	187
-3	NULL	4	555	NULL
1	1925	1	444	190
1	2121	3	555	214
2	1165	2	222	116
2	1971	1	555	199
2	2211	1	444	223
2	2312	1	555	234
2	NULL	1	555	NULL
3	1274	1	111	127
3	NULL	NULL	222	167
4	1367	3	222	138
NULL	NULL	2	222	123
NULL	NULL	2	555	110
NULL	NULL	3	222	145
NULL	NULL	3	444	237
NULL	NULL	3	555	151
NULL	NULL	3	555	177


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a)
  FROM t1
 WHERE a>b
    OR (c<=d-2 OR c>=d+2)
    OR b>c
 ORDER BY 1,5,3
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int>
-- !query output
NULL	NULL	2	555	110
NULL	NULL	2	222	123
NULL	NULL	3	222	145
NULL	NULL	3	555	151
NULL	NULL	3	555	177
NULL	NULL	3	444	237
-3	NULL	4	555	NULL
-3	1877	2	111	187
-2	1325	3	333	132
-2	1414	1	555	144
-2	2479	1	222	246
-1	1079	2	222	107
-1	1626	3	444	161
-1	1719	2	222	171
-1	1819	2	222	181
-1	2164	1	444	218
1	1925	1	444	190
1	2121	3	555	214
2	NULL	1	555	NULL
2	1165	2	222	116
2	1971	1	555	199
2	2211	1	444	223
2	2312	1	555	234
3	1274	1	111	127
3	NULL	NULL	222	167
4	1367	3	222	138


-- !query
SELECT d-e,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4
  FROM t1
 ORDER BY 4,3,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       e
  FROM t1
 ORDER BY 3,5,4,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       b-c,
       abs(a),
       d,
       (a+b+c+d+e)/5,
       b
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(b - c):int,abs(a):int,d:int,(((((a + b) + c) + d) + e) / 5):double,b:int>
-- !query output
1027	-2	171	173	172.0	170
1066	-3	177	NULL	NULL	176
1087	-2	181	183	182.0	180
1121	2	187	189	187.0	188
1157	1	190	192	192.0	194
1187	-1	199	196	197.0	197
1273	-3	214	212	212.0	210
1296	-1	218	217	217.0	215
1331	-1	223	220	222.0	221
1364	-1	226	229	227.0	227
1392	-1	234	230	232.0	231
1426	-3	237	NULL	NULL	236
1483	1	246	249	247.0	248
643	-2	107	109	107.0	106
674	2	110	NULL	NULL	114
705	2	116	115	NULL	119
739	-2	123	NULL	NULL	122
770	-1	127	126	127.0	128
793	3	132	133	132.0	134
827	-3	138	135	137.0	136
846	1	144	142	142.0	141
881	3	145	NULL	NULL	149
910	-3	151	NULL	NULL	150
946	-2	155	NULL	NULL	157
970	-3	161	164	162.0	160
NULL	-1	NULL	201	NULL	202
NULL	4	NULL	243	NULL	244
NULL	NULL	167	165	NULL	NULL
NULL	NULL	208	206	NULL	NULL
NULL	NULL	NULL	101	NULL	102


-- !query
SELECT a+b*2+c*3,
       b-c,
       abs(a),
       d,
       (a+b+c+d+e)/5,
       b
  FROM t1
 ORDER BY 1,5,3,6,4
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(b - c):int,abs(a):int,d:int,(((((a + b) + c) + d) + e) / 5):double,b:int>
-- !query output
NULL	NULL	NULL	101	NULL	102
NULL	-1	NULL	201	NULL	202
NULL	4	NULL	243	NULL	244
NULL	NULL	167	165	NULL	NULL
NULL	NULL	208	206	NULL	NULL
643	-2	107	109	107.0	106
674	2	110	NULL	NULL	114
705	2	116	115	NULL	119
739	-2	123	NULL	NULL	122
770	-1	127	126	127.0	128
793	3	132	133	132.0	134
827	-3	138	135	137.0	136
846	1	144	142	142.0	141
881	3	145	NULL	NULL	149
910	-3	151	NULL	NULL	150
946	-2	155	NULL	NULL	157
970	-3	161	164	162.0	160
1027	-2	171	173	172.0	170
1066	-3	177	NULL	NULL	176
1087	-2	181	183	182.0	180
1121	2	187	189	187.0	188
1157	1	190	192	192.0	194
1187	-1	199	196	197.0	197
1273	-3	214	212	212.0	210
1296	-1	218	217	217.0	215
1331	-1	223	220	222.0	221
1364	-1	226	229	227.0	227
1392	-1	234	230	232.0	231
1426	-3	237	NULL	NULL	236
1483	1	246	249	247.0	248


-- !query
SELECT d,
       a,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<d:int,a:int,((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
101	NULL	NULL	NULL	1020
109	107	643	1079	1060
115	116	705	1165	1190
126	127	770	1274	1280
133	132	793	1325	1340
135	138	827	1367	1360
142	144	846	1414	1410
164	161	970	1626	1600
165	167	NULL	NULL	NULL
173	171	1027	1719	1700
183	181	1087	1819	362
189	187	1121	1877	374
192	190	1157	1925	380
196	199	1187	1971	398
201	NULL	NULL	NULL	NULL
206	208	NULL	NULL	NULL
212	214	1273	2121	428
217	218	1296	2164	436
220	223	1331	2211	446
229	226	1364	2280	452
230	234	1392	2312	468
243	NULL	NULL	NULL	NULL
249	246	1483	2479	492
NULL	110	674	NULL	1140
NULL	123	739	NULL	1220
NULL	145	881	NULL	1490
NULL	151	910	NULL	1500
NULL	155	946	NULL	1570
NULL	177	1066	NULL	354
NULL	237	1426	NULL	474


-- !query
SELECT d,
       a,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 5,3,1,2,4
-- !query schema
struct<d:int,a:int,((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
165	167	NULL	NULL	NULL
201	NULL	NULL	NULL	NULL
206	208	NULL	NULL	NULL
243	NULL	NULL	NULL	NULL
NULL	177	1066	NULL	354
183	181	1087	1819	362
189	187	1121	1877	374
192	190	1157	1925	380
196	199	1187	1971	398
212	214	1273	2121	428
217	218	1296	2164	436
220	223	1331	2211	446
229	226	1364	2280	452
230	234	1392	2312	468
NULL	237	1426	NULL	474
249	246	1483	2479	492
101	NULL	NULL	NULL	1020
109	107	643	1079	1060
NULL	110	674	NULL	1140
115	116	705	1165	1190
NULL	123	739	NULL	1220
126	127	770	1274	1280
133	132	793	1325	1340
135	138	827	1367	1360
142	144	846	1414	1410
NULL	145	881	NULL	1490
NULL	151	910	NULL	1500
NULL	155	946	NULL	1570
164	161	970	1626	1600
173	171	1027	1719	1700


-- !query
SELECT d-e,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
-- !query schema
struct<(d - e):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-1	NULL	222	NULL	NULL
-2	3	222	-3	2052
-3	1	555	-1	3477
-3	1	555	-1	NULL
-4	1	444	-1	3331
1	1	111	-1	1899
1	1	555	-1	2946
NULL	2	222	2	NULL


-- !query
SELECT d-e,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
 ORDER BY 5,1,4,2,3
-- !query schema
struct<(d - e):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	2	222	2	NULL
-3	1	555	-1	NULL
-1	NULL	222	NULL	NULL
1	1	111	-1	1899
-2	3	222	-3	2052
1	1	555	-1	2946
-4	1	444	-1	3331
-3	1	555	-1	3477


-- !query
SELECT d-e,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(d - e):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-1	NULL	222	NULL	NULL
-2	3	222	-3	2052
-3	1	555	-1	3477
-3	1	555	-1	NULL
-4	1	444	-1	3331
1	1	111	-1	1899
1	1	555	-1	2946
NULL	2	222	2	NULL


-- !query
SELECT d-e,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,4,3
-- !query schema
struct<(d - e):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	2	222	2	NULL
-4	1	444	-1	3331
-3	1	555	-1	3477
-3	1	555	-1	NULL
-2	3	222	-3	2052
-1	NULL	222	NULL	NULL
1	1	111	-1	1899
1	1	555	-1	2946


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
107.0	109	333	643	1604
127.0	126	222	770	1899
142.0	142	444	846	2129
162.0	164	333	970	2436
172.0	173	333	1027	2589
182.0	183	333	1087	2739
187.0	189	222	1121	2802
192.0	192	111	1157	2880
197.0	196	333	1187	2946
212.0	212	444	1273	3176
217.0	217	444	1296	3259
222.0	220	333	1331	3331
227.0	229	222	1364	3405
232.0	230	444	1392	3477
247.0	249	222	1483	3704
NULL	115	222	705	NULL
NULL	201	444	NULL	NULL
NULL	NULL	333	1066	NULL
NULL	NULL	333	1426	NULL
NULL	NULL	333	739	NULL
NULL	NULL	333	910	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	NULL	333	1426	NULL
NULL	NULL	333	739	NULL
NULL	NULL	333	1066	NULL
NULL	NULL	333	910	NULL
NULL	115	222	705	NULL
NULL	201	444	NULL	NULL
107.0	109	333	643	1604
127.0	126	222	770	1899
142.0	142	444	846	2129
162.0	164	333	970	2436
172.0	173	333	1027	2589
182.0	183	333	1087	2739
187.0	189	222	1121	2802
192.0	192	111	1157	2880
197.0	196	333	1187	2946
212.0	212	444	1273	3176
217.0	217	444	1296	3259
222.0	220	333	1331	3331
227.0	229	222	1364	3405
232.0	230	444	1392	3477
247.0	249	222	1483	3704


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
107.0	109	333	643	1604
127.0	126	222	770	1899
142.0	142	444	846	2129
162.0	164	333	970	2436
172.0	173	333	1027	2589
182.0	183	333	1087	2739
187.0	189	222	1121	2802
192.0	192	111	1157	2880
197.0	196	333	1187	2946
212.0	212	444	1273	3176
217.0	217	444	1296	3259
222.0	220	333	1331	3331
227.0	229	222	1364	3405
232.0	230	444	1392	3477
247.0	249	222	1483	3704
NULL	115	222	705	NULL
NULL	201	444	NULL	NULL
NULL	NULL	333	1066	NULL
NULL	NULL	333	1426	NULL
NULL	NULL	333	739	NULL
NULL	NULL	333	910	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 2,3,4
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	NULL	333	739	NULL
NULL	NULL	333	910	NULL
NULL	NULL	333	1066	NULL
NULL	NULL	333	1426	NULL
107.0	109	333	643	1604
NULL	115	222	705	NULL
127.0	126	222	770	1899
142.0	142	444	846	2129
162.0	164	333	970	2436
172.0	173	333	1027	2589
182.0	183	333	1087	2739
187.0	189	222	1121	2802
192.0	192	111	1157	2880
197.0	196	333	1187	2946
NULL	201	444	NULL	NULL
212.0	212	444	1273	3176
217.0	217	444	1296	3259
222.0	220	333	1331	3331
227.0	229	222	1364	3405
232.0	230	444	1392	3477
247.0	249	222	1483	3704


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
1060	643	-1
1220	739	NULL
1280	770	3
1360	827	4
1410	846	-2
1500	910	NULL
1600	970	-1
1700	1027	-1
354	1066	NULL
362	1087	-1
398	1187	2
428	1273	1
436	1296	-1
446	1331	2
468	1392	2
474	1426	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
 ORDER BY 1,2,3
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
354	1066	NULL
362	1087	-1
398	1187	2
428	1273	1
436	1296	-1
446	1331	2
468	1392	2
474	1426	NULL
1060	643	-1
1220	739	NULL
1280	770	3
1360	827	4
1410	846	-2
1500	910	NULL
1600	970	-1
1700	1027	-1


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       c-d
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
1060	643	-1
1220	739	NULL
1280	770	3
1360	827	4
1410	846	-2
1500	910	NULL
1600	970	-1
1700	1027	-1
354	1066	NULL
362	1087	-1
398	1187	2
428	1273	1
436	1296	-1
446	1331	2
468	1392	2
474	1426	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       c-d
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,3
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
354	1066	NULL
362	1087	-1
398	1187	2
428	1273	1
436	1296	-1
446	1331	2
468	1392	2
474	1426	NULL
1060	643	-1
1220	739	NULL
1280	770	3
1360	827	4
1410	846	-2
1500	910	NULL
1600	970	-1
1700	1027	-1


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       d,
       c,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       d,
       c,
       a+b*2+c*3+d*4
  FROM t1
 ORDER BY 4,3,5,2,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
111	1121	1877	-3
111	1364	2280	-1
111	770	1274	3
222	1027	1719	-1
222	1087	1819	-1
222	643	1079	-1
222	739	NULL	NULL
444	1426	NULL	NULL
444	970	1626	-1
555	1066	NULL	NULL
555	910	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,1,4,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
222	739	NULL	NULL
444	1426	NULL	NULL
555	910	NULL	NULL
555	1066	NULL	NULL
222	643	1079	-1
111	770	1274	3
444	970	1626	-1
222	1027	1719	-1
222	1087	1819	-1
111	1121	1877	-3
111	1364	2280	-1


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
111	1121	1877	-3
111	1364	2280	-1
111	770	1274	3
222	1027	1719	-1
222	1087	1819	-1
222	643	1079	-1
222	739	NULL	NULL
444	1426	NULL	NULL
444	970	1626	-1
555	1066	NULL	NULL
555	910	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,2,4,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
111	770	1274	3
111	1121	1877	-3
111	1364	2280	-1
222	643	1079	-1
222	739	NULL	NULL
222	1027	1719	-1
222	1087	1819	-1
444	970	1626	-1
444	1426	NULL	NULL
555	910	NULL	NULL
555	1066	NULL	NULL


-- !query
SELECT b-c,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<(b - c):int,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	1	222	1899	127.0
-1	1	222	3405	227.0
-1	1	333	2946	197.0
-1	1	333	3331	222.0
-1	1	444	3259	217.0
-1	1	444	3477	232.0
-1	1	444	NULL	NULL
-2	2	222	NULL	NULL
-2	2	333	1604	107.0
-2	2	333	2589	172.0
-2	2	333	2739	182.0
-2	2	333	NULL	NULL
-3	3	333	2052	137.0
-3	3	333	2436	162.0
-3	3	333	NULL	NULL
-3	3	333	NULL	NULL
-3	3	333	NULL	NULL
-3	3	444	3176	212.0
1	1	111	2880	192.0
1	1	222	3704	247.0
1	1	444	2129	142.0
2	2	111	NULL	NULL
2	2	222	2802	187.0
2	2	222	NULL	NULL
3	3	111	NULL	NULL
3	3	222	1975	132.0
4	4	444	NULL	NULL
NULL	NULL	444	NULL	NULL
NULL	NULL	444	NULL	NULL
NULL	NULL	444	NULL	NULL


-- !query
SELECT b-c,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 4,2,5,1,3
-- !query schema
struct<(b - c):int,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	444	NULL	NULL
NULL	NULL	444	NULL	NULL
NULL	NULL	444	NULL	NULL
-1	1	444	NULL	NULL
-2	2	222	NULL	NULL
-2	2	333	NULL	NULL
2	2	111	NULL	NULL
2	2	222	NULL	NULL
-3	3	333	NULL	NULL
-3	3	333	NULL	NULL
-3	3	333	NULL	NULL
3	3	111	NULL	NULL
4	4	444	NULL	NULL
-2	2	333	1604	107.0
-1	1	222	1899	127.0
3	3	222	1975	132.0
-3	3	333	2052	137.0
1	1	444	2129	142.0
-3	3	333	2436	162.0
-2	2	333	2589	172.0
-2	2	333	2739	182.0
2	2	222	2802	187.0
1	1	111	2880	192.0
-1	1	333	2946	197.0
-3	3	444	3176	212.0
-1	1	444	3259	217.0
-1	1	333	3331	222.0
-1	1	222	3405	227.0
-1	1	444	3477	232.0
1	1	222	3704	247.0


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
 ORDER BY 2,1,3,4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
 ORDER BY 2,7,3,5,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       c-d,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(c - d):int,d:int>
-- !query output
1027	-2	333	172.0	-1	173
1087	-2	333	182.0	-1	183
1121	2	222	187.0	-3	189
1157	1	111	192.0	1	192
1187	-1	333	197.0	2	196
1273	-3	444	212.0	1	212
1296	-1	444	217.0	-1	217
1331	-1	333	222.0	2	220
1364	-1	222	227.0	-1	229
1392	-1	444	232.0	2	230
1483	1	222	247.0	-2	249
643	-2	333	107.0	-1	109
705	2	222	NULL	2	115
846	1	444	142.0	-2	142
970	-3	333	162.0	-1	164
NULL	-1	444	NULL	2	201


-- !query
SELECT a+b*2+c*3,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       c-d,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1,2,5,3
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(c - d):int,d:int>
-- !query output
NULL	-1	444	NULL	2	201
643	-2	333	107.0	-1	109
705	2	222	NULL	2	115
846	1	444	142.0	-2	142
970	-3	333	162.0	-1	164
1027	-2	333	172.0	-1	173
1087	-2	333	182.0	-1	183
1121	2	222	187.0	-3	189
1157	1	111	192.0	1	192
1187	-1	333	197.0	2	196
1273	-3	444	212.0	1	212
1296	-1	444	217.0	-1	217
1331	-1	333	222.0	2	220
1364	-1	222	227.0	-1	229
1392	-1	444	232.0	2	230
1483	1	222	247.0	-2	249


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b-c,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int,(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1604	-2	107	222	-1	4	1060
1899	-1	127	111	3	1	1280
1975	3	132	333	-2	3	1340
2129	1	144	555	-2	-1	1410
2436	-3	161	444	-1	2	1600
2589	-2	171	222	-1	-1	1700
2739	-2	181	222	-1	-1	362
2802	2	187	111	-3	4	374
2880	1	190	444	1	1	380
2946	-1	199	555	2	1	398
3176	-3	214	555	1	1	428
3259	-1	218	444	-1	-2	436
3331	-1	223	444	2	-4	446
3405	-1	226	111	-1	4	452
3477	-1	234	555	2	-3	468
3704	1	246	222	-2	4	492
NULL	-1	NULL	555	2	-3	NULL
NULL	2	110	555	NULL	NULL	1140
NULL	3	145	222	NULL	NULL	1490


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b-c,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,2,6,3,5,7,1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int,(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1899	-1	127	111	3	1	1280
3405	-1	226	111	-1	4	452
2802	2	187	111	-3	4	374
2589	-2	171	222	-1	-1	1700
2739	-2	181	222	-1	-1	362
1604	-2	107	222	-1	4	1060
3704	1	246	222	-2	4	492
NULL	3	145	222	NULL	NULL	1490
1975	3	132	333	-2	3	1340
2436	-3	161	444	-1	2	1600
3331	-1	223	444	2	-4	446
3259	-1	218	444	-1	-2	436
2880	1	190	444	1	1	380
3176	-3	214	555	1	1	428
NULL	-1	NULL	555	2	-3	NULL
3477	-1	234	555	2	-3	468
2946	-1	199	555	2	1	398
2129	1	144	555	-2	-1	1410
NULL	2	110	555	NULL	NULL	1140


-- !query
SELECT b-c,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	1187
-1	1296
-1	1331
-1	1364
-1	1392
-1	770
-1	NULL
-2	1027
-2	1087
-2	643
-2	739
-2	946
-3	1066
-3	1273
-3	1426
-3	827
-3	910
-3	970
1	1157
1	1483
1	846
2	1121
2	674
2	705
3	793
3	881
4	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT b-c,
       a+b*2+c*3
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
-1	NULL
4	NULL
-2	643
2	674
2	705
-2	739
-1	770
3	793
-3	827
1	846
3	881
-3	910
-2	946
-3	970
-2	1027
-3	1066
-2	1087
2	1121
1	1157
-1	1187
-3	1273
-1	1296
-1	1331
-1	1364
-1	1392
-3	1426
1	1483


-- !query
SELECT d-e,
       e,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       e,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d
  FROM t1
 ORDER BY 2,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       b-c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int>
-- !query output
111	222	NULL	3
111	444	1925	1
111	555	NULL	2
222	111	1274	-1
222	111	1877	2
222	111	2280	-1
222	222	1165	2
222	222	2479	1
222	333	1325	3
222	555	NULL	-2
333	222	1079	-2
333	222	1367	-3
333	222	1719	-2
333	222	1819	-2
333	222	NULL	-2
333	444	1626	-3
333	444	2211	-1
333	444	NULL	-3
333	555	1971	-1
333	555	NULL	-3
333	555	NULL	-3
444	444	2164	-1
444	555	1414	1
444	555	2121	-3
444	555	2312	-1
444	555	NULL	-1
444	555	NULL	4


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       b-c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,4,2,3
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int>
-- !query output
111	444	1925	1
111	555	NULL	2
111	222	NULL	3
222	555	NULL	-2
222	111	1274	-1
222	111	2280	-1
222	222	2479	1
222	111	1877	2
222	222	1165	2
222	333	1325	3
333	222	1367	-3
333	444	NULL	-3
333	444	1626	-3
333	555	NULL	-3
333	555	NULL	-3
333	222	NULL	-2
333	222	1079	-2
333	222	1719	-2
333	222	1819	-2
333	444	2211	-1
333	555	1971	-1
444	555	2121	-3
444	444	2164	-1
444	555	NULL	-1
444	555	2312	-1
444	555	1414	1
444	555	NULL	4


-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       b,
       e,
       b-c
  FROM t1
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,b:int,e:int,(b - c):int>
-- !query output
-1	127.0	128	125	-1
-1	187.0	188	185	2
-1	227.0	227	225	-1
-2	132.0	134	130	3
-2	247.0	248	245	1
-2	NULL	157	158	-2
-3	NULL	119	NULL	2
-4	192.0	194	191	1
-4	NULL	114	113	2
-4	NULL	149	147	3
1	107.0	106	105	-2
1	162.0	160	162	-3
1	172.0	170	174	-2
1	182.0	180	184	-2
1	NULL	122	121	-2
1	NULL	150	NULL	-3
1	NULL	176	175	-3
1	NULL	236	238	-3
2	137.0	136	137	-3
2	197.0	197	195	-1
2	222.0	221	224	-1
3	142.0	141	143	1
3	217.0	215	219	-1
3	232.0	231	233	-1
4	212.0	210	211	-3
NULL	NULL	102	104	NULL
NULL	NULL	202	204	-1
NULL	NULL	244	NULL	4
NULL	NULL	NULL	166	NULL
NULL	NULL	NULL	207	NULL


-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       b,
       e,
       b-c
  FROM t1
 ORDER BY 3,5,4,2,1
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,b:int,e:int,(b - c):int>
-- !query output
NULL	NULL	NULL	166	NULL
NULL	NULL	NULL	207	NULL
NULL	NULL	102	104	NULL
1	107.0	106	105	-2
-4	NULL	114	113	2
-3	NULL	119	NULL	2
1	NULL	122	121	-2
-1	127.0	128	125	-1
-2	132.0	134	130	3
2	137.0	136	137	-3
3	142.0	141	143	1
-4	NULL	149	147	3
1	NULL	150	NULL	-3
-2	NULL	157	158	-2
1	162.0	160	162	-3
1	172.0	170	174	-2
1	NULL	176	175	-3
1	182.0	180	184	-2
-1	187.0	188	185	2
-4	192.0	194	191	1
2	197.0	197	195	-1
NULL	NULL	202	204	-1
4	212.0	210	211	-3
3	217.0	215	219	-1
2	222.0	221	224	-1
-1	227.0	227	225	-1
3	232.0	231	233	-1
1	NULL	236	238	-3
NULL	NULL	244	NULL	4
-2	247.0	248	245	1


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
   AND c>d
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
192.0	1	1925
197.0	1	1971
212.0	3	2121


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
   AND c>d
 ORDER BY 2,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
192.0	1	1925
197.0	1	1971
212.0	3	2121


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND d>e
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
192.0	1	1925
197.0	1	1971
212.0	3	2121


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND d>e
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,3,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
192.0	1	1925
197.0	1	1971
212.0	3	2121


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
   AND d>e
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
192.0	1	1925
197.0	1	1971
212.0	3	2121


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
   AND d>e
 ORDER BY 1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
192.0	1	1925
197.0	1	1971
212.0	3	2121


-- !query
SELECT a+b*2+c*3+d*4,
       d
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int>
-- !query output
1925	192
1971	196
2121	212
2211	220
2312	230
NULL	201


-- !query
SELECT a+b*2+c*3+d*4,
       d
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
 ORDER BY 1,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int>
-- !query output
NULL	201
1925	192
1971	196
2121	212
2211	220
2312	230


-- !query
SELECT a+b*2+c*3+d*4,
       d
  FROM t1
 WHERE (e>c OR e<d)
   AND c>d
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int>
-- !query output
1925	192
1971	196
2121	212
2211	220
2312	230
NULL	201


-- !query
SELECT a+b*2+c*3+d*4,
       d
  FROM t1
 WHERE (e>c OR e<d)
   AND c>d
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int>
-- !query output
1925	192
1971	196
NULL	201
2121	212
2211	220
2312	230


-- !query
SELECT a+b*2+c*3+d*4,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
   AND c>d
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int>
-- !query output
1925	192
1971	196
2121	212
2211	220
2312	230
NULL	201


-- !query
SELECT a+b*2+c*3+d*4,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
   AND c>d
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int>
-- !query output
1925	192
1971	196
NULL	201
2121	212
2211	220
2312	230


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2,4,5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE a>b
-- !query schema
struct<a:int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
107	107.0	1
123	NULL	1
138	137.0	2
144	142.0	3
151	NULL	1
161	162.0	1
171	172.0	1
177	NULL	1
181	182.0	1
199	197.0	2
214	212.0	4
218	217.0	3
223	222.0	2
234	232.0	3
237	NULL	1


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE a>b
 ORDER BY 2,3
-- !query schema
struct<a:int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
237	NULL	1
123	NULL	1
177	NULL	1
151	NULL	1
107	107.0	1
138	137.0	2
144	142.0	3
161	162.0	1
171	172.0	1
181	182.0	1
199	197.0	2
214	212.0	4
218	217.0	3
223	222.0	2
234	232.0	3


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
1	444	194


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,2,3
-- !query schema
struct<(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
1	444	194


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       c-d
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       c-d
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,4,5,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c BETWEEN b-2 AND d+2
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c BETWEEN b-2 AND d+2
   AND c>d
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       b-c
  FROM t1
 WHERE d>e
    OR c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       b-c
  FROM t1
 WHERE d>e
    OR c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1,5,2,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
    OR d>e
 ORDER BY 4,2,5,1,3,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       b-c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       b-c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
    OR d>e
 ORDER BY 1,6,2,4,5,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1079	1060
1165	1190
1274	1280
1325	1340
1367	1360
1414	1410
1626	1600
1719	1700
1819	362
1877	374
1925	380
1971	398
2121	428
2164	436
2211	446
2280	452
2312	468
2479	492
NULL	1020
NULL	1140
NULL	1220
NULL	1490
NULL	1500
NULL	1570
NULL	354
NULL	474
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	354
NULL	474
NULL	1020
NULL	1140
NULL	1220
NULL	1490
NULL	1500
NULL	1570
1079	1060
1165	1190
1274	1280
1325	1340
1367	1360
1414	1410
1626	1600
1719	1700
1819	362
1877	374
1925	380
1971	398
2121	428
2164	436
2211	446
2280	452
2312	468
2479	492


-- !query
SELECT a+b*2,
       b
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,b:int>
-- !query output
319	106
338	114
354	119
367	122
383	128
400	134
410	136
426	141
443	149
451	150
469	157
481	160
511	170
529	176
541	180
563	188
578	194
593	197
634	210
648	215
665	221
680	227
696	231
709	236
742	248
NULL	102
NULL	202
NULL	244
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2,
       b
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<(a + (b * 2)):int,b:int>
-- !query output
NULL	NULL
NULL	NULL
NULL	102
319	106
338	114
354	119
367	122
383	128
400	134
410	136
426	141
443	149
451	150
469	157
481	160
511	170
529	176
541	180
563	188
578	194
593	197
NULL	202
634	210
648	215
665	221
680	227
696	231
709	236
NULL	244
742	248


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
-- !query schema
struct<d:int>
-- !query output
109
115
126
133
135
142
164
173
183
189
192
196
201
212
217
220
229
230
243
249
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
 ORDER BY 1
-- !query schema
struct<d:int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
109
115
126
133
135
142
164
173
183
189
192
196
201
212
217
220
229
230
243
249


-- !query
SELECT a+b*2,
       d,
       abs(b-c),
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       d,
       abs(b-c),
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 6,5,4,7,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       b,
       a+b*2,
       abs(a),
       a,
       a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int,(a + (b * 2)):int,abs(a):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1060	1079	106	319	107	107	643
1140	NULL	114	338	110	110	674
1280	1274	128	383	127	127	770
1340	1325	134	400	132	132	793
1410	1414	141	426	144	144	846
1490	NULL	149	443	145	145	881
1600	1626	160	481	161	161	970
1700	1719	170	511	171	171	1027
362	1819	180	541	181	181	1087
374	1877	188	563	187	187	1121
380	1925	194	578	190	190	1157
398	1971	197	593	199	199	1187
428	2121	210	634	214	214	1273
436	2164	215	648	218	218	1296
446	2211	221	665	223	223	1331
452	2280	227	680	226	226	1364
468	2312	231	696	234	234	1392
492	2479	248	742	246	246	1483
NULL	NULL	202	NULL	NULL	NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       b,
       a+b*2,
       abs(a),
       a,
       a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,7,5,6,3,4,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int,(a + (b * 2)):int,abs(a):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL	202	NULL	NULL	NULL	NULL
362	1819	180	541	181	181	1087
374	1877	188	563	187	187	1121
380	1925	194	578	190	190	1157
398	1971	197	593	199	199	1187
428	2121	210	634	214	214	1273
436	2164	215	648	218	218	1296
446	2211	221	665	223	223	1331
452	2280	227	680	226	226	1364
468	2312	231	696	234	234	1392
492	2479	248	742	246	246	1483
1060	1079	106	319	107	107	643
1140	NULL	114	338	110	110	674
1280	1274	128	383	127	127	770
1340	1325	134	400	132	132	793
1410	1414	141	426	144	144	846
1490	NULL	149	443	145	145	881
1600	1626	160	481	161	161	970
1700	1719	170	511	171	171	1027


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       b,
       a+b*2,
       abs(a),
       a,
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int,(a + (b * 2)):int,abs(a):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1060	1079	106	319	107	107	643
1140	NULL	114	338	110	110	674
1280	1274	128	383	127	127	770
1340	1325	134	400	132	132	793
1410	1414	141	426	144	144	846
1490	NULL	149	443	145	145	881
1600	1626	160	481	161	161	970
1700	1719	170	511	171	171	1027
362	1819	180	541	181	181	1087
374	1877	188	563	187	187	1121
380	1925	194	578	190	190	1157
398	1971	197	593	199	199	1187
428	2121	210	634	214	214	1273
436	2164	215	648	218	218	1296
446	2211	221	665	223	223	1331
452	2280	227	680	226	226	1364
468	2312	231	696	234	234	1392
492	2479	248	742	246	246	1483
NULL	NULL	202	NULL	NULL	NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       b,
       a+b*2,
       abs(a),
       a,
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
 ORDER BY 6,5
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int,(a + (b * 2)):int,abs(a):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL	202	NULL	NULL	NULL	NULL
1060	1079	106	319	107	107	643
1140	NULL	114	338	110	110	674
1280	1274	128	383	127	127	770
1340	1325	134	400	132	132	793
1410	1414	141	426	144	144	846
1490	NULL	149	443	145	145	881
1600	1626	160	481	161	161	970
1700	1719	170	511	171	171	1027
362	1819	180	541	181	181	1087
374	1877	188	563	187	187	1121
380	1925	194	578	190	190	1157
398	1971	197	593	199	199	1187
428	2121	210	634	214	214	1273
436	2164	215	648	218	218	1296
446	2211	221	665	223	223	1331
452	2280	227	680	226	226	1364
468	2312	231	696	234	234	1392
492	2479	248	742	246	246	1483


-- !query
SELECT c,
       a+b*2,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
-- !query schema
struct<c:int,(a + (b * 2)):int,abs((b - c)):int>
-- !query output
108	319	2
112	338	2
117	354	2
124	367	2
129	383	1
131	400	3
140	426	1
146	443	3
153	451	3
163	481	3
172	511	2
179	529	3
182	541	2
186	563	2
193	578	1
228	680	1
239	709	3
240	NULL	4
247	742	1


-- !query
SELECT c,
       a+b*2,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
 ORDER BY 1,3,2
-- !query schema
struct<c:int,(a + (b * 2)):int,abs((b - c)):int>
-- !query output
108	319	2
112	338	2
117	354	2
124	367	2
129	383	1
131	400	3
140	426	1
146	443	3
153	451	3
163	481	3
172	511	2
179	529	3
182	541	2
186	563	2
193	578	1
228	680	1
239	709	3
240	NULL	4
247	742	1


-- !query
SELECT c,
       a+b*2,
       abs(b-c)
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<c:int,(a + (b * 2)):int,abs((b - c)):int>
-- !query output
108	319	2
112	338	2
117	354	2
124	367	2
129	383	1
131	400	3
140	426	1
146	443	3
153	451	3
163	481	3
172	511	2
179	529	3
182	541	2
186	563	2
193	578	1
228	680	1
239	709	3
240	NULL	4
247	742	1


-- !query
SELECT c,
       a+b*2,
       abs(b-c)
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,3,1
-- !query schema
struct<c:int,(a + (b * 2)):int,abs((b - c)):int>
-- !query output
240	NULL	4
108	319	2
112	338	2
117	354	2
124	367	2
129	383	1
131	400	3
140	426	1
146	443	3
153	451	3
163	481	3
172	511	2
179	529	3
182	541	2
186	563	2
193	578	1
228	680	1
239	709	3
247	742	1


-- !query
SELECT b-c,
       b
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
    OR d>e
-- !query schema
struct<(b - c):int,b:int>
-- !query output
-1	128
-1	197
-1	202
-1	215
-1	221
-1	227
-1	231
-2	106
-2	170
-2	180
-3	160
-3	210
1	141
1	194
1	248
2	114
2	188
3	134
3	149


-- !query
SELECT b-c,
       b
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
    OR d>e
 ORDER BY 1,2
-- !query schema
struct<(b - c):int,b:int>
-- !query output
-3	160
-3	210
-2	106
-2	170
-2	180
-1	128
-1	197
-1	202
-1	215
-1	221
-1	227
-1	231
1	141
1	194
1	248
2	114
2	188
3	134
3	149


-- !query
SELECT b-c,
       b
  FROM t1
 WHERE (e>c OR e<d)
    OR d>e
    OR (e>a AND e<b)
-- !query schema
struct<(b - c):int,b:int>
-- !query output
-1	128
-1	197
-1	202
-1	215
-1	221
-1	227
-1	231
-2	106
-2	170
-2	180
-3	160
-3	210
1	141
1	194
1	248
2	114
2	188
3	134
3	149


-- !query
SELECT b-c,
       b
  FROM t1
 WHERE (e>c OR e<d)
    OR d>e
    OR (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<(b - c):int,b:int>
-- !query output
-2	106
2	114
-1	128
3	134
1	141
3	149
-3	160
-2	170
-2	180
2	188
1	194
-1	197
-1	202
-3	210
-1	215
-1	221
-1	227
-1	231
1	248


-- !query
SELECT b-c,
       b
  FROM t1
 WHERE (e>a AND e<b)
    OR d>e
    OR (e>c OR e<d)
-- !query schema
struct<(b - c):int,b:int>
-- !query output
-1	128
-1	197
-1	202
-1	215
-1	221
-1	227
-1	231
-2	106
-2	170
-2	180
-3	160
-3	210
1	141
1	194
1	248
2	114
2	188
3	134
3	149


-- !query
SELECT b-c,
       b
  FROM t1
 WHERE (e>a AND e<b)
    OR d>e
    OR (e>c OR e<d)
 ORDER BY 2,1
-- !query schema
struct<(b - c):int,b:int>
-- !query output
-2	106
2	114
-1	128
3	134
1	141
3	149
-3	160
-2	170
-2	180
2	188
1	194
-1	197
-1	202
-3	210
-1	215
-1	221
-1	227
-1	231
1	248


-- !query
SELECT (a+b+c+d+e)/5,
       b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,b:int>
-- !query output
107.0	106
127.0	128


-- !query
SELECT (a+b+c+d+e)/5,
       b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,b:int>
-- !query output
107.0	106
127.0	128


-- !query
SELECT abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       (a+b+c+d+e)/5,
       abs(b-c)
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       (a+b+c+d+e)/5,
       abs(b-c)
  FROM t1
 WHERE c>d
 ORDER BY 3,4,5,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483
643
705
846
970
NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
643
705
846
970
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
 ORDER BY 1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0


-- !query
SELECT a+b*2+c*3+d*4,
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int>
-- !query output
1079	107
1165	116
1414	144
1626	161
1719	171
1819	181
1877	187
1925	190
1971	199
2121	214
2164	218
2211	223
2280	226
2312	234
2479	246
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int>
-- !query output
NULL	NULL
1079	107
1165	116
1414	144
1626	161
1719	171
1819	181
1877	187
1925	190
1971	199
2121	214
2164	218
2211	223
2280	226
2312	234
2479	246


-- !query
SELECT a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1079	222
1274	111
1325	333
1414	555
1626	444
1719	222
1819	222
1877	111
1925	444
1971	555
2121	555
2164	444
2211	444
2280	111
2312	555
2479	222
NULL	222
NULL	555
NULL	555


-- !query
SELECT a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	222
NULL	555
NULL	555
1079	222
1274	111
1325	333
1414	555
1626	444
1719	222
1819	222
1877	111
1925	444
1971	555
2121	555
2164	444
2211	444
2280	111
2312	555
2479	222


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int>
-- !query output
111	2802	188
111	3405	227
222	1604	106
222	2589	170
222	2739	180
444	2436	160


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,3,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int>
-- !query output
111	2802	188
111	3405	227
222	1604	106
222	2589	170
222	2739	180
444	2436	160


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int>
-- !query output
111	2802	188
111	3405	227
222	1604	106
222	2589	170
222	2739	180
444	2436	160


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,3,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int>
-- !query output
222	1604	106
444	2436	160
222	2589	170
222	2739	180
111	2802	188
111	3405	227


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
111	128	-1	1274
111	188	-1	1877
222	248	-2	2479
333	134	-2	1325
555	197	2	1971


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,4,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
111	128	-1	1274
111	188	-1	1877
222	248	-2	2479
333	134	-2	1325
555	197	2	1971


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d>e
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
111	128	-1	1274
111	188	-1	1877
222	248	-2	2479
333	134	-2	1325
555	197	2	1971


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d>e
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
111	128	-1	1274
333	134	-2	1325
111	188	-1	1877
555	197	2	1971
222	248	-2	2479


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       b-c,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,(b - c):int,d:int>
-- !query output



-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       b-c,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,3,4,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,(b - c):int,d:int>
-- !query output



-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       b-c,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
   AND b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,(b - c):int,d:int>
-- !query output



-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       b-c,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
   AND b>c
 ORDER BY 2,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,(b - c):int,d:int>
-- !query output



-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       b-c,
       d
  FROM t1
 WHERE b>c
   AND e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,(b - c):int,d:int>
-- !query output



-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       b-c,
       d
  FROM t1
 WHERE b>c
   AND e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,4,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,(b - c):int,d:int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int>
-- !query output
111	1	193
111	NULL	112
111	NULL	146


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 3,1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int>
-- !query output
111	NULL	112
111	NULL	146
111	1	193


-- !query
SELECT c-d,
       a+b*2+c*3,
       d
  FROM t1
 WHERE a>b
-- !query schema
struct<(c - d):int,((a + (b * 2)) + (c * 3)):int,d:int>
-- !query output
-1	1027	173
-1	1087	183
-1	1296	217
-1	643	109
-1	970	164
-2	846	142
1	1273	212
2	1187	196
2	1331	220
2	1392	230
4	827	135
NULL	1066	NULL
NULL	1426	NULL
NULL	739	NULL
NULL	910	NULL


-- !query
SELECT c-d,
       a+b*2+c*3,
       d
  FROM t1
 WHERE a>b
 ORDER BY 3,2
-- !query schema
struct<(c - d):int,((a + (b * 2)) + (c * 3)):int,d:int>
-- !query output
NULL	739	NULL
NULL	910	NULL
NULL	1066	NULL
NULL	1426	NULL
-1	643	109
4	827	135
-2	846	142
-1	970	164
-1	1027	173
-1	1087	183
2	1187	196
1	1273	212
-1	1296	217
2	1331	220
2	1392	230


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       b-c,
       c,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,(b - c):int,c:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
107.0	1604	107	-2	108	1	1060
127.0	1899	127	-1	129	-1	1280
132.0	1975	132	3	131	-2	1340
142.0	2129	144	1	140	3	1410
162.0	2436	161	-3	163	1	1600
172.0	2589	171	-2	172	1	1700
182.0	2739	181	-2	182	1	362
187.0	2802	187	2	186	-1	374
192.0	2880	190	1	193	-4	380
197.0	2946	199	-1	198	2	398
212.0	3176	214	-3	213	4	428
217.0	3259	218	-1	216	3	436
222.0	3331	223	-1	222	2	446
227.0	3405	226	-1	228	-1	452
232.0	3477	234	-1	232	3	468
247.0	3704	246	1	247	-2	492
NULL	NULL	110	2	112	-4	1140
NULL	NULL	145	3	146	-4	1490
NULL	NULL	NULL	-1	203	NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       b-c,
       c,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 4,3,5,1,2,7,6
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,(b - c):int,c:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
162.0	2436	161	-3	163	1	1600
212.0	3176	214	-3	213	4	428
107.0	1604	107	-2	108	1	1060
172.0	2589	171	-2	172	1	1700
182.0	2739	181	-2	182	1	362
NULL	NULL	NULL	-1	203	NULL	NULL
127.0	1899	127	-1	129	-1	1280
197.0	2946	199	-1	198	2	398
217.0	3259	218	-1	216	3	436
222.0	3331	223	-1	222	2	446
227.0	3405	226	-1	228	-1	452
232.0	3477	234	-1	232	3	468
142.0	2129	144	1	140	3	1410
192.0	2880	190	1	193	-4	380
247.0	3704	246	1	247	-2	492
NULL	NULL	110	2	112	-4	1140
187.0	2802	187	2	186	-1	374
132.0	1975	132	3	131	-2	1340
NULL	NULL	145	3	146	-4	1490


-- !query
SELECT a+b*2+c*3,
       a+b*2
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int>
-- !query output
1121	563
1187	593
1331	665
1392	696
1483	742
705	354
770	383
793	400
827	410
846	426
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3,
       a+b*2
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
705	354
770	383
793	400
827	410
846	426
1121	563
1187	593
1331	665
1392	696
1483	742


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       c,
       b,
       d-e,
       (a+b+c+d+e)/5,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,c:int,b:int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int>
-- !query output
1165	705	117	119	NULL	NULL	2
1274	770	129	128	1	127.0	-1
1325	793	131	134	3	132.0	3
1367	827	139	136	-2	137.0	-3
1414	846	140	141	-1	142.0	1
1877	1121	186	188	4	187.0	2
1971	1187	198	197	1	197.0	-1
2211	1331	222	221	-4	222.0	-1
2312	1392	232	231	-3	232.0	-1
2479	1483	247	248	4	247.0	1
NULL	NULL	168	NULL	-1	NULL	NULL
NULL	NULL	203	202	-3	NULL	-1
NULL	NULL	240	244	NULL	NULL	4


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       c,
       b,
       d-e,
       (a+b+c+d+e)/5,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 1,2,4,6
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,c:int,b:int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int>
-- !query output
NULL	NULL	168	NULL	-1	NULL	NULL
NULL	NULL	203	202	-3	NULL	-1
NULL	NULL	240	244	NULL	NULL	4
1165	705	117	119	NULL	NULL	2
1274	770	129	128	1	127.0	-1
1325	793	131	134	3	132.0	3
1367	827	139	136	-2	137.0	-3
1414	846	140	141	-1	142.0	1
1877	1121	186	188	4	187.0	2
1971	1187	198	197	1	197.0	-1
2211	1331	222	221	-4	222.0	-1
2312	1392	232	231	-3	232.0	-1
2479	1483	247	248	4	247.0	1


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
   AND d>e
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
   AND d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
   AND d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       a,
       abs(b-c),
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       a,
       abs(b-c),
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       a-b,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a>b
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(a - b):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1027	1700	174	1	173	222
1087	362	184	1	183	222
1187	398	195	2	196	555
1273	428	211	4	212	555
1296	436	219	3	217	444
1331	446	224	2	220	444
1392	468	233	3	230	555
643	1060	105	1	109	222
846	1410	143	3	142	555
970	1600	162	1	164	444


-- !query
SELECT a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       a-b,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a>b
   AND c BETWEEN b-2 AND d+2
 ORDER BY 4,6,1,2,5,3
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(a - b):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
643	1060	105	1	109	222
1027	1700	174	1	173	222
1087	362	184	1	183	222
970	1600	162	1	164	444
1331	446	224	2	220	444
1187	398	195	2	196	555
1296	436	219	3	217	444
846	1410	143	3	142	555
1392	468	233	3	230	555
1273	428	211	4	212	555


-- !query
SELECT a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       a-b,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(a - b):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1027	1700	174	1	173	222
1087	362	184	1	183	222
1187	398	195	2	196	555
1273	428	211	4	212	555
1296	436	219	3	217	444
1331	446	224	2	220	444
1392	468	233	3	230	555
643	1060	105	1	109	222
846	1410	143	3	142	555
970	1600	162	1	164	444


-- !query
SELECT a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       a-b,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
 ORDER BY 6,5,2,3
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(a - b):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
643	1060	105	1	109	222
1027	1700	174	1	173	222
1087	362	184	1	183	222
970	1600	162	1	164	444
1296	436	219	3	217	444
1331	446	224	2	220	444
846	1410	143	3	142	555
1187	398	195	2	196	555
1273	428	211	4	212	555
1392	468	233	3	230	555


-- !query
SELECT b-c,
       c-d,
       a+b*2+c*3+d*4+e*5,
       a,
       a+b*2+c*3,
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(b - c):int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	-1	3259	218	1296	3	2164
-1	-1	3405	226	1364	-1	2280
-1	2	2946	199	1187	2	1971
-1	2	3331	223	1331	2	2211
-1	2	3477	234	1392	3	2312
-1	2	NULL	NULL	NULL	NULL	NULL
-1	3	1899	127	770	-1	1274
-2	-1	1604	107	643	1	1079
-2	-1	2589	171	1027	1	1719
-2	-1	2739	181	1087	1	1819
-2	NULL	NULL	123	739	1	NULL
-3	-1	2436	161	970	1	1626
-3	1	3176	214	1273	4	2121
-3	NULL	NULL	151	910	1	NULL
-3	NULL	NULL	177	1066	1	NULL
-3	NULL	NULL	237	1426	1	NULL
1	-2	2129	144	846	3	1414
1	-2	3704	246	1483	-2	2479
1	1	2880	190	1157	-4	1925
2	-3	2802	187	1121	-1	1877
2	2	NULL	116	705	-3	1165
2	NULL	NULL	110	674	-4	NULL
3	-2	1975	132	793	-2	1325
3	NULL	NULL	145	881	-4	NULL
4	-3	NULL	NULL	NULL	NULL	NULL


-- !query
SELECT b-c,
       c-d,
       a+b*2+c*3+d*4+e*5,
       a,
       a+b*2+c*3,
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR (a>b-2 AND a<b+2)
 ORDER BY 5,1,3
-- !query schema
struct<(b - c):int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	2	NULL	NULL	NULL	NULL	NULL
4	-3	NULL	NULL	NULL	NULL	NULL
-2	-1	1604	107	643	1	1079
2	NULL	NULL	110	674	-4	NULL
2	2	NULL	116	705	-3	1165
-2	NULL	NULL	123	739	1	NULL
-1	3	1899	127	770	-1	1274
3	-2	1975	132	793	-2	1325
1	-2	2129	144	846	3	1414
3	NULL	NULL	145	881	-4	NULL
-3	NULL	NULL	151	910	1	NULL
-3	-1	2436	161	970	1	1626
-2	-1	2589	171	1027	1	1719
-3	NULL	NULL	177	1066	1	NULL
-2	-1	2739	181	1087	1	1819
2	-3	2802	187	1121	-1	1877
1	1	2880	190	1157	-4	1925
-1	2	2946	199	1187	2	1971
-3	1	3176	214	1273	4	2121
-1	-1	3259	218	1296	3	2164
-1	2	3331	223	1331	2	2211
-1	-1	3405	226	1364	-1	2280
-1	2	3477	234	1392	3	2312
-3	NULL	NULL	237	1426	1	NULL
1	-2	3704	246	1483	-2	2479


-- !query
SELECT b-c,
       c-d,
       a+b*2+c*3+d*4+e*5,
       a,
       a+b*2+c*3,
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(b - c):int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	-1	3259	218	1296	3	2164
-1	-1	3405	226	1364	-1	2280
-1	2	2946	199	1187	2	1971
-1	2	3331	223	1331	2	2211
-1	2	3477	234	1392	3	2312
-1	2	NULL	NULL	NULL	NULL	NULL
-1	3	1899	127	770	-1	1274
-2	-1	1604	107	643	1	1079
-2	-1	2589	171	1027	1	1719
-2	-1	2739	181	1087	1	1819
-2	NULL	NULL	123	739	1	NULL
-3	-1	2436	161	970	1	1626
-3	1	3176	214	1273	4	2121
-3	NULL	NULL	151	910	1	NULL
-3	NULL	NULL	177	1066	1	NULL
-3	NULL	NULL	237	1426	1	NULL
1	-2	2129	144	846	3	1414
1	-2	3704	246	1483	-2	2479
1	1	2880	190	1157	-4	1925
2	-3	2802	187	1121	-1	1877
2	2	NULL	116	705	-3	1165
2	NULL	NULL	110	674	-4	NULL
3	-2	1975	132	793	-2	1325
3	NULL	NULL	145	881	-4	NULL
4	-3	NULL	NULL	NULL	NULL	NULL


-- !query
SELECT b-c,
       c-d,
       a+b*2+c*3+d*4+e*5,
       a,
       a+b*2+c*3,
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
 ORDER BY 3,1,2,6,4
-- !query schema
struct<(b - c):int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-3	NULL	NULL	151	910	1	NULL
-3	NULL	NULL	177	1066	1	NULL
-3	NULL	NULL	237	1426	1	NULL
-2	NULL	NULL	123	739	1	NULL
-1	2	NULL	NULL	NULL	NULL	NULL
2	NULL	NULL	110	674	-4	NULL
2	2	NULL	116	705	-3	1165
3	NULL	NULL	145	881	-4	NULL
4	-3	NULL	NULL	NULL	NULL	NULL
-2	-1	1604	107	643	1	1079
-1	3	1899	127	770	-1	1274
3	-2	1975	132	793	-2	1325
1	-2	2129	144	846	3	1414
-3	-1	2436	161	970	1	1626
-2	-1	2589	171	1027	1	1719
-2	-1	2739	181	1087	1	1819
2	-3	2802	187	1121	-1	1877
1	1	2880	190	1157	-4	1925
-1	2	2946	199	1187	2	1971
-3	1	3176	214	1273	4	2121
-1	-1	3259	218	1296	3	2164
-1	2	3331	223	1331	2	2211
-1	-1	3405	226	1364	-1	2280
-1	2	3477	234	1392	3	2312
1	-2	3704	246	1483	-2	2479


-- !query
SELECT b-c,
       c-d,
       a+b*2+c*3+d*4+e*5,
       a,
       a+b*2+c*3,
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
-- !query schema
struct<(b - c):int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	-1	3259	218	1296	3	2164
-1	-1	3405	226	1364	-1	2280
-1	2	2946	199	1187	2	1971
-1	2	3331	223	1331	2	2211
-1	2	3477	234	1392	3	2312
-1	2	NULL	NULL	NULL	NULL	NULL
-1	3	1899	127	770	-1	1274
-2	-1	1604	107	643	1	1079
-2	-1	2589	171	1027	1	1719
-2	-1	2739	181	1087	1	1819
-2	NULL	NULL	123	739	1	NULL
-3	-1	2436	161	970	1	1626
-3	1	3176	214	1273	4	2121
-3	NULL	NULL	151	910	1	NULL
-3	NULL	NULL	177	1066	1	NULL
-3	NULL	NULL	237	1426	1	NULL
1	-2	2129	144	846	3	1414
1	-2	3704	246	1483	-2	2479
1	1	2880	190	1157	-4	1925
2	-3	2802	187	1121	-1	1877
2	2	NULL	116	705	-3	1165
2	NULL	NULL	110	674	-4	NULL
3	-2	1975	132	793	-2	1325
3	NULL	NULL	145	881	-4	NULL
4	-3	NULL	NULL	NULL	NULL	NULL


-- !query
SELECT b-c,
       c-d,
       a+b*2+c*3+d*4+e*5,
       a,
       a+b*2+c*3,
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
 ORDER BY 5,7,3
-- !query schema
struct<(b - c):int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	2	NULL	NULL	NULL	NULL	NULL
4	-3	NULL	NULL	NULL	NULL	NULL
-2	-1	1604	107	643	1	1079
2	NULL	NULL	110	674	-4	NULL
2	2	NULL	116	705	-3	1165
-2	NULL	NULL	123	739	1	NULL
-1	3	1899	127	770	-1	1274
3	-2	1975	132	793	-2	1325
1	-2	2129	144	846	3	1414
3	NULL	NULL	145	881	-4	NULL
-3	NULL	NULL	151	910	1	NULL
-3	-1	2436	161	970	1	1626
-2	-1	2589	171	1027	1	1719
-3	NULL	NULL	177	1066	1	NULL
-2	-1	2739	181	1087	1	1819
2	-3	2802	187	1121	-1	1877
1	1	2880	190	1157	-4	1925
-1	2	2946	199	1187	2	1971
-3	1	3176	214	1273	4	2121
-1	-1	3259	218	1296	3	2164
-1	2	3331	223	1331	2	2211
-1	-1	3405	226	1364	-1	2280
-1	2	3477	234	1392	3	2312
-3	NULL	NULL	237	1426	1	NULL
1	-2	3704	246	1483	-2	2479


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       a,
       e,
       a+b*2,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       a,
       e,
       a+b*2,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
 ORDER BY 3,1,2,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       a,
       e,
       a+b*2,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       a,
       e,
       a+b*2,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 7,2,6,3,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       e,
       a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,e:int,(a - b):int>
-- !query output
1121	185	-1
1157	191	-4
1483	245	-2
705	NULL	-3
846	143	3


-- !query
SELECT a+b*2+c*3,
       e,
       a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
 ORDER BY 3,2,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,e:int,(a - b):int>
-- !query output
1157	191	-4
705	NULL	-3
1483	245	-2
1121	185	-1
846	143	3


-- !query
SELECT a+b*2+c*3,
       e,
       a-b
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,e:int,(a - b):int>
-- !query output
1121	185	-1
1157	191	-4
1483	245	-2
705	NULL	-3
846	143	3


-- !query
SELECT a+b*2+c*3,
       e,
       a-b
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,3
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,e:int,(a - b):int>
-- !query output
705	NULL	-3
846	143	3
1121	185	-1
1157	191	-4
1483	245	-2


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1079	333	107	643	1604
1165	222	116	705	NULL
1274	222	127	770	1899
1325	222	132	793	1975
1367	333	138	827	2052
1414	444	144	846	2129
1626	333	161	970	2436
1719	333	171	1027	2589
1819	333	181	1087	2739
1877	222	187	1121	2802
1925	111	190	1157	2880
1971	333	199	1187	2946
2121	444	214	1273	3176
2164	444	218	1296	3259
2211	333	223	1331	3331
2280	222	226	1364	3405
2312	444	234	1392	3477
2479	222	246	1483	3704
NULL	111	110	674	NULL
NULL	111	145	881	NULL
NULL	222	155	946	NULL
NULL	333	123	739	NULL
NULL	333	151	910	NULL
NULL	333	177	1066	NULL
NULL	333	237	1426	NULL
NULL	444	167	NULL	NULL
NULL	444	208	NULL	NULL
NULL	444	NULL	NULL	NULL
NULL	444	NULL	NULL	NULL
NULL	444	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 5,2,4
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	111	110	674	NULL
NULL	111	145	881	NULL
1165	222	116	705	NULL
NULL	222	155	946	NULL
NULL	333	123	739	NULL
NULL	333	151	910	NULL
NULL	333	177	1066	NULL
NULL	333	237	1426	NULL
NULL	444	167	NULL	NULL
NULL	444	NULL	NULL	NULL
NULL	444	NULL	NULL	NULL
NULL	444	208	NULL	NULL
NULL	444	NULL	NULL	NULL
1079	333	107	643	1604
1274	222	127	770	1899
1325	222	132	793	1975
1367	333	138	827	2052
1414	444	144	846	2129
1626	333	161	970	2436
1719	333	171	1027	2589
1819	333	181	1087	2739
1877	222	187	1121	2802
1925	111	190	1157	2880
1971	333	199	1187	2946
2121	444	214	1273	3176
2164	444	218	1296	3259
2211	333	223	1331	3331
2280	222	226	1364	3405
2312	444	234	1392	3477
2479	222	246	1483	3704


-- !query
SELECT abs(b-c),
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c
  FROM t1
 WHERE a>b
-- !query schema
struct<c:int>
-- !query output
108
124
139
140
153
163
172
179
182
198
213
216
222
232
239


-- !query
SELECT c
  FROM t1
 WHERE a>b
 ORDER BY 1
-- !query schema
struct<c:int>
-- !query output
108
124
139
140
153
163
172
179
182
198
213
216
222
232
239


-- !query
SELECT a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>a AND e<b)
-- !query schema
struct<(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int>
-- !query output
-1	222	127	111	1
-4	111	110	555	2
-4	111	145	222	3
-4	111	190	444	1
1	333	107	222	2


-- !query
SELECT a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>a AND e<b)
 ORDER BY 5,4,3
-- !query schema
struct<(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int>
-- !query output
-1	222	127	111	1
-4	111	190	444	1
1	333	107	222	2
-4	111	110	555	2
-4	111	145	222	3


-- !query
SELECT a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int>
-- !query output
-1	222	127	111	1
-4	111	110	555	2
-4	111	145	222	3
-4	111	190	444	1
1	333	107	222	2


-- !query
SELECT a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,2,4
-- !query schema
struct<(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int>
-- !query output
1	333	107	222	2
-4	111	110	555	2
-1	222	127	111	1
-4	111	145	222	3
-4	111	190	444	1


-- !query
SELECT b-c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
-- !query schema
struct<(b - c):int>
-- !query output
-1
-1
-1
-1
-1
-1
-1
-2
-2
-2
-3
-3
1
1
1
2
2
3
3
4
NULL
NULL
NULL


-- !query
SELECT b-c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<(b - c):int>
-- !query output
NULL
NULL
NULL
-3
-3
-2
-2
-2
-1
-1
-1
-1
-1
-1
-1
1
1
1
2
2
3
3
4


-- !query
SELECT b-c
  FROM t1
 WHERE (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(b - c):int>
-- !query output
-1
-1
-1
-1
-1
-1
-1
-2
-2
-2
-3
-3
1
1
1
2
2
3
3
4
NULL
NULL
NULL


-- !query
SELECT b-c
  FROM t1
 WHERE (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<(b - c):int>
-- !query output
NULL
NULL
NULL
-3
-3
-2
-2
-2
-1
-1
-1
-1
-1
-1
-1
1
1
1
2
2
3
3
4


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       d-e
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,e:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,(d - e):int>
-- !query output
1604	105	222	1	4
1899	125	111	-1	1
1975	130	333	-2	3
2052	137	222	2	-2
2129	143	555	3	-1
2436	162	444	1	2
2589	174	222	1	-1
2739	184	222	1	-1
2802	185	111	-1	4
2880	191	444	-4	1
2946	195	555	2	1
3176	211	555	4	1
3259	219	444	3	-2
3331	224	444	2	-4
3405	225	111	-1	4
3477	233	555	3	-3
3704	245	222	-2	4
NULL	104	555	NULL	-3
NULL	113	555	-4	NULL
NULL	121	222	1	NULL
NULL	147	222	-4	NULL
NULL	158	555	-2	NULL
NULL	166	222	NULL	-1
NULL	175	555	1	NULL
NULL	204	555	NULL	-3
NULL	207	555	NULL	-1
NULL	238	444	1	NULL
NULL	NULL	222	-3	NULL
NULL	NULL	555	1	NULL
NULL	NULL	555	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       d-e
  FROM t1
 ORDER BY 1,5,3
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,e:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,(d - e):int>
-- !query output
NULL	NULL	222	-3	NULL
NULL	121	222	1	NULL
NULL	147	222	-4	NULL
NULL	238	444	1	NULL
NULL	113	555	-4	NULL
NULL	158	555	-2	NULL
NULL	175	555	1	NULL
NULL	NULL	555	NULL	NULL
NULL	NULL	555	1	NULL
NULL	204	555	NULL	-3
NULL	104	555	NULL	-3
NULL	166	222	NULL	-1
NULL	207	555	NULL	-1
1604	105	222	1	4
1899	125	111	-1	1
1975	130	333	-2	3
2052	137	222	2	-2
2129	143	555	3	-1
2436	162	444	1	2
2589	174	222	1	-1
2739	184	222	1	-1
2802	185	111	-1	4
2880	191	444	-4	1
2946	195	555	2	1
3176	211	555	4	1
3259	219	444	3	-2
3331	224	444	2	-4
3405	225	111	-1	4
3477	233	555	3	-3
3704	245	222	-2	4


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       b-c
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,(b - c):int>
-- !query output
111	192	-4	380	1	1
111	NULL	-4	1140	NULL	2
111	NULL	-4	1490	NULL	3
222	115	-3	1190	NULL	2
222	126	-1	1280	1	-1
222	133	-2	1340	3	3
222	189	-1	374	4	2
222	229	-1	452	4	-1
222	249	-2	492	4	1
222	NULL	-2	1570	NULL	-2
333	109	1	1060	4	-2
333	135	2	1360	-2	-3
333	164	1	1600	2	-3
333	173	1	1700	-1	-2
333	183	1	362	-1	-2
333	196	2	398	1	-1
333	220	2	446	-4	-1
333	NULL	1	1220	NULL	-2
333	NULL	1	1500	NULL	-3
333	NULL	1	354	NULL	-3
333	NULL	1	474	NULL	-3
444	101	NULL	1020	-3	NULL
444	142	3	1410	-1	1
444	165	NULL	NULL	-1	NULL
444	201	NULL	NULL	-3	-1
444	206	NULL	NULL	-1	NULL
444	212	4	428	1	-3
444	217	3	436	-2	-1
444	230	3	468	-3	-1
444	243	NULL	NULL	NULL	4


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       b-c
  FROM t1
 ORDER BY 2,1,6,4
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,(b - c):int>
-- !query output
111	NULL	-4	1140	NULL	2
111	NULL	-4	1490	NULL	3
222	NULL	-2	1570	NULL	-2
333	NULL	1	354	NULL	-3
333	NULL	1	474	NULL	-3
333	NULL	1	1500	NULL	-3
333	NULL	1	1220	NULL	-2
444	101	NULL	1020	-3	NULL
333	109	1	1060	4	-2
222	115	-3	1190	NULL	2
222	126	-1	1280	1	-1
222	133	-2	1340	3	3
333	135	2	1360	-2	-3
444	142	3	1410	-1	1
333	164	1	1600	2	-3
444	165	NULL	NULL	-1	NULL
333	173	1	1700	-1	-2
333	183	1	362	-1	-2
222	189	-1	374	4	2
111	192	-4	380	1	1
333	196	2	398	1	-1
444	201	NULL	NULL	-3	-1
444	206	NULL	NULL	-1	NULL
444	212	4	428	1	-3
444	217	3	436	-2	-1
333	220	2	446	-4	-1
222	229	-1	452	4	-1
444	230	3	468	-3	-1
444	243	NULL	NULL	NULL	4
222	249	-2	492	4	1


-- !query
SELECT abs(a),
       a-b,
       c,
       abs(b-c)
  FROM t1
 WHERE d>e
-- !query schema
struct<abs(a):int,(a - b):int,c:int,abs((b - c)):int>
-- !query output
107	1	108	2
127	-1	129	1
132	-2	131	3
161	1	163	3
187	-1	186	2
190	-4	193	1
199	2	198	1
214	4	213	3
226	-1	228	1
246	-2	247	1


-- !query
SELECT abs(a),
       a-b,
       c,
       abs(b-c)
  FROM t1
 WHERE d>e
 ORDER BY 2,3,4
-- !query schema
struct<abs(a):int,(a - b):int,c:int,abs((b - c)):int>
-- !query output
190	-4	193	1
132	-2	131	3
246	-2	247	1
127	-1	129	1
187	-1	186	2
226	-1	228	1
107	1	108	2
161	1	163	3
199	2	198	1
214	4	213	3


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       c,
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<a:int,c:int,(a - b):int>
-- !query output
107	108	1
110	112	-4
116	117	-3
123	124	1
127	129	-1
132	131	-2
138	139	2
144	140	3
145	146	-4
151	153	1
155	159	-2
161	163	1
171	172	1
177	179	1
181	182	1
187	186	-1
190	193	-4
199	198	2
214	213	4
218	216	3
223	222	2
226	228	-1
234	232	3
237	239	1
246	247	-2
NULL	203	NULL
NULL	240	NULL


-- !query
SELECT a,
       c,
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,2
-- !query schema
struct<a:int,c:int,(a - b):int>
-- !query output
NULL	203	NULL
NULL	240	NULL
110	112	-4
145	146	-4
190	193	-4
116	117	-3
132	131	-2
155	159	-2
246	247	-2
127	129	-1
187	186	-1
226	228	-1
107	108	1
123	124	1
151	153	1
161	163	1
171	172	1
177	179	1
181	182	1
237	239	1
138	139	2
199	198	2
223	222	2
144	140	3
218	216	3
234	232	3
214	213	4


-- !query
SELECT b,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE b>c
-- !query schema
struct<b:int,(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int>
-- !query output
114	NULL	NULL	NULL	2
119	NULL	NULL	1165	2
134	132.0	1975	1325	3
141	142.0	2129	1414	1
149	NULL	NULL	NULL	3
188	187.0	2802	1877	2
194	192.0	2880	1925	1
244	NULL	NULL	NULL	4
248	247.0	3704	2479	1


-- !query
SELECT b,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE b>c
 ORDER BY 2,3
-- !query schema
struct<b:int,(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int>
-- !query output
114	NULL	NULL	NULL	2
119	NULL	NULL	1165	2
149	NULL	NULL	NULL	3
244	NULL	NULL	NULL	4
134	132.0	1975	1325	3
141	142.0	2129	1414	1
188	187.0	2802	1877	2
194	192.0	2880	1925	1
248	247.0	3704	2479	1


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int>
-- !query output
1079	106
1274	128


-- !query
SELECT a+b*2+c*3+d*4,
       b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int>
-- !query output
1079	106
1274	128


-- !query
SELECT e,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       d,
       b,
       a,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,b:int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1079	109	106	107	1604
1165	115	119	116	NULL
1274	126	128	127	1899
1325	133	134	132	1975
1367	135	136	138	2052
1414	142	141	144	2129
1626	164	160	161	2436
1719	173	170	171	2589
1819	183	180	181	2739
1877	189	188	187	2802
1925	192	194	190	2880
1971	196	197	199	2946
2121	212	210	214	3176
2164	217	215	218	3259
2211	220	221	223	3331
2280	229	227	226	3405
2312	230	231	234	3477
2479	249	248	246	3704
NULL	101	102	NULL	NULL
NULL	165	NULL	167	NULL
NULL	201	202	NULL	NULL
NULL	206	NULL	208	NULL
NULL	243	244	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       d,
       b,
       a,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 5,3,2,1,4
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,b:int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	165	NULL	167	NULL
NULL	206	NULL	208	NULL
NULL	101	102	NULL	NULL
1165	115	119	116	NULL
NULL	201	202	NULL	NULL
NULL	243	244	NULL	NULL
1079	109	106	107	1604
1274	126	128	127	1899
1325	133	134	132	1975
1367	135	136	138	2052
1414	142	141	144	2129
1626	164	160	161	2436
1719	173	170	171	2589
1819	183	180	181	2739
1877	189	188	187	2802
1925	192	194	190	2880
1971	196	197	199	2946
2121	212	210	214	3176
2164	217	215	218	3259
2211	220	221	223	3331
2280	229	227	226	3405
2312	230	231	234	3477
2479	249	248	246	3704


-- !query
SELECT a+b*2+c*3+d*4,
       d,
       b,
       a,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,b:int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1079	109	106	107	1604
1165	115	119	116	NULL
1274	126	128	127	1899
1325	133	134	132	1975
1367	135	136	138	2052
1414	142	141	144	2129
1626	164	160	161	2436
1719	173	170	171	2589
1819	183	180	181	2739
1877	189	188	187	2802
1925	192	194	190	2880
1971	196	197	199	2946
2121	212	210	214	3176
2164	217	215	218	3259
2211	220	221	223	3331
2280	229	227	226	3405
2312	230	231	234	3477
2479	249	248	246	3704
NULL	101	102	NULL	NULL
NULL	165	NULL	167	NULL
NULL	201	202	NULL	NULL
NULL	206	NULL	208	NULL
NULL	243	244	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       d,
       b,
       a,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 2,3,5,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,b:int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	101	102	NULL	NULL
1079	109	106	107	1604
1165	115	119	116	NULL
1274	126	128	127	1899
1325	133	134	132	1975
1367	135	136	138	2052
1414	142	141	144	2129
1626	164	160	161	2436
NULL	165	NULL	167	NULL
1719	173	170	171	2589
1819	183	180	181	2739
1877	189	188	187	2802
1925	192	194	190	2880
1971	196	197	199	2946
NULL	201	202	NULL	NULL
NULL	206	NULL	208	NULL
2121	212	210	214	3176
2164	217	215	218	3259
2211	220	221	223	3331
2280	229	227	226	3405
2312	230	231	234	3477
NULL	243	244	NULL	NULL
2479	249	248	246	3704


-- !query
SELECT b-c
  FROM t1
-- !query schema
struct<(b - c):int>
-- !query output
-1
-1
-1
-1
-1
-1
-1
-2
-2
-2
-2
-2
-3
-3
-3
-3
-3
-3
1
1
1
2
2
2
3
3
4
NULL
NULL
NULL


-- !query
SELECT b-c
  FROM t1
 ORDER BY 1
-- !query schema
struct<(b - c):int>
-- !query output
NULL
NULL
NULL
-3
-3
-3
-3
-3
-3
-2
-2
-2
-2
-2
-1
-1
-1
-1
-1
-1
-1
1
1
1
2
2
2
3
3
4


-- !query
SELECT (a+b+c+d+e)/5,
       b-c,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int>
-- !query output
107.0	-2	1604	107	1060	1
127.0	-1	1899	127	1280	-1
132.0	3	1975	132	1340	-2
137.0	-3	2052	138	1360	2
142.0	1	2129	144	1410	3
162.0	-3	2436	161	1600	1
172.0	-2	2589	171	1700	1
182.0	-2	2739	181	362	1
187.0	2	2802	187	374	-1
192.0	1	2880	190	380	-4
197.0	-1	2946	199	398	2
212.0	-3	3176	214	428	4
217.0	-1	3259	218	436	3
222.0	-1	3331	223	446	2
227.0	-1	3405	226	452	-1
232.0	-1	3477	234	468	3
247.0	1	3704	246	492	-2
NULL	-1	NULL	NULL	NULL	NULL
NULL	-2	NULL	123	1220	1
NULL	-2	NULL	155	1570	-2
NULL	-3	NULL	151	1500	1
NULL	-3	NULL	177	354	1
NULL	-3	NULL	237	474	1
NULL	2	NULL	110	1140	-4
NULL	2	NULL	116	1190	-3
NULL	3	NULL	145	1490	-4
NULL	4	NULL	NULL	NULL	NULL
NULL	NULL	NULL	167	NULL	NULL
NULL	NULL	NULL	208	NULL	NULL
NULL	NULL	NULL	NULL	1020	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       b-c,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b
  FROM t1
 ORDER BY 5,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int>
-- !query output
NULL	NULL	NULL	167	NULL	NULL
NULL	-1	NULL	NULL	NULL	NULL
NULL	NULL	NULL	208	NULL	NULL
NULL	4	NULL	NULL	NULL	NULL
NULL	-3	NULL	177	354	1
182.0	-2	2739	181	362	1
187.0	2	2802	187	374	-1
192.0	1	2880	190	380	-4
197.0	-1	2946	199	398	2
212.0	-3	3176	214	428	4
217.0	-1	3259	218	436	3
222.0	-1	3331	223	446	2
227.0	-1	3405	226	452	-1
232.0	-1	3477	234	468	3
NULL	-3	NULL	237	474	1
247.0	1	3704	246	492	-2
NULL	NULL	NULL	NULL	1020	NULL
107.0	-2	1604	107	1060	1
NULL	2	NULL	110	1140	-4
NULL	2	NULL	116	1190	-3
NULL	-2	NULL	123	1220	1
127.0	-1	1899	127	1280	-1
132.0	3	1975	132	1340	-2
137.0	-3	2052	138	1360	2
142.0	1	2129	144	1410	3
NULL	3	NULL	145	1490	-4
NULL	-3	NULL	151	1500	1
NULL	-2	NULL	155	1570	-2
162.0	-3	2436	161	1600	1
172.0	-2	2589	171	1700	1


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       d-e,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,(d - e):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
108	1060	222	-2	4	643
112	1140	555	2	NULL	674
117	1190	222	2	NULL	705
124	1220	222	-2	NULL	739
129	1280	111	-1	1	770
131	1340	333	3	3	793
139	1360	222	-3	-2	827
140	1410	555	1	-1	846
146	1490	222	3	NULL	881
153	1500	555	-3	NULL	910
159	1570	555	-2	NULL	946
163	1600	444	-3	2	970
168	NULL	222	NULL	-1	NULL
172	1700	222	-2	-1	1027
179	354	555	-3	NULL	1066
182	362	222	-2	-1	1087
186	374	111	2	4	1121
193	380	444	1	1	1157
198	398	555	-1	1	1187
203	NULL	555	-1	-3	NULL
213	428	555	-3	1	1273
216	436	444	-1	-2	1296
222	446	444	-1	-4	1331
228	452	111	-1	4	1364
232	468	555	-1	-3	1392
239	474	444	-3	NULL	1426
240	NULL	555	4	NULL	NULL
247	492	222	1	4	1483
NULL	1020	555	NULL	-3	NULL
NULL	NULL	555	NULL	-1	NULL


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       d-e,
       a+b*2+c*3
  FROM t1
 ORDER BY 3,6,2,1,4,5
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,(d - e):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
129	1280	111	-1	1	770
186	374	111	2	4	1121
228	452	111	-1	4	1364
168	NULL	222	NULL	-1	NULL
108	1060	222	-2	4	643
117	1190	222	2	NULL	705
124	1220	222	-2	NULL	739
139	1360	222	-3	-2	827
146	1490	222	3	NULL	881
172	1700	222	-2	-1	1027
182	362	222	-2	-1	1087
247	492	222	1	4	1483
131	1340	333	3	3	793
163	1600	444	-3	2	970
193	380	444	1	1	1157
216	436	444	-1	-2	1296
222	446	444	-1	-4	1331
239	474	444	-3	NULL	1426
NULL	NULL	555	NULL	-1	NULL
203	NULL	555	-1	-3	NULL
240	NULL	555	4	NULL	NULL
NULL	1020	555	NULL	-3	NULL
112	1140	555	2	NULL	674
140	1410	555	1	-1	846
153	1500	555	-3	NULL	910
159	1570	555	-2	NULL	946
179	354	555	-3	NULL	1066
198	398	555	-1	1	1187
213	428	555	-3	1	1273
232	468	555	-1	-3	1392


-- !query
SELECT abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE c>d
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       abs(b-c),
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d-e,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
-- !query schema
struct<c:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(d - e):int,(a + (b * 2)):int>
-- !query output
108	2	1079	333	1	4	319
112	2	NULL	111	-4	NULL	338
117	2	1165	222	-3	NULL	354
129	1	1274	222	-1	1	383
131	3	1325	222	-2	3	400
140	1	1414	444	3	-1	426
146	3	NULL	111	-4	NULL	443
163	3	1626	333	1	2	481
172	2	1719	333	1	-1	511
182	2	1819	333	1	-1	541
186	2	1877	222	-1	4	563
193	1	1925	111	-4	1	578
198	1	1971	333	2	1	593
203	1	NULL	444	NULL	-3	NULL
213	3	2121	444	4	1	634
216	1	2164	444	3	-2	648
222	1	2211	333	2	-4	665
228	1	2280	222	-1	4	680
232	1	2312	444	3	-3	696
247	1	2479	222	-2	4	742


-- !query
SELECT c,
       abs(b-c),
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d-e,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
 ORDER BY 6,2,3,4,7,1,5
-- !query schema
struct<c:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(d - e):int,(a + (b * 2)):int>
-- !query output
112	2	NULL	111	-4	NULL	338
117	2	1165	222	-3	NULL	354
146	3	NULL	111	-4	NULL	443
222	1	2211	333	2	-4	665
203	1	NULL	444	NULL	-3	NULL
232	1	2312	444	3	-3	696
216	1	2164	444	3	-2	648
140	1	1414	444	3	-1	426
172	2	1719	333	1	-1	511
182	2	1819	333	1	-1	541
129	1	1274	222	-1	1	383
193	1	1925	111	-4	1	578
198	1	1971	333	2	1	593
213	3	2121	444	4	1	634
163	3	1626	333	1	2	481
131	3	1325	222	-2	3	400
228	1	2280	222	-1	4	680
247	1	2479	222	-2	4	742
108	2	1079	333	1	4	319
186	2	1877	222	-1	4	563


-- !query
SELECT a+b*2,
       c-d,
       d-e,
       abs(a),
       a-b,
       c,
       b
  FROM t1
 WHERE a>b
-- !query schema
struct<(a + (b * 2)):int,(c - d):int,(d - e):int,abs(a):int,(a - b):int,c:int,b:int>
-- !query output
319	-1	4	107	1	108	106
367	NULL	NULL	123	1	124	122
410	4	-2	138	2	139	136
426	-2	-1	144	3	140	141
451	NULL	NULL	151	1	153	150
481	-1	2	161	1	163	160
511	-1	-1	171	1	172	170
529	NULL	NULL	177	1	179	176
541	-1	-1	181	1	182	180
593	2	1	199	2	198	197
634	1	1	214	4	213	210
648	-1	-2	218	3	216	215
665	2	-4	223	2	222	221
696	2	-3	234	3	232	231
709	NULL	NULL	237	1	239	236


-- !query
SELECT a+b*2,
       c-d,
       d-e,
       abs(a),
       a-b,
       c,
       b
  FROM t1
 WHERE a>b
 ORDER BY 1,6,2,5,3
-- !query schema
struct<(a + (b * 2)):int,(c - d):int,(d - e):int,abs(a):int,(a - b):int,c:int,b:int>
-- !query output
319	-1	4	107	1	108	106
367	NULL	NULL	123	1	124	122
410	4	-2	138	2	139	136
426	-2	-1	144	3	140	141
451	NULL	NULL	151	1	153	150
481	-1	2	161	1	163	160
511	-1	-1	171	1	172	170
529	NULL	NULL	177	1	179	176
541	-1	-1	181	1	182	180
593	2	1	199	2	198	197
634	1	1	214	4	213	210
648	-1	-2	218	3	216	215
665	2	-4	223	2	222	221
696	2	-3	234	3	232	231
709	NULL	NULL	237	1	239	236


-- !query
SELECT abs(b-c),
       c,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a+b*2+c*3+d*4+e*5,
       a-b
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       c,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a+b*2+c*3+d*4+e*5,
       a-b
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
    OR c>d
 ORDER BY 2,7,6,5,4,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       c,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a+b*2+c*3+d*4+e*5,
       a-b
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       c,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a+b*2+c*3+d*4+e*5,
       a-b
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
    OR c>d
 ORDER BY 6,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       e,
       a+b*2,
       a+b*2+c*3+d*4,
       abs(a),
       abs(b-c)
  FROM t1
 WHERE c>d
    OR d NOT BETWEEN 110 AND 150
    OR a>b
-- !query schema
struct<(d - e):int,e:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int,abs((b - c)):int>
-- !query output
-1	143	426	1414	144	1
-1	166	NULL	NULL	167	NULL
-1	174	511	1719	171	2
-1	184	541	1819	181	2
-1	207	NULL	NULL	208	NULL
-2	137	410	1367	138	3
-2	219	648	2164	218	1
-3	104	NULL	NULL	NULL	NULL
-3	204	NULL	NULL	NULL	1
-3	233	696	2312	234	1
-4	224	665	2211	223	1
1	125	383	1274	127	1
1	191	578	1925	190	1
1	195	593	1971	199	1
1	211	634	2121	214	3
2	162	481	1626	161	3
4	105	319	1079	107	2
4	185	563	1877	187	2
4	225	680	2280	226	1
4	245	742	2479	246	1
NULL	121	367	NULL	123	2
NULL	175	529	NULL	177	3
NULL	238	709	NULL	237	3
NULL	NULL	354	1165	116	2
NULL	NULL	451	NULL	151	3
NULL	NULL	NULL	NULL	NULL	4


-- !query
SELECT d-e,
       e,
       a+b*2,
       a+b*2+c*3+d*4,
       abs(a),
       abs(b-c)
  FROM t1
 WHERE c>d
    OR d NOT BETWEEN 110 AND 150
    OR a>b
 ORDER BY 1,3,6,4,2
-- !query schema
struct<(d - e):int,e:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int,abs((b - c)):int>
-- !query output
NULL	NULL	NULL	NULL	NULL	4
NULL	NULL	354	1165	116	2
NULL	121	367	NULL	123	2
NULL	NULL	451	NULL	151	3
NULL	175	529	NULL	177	3
NULL	238	709	NULL	237	3
-4	224	665	2211	223	1
-3	104	NULL	NULL	NULL	NULL
-3	204	NULL	NULL	NULL	1
-3	233	696	2312	234	1
-2	137	410	1367	138	3
-2	219	648	2164	218	1
-1	166	NULL	NULL	167	NULL
-1	207	NULL	NULL	208	NULL
-1	143	426	1414	144	1
-1	174	511	1719	171	2
-1	184	541	1819	181	2
1	125	383	1274	127	1
1	191	578	1925	190	1
1	195	593	1971	199	1
1	211	634	2121	214	3
2	162	481	1626	161	3
4	105	319	1079	107	2
4	185	563	1877	187	2
4	225	680	2280	226	1
4	245	742	2479	246	1


-- !query
SELECT d-e,
       e,
       a+b*2,
       a+b*2+c*3+d*4,
       abs(a),
       abs(b-c)
  FROM t1
 WHERE c>d
    OR a>b
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(d - e):int,e:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int,abs((b - c)):int>
-- !query output
-1	143	426	1414	144	1
-1	166	NULL	NULL	167	NULL
-1	174	511	1719	171	2
-1	184	541	1819	181	2
-1	207	NULL	NULL	208	NULL
-2	137	410	1367	138	3
-2	219	648	2164	218	1
-3	104	NULL	NULL	NULL	NULL
-3	204	NULL	NULL	NULL	1
-3	233	696	2312	234	1
-4	224	665	2211	223	1
1	125	383	1274	127	1
1	191	578	1925	190	1
1	195	593	1971	199	1
1	211	634	2121	214	3
2	162	481	1626	161	3
4	105	319	1079	107	2
4	185	563	1877	187	2
4	225	680	2280	226	1
4	245	742	2479	246	1
NULL	121	367	NULL	123	2
NULL	175	529	NULL	177	3
NULL	238	709	NULL	237	3
NULL	NULL	354	1165	116	2
NULL	NULL	451	NULL	151	3
NULL	NULL	NULL	NULL	NULL	4


-- !query
SELECT d-e,
       e,
       a+b*2,
       a+b*2+c*3+d*4,
       abs(a),
       abs(b-c)
  FROM t1
 WHERE c>d
    OR a>b
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1,5,2
-- !query schema
struct<(d - e):int,e:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int,abs((b - c)):int>
-- !query output
NULL	NULL	NULL	NULL	NULL	4
NULL	NULL	354	1165	116	2
NULL	121	367	NULL	123	2
NULL	NULL	451	NULL	151	3
NULL	175	529	NULL	177	3
NULL	238	709	NULL	237	3
-4	224	665	2211	223	1
-3	104	NULL	NULL	NULL	NULL
-3	204	NULL	NULL	NULL	1
-3	233	696	2312	234	1
-2	137	410	1367	138	3
-2	219	648	2164	218	1
-1	143	426	1414	144	1
-1	166	NULL	NULL	167	NULL
-1	174	511	1719	171	2
-1	184	541	1819	181	2
-1	207	NULL	NULL	208	NULL
1	125	383	1274	127	1
1	191	578	1925	190	1
1	195	593	1971	199	1
1	211	634	2121	214	3
2	162	481	1626	161	3
4	105	319	1079	107	2
4	185	563	1877	187	2
4	225	680	2280	226	1
4	245	742	2479	246	1


-- !query
SELECT d-e,
       e,
       a+b*2,
       a+b*2+c*3+d*4,
       abs(a),
       abs(b-c)
  FROM t1
 WHERE a>b
    OR c>d
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(d - e):int,e:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int,abs((b - c)):int>
-- !query output
-1	143	426	1414	144	1
-1	166	NULL	NULL	167	NULL
-1	174	511	1719	171	2
-1	184	541	1819	181	2
-1	207	NULL	NULL	208	NULL
-2	137	410	1367	138	3
-2	219	648	2164	218	1
-3	104	NULL	NULL	NULL	NULL
-3	204	NULL	NULL	NULL	1
-3	233	696	2312	234	1
-4	224	665	2211	223	1
1	125	383	1274	127	1
1	191	578	1925	190	1
1	195	593	1971	199	1
1	211	634	2121	214	3
2	162	481	1626	161	3
4	105	319	1079	107	2
4	185	563	1877	187	2
4	225	680	2280	226	1
4	245	742	2479	246	1
NULL	121	367	NULL	123	2
NULL	175	529	NULL	177	3
NULL	238	709	NULL	237	3
NULL	NULL	354	1165	116	2
NULL	NULL	451	NULL	151	3
NULL	NULL	NULL	NULL	NULL	4


-- !query
SELECT d-e,
       e,
       a+b*2,
       a+b*2+c*3+d*4,
       abs(a),
       abs(b-c)
  FROM t1
 WHERE a>b
    OR c>d
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 6,1
-- !query schema
struct<(d - e):int,e:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int,abs((b - c)):int>
-- !query output
-3	104	NULL	NULL	NULL	NULL
-1	166	NULL	NULL	167	NULL
-1	207	NULL	NULL	208	NULL
-4	224	665	2211	223	1
-3	233	696	2312	234	1
-3	204	NULL	NULL	NULL	1
-2	219	648	2164	218	1
-1	143	426	1414	144	1
1	191	578	1925	190	1
1	125	383	1274	127	1
1	195	593	1971	199	1
4	225	680	2280	226	1
4	245	742	2479	246	1
NULL	NULL	354	1165	116	2
NULL	121	367	NULL	123	2
-1	174	511	1719	171	2
-1	184	541	1819	181	2
4	105	319	1079	107	2
4	185	563	1877	187	2
NULL	238	709	NULL	237	3
NULL	175	529	NULL	177	3
NULL	NULL	451	NULL	151	3
-2	137	410	1367	138	3
1	211	634	2121	214	3
2	162	481	1626	161	3
NULL	NULL	NULL	NULL	NULL	4


-- !query
SELECT d-e
  FROM t1
 WHERE d>e
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-2
-3
-3
-4
1
1
1
1
2
3
4
4
4
4
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE d>e
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
-4
-3
-3
-2
-1
-1
-1
1
1
1
1
2
3
4
4
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d>e
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-2
-3
-3
-4
1
1
1
1
2
3
4
4
4
4
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d>e
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
-4
-3
-3
-2
-1
-1
-1
1
1
1
1
2
3
4
4
4
4


-- !query
SELECT (a+b+c+d+e)/5,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
192.0	193	1925
NULL	112	NULL
NULL	146	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 2,3
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	112	NULL
NULL	146	NULL
192.0	193	1925


-- !query
SELECT a-b
  FROM t1
 WHERE (e>a AND e<b)
   AND d>e
   AND b>c
-- !query schema
struct<(a - b):int>
-- !query output
-4


-- !query
SELECT a-b
  FROM t1
 WHERE (e>a AND e<b)
   AND d>e
   AND b>c
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
-4


-- !query
SELECT a-b
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
   AND d>e
-- !query schema
struct<(a - b):int>
-- !query output
-4


-- !query
SELECT a-b
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
   AND d>e
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
-4


-- !query
SELECT a-b
  FROM t1
 WHERE d>e
   AND b>c
   AND (e>a AND e<b)
-- !query schema
struct<(a - b):int>
-- !query output
-4


-- !query
SELECT a-b
  FROM t1
 WHERE d>e
   AND b>c
   AND (e>a AND e<b)
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
-4


-- !query
SELECT a-b
  FROM t1
 WHERE b>c
   AND d>e
   AND (e>a AND e<b)
-- !query schema
struct<(a - b):int>
-- !query output
-4


-- !query
SELECT a-b
  FROM t1
 WHERE b>c
   AND d>e
   AND (e>a AND e<b)
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
-4


-- !query
SELECT abs(a)
  FROM t1
-- !query schema
struct<abs(a):int>
-- !query output
107
110
116
123
127
132
138
144
145
151
155
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246
NULL
NULL
NULL


-- !query
SELECT abs(a)
  FROM t1
 ORDER BY 1
-- !query schema
struct<abs(a):int>
-- !query output
NULL
NULL
NULL
107
110
116
123
127
132
138
144
145
151
155
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246


-- !query
SELECT a+b*2+c*3+d*4,
       d,
       a-b,
       abs(a),
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,(a - b):int,abs(a):int,c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1079	109	1	107	108	333
1165	115	-3	116	117	222
1414	142	3	144	140	444
1626	164	1	161	163	333
1719	173	1	171	172	333
1819	183	1	181	182	333
1877	189	-1	187	186	222
1925	192	-4	190	193	111
1971	196	2	199	198	333
2121	212	4	214	213	444
2164	217	3	218	216	444
2211	220	2	223	222	333
2280	229	-1	226	228	222
2312	230	3	234	232	444
2479	249	-2	246	247	222
NULL	201	NULL	NULL	203	444


-- !query
SELECT a+b*2+c*3+d*4,
       d,
       a-b,
       abs(a),
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 3,2,4
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,(a - b):int,abs(a):int,c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	201	NULL	NULL	203	444
1925	192	-4	190	193	111
1165	115	-3	116	117	222
2479	249	-2	246	247	222
1877	189	-1	187	186	222
2280	229	-1	226	228	222
1079	109	1	107	108	333
1626	164	1	161	163	333
1719	173	1	171	172	333
1819	183	1	181	182	333
1971	196	2	199	198	333
2211	220	2	223	222	333
1414	142	3	144	140	444
2164	217	3	218	216	444
2312	230	3	234	232	444
2121	212	4	214	213	444


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND d>e
-- !query schema
struct<abs((b - c)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,(d - e):int>
-- !query output
1	1899	111	126	1
1	3405	111	229	4
2	1604	222	109	4
2	2802	111	189	4
3	2436	444	164	2


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND d>e
 ORDER BY 2,4,5
-- !query schema
struct<abs((b - c)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,(d - e):int>
-- !query output
2	1604	222	109	4
1	1899	111	126	1
3	2436	444	164	2
2	2802	111	189	4
1	3405	111	229	4


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs((b - c)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,(d - e):int>
-- !query output
1	1899	111	126	1
1	3405	111	229	4
2	1604	222	109	4
2	2802	111	189	4
3	2436	444	164	2


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
 ORDER BY 5,1,2
-- !query schema
struct<abs((b - c)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,(d - e):int>
-- !query output
1	1899	111	126	1
3	2436	444	164	2
1	3405	111	229	4
2	1604	222	109	4
2	2802	111	189	4


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
   AND d>e
-- !query schema
struct<abs((b - c)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,(d - e):int>
-- !query output
1	1899	111	126	1
1	3405	111	229	4
2	1604	222	109	4
2	2802	111	189	4
3	2436	444	164	2


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
   AND d>e
 ORDER BY 2,4,3,5,1
-- !query schema
struct<abs((b - c)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,(d - e):int>
-- !query output
2	1604	222	109	4
1	1899	111	126	1
3	2436	444	164	2
2	2802	111	189	4
1	3405	111	229	4


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       c-d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(c - d):int>
-- !query output
1027	2589	-1
1066	NULL	NULL
1087	2739	-1
1121	2802	-3
1364	3405	-1
1426	NULL	NULL
643	1604	-1
739	NULL	NULL
770	1899	3
910	NULL	NULL
970	2436	-1


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       c-d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(c - d):int>
-- !query output
739	NULL	NULL
910	NULL	NULL
1066	NULL	NULL
1426	NULL	NULL
643	1604	-1
770	1899	3
970	2436	-1
1027	2589	-1
1087	2739	-1
1121	2802	-3
1364	3405	-1


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
   AND a>b
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       abs(b-c),
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       d-e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<(c - d):int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,(d - e):int>
-- !query output
-1	1	2164	1296	-2
-1	1	2280	1364	4
-1	2	1079	643	4
-1	2	1719	1027	-1
-1	2	1819	1087	-1
-1	3	1626	970	2
-2	1	1414	846	-1
-2	1	2479	1483	4
-3	2	1877	1121	4
1	1	1925	1157	1
1	3	2121	1273	1
2	1	1971	1187	1
2	1	2211	1331	-4
2	1	2312	1392	-3
2	1	NULL	NULL	-3
2	2	1165	705	NULL


-- !query
SELECT c-d,
       abs(b-c),
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       d-e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 3,1,4,2,5
-- !query schema
struct<(c - d):int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,(d - e):int>
-- !query output
2	1	NULL	NULL	-3
-1	2	1079	643	4
2	2	1165	705	NULL
-2	1	1414	846	-1
-1	3	1626	970	2
-1	2	1719	1027	-1
-1	2	1819	1087	-1
-3	2	1877	1121	4
1	1	1925	1157	1
2	1	1971	1187	1
1	3	2121	1273	1
-1	1	2164	1296	-2
2	1	2211	1331	-4
-1	1	2280	1364	4
2	1	2312	1392	-3
-2	1	2479	1483	4


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
111	1121
111	1364
111	770
222	1027
222	1087
222	1483
222	643
222	705
222	739
222	827
222	881
222	NULL
333	793
444	1157
444	1296
444	1331
444	1426
444	970
555	1066
555	1187
555	1273
555	1392
555	674
555	846
555	910
555	946
555	NULL
555	NULL
555	NULL
555	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
111	770
111	1121
111	1364
222	NULL
222	643
222	705
222	739
222	827
222	881
222	1027
222	1087
222	1483
333	793
444	970
444	1157
444	1296
444	1331
444	1426
555	NULL
555	NULL
555	NULL
555	NULL
555	674
555	846
555	910
555	946
555	1066
555	1187
555	1273
555	1392


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
111	1121
111	1364
111	770
222	1027
222	1087
222	1483
222	643
222	705
222	739
222	827
222	881
222	NULL
333	793
444	1157
444	1296
444	1331
444	1426
444	970
555	1066
555	1187
555	1273
555	1392
555	674
555	846
555	910
555	946
555	NULL
555	NULL
555	NULL
555	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
222	NULL
555	NULL
555	NULL
555	NULL
555	NULL
222	643
555	674
222	705
222	739
111	770
333	793
222	827
555	846
222	881
555	910
555	946
444	970
222	1027
555	1066
222	1087
111	1121
444	1157
555	1187
555	1273
444	1296
444	1331
111	1364
555	1392
444	1426
222	1483


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
333
333
333
333
333
333
444
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
333
333
333
333
333
333
444
444
444
444
444


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE c>d
   AND b>c
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE c>d
   AND b>c
   AND (e>c OR e<d)
 ORDER BY 1,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
   AND b>c
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE (e>c OR e<d)
   AND c>d
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE (e>c OR e<d)
   AND c>d
   AND b>c
 ORDER BY 1,3,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
   AND c>d
 ORDER BY 2,3,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b,
       e
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,e:int>
-- !query output
1604	106	105
1899	128	125
1975	134	130
2436	160	162
2802	188	185
2880	194	191
2946	197	195
3176	210	211
3405	227	225
3704	248	245


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b,
       e
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,e:int>
-- !query output
1604	106	105
1899	128	125
1975	134	130
2436	160	162
2802	188	185
2880	194	191
2946	197	195
3176	210	211
3405	227	225
3704	248	245


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,e:int>
-- !query output
1604	106	105
1899	128	125
1975	134	130
2436	160	162
2802	188	185
2880	194	191
2946	197	195
3176	210	211
3405	227	225
3704	248	245


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
 ORDER BY 1,2,3
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,e:int>
-- !query output
1604	106	105
1899	128	125
1975	134	130
2436	160	162
2802	188	185
2880	194	191
2946	197	195
3176	210	211
3405	227	225
3704	248	245


-- !query
SELECT abs(a),
       c,
       c-d,
       a-b,
       abs(b-c)
  FROM t1
-- !query schema
struct<abs(a):int,c:int,(c - d):int,(a - b):int,abs((b - c)):int>
-- !query output
107	108	-1	1	2
110	112	NULL	-4	2
116	117	2	-3	2
123	124	NULL	1	2
127	129	3	-1	1
132	131	-2	-2	3
138	139	4	2	3
144	140	-2	3	1
145	146	NULL	-4	3
151	153	NULL	1	3
155	159	NULL	-2	2
161	163	-1	1	3
167	168	3	NULL	NULL
171	172	-1	1	2
177	179	NULL	1	3
181	182	-1	1	2
187	186	-3	-1	2
190	193	1	-4	1
199	198	2	2	1
208	NULL	NULL	NULL	NULL
214	213	1	4	3
218	216	-1	3	1
223	222	2	2	1
226	228	-1	-1	1
234	232	2	3	1
237	239	NULL	1	3
246	247	-2	-2	1
NULL	203	2	NULL	1
NULL	240	-3	NULL	4
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT abs(a),
       c,
       c-d,
       a-b,
       abs(b-c)
  FROM t1
 ORDER BY 3,2,4
-- !query schema
struct<abs(a):int,c:int,(c - d):int,(a - b):int,abs((b - c)):int>
-- !query output
NULL	NULL	NULL	NULL	NULL
208	NULL	NULL	NULL	NULL
110	112	NULL	-4	2
123	124	NULL	1	2
145	146	NULL	-4	3
151	153	NULL	1	3
155	159	NULL	-2	2
177	179	NULL	1	3
237	239	NULL	1	3
187	186	-3	-1	2
NULL	240	-3	NULL	4
132	131	-2	-2	3
144	140	-2	3	1
246	247	-2	-2	1
107	108	-1	1	2
161	163	-1	1	3
171	172	-1	1	2
181	182	-1	1	2
218	216	-1	3	1
226	228	-1	-1	1
190	193	1	-4	1
214	213	1	4	3
116	117	2	-3	2
199	198	2	2	1
NULL	203	2	NULL	1
223	222	2	2	1
234	232	2	3	1
127	129	3	-1	1
167	168	3	NULL	NULL
138	139	4	2	3


-- !query
SELECT a+b*2+c*3,
       e,
       a+b*2,
       b-c
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,e:int,(a + (b * 2)):int,(b - c):int>
-- !query output
1027	174	511	-2
1066	175	529	-3
1087	184	541	-2
1121	185	563	2
1157	191	578	1
1187	195	593	-1
1273	211	634	-3
1296	219	648	-1
1331	224	665	-1
1364	225	680	-1
1392	233	696	-1
1426	238	709	-3
1483	245	742	1
643	105	319	-2
674	113	338	2
705	NULL	354	2
739	121	367	-2
770	125	383	-1
793	130	400	3
827	137	410	-3
846	143	426	1
881	147	443	3
910	NULL	451	-3
946	158	469	-2
970	162	481	-3
NULL	104	NULL	NULL
NULL	166	NULL	NULL
NULL	204	NULL	-1
NULL	207	NULL	NULL
NULL	NULL	NULL	4


-- !query
SELECT a+b*2+c*3,
       e,
       a+b*2,
       b-c
  FROM t1
 ORDER BY 2,4,3
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,e:int,(a + (b * 2)):int,(b - c):int>
-- !query output
910	NULL	451	-3
705	NULL	354	2
NULL	NULL	NULL	4
NULL	104	NULL	NULL
643	105	319	-2
674	113	338	2
739	121	367	-2
770	125	383	-1
793	130	400	3
827	137	410	-3
846	143	426	1
881	147	443	3
946	158	469	-2
970	162	481	-3
NULL	166	NULL	NULL
1027	174	511	-2
1066	175	529	-3
1087	184	541	-2
1121	185	563	2
1157	191	578	1
1187	195	593	-1
NULL	204	NULL	-1
NULL	207	NULL	NULL
1273	211	634	-3
1296	219	648	-1
1331	224	665	-1
1364	225	680	-1
1392	233	696	-1
1426	238	709	-3
1483	245	742	1


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
    OR c>d
 ORDER BY 3,1,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
    OR (e>a AND e<b)
 ORDER BY 2,3,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       d,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       e,
       a-b
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,d:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,e:int,(a - b):int>
-- !query output
111	110	NULL	NULL	NULL	113	-4
111	145	NULL	NULL	NULL	147	-4
111	190	192	1925	192.0	191	-4
222	116	115	1165	NULL	NULL	-3
222	127	126	1274	127.0	125	-1
222	132	133	1325	132.0	130	-2
222	155	NULL	NULL	NULL	158	-2
222	187	189	1877	187.0	185	-1
222	226	229	2280	227.0	225	-1
222	246	249	2479	247.0	245	-2
333	107	109	1079	107.0	105	1
333	123	NULL	NULL	NULL	121	1
333	138	135	1367	137.0	137	2
333	151	NULL	NULL	NULL	NULL	1
333	161	164	1626	162.0	162	1
333	171	173	1719	172.0	174	1
333	177	NULL	NULL	NULL	175	1
333	181	183	1819	182.0	184	1
333	199	196	1971	197.0	195	2
333	223	220	2211	222.0	224	2
333	237	NULL	NULL	NULL	238	1
444	144	142	1414	142.0	143	3
444	167	165	NULL	NULL	166	NULL
444	208	206	NULL	NULL	207	NULL
444	214	212	2121	212.0	211	4
444	218	217	2164	217.0	219	3
444	234	230	2312	232.0	233	3
444	NULL	101	NULL	NULL	104	NULL
444	NULL	201	NULL	NULL	204	NULL
444	NULL	243	NULL	NULL	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       d,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       e,
       a-b
  FROM t1
 ORDER BY 1,5,6,7
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,d:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,e:int,(a - b):int>
-- !query output
111	110	NULL	NULL	NULL	113	-4
111	145	NULL	NULL	NULL	147	-4
111	190	192	1925	192.0	191	-4
222	116	115	1165	NULL	NULL	-3
222	155	NULL	NULL	NULL	158	-2
222	127	126	1274	127.0	125	-1
222	132	133	1325	132.0	130	-2
222	187	189	1877	187.0	185	-1
222	226	229	2280	227.0	225	-1
222	246	249	2479	247.0	245	-2
333	151	NULL	NULL	NULL	NULL	1
333	123	NULL	NULL	NULL	121	1
333	177	NULL	NULL	NULL	175	1
333	237	NULL	NULL	NULL	238	1
333	107	109	1079	107.0	105	1
333	138	135	1367	137.0	137	2
333	161	164	1626	162.0	162	1
333	171	173	1719	172.0	174	1
333	181	183	1819	182.0	184	1
333	199	196	1971	197.0	195	2
333	223	220	2211	222.0	224	2
444	NULL	243	NULL	NULL	NULL	NULL
444	NULL	101	NULL	NULL	104	NULL
444	167	165	NULL	NULL	166	NULL
444	NULL	201	NULL	NULL	204	NULL
444	208	206	NULL	NULL	207	NULL
444	144	142	1414	142.0	143	3
444	214	212	2121	212.0	211	4
444	218	217	2164	217.0	219	3
444	234	230	2312	232.0	233	3


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       e,
       abs(b-c),
       c,
       a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,e:int,abs((b - c)):int,c:int,(a - b):int>
-- !query output
192.0	380	578	191	1	193	-4
197.0	398	593	195	1	198	2
212.0	428	634	211	3	213	4
222.0	446	665	224	1	222	2
232.0	468	696	233	1	232	3
NULL	1190	354	NULL	2	117	-3
NULL	NULL	NULL	204	1	203	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       e,
       abs(b-c),
       c,
       a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
 ORDER BY 7,5
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,e:int,abs((b - c)):int,c:int,(a - b):int>
-- !query output
NULL	NULL	NULL	204	1	203	NULL
192.0	380	578	191	1	193	-4
NULL	1190	354	NULL	2	117	-3
222.0	446	665	224	1	222	2
197.0	398	593	195	1	198	2
232.0	468	696	233	1	232	3
212.0	428	634	211	3	213	4


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       e,
       abs(b-c),
       c,
       a-b
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,e:int,abs((b - c)):int,c:int,(a - b):int>
-- !query output
192.0	380	578	191	1	193	-4
197.0	398	593	195	1	198	2
212.0	428	634	211	3	213	4
222.0	446	665	224	1	222	2
232.0	468	696	233	1	232	3
NULL	1190	354	NULL	2	117	-3
NULL	NULL	NULL	204	1	203	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       e,
       abs(b-c),
       c,
       a-b
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
 ORDER BY 4,6,2,7
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,e:int,abs((b - c)):int,c:int,(a - b):int>
-- !query output
NULL	1190	354	NULL	2	117	-3
192.0	380	578	191	1	193	-4
197.0	398	593	195	1	198	2
NULL	NULL	NULL	204	1	203	NULL
212.0	428	634	211	3	213	4
222.0	446	665	224	1	222	2
232.0	468	696	233	1	232	3


-- !query
SELECT b,
       b-c,
       e,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c>d
-- !query schema
struct<b:int,(b - c):int,e:int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
119	2	NULL	117	1190	705	NULL
128	-1	125	129	1280	770	1899
136	-3	137	139	1360	827	2052
194	1	191	193	380	1157	2880
197	-1	195	198	398	1187	2946
202	-1	204	203	NULL	NULL	NULL
210	-3	211	213	428	1273	3176
221	-1	224	222	446	1331	3331
231	-1	233	232	468	1392	3477
NULL	NULL	166	168	NULL	NULL	NULL


-- !query
SELECT b,
       b-c,
       e,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c>d
 ORDER BY 6,1,5
-- !query schema
struct<b:int,(b - c):int,e:int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	NULL	166	168	NULL	NULL	NULL
202	-1	204	203	NULL	NULL	NULL
119	2	NULL	117	1190	705	NULL
128	-1	125	129	1280	770	1899
136	-3	137	139	1360	827	2052
194	1	191	193	380	1157	2880
197	-1	195	198	398	1187	2946
210	-3	211	213	428	1273	3176
221	-1	224	222	446	1331	3331
231	-1	233	232	468	1392	3477


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
   AND (a>b-2 AND a<b+2)
 ORDER BY 4,1,5,6,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 4,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       d-e,
       (a+b+c+d+e)/5,
       c-d,
       a+b*2,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,(c - d):int,(a + (b * 2)):int,a:int>
-- !query output
1079	-2	4	107.0	-1	319	107
1165	2	NULL	NULL	2	354	116
1274	-1	1	127.0	3	383	127
1325	3	3	132.0	-2	400	132
1367	-3	-2	137.0	4	410	138
1414	1	-1	142.0	-2	426	144
1626	-3	2	162.0	-1	481	161
1719	-2	-1	172.0	-1	511	171
1819	-2	-1	182.0	-1	541	181
1877	2	4	187.0	-3	563	187
1925	1	1	192.0	1	578	190
1971	-1	1	197.0	2	593	199
2121	-3	1	212.0	1	634	214
2164	-1	-2	217.0	-1	648	218
2211	-1	-4	222.0	2	665	223
2280	-1	4	227.0	-1	680	226
2312	-1	-3	232.0	2	696	234
2479	1	4	247.0	-2	742	246
NULL	-1	-3	NULL	2	NULL	NULL
NULL	-2	NULL	NULL	NULL	367	123
NULL	-2	NULL	NULL	NULL	469	155
NULL	-3	NULL	NULL	NULL	451	151
NULL	-3	NULL	NULL	NULL	529	177
NULL	-3	NULL	NULL	NULL	709	237
NULL	2	NULL	NULL	NULL	338	110
NULL	3	NULL	NULL	NULL	443	145
NULL	4	NULL	NULL	-3	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       d-e,
       (a+b+c+d+e)/5,
       c-d,
       a+b*2,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,4,7,5,2,3,6
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,(c - d):int,(a + (b * 2)):int,a:int>
-- !query output
NULL	4	NULL	NULL	-3	NULL	NULL
NULL	-1	-3	NULL	2	NULL	NULL
NULL	2	NULL	NULL	NULL	338	110
NULL	-2	NULL	NULL	NULL	367	123
NULL	3	NULL	NULL	NULL	443	145
NULL	-3	NULL	NULL	NULL	451	151
NULL	-2	NULL	NULL	NULL	469	155
NULL	-3	NULL	NULL	NULL	529	177
NULL	-3	NULL	NULL	NULL	709	237
1079	-2	4	107.0	-1	319	107
1165	2	NULL	NULL	2	354	116
1274	-1	1	127.0	3	383	127
1325	3	3	132.0	-2	400	132
1367	-3	-2	137.0	4	410	138
1414	1	-1	142.0	-2	426	144
1626	-3	2	162.0	-1	481	161
1719	-2	-1	172.0	-1	511	171
1819	-2	-1	182.0	-1	541	181
1877	2	4	187.0	-3	563	187
1925	1	1	192.0	1	578	190
1971	-1	1	197.0	2	593	199
2121	-3	1	212.0	1	634	214
2164	-1	-2	217.0	-1	648	218
2211	-1	-4	222.0	2	665	223
2280	-1	4	227.0	-1	680	226
2312	-1	-3	232.0	2	696	234
2479	1	4	247.0	-2	742	246


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>a AND e<b)
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int>
-- !query output
106	1079	319
114	NULL	338
119	1165	354
141	1414	426
149	NULL	443
160	1626	481
170	1719	511
180	1819	541
188	1877	563
194	1925	578
197	1971	593
202	NULL	NULL
210	2121	634
215	2164	648
221	2211	665
227	2280	680
231	2312	696
248	2479	742


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>a AND e<b)
 ORDER BY 3,2,1
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int>
-- !query output
202	NULL	NULL
106	1079	319
114	NULL	338
119	1165	354
141	1414	426
149	NULL	443
160	1626	481
170	1719	511
180	1819	541
188	1877	563
194	1925	578
197	1971	593
210	2121	634
215	2164	648
221	2211	665
227	2280	680
231	2312	696
248	2479	742


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int>
-- !query output
106	1079	319
114	NULL	338
119	1165	354
141	1414	426
149	NULL	443
160	1626	481
170	1719	511
180	1819	541
188	1877	563
194	1925	578
197	1971	593
202	NULL	NULL
210	2121	634
215	2164	648
221	2211	665
227	2280	680
231	2312	696
248	2479	742


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int>
-- !query output
106	1079	319
114	NULL	338
119	1165	354
141	1414	426
149	NULL	443
160	1626	481
170	1719	511
180	1819	541
188	1877	563
194	1925	578
197	1971	593
202	NULL	NULL
210	2121	634
215	2164	648
221	2211	665
227	2280	680
231	2312	696
248	2479	742


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       e
  FROM t1
 ORDER BY 4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
    OR a>b
 ORDER BY 4,2,1,3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
    OR b>c
 ORDER BY 4,1,5,6,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
 WHERE b>c
    OR a>b
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
 WHERE b>c
    OR a>b
    OR (a>b-2 AND a<b+2)
 ORDER BY 1,6,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       abs(a)
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<e:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,abs(a):int>
-- !query output
113	-4	1140	114	110
147	-4	1490	149	145
191	-4	380	194	190


-- !query
SELECT e,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       abs(a)
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 2,5,4,1,3
-- !query schema
struct<e:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,abs(a):int>
-- !query output
113	-4	1140	114	110
147	-4	1490	149	145
191	-4	380	194	190


-- !query
SELECT a,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,3,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
 ORDER BY 4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,6,4,2,5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e
  FROM t1
 WHERE (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e
  FROM t1
 WHERE (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 5,1,2,6,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a
  FROM t1
 WHERE d>e
   AND (e>a AND e<b)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int>
-- !query output
1157	444	190


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a
  FROM t1
 WHERE d>e
   AND (e>a AND e<b)
 ORDER BY 3,2,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int>
-- !query output
1157	444	190


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a
  FROM t1
 WHERE (e>a AND e<b)
   AND d>e
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int>
-- !query output
1157	444	190


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a
  FROM t1
 WHERE (e>a AND e<b)
   AND d>e
 ORDER BY 3,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int>
-- !query output
1157	444	190


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
 WHERE (e>c OR e<d)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
 WHERE (e>c OR e<d)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 4,5,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
-- !query schema
struct<c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
117	222
129	222
139	333
168	444
193	111
198	333
203	444
213	444
222	333
232	444


-- !query
SELECT c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
 ORDER BY 1,2
-- !query schema
struct<c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
117	222
129	222
139	333
168	444
193	111
198	333
203	444
213	444
222	333
232	444


-- !query
SELECT a,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
 ORDER BY 1,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a,
       abs(b-c),
       c,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,abs((b - c)):int,c:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1604	107	2	108	106	222	107.0
1899	127	1	129	128	111	127.0
1975	132	3	131	134	333	132.0
2052	138	3	139	136	222	137.0
2129	144	1	140	141	555	142.0
2436	161	3	163	160	444	162.0
2589	171	2	172	170	222	172.0
2739	181	2	182	180	222	182.0
2802	187	2	186	188	111	187.0
2880	190	1	193	194	444	192.0
2946	199	1	198	197	555	197.0
3176	214	3	213	210	555	212.0
3259	218	1	216	215	444	217.0
3331	223	1	222	221	444	222.0
3405	226	1	228	227	111	227.0
3477	234	1	232	231	555	232.0
3704	246	1	247	248	222	247.0
NULL	110	2	112	114	555	NULL
NULL	116	2	117	119	222	NULL
NULL	123	2	124	122	222	NULL
NULL	145	3	146	149	222	NULL
NULL	151	3	153	150	555	NULL
NULL	155	2	159	157	555	NULL
NULL	167	NULL	168	NULL	222	NULL
NULL	177	3	179	176	555	NULL
NULL	208	NULL	NULL	NULL	555	NULL
NULL	237	3	239	236	444	NULL
NULL	NULL	1	203	202	555	NULL
NULL	NULL	4	240	244	555	NULL
NULL	NULL	NULL	NULL	102	555	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a,
       abs(b-c),
       c,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 3,6,4,7,1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,abs((b - c)):int,c:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	167	NULL	168	NULL	222	NULL
NULL	NULL	NULL	NULL	102	555	NULL
NULL	208	NULL	NULL	NULL	555	NULL
1899	127	1	129	128	111	127.0
3405	226	1	228	227	111	227.0
3704	246	1	247	248	222	247.0
2880	190	1	193	194	444	192.0
3259	218	1	216	215	444	217.0
3331	223	1	222	221	444	222.0
2129	144	1	140	141	555	142.0
2946	199	1	198	197	555	197.0
NULL	NULL	1	203	202	555	NULL
3477	234	1	232	231	555	232.0
2802	187	2	186	188	111	187.0
1604	107	2	108	106	222	107.0
NULL	116	2	117	119	222	NULL
NULL	123	2	124	122	222	NULL
2589	171	2	172	170	222	172.0
2739	181	2	182	180	222	182.0
NULL	110	2	112	114	555	NULL
NULL	155	2	159	157	555	NULL
2052	138	3	139	136	222	137.0
NULL	145	3	146	149	222	NULL
1975	132	3	131	134	333	132.0
2436	161	3	163	160	444	162.0
NULL	237	3	239	236	444	NULL
NULL	151	3	153	150	555	NULL
NULL	177	3	179	176	555	NULL
3176	214	3	213	210	555	212.0
NULL	NULL	4	240	244	555	NULL


-- !query
SELECT c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,c:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	1060	1	108	107.0
-1	1600	1	163	162.0
-1	1700	1	172	172.0
-1	362	1	182	182.0
-1	436	3	216	217.0
-1	452	-1	228	227.0
-2	1340	-2	131	132.0
-2	1410	3	140	142.0
-2	492	-2	247	247.0
-3	374	-1	186	187.0
-3	NULL	NULL	240	NULL
1	380	-4	193	192.0
1	428	4	213	212.0
2	1190	-3	117	NULL
2	398	2	198	197.0
2	446	2	222	222.0
2	468	3	232	232.0
2	NULL	NULL	203	NULL
3	1280	-1	129	127.0
4	1360	2	139	137.0
NULL	1140	-4	112	NULL
NULL	1220	1	124	NULL
NULL	1490	-4	146	NULL
NULL	1500	1	153	NULL
NULL	1570	-2	159	NULL
NULL	354	1	179	NULL
NULL	474	1	239	NULL


-- !query
SELECT c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 5,2
-- !query schema
struct<(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,c:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
2	NULL	NULL	203	NULL
-3	NULL	NULL	240	NULL
NULL	354	1	179	NULL
NULL	474	1	239	NULL
NULL	1140	-4	112	NULL
2	1190	-3	117	NULL
NULL	1220	1	124	NULL
NULL	1490	-4	146	NULL
NULL	1500	1	153	NULL
NULL	1570	-2	159	NULL
-1	1060	1	108	107.0
3	1280	-1	129	127.0
-2	1340	-2	131	132.0
4	1360	2	139	137.0
-2	1410	3	140	142.0
-1	1600	1	163	162.0
-1	1700	1	172	172.0
-1	362	1	182	182.0
-3	374	-1	186	187.0
1	380	-4	193	192.0
2	398	2	198	197.0
1	428	4	213	212.0
-1	436	3	216	217.0
2	446	2	222	222.0
-1	452	-1	228	227.0
2	468	3	232	232.0
-2	492	-2	247	247.0


-- !query
SELECT a+b*2+c*3
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1066
1087
1121
1157
1187
1273
1296
1331
1364
1392
1426
1483
643
674
705
739
770
793
827
846
881
910
946
970
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
643
674
705
739
770
793
827
846
881
910
946
970
1027
1066
1087
1121
1157
1187
1273
1296
1331
1364
1392
1426
1483


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int>
-- !query output
111	1140	NULL
111	1490	NULL
111	380	1
222	1190	2
222	1280	3
222	1340	-2
222	1570	NULL
222	374	-3
222	452	-1
222	492	-2
333	1060	-1
333	1220	NULL
333	1360	4
333	1500	NULL
333	1600	-1
333	1700	-1
333	354	NULL
333	362	-1
333	398	2
333	446	2
333	474	NULL
444	1020	NULL
444	1410	-2
444	428	1
444	436	-1
444	468	2
444	NULL	-3
444	NULL	2
444	NULL	3
444	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
 ORDER BY 3,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int>
-- !query output
111	1140	NULL
111	1490	NULL
222	1570	NULL
333	474	NULL
333	1220	NULL
333	354	NULL
333	1500	NULL
444	1020	NULL
444	NULL	NULL
222	374	-3
444	NULL	-3
222	1340	-2
222	492	-2
444	1410	-2
222	452	-1
333	1600	-1
333	1700	-1
333	362	-1
333	1060	-1
444	436	-1
111	380	1
444	428	1
222	1190	2
333	446	2
333	398	2
444	468	2
444	NULL	2
222	1280	3
444	NULL	3
333	1360	4


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       d-e,
       a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE c>d
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,(d - e):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
109	1604	333	643	4	1079	108
115	NULL	222	705	NULL	1165	117
126	1899	222	770	1	1274	129
135	2052	333	827	-2	1367	139
142	2129	444	846	-1	1414	140
164	2436	333	970	2	1626	163
165	NULL	444	NULL	-1	NULL	168
173	2589	333	1027	-1	1719	172
183	2739	333	1087	-1	1819	182
189	2802	222	1121	4	1877	186
192	2880	111	1157	1	1925	193
196	2946	333	1187	1	1971	198
201	NULL	444	NULL	-3	NULL	203
212	3176	444	1273	1	2121	213
217	3259	444	1296	-2	2164	216
220	3331	333	1331	-4	2211	222
229	3405	222	1364	4	2280	228
230	3477	444	1392	-3	2312	232
249	3704	222	1483	4	2479	247


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       d-e,
       a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE c>d
    OR c BETWEEN b-2 AND d+2
 ORDER BY 5,7
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,(d - e):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
115	NULL	222	705	NULL	1165	117
220	3331	333	1331	-4	2211	222
201	NULL	444	NULL	-3	NULL	203
230	3477	444	1392	-3	2312	232
135	2052	333	827	-2	1367	139
217	3259	444	1296	-2	2164	216
142	2129	444	846	-1	1414	140
165	NULL	444	NULL	-1	NULL	168
173	2589	333	1027	-1	1719	172
183	2739	333	1087	-1	1819	182
126	1899	222	770	1	1274	129
192	2880	111	1157	1	1925	193
196	2946	333	1187	1	1971	198
212	3176	444	1273	1	2121	213
164	2436	333	970	2	1626	163
109	1604	333	643	4	1079	108
189	2802	222	1121	4	1877	186
229	3405	222	1364	4	2280	228
249	3704	222	1483	4	2479	247


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
 ORDER BY 2,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<d:int>
-- !query output
192
NULL
NULL


-- !query
SELECT d
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 1
-- !query schema
struct<d:int>
-- !query output
NULL
NULL
192


-- !query
SELECT a-b,
       d-e
  FROM t1
-- !query schema
struct<(a - b):int,(d - e):int>
-- !query output
-1	1
-1	4
-1	4
-2	3
-2	4
-2	NULL
-3	NULL
-4	1
-4	NULL
-4	NULL
1	-1
1	-1
1	2
1	4
1	NULL
1	NULL
1	NULL
1	NULL
2	-2
2	-4
2	1
3	-1
3	-2
3	-3
4	1
NULL	-1
NULL	-1
NULL	-3
NULL	-3
NULL	NULL


-- !query
SELECT a-b,
       d-e
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<(a - b):int,(d - e):int>
-- !query output
NULL	NULL
NULL	-3
NULL	-3
NULL	-1
NULL	-1
-4	NULL
-4	NULL
-4	1
-3	NULL
-2	NULL
-2	3
-2	4
-1	1
-1	4
-1	4
1	NULL
1	NULL
1	NULL
1	NULL
1	-1
1	-1
1	2
1	4
2	-4
2	-2
2	1
3	-3
3	-2
3	-1
4	1


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       b-c,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(a + (b * 2)):int,(b - c):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
319	-2	108	222
338	2	112	555
354	2	117	222
367	-2	124	222
383	-1	129	111
400	3	131	333
410	-3	139	222
426	1	140	555
443	3	146	222
451	-3	153	555
469	-2	159	555
481	-3	163	444
511	-2	172	222
529	-3	179	555
541	-2	182	222
563	2	186	111
578	1	193	444
593	-1	198	555
634	-3	213	555
648	-1	216	444
665	-1	222	444
680	-1	228	111
696	-1	232	555
709	-3	239	444
742	1	247	222
NULL	-1	203	555
NULL	4	240	555


-- !query
SELECT a+b*2,
       b-c,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,4,1
-- !query schema
struct<(a + (b * 2)):int,(b - c):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
410	-3	139	222
481	-3	163	444
709	-3	239	444
451	-3	153	555
529	-3	179	555
634	-3	213	555
319	-2	108	222
367	-2	124	222
511	-2	172	222
541	-2	182	222
469	-2	159	555
383	-1	129	111
680	-1	228	111
648	-1	216	444
665	-1	222	444
NULL	-1	203	555
593	-1	198	555
696	-1	232	555
742	1	247	222
578	1	193	444
426	1	140	555
563	2	186	111
354	2	117	222
338	2	112	555
443	3	146	222
400	3	131	333
NULL	4	240	555


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       e,
       abs(a)
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,e:int,abs(a):int>
-- !query output
1079	1604	105	107
1165	NULL	NULL	116
1274	1899	125	127
1325	1975	130	132
1367	2052	137	138
1414	2129	143	144
1626	2436	162	161
1719	2589	174	171
1819	2739	184	181
1877	2802	185	187
1925	2880	191	190
1971	2946	195	199
2121	3176	211	214
2164	3259	219	218
2211	3331	224	223
2280	3405	225	226
2312	3477	233	234
2479	3704	245	246
NULL	NULL	104	NULL
NULL	NULL	113	110
NULL	NULL	121	123
NULL	NULL	147	145
NULL	NULL	158	155
NULL	NULL	166	167
NULL	NULL	175	177
NULL	NULL	204	NULL
NULL	NULL	207	208
NULL	NULL	238	237
NULL	NULL	NULL	151
NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       e,
       abs(a)
  FROM t1
 ORDER BY 4,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,e:int,abs(a):int>
-- !query output
NULL	NULL	204	NULL
NULL	NULL	104	NULL
NULL	NULL	NULL	NULL
1079	1604	105	107
NULL	NULL	113	110
1165	NULL	NULL	116
NULL	NULL	121	123
1274	1899	125	127
1325	1975	130	132
1367	2052	137	138
1414	2129	143	144
NULL	NULL	147	145
NULL	NULL	NULL	151
NULL	NULL	158	155
1626	2436	162	161
NULL	NULL	166	167
1719	2589	174	171
NULL	NULL	175	177
1819	2739	184	181
1877	2802	185	187
1925	2880	191	190
1971	2946	195	199
NULL	NULL	207	208
2121	3176	211	214
2164	3259	219	218
2211	3331	224	223
2280	3405	225	226
2312	3477	233	234
NULL	NULL	238	237
2479	3704	245	246


-- !query
SELECT c,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       a-b,
       a+b*2+c*3
  FROM t1
 WHERE c>d
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       a-b,
       a+b*2+c*3
  FROM t1
 WHERE c>d
    OR (e>c OR e<d)
 ORDER BY 1,2,6,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       a-b,
       a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       a-b,
       a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
    OR c>d
 ORDER BY 5,3,6,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-2
-3
-3
-4
1
1
1
3
4
4
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
-4
-3
-3
-2
-1
-1
1
1
1
3
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-2
-3
-3
-4
1
1
1
3
4
4
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
-4
-3
-3
-2
-1
-1
1
1
1
3
4
4


-- !query
SELECT c-d,
       abs(a),
       b-c,
       b,
       a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(c - d):int,abs(a):int,(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
-2	132	3	134	1325	131
-2	246	1	248	2479	247
-3	187	2	188	1877	186
2	199	-1	197	1971	198
3	127	-1	128	1274	129


-- !query
SELECT c-d,
       abs(a),
       b-c,
       b,
       a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 4,3,6,5,2,1
-- !query schema
struct<(c - d):int,abs(a):int,(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
3	127	-1	128	1274	129
-2	132	3	134	1325	131
-3	187	2	188	1877	186
2	199	-1	197	1971	198
-2	246	1	248	2479	247


-- !query
SELECT c-d,
       abs(a),
       b-c,
       b,
       a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
-- !query schema
struct<(c - d):int,abs(a):int,(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
-2	132	3	134	1325	131
-2	246	1	248	2479	247
-3	187	2	188	1877	186
2	199	-1	197	1971	198
3	127	-1	128	1274	129


-- !query
SELECT c-d,
       abs(a),
       b-c,
       b,
       a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
 ORDER BY 3,4,5
-- !query schema
struct<(c - d):int,abs(a):int,(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
3	127	-1	128	1274	129
2	199	-1	197	1971	198
-2	246	1	248	2479	247
-3	187	2	188	1877	186
-2	132	3	134	1325	131


-- !query
SELECT c-d,
       abs(a),
       b-c,
       b,
       a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE d>e
   AND (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(c - d):int,abs(a):int,(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
-2	132	3	134	1325	131
-2	246	1	248	2479	247
-3	187	2	188	1877	186
2	199	-1	197	1971	198
3	127	-1	128	1274	129


-- !query
SELECT c-d,
       abs(a),
       b-c,
       b,
       a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE d>e
   AND (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 6,1
-- !query schema
struct<(c - d):int,abs(a):int,(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
3	127	-1	128	1274	129
-2	132	3	134	1325	131
-3	187	2	188	1877	186
2	199	-1	197	1971	198
-2	246	1	248	2479	247


-- !query
SELECT abs(b-c),
       d,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 2,5,1,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a+b*2+c*3+d*4+e*5,
       c,
       abs(b-c),
       e,
       d,
       d-e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c>d
-- !query schema
struct<(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,c:int,abs((b - c)):int,e:int,d:int,(d - e):int>
-- !query output
-1	1604	108	2	105	109	4
-1	2436	163	3	162	164	2
-1	2589	172	2	174	173	-1
-1	2739	182	2	184	183	-1
-1	3259	216	1	219	217	-2
-1	3405	228	1	225	229	4
-2	1975	131	3	130	133	3
-2	2129	140	1	143	142	-1
-2	3704	247	1	245	249	4
-3	2802	186	2	185	189	4
-3	NULL	240	4	NULL	243	NULL
1	2880	193	1	191	192	1
1	3176	213	3	211	212	1
2	2946	198	1	195	196	1
2	3331	222	1	224	220	-4
2	3477	232	1	233	230	-3
2	NULL	117	2	NULL	115	NULL
2	NULL	203	1	204	201	-3
3	1899	129	1	125	126	1
3	NULL	168	NULL	166	165	-1
4	2052	139	3	137	135	-2
NULL	NULL	112	2	113	NULL	NULL
NULL	NULL	124	2	121	NULL	NULL
NULL	NULL	146	3	147	NULL	NULL
NULL	NULL	153	3	NULL	NULL	NULL
NULL	NULL	159	2	158	NULL	NULL
NULL	NULL	179	3	175	NULL	NULL
NULL	NULL	239	3	238	NULL	NULL


-- !query
SELECT c-d,
       a+b*2+c*3+d*4+e*5,
       c,
       abs(b-c),
       e,
       d,
       d-e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c>d
 ORDER BY 3,4,5,2
-- !query schema
struct<(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,c:int,abs((b - c)):int,e:int,d:int,(d - e):int>
-- !query output
-1	1604	108	2	105	109	4
NULL	NULL	112	2	113	NULL	NULL
2	NULL	117	2	NULL	115	NULL
NULL	NULL	124	2	121	NULL	NULL
3	1899	129	1	125	126	1
-2	1975	131	3	130	133	3
4	2052	139	3	137	135	-2
-2	2129	140	1	143	142	-1
NULL	NULL	146	3	147	NULL	NULL
NULL	NULL	153	3	NULL	NULL	NULL
NULL	NULL	159	2	158	NULL	NULL
-1	2436	163	3	162	164	2
3	NULL	168	NULL	166	165	-1
-1	2589	172	2	174	173	-1
NULL	NULL	179	3	175	NULL	NULL
-1	2739	182	2	184	183	-1
-3	2802	186	2	185	189	4
1	2880	193	1	191	192	1
2	2946	198	1	195	196	1
2	NULL	203	1	204	201	-3
1	3176	213	3	211	212	1
-1	3259	216	1	219	217	-2
2	3331	222	1	224	220	-4
-1	3405	228	1	225	229	4
2	3477	232	1	233	230	-3
NULL	NULL	239	3	238	NULL	NULL
-3	NULL	240	4	NULL	243	NULL
-2	3704	247	1	245	249	4


-- !query
SELECT (a+b+c+d+e)/5,
       d-e,
       a-b,
       abs(a),
       b,
       b-c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(d - e):int,(a - b):int,abs(a):int,b:int,(b - c):int>
-- !query output
107.0	4	1	107	106	-2
142.0	-1	3	144	141	1
162.0	2	1	161	160	-3
172.0	-1	1	171	170	-2
182.0	-1	1	181	180	-2
187.0	4	-1	187	188	2
192.0	1	-4	190	194	1
197.0	1	2	199	197	-1
212.0	1	4	214	210	-3
217.0	-2	3	218	215	-1
222.0	-4	2	223	221	-1
227.0	4	-1	226	227	-1
232.0	-3	3	234	231	-1
247.0	4	-2	246	248	1
NULL	-3	NULL	NULL	202	-1
NULL	NULL	-3	116	119	2


-- !query
SELECT (a+b+c+d+e)/5,
       d-e,
       a-b,
       abs(a),
       b,
       b-c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 4,6,1,5,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(d - e):int,(a - b):int,abs(a):int,b:int,(b - c):int>
-- !query output
NULL	-3	NULL	NULL	202	-1
107.0	4	1	107	106	-2
NULL	NULL	-3	116	119	2
142.0	-1	3	144	141	1
162.0	2	1	161	160	-3
172.0	-1	1	171	170	-2
182.0	-1	1	181	180	-2
187.0	4	-1	187	188	2
192.0	1	-4	190	194	1
197.0	1	2	199	197	-1
212.0	1	4	214	210	-3
217.0	-2	3	218	215	-1
222.0	-4	2	223	221	-1
227.0	4	-1	226	227	-1
232.0	-3	3	234	231	-1
247.0	4	-2	246	248	1


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
 ORDER BY 1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0


-- !query
SELECT d,
       c-d,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c-d,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b
  FROM t1
 ORDER BY 2,5,3,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
-- !query schema
struct<abs(a):int,abs((b - c)):int>
-- !query output
107	2
110	2
116	2
123	2
127	1
132	3
144	1
145	3
151	3
161	3
171	2
177	3
181	2
187	2
190	1
226	1
237	3
246	1
NULL	4


-- !query
SELECT abs(a),
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
 ORDER BY 2,1
-- !query schema
struct<abs(a):int,abs((b - c)):int>
-- !query output
127	1
144	1
190	1
226	1
246	1
107	2
110	2
116	2
123	2
171	2
181	2
187	2
132	3
145	3
151	3
161	3
177	3
237	3
NULL	4


-- !query
SELECT abs(a),
       abs(b-c)
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<abs(a):int,abs((b - c)):int>
-- !query output
107	2
110	2
116	2
123	2
127	1
132	3
144	1
145	3
151	3
161	3
171	2
177	3
181	2
187	2
190	1
226	1
237	3
246	1
NULL	4


-- !query
SELECT abs(a),
       abs(b-c)
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<abs(a):int,abs((b - c)):int>
-- !query output
127	1
144	1
190	1
226	1
246	1
107	2
110	2
116	2
123	2
171	2
181	2
187	2
132	3
145	3
151	3
161	3
177	3
237	3
NULL	4


-- !query
SELECT e,
       c,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       c,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<c:int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
117	354	222
129	383	222
131	400	222
139	410	333
140	426	444
168	NULL	444
186	563	222
198	593	333
203	NULL	444
222	665	333
232	696	444
240	NULL	444
247	742	222


-- !query
SELECT c,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 3,2
-- !query schema
struct<c:int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
117	354	222
129	383	222
131	400	222
186	563	222
247	742	222
139	410	333
198	593	333
222	665	333
168	NULL	444
203	NULL	444
240	NULL	444
140	426	444
232	696	444


-- !query
SELECT c-d,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
 ORDER BY 3,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a,
       abs(a),
       d-e
  FROM t1
-- !query schema
struct<b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int,abs(a):int,(d - e):int>
-- !query output
102	555	NULL	1020	NULL	NULL	-3
106	222	-2	1060	107	107	4
114	555	2	1140	110	110	NULL
119	222	2	1190	116	116	NULL
122	222	-2	1220	123	123	NULL
128	111	-1	1280	127	127	1
134	333	3	1340	132	132	3
136	222	-3	1360	138	138	-2
141	555	1	1410	144	144	-1
149	222	3	1490	145	145	NULL
150	555	-3	1500	151	151	NULL
157	555	-2	1570	155	155	NULL
160	444	-3	1600	161	161	2
170	222	-2	1700	171	171	-1
176	555	-3	354	177	177	NULL
180	222	-2	362	181	181	-1
188	111	2	374	187	187	4
194	444	1	380	190	190	1
197	555	-1	398	199	199	1
202	555	-1	NULL	NULL	NULL	-3
210	555	-3	428	214	214	1
215	444	-1	436	218	218	-2
221	444	-1	446	223	223	-4
227	111	-1	452	226	226	4
231	555	-1	468	234	234	-3
236	444	-3	474	237	237	NULL
244	555	4	NULL	NULL	NULL	NULL
248	222	1	492	246	246	4
NULL	222	NULL	NULL	167	167	-1
NULL	555	NULL	NULL	208	208	-1


-- !query
SELECT b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a,
       abs(a),
       d-e
  FROM t1
 ORDER BY 5,4,2,7,3
-- !query schema
struct<b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int,abs(a):int,(d - e):int>
-- !query output
244	555	4	NULL	NULL	NULL	NULL
202	555	-1	NULL	NULL	NULL	-3
102	555	NULL	1020	NULL	NULL	-3
106	222	-2	1060	107	107	4
114	555	2	1140	110	110	NULL
119	222	2	1190	116	116	NULL
122	222	-2	1220	123	123	NULL
128	111	-1	1280	127	127	1
134	333	3	1340	132	132	3
136	222	-3	1360	138	138	-2
141	555	1	1410	144	144	-1
149	222	3	1490	145	145	NULL
150	555	-3	1500	151	151	NULL
157	555	-2	1570	155	155	NULL
160	444	-3	1600	161	161	2
NULL	222	NULL	NULL	167	167	-1
170	222	-2	1700	171	171	-1
176	555	-3	354	177	177	NULL
180	222	-2	362	181	181	-1
188	111	2	374	187	187	4
194	444	1	380	190	190	1
197	555	-1	398	199	199	1
NULL	555	NULL	NULL	208	208	-1
210	555	-3	428	214	214	1
215	444	-1	436	218	218	-2
221	444	-1	446	223	223	-4
227	111	-1	452	226	226	4
231	555	-1	468	234	234	-3
236	444	-3	474	237	237	NULL
248	222	1	492	246	246	4


-- !query
SELECT a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<a:int>
-- !query output
116
127
132
138
144
167
187
199
223
234
246
NULL
NULL


-- !query
SELECT a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<a:int>
-- !query output
NULL
NULL
116
127
132
138
144
167
187
199
223
234
246


-- !query
SELECT abs(b-c),
       b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<abs((b - c)):int,b:int>
-- !query output
1	128
1	141
1	194
1	197
1	202
1	215
1	221
1	227
1	231
1	248
2	106
2	114
2	119
2	122
2	157
2	170
2	180
2	188
3	134
3	136
3	149
3	150
3	160
3	176
3	210
3	236
4	244


-- !query
SELECT abs(b-c),
       b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<abs((b - c)):int,b:int>
-- !query output
1	128
1	141
1	194
1	197
1	202
1	215
1	221
1	227
1	231
1	248
2	106
2	114
2	119
2	122
2	157
2	170
2	180
2	188
3	134
3	136
3	149
3	150
3	160
3	176
3	210
3	236
4	244


-- !query
SELECT abs(b-c),
       b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<abs((b - c)):int,b:int>
-- !query output
1	128
1	141
1	194
1	197
1	202
1	215
1	221
1	227
1	231
1	248
2	106
2	114
2	119
2	122
2	157
2	170
2	180
2	188
3	134
3	136
3	149
3	150
3	160
3	176
3	210
3	236
4	244


-- !query
SELECT abs(b-c),
       b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 2,1
-- !query schema
struct<abs((b - c)):int,b:int>
-- !query output
2	106
2	114
2	119
2	122
1	128
3	134
3	136
1	141
3	149
3	150
2	157
3	160
2	170
3	176
2	180
2	188
1	194
1	197
1	202
3	210
1	215
1	221
1	227
1	231
3	236
4	244
1	248


-- !query
SELECT abs(b-c),
       b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<abs((b - c)):int,b:int>
-- !query output
1	128
1	141
1	194
1	197
1	202
1	215
1	221
1	227
1	231
1	248
2	106
2	114
2	119
2	122
2	157
2	170
2	180
2	188
3	134
3	136
3	149
3	150
3	160
3	176
3	210
3	236
4	244


-- !query
SELECT abs(b-c),
       b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<abs((b - c)):int,b:int>
-- !query output
1	128
1	141
1	194
1	197
1	202
1	215
1	221
1	227
1	231
1	248
2	106
2	114
2	119
2	122
2	157
2	170
2	180
2	188
3	134
3	136
3	149
3	150
3	160
3	176
3	210
3	236
4	244


-- !query
SELECT abs(b-c),
       b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<abs((b - c)):int,b:int>
-- !query output
1	128
1	141
1	194
1	197
1	202
1	215
1	221
1	227
1	231
1	248
2	106
2	114
2	119
2	122
2	157
2	170
2	180
2	188
3	134
3	136
3	149
3	150
3	160
3	176
3	210
3	236
4	244


-- !query
SELECT abs(b-c),
       b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<abs((b - c)):int,b:int>
-- !query output
1	128
1	141
1	194
1	197
1	202
1	215
1	221
1	227
1	231
1	248
2	106
2	114
2	119
2	122
2	157
2	170
2	180
2	188
3	134
3	136
3	149
3	150
3	160
3	176
3	210
3	236
4	244


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
 ORDER BY 3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a-b,
       d,
       a+b*2,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<abs(a):int,(a - b):int,d:int,(a + (b * 2)):int,(c - d):int>
-- !query output
107	1	109	319	-1
110	-4	NULL	338	NULL
127	-1	126	383	3
132	-2	133	400	-2
144	3	142	426	-2
145	-4	NULL	443	NULL
161	1	164	481	-1
171	1	173	511	-1
181	1	183	541	-1
187	-1	189	563	-3
190	-4	192	578	1
199	2	196	593	2
214	4	212	634	1
218	3	217	648	-1
223	2	220	665	2
226	-1	229	680	-1
234	3	230	696	2
246	-2	249	742	-2
NULL	NULL	201	NULL	2


-- !query
SELECT abs(a),
       a-b,
       d,
       a+b*2,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 1,3,2,4
-- !query schema
struct<abs(a):int,(a - b):int,d:int,(a + (b * 2)):int,(c - d):int>
-- !query output
NULL	NULL	201	NULL	2
107	1	109	319	-1
110	-4	NULL	338	NULL
127	-1	126	383	3
132	-2	133	400	-2
144	3	142	426	-2
145	-4	NULL	443	NULL
161	1	164	481	-1
171	1	173	511	-1
181	1	183	541	-1
187	-1	189	563	-3
190	-4	192	578	1
199	2	196	593	2
214	4	212	634	1
218	3	217	648	-1
223	2	220	665	2
226	-1	229	680	-1
234	3	230	696	2
246	-2	249	742	-2


-- !query
SELECT d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE b>c
-- !query schema
struct<d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
115	222	NULL
133	333	3
142	555	-1
189	111	4
192	444	1
243	555	NULL
249	222	4
NULL	222	NULL
NULL	555	NULL


-- !query
SELECT d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE b>c
 ORDER BY 3,2
-- !query schema
struct<d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
115	222	NULL
NULL	222	NULL
NULL	555	NULL
243	555	NULL
142	555	-1
192	444	1
133	333	3
189	111	4
249	222	4


-- !query
SELECT e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       c-d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       c-d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
 ORDER BY 4,1,3,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       d-e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       b-c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       d-e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       b-c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 3,2,5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       a-b,
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       a-b,
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c>d
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
128	383


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c>d
 ORDER BY 1,2
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
128	383


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE c>d
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
128	383


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE c>d
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,1
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
128	383


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1027	2589	1719	1700
1087	2739	1819	362
1121	2802	1877	374
1157	2880	1925	380
1187	2946	1971	398
1273	3176	2121	428
1296	3259	2164	436
1331	3331	2211	446
1364	3405	2280	452
1392	3477	2312	468
1483	3704	2479	492
643	1604	1079	1060
705	NULL	1165	1190
846	2129	1414	1410
970	2436	1626	1600
NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 3,1,4,2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL	NULL	NULL
643	1604	1079	1060
705	NULL	1165	1190
846	2129	1414	1410
970	2436	1626	1600
1027	2589	1719	1700
1087	2739	1819	362
1121	2802	1877	374
1157	2880	1925	380
1187	2946	1971	398
1273	3176	2121	428
1296	3259	2164	436
1331	3331	2211	446
1364	3405	2280	452
1392	3477	2312	468
1483	3704	2479	492


-- !query
SELECT b-c,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 5,3,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 6,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR a>b
-- !query schema
struct<a:int,b:int>
-- !query output
107	106
110	114
116	119
123	122
127	128
132	134
138	136
144	141
145	149
151	150
155	157
161	160
171	170
177	176
181	180
187	188
190	194
199	197
214	210
218	215
223	221
226	227
234	231
237	236
246	248
NULL	202
NULL	244


-- !query
SELECT a,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR a>b
 ORDER BY 2,1
-- !query schema
struct<a:int,b:int>
-- !query output
107	106
110	114
116	119
123	122
127	128
132	134
138	136
144	141
145	149
151	150
155	157
161	160
171	170
177	176
181	180
187	188
190	194
199	197
NULL	202
214	210
218	215
223	221
226	227
234	231
237	236
NULL	244
246	248


-- !query
SELECT a,
       b
  FROM t1
 WHERE a>b
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<a:int,b:int>
-- !query output
107	106
110	114
116	119
123	122
127	128
132	134
138	136
144	141
145	149
151	150
155	157
161	160
171	170
177	176
181	180
187	188
190	194
199	197
214	210
218	215
223	221
226	227
234	231
237	236
246	248
NULL	202
NULL	244


-- !query
SELECT a,
       b
  FROM t1
 WHERE a>b
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<a:int,b:int>
-- !query output
NULL	202
NULL	244
107	106
110	114
116	119
123	122
127	128
132	134
138	136
144	141
145	149
151	150
155	157
161	160
171	170
177	176
181	180
187	188
190	194
199	197
214	210
218	215
223	221
226	227
234	231
237	236
246	248


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       abs(a)
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,abs(a):int>
-- !query output
111	1	190
111	2	110
111	3	145


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       abs(a)
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,2,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,abs(a):int>
-- !query output
111	2	110
111	3	145
111	1	190


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       abs(a)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,abs(a):int>
-- !query output
111	1	190
111	2	110
111	3	145


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       abs(a)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
 ORDER BY 3,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,abs(a):int>
-- !query output
111	2	110
111	3	145
111	1	190


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1190	705
1280	770
1340	793
1360	827
1410	846
374	1121
398	1187
446	1331
468	1392
492	1483
NULL	NULL
NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL
NULL	NULL
374	1121
398	1187
446	1331
468	1392
492	1483
1190	705
1280	770
1340	793
1360	827
1410	846


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1190	705
1280	770
1340	793
1360	827
1410	846
374	1121
398	1187
446	1331
468	1392
492	1483
NULL	NULL
NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL
NULL	NULL
1190	705
1280	770
1340	793
1360	827
1410	846
374	1121
398	1187
446	1331
468	1392
492	1483


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE a>b
   AND d>e
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE a>b
   AND d>e
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
   AND a>b
 ORDER BY 2,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE d>e
   AND a>b
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE d>e
   AND a>b
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       e,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,e:int,abs((b - c)):int>
-- !query output
222	-1	125	1
222	-1	185	2
222	-1	225	1
333	1	105	2
333	1	121	2
333	1	162	3
333	1	174	2
333	1	175	3
333	1	184	2
333	1	238	3
333	1	NULL	3


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       e,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 4,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,e:int,abs((b - c)):int>
-- !query output
222	-1	225	1
222	-1	125	1
222	-1	185	2
333	1	174	2
333	1	184	2
333	1	105	2
333	1	121	2
333	1	162	3
333	1	238	3
333	1	175	3
333	1	NULL	3


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       c,
       a+b*2+c*3,
       d,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
-- !query schema
struct<abs(a):int,c:int,((a + (b * 2)) + (c * 3)):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
107	108	643	109	1604	1079	222
127	129	770	126	1899	1274	111
132	131	793	133	1975	1325	333
161	163	970	164	2436	1626	444
187	186	1121	189	2802	1877	111
190	193	1157	192	2880	1925	444
199	198	1187	196	2946	1971	555
214	213	1273	212	3176	2121	555
226	228	1364	229	3405	2280	111
246	247	1483	249	3704	2479	222


-- !query
SELECT abs(a),
       c,
       a+b*2+c*3,
       d,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
 ORDER BY 6,2,7,3,5,1
-- !query schema
struct<abs(a):int,c:int,((a + (b * 2)) + (c * 3)):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
107	108	643	109	1604	1079	222
127	129	770	126	1899	1274	111
132	131	793	133	1975	1325	333
161	163	970	164	2436	1626	444
187	186	1121	189	2802	1877	111
190	193	1157	192	2880	1925	444
199	198	1187	196	2946	1971	555
214	213	1273	212	3176	2121	555
226	228	1364	229	3405	2280	111
246	247	1483	249	3704	2479	222


-- !query
SELECT c-d
  FROM t1
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-2
-2
-3
-3
1
1
2
2
2
2
2
3
3
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT c-d
  FROM t1
 ORDER BY 1
-- !query schema
struct<(c - d):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
-3
-3
-2
-2
-2
-1
-1
-1
-1
-1
-1
1
1
2
2
2
2
2
3
3
4


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       b,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       b,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 2,3,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int>
-- !query output
1190	2
1280	-1
1360	-3
398	-1
446	-1
468	-1
NULL	-1
NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int>
-- !query output
NULL	NULL
NULL	-1
398	-1
446	-1
468	-1
1190	2
1280	-1
1360	-3


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int>
-- !query output
1190	2
1280	-1
1360	-3
398	-1
446	-1
468	-1
NULL	-1
NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int>
-- !query output
NULL	NULL
1360	-3
NULL	-1
398	-1
446	-1
468	-1
1280	-1
1190	2


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,abs((b - c)):int>
-- !query output
111	191	1
222	185	2
222	245	1


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,abs((b - c)):int>
-- !query output
111	191	1
222	185	2
222	245	1


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND b>c
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,abs((b - c)):int>
-- !query output
111	191	1
222	185	2
222	245	1


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND b>c
 ORDER BY 2,1,3
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,abs((b - c)):int>
-- !query output
222	185	2
111	191	1
222	245	1


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
   AND (e>c OR e<d)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,abs((b - c)):int>
-- !query output
111	191	1
222	185	2
222	245	1


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
   AND (e>c OR e<d)
 ORDER BY 3,1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,abs((b - c)):int>
-- !query output
111	191	1
222	245	1
222	185	2


-- !query
SELECT abs(b-c),
       d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>a AND e<b)
    OR (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>a AND e<b)
    OR (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 3,1,4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
 ORDER BY 5,1,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
    OR (e>a AND e<b)
 ORDER BY 5,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       c-d
  FROM t1
 WHERE b>c
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,(c - d):int>
-- !query output
1121	2802	187	111	189	-3
1157	2880	190	444	192	1
1483	3704	246	222	249	-2
674	NULL	110	555	NULL	NULL
705	NULL	116	222	115	2
793	1975	132	333	133	-2
846	2129	144	555	142	-2
881	NULL	145	222	NULL	NULL
NULL	NULL	NULL	555	243	-3


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       c-d
  FROM t1
 WHERE b>c
 ORDER BY 1,3,5,6,4
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,(c - d):int>
-- !query output
NULL	NULL	NULL	555	243	-3
674	NULL	110	555	NULL	NULL
705	NULL	116	222	115	2
793	1975	132	333	133	-2
846	2129	144	555	142	-2
881	NULL	145	222	NULL	NULL
1121	2802	187	111	189	-3
1157	2880	190	444	192	1
1483	3704	246	222	249	-2


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       e,
       d-e,
       c-d,
       a
  FROM t1
 WHERE (e>a AND e<b)
   AND a>b
   AND d>e
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,e:int,(d - e):int,(c - d):int,a:int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       e,
       d-e,
       c-d,
       a
  FROM t1
 WHERE (e>a AND e<b)
   AND a>b
   AND d>e
 ORDER BY 6,3
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,e:int,(d - e):int,(c - d):int,a:int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       e,
       d-e,
       c-d,
       a
  FROM t1
 WHERE a>b
   AND d>e
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,e:int,(d - e):int,(c - d):int,a:int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       e,
       d-e,
       c-d,
       a
  FROM t1
 WHERE a>b
   AND d>e
   AND (e>a AND e<b)
 ORDER BY 6,5
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,e:int,(d - e):int,(c - d):int,a:int>
-- !query output



-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       c,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       c,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
 ORDER BY 2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2+c*3,
       a+b*2,
       e,
       b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs(a):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,e:int,b:int>
-- !query output
167	NULL	NULL	166	NULL
187	1121	563	185	188
199	1187	593	195	197
223	1331	665	224	221
234	1392	696	233	231
246	1483	742	245	248
NULL	NULL	NULL	204	202
NULL	NULL	NULL	NULL	244


-- !query
SELECT abs(a),
       a+b*2+c*3,
       a+b*2,
       e,
       b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 5,4,1,2,3
-- !query schema
struct<abs(a):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,e:int,b:int>
-- !query output
167	NULL	NULL	166	NULL
187	1121	563	185	188
199	1187	593	195	197
NULL	NULL	NULL	204	202
223	1331	665	224	221
234	1392	696	233	231
NULL	NULL	NULL	NULL	244
246	1483	742	245	248


-- !query
SELECT a-b,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 5,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-2
-3
-4
1
1
1
1
2
2
3
3
3
4
NULL


-- !query
SELECT a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
-4
-3
-2
-1
-1
1
1
1
1
2
2
3
3
3
4


-- !query
SELECT a+b*2,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1,2,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
 ORDER BY 3,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<b:int>
-- !query output
106
119
141
160
170
180
188
194
197
202
210
215
221
227
231
248


-- !query
SELECT b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<b:int>
-- !query output
106
119
141
160
170
180
188
194
197
202
210
215
221
227
231
248


-- !query
SELECT b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<b:int>
-- !query output
106
119
141
160
170
180
188
194
197
202
210
215
221
227
231
248


-- !query
SELECT b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<b:int>
-- !query output
106
119
141
160
170
180
188
194
197
202
210
215
221
227
231
248


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
    OR c>d
    OR d>e
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	333
110	111
116	222
127	222
132	222
138	333
144	444
145	111
161	333
167	444
171	333
181	333
187	222
190	111
199	333
214	444
218	444
223	333
226	222
234	444
246	222
NULL	444


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
    OR c>d
    OR d>e
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	444
107	333
110	111
116	222
127	222
132	222
138	333
144	444
145	111
161	333
167	444
171	333
181	333
187	222
190	111
199	333
214	444
218	444
223	333
226	222
234	444
246	222


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
    OR c>d
    OR (e>c OR e<d)
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	333
110	111
116	222
127	222
132	222
138	333
144	444
145	111
161	333
167	444
171	333
181	333
187	222
190	111
199	333
214	444
218	444
223	333
226	222
234	444
246	222
NULL	444


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
    OR c>d
    OR (e>c OR e<d)
 ORDER BY 2,1
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
110	111
145	111
190	111
116	222
127	222
132	222
187	222
226	222
246	222
107	333
138	333
161	333
171	333
181	333
199	333
223	333
NULL	444
144	444
167	444
214	444
218	444
234	444


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
    OR (e>c OR e<d)
    OR c>d
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	333
110	111
116	222
127	222
132	222
138	333
144	444
145	111
161	333
167	444
171	333
181	333
187	222
190	111
199	333
214	444
218	444
223	333
226	222
234	444
246	222
NULL	444


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
    OR (e>c OR e<d)
    OR c>d
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	444
107	333
110	111
116	222
127	222
132	222
138	333
144	444
145	111
161	333
167	444
171	333
181	333
187	222
190	111
199	333
214	444
218	444
223	333
226	222
234	444
246	222


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       abs(b-c),
       b
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,abs((b - c)):int,b:int>
-- !query output
1190	222	354	2	119
1280	222	383	1	128
1360	333	410	3	136
380	111	578	1	194
398	333	593	1	197
428	444	634	3	210
446	333	665	1	221
468	444	696	1	231
NULL	444	NULL	1	202


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       abs(b-c),
       b
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 4,1,5,2,3
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,abs((b - c)):int,b:int>
-- !query output
NULL	444	NULL	1	202
380	111	578	1	194
398	333	593	1	197
446	333	665	1	221
468	444	696	1	231
1280	222	383	1	128
1190	222	354	2	119
428	444	634	3	210
1360	333	410	3	136


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       abs(b-c),
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,abs((b - c)):int,b:int>
-- !query output
1190	222	354	2	119
1280	222	383	1	128
1360	333	410	3	136
380	111	578	1	194
398	333	593	1	197
428	444	634	3	210
446	333	665	1	221
468	444	696	1	231
NULL	444	NULL	1	202


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       abs(b-c),
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
 ORDER BY 5,4,3,1,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,abs((b - c)):int,b:int>
-- !query output
1190	222	354	2	119
1280	222	383	1	128
1360	333	410	3	136
380	111	578	1	194
398	333	593	1	197
NULL	444	NULL	1	202
428	444	634	3	210
446	333	665	1	221
468	444	696	1	231


-- !query
SELECT a+b*2+c*3,
       d,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       d,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 4,3,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       abs(b-c),
       c-d
  FROM t1
 WHERE a>b
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int,abs((b - c)):int,(c - d):int>
-- !query output
106	1079	1604	333	107	2	-1
122	NULL	NULL	333	123	2	NULL
136	1367	2052	333	138	3	4
141	1414	2129	444	144	1	-2
150	NULL	NULL	333	151	3	NULL
160	1626	2436	333	161	3	-1
170	1719	2589	333	171	2	-1
176	NULL	NULL	333	177	3	NULL
180	1819	2739	333	181	2	-1
197	1971	2946	333	199	1	2
210	2121	3176	444	214	3	1
215	2164	3259	444	218	1	-1
221	2211	3331	333	223	1	2
231	2312	3477	444	234	1	2
236	NULL	NULL	333	237	3	NULL


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       abs(b-c),
       c-d
  FROM t1
 WHERE a>b
 ORDER BY 3,4,7,5,2,1,6
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int,abs((b - c)):int,(c - d):int>
-- !query output
122	NULL	NULL	333	123	2	NULL
150	NULL	NULL	333	151	3	NULL
176	NULL	NULL	333	177	3	NULL
236	NULL	NULL	333	237	3	NULL
106	1079	1604	333	107	2	-1
136	1367	2052	333	138	3	4
141	1414	2129	444	144	1	-2
160	1626	2436	333	161	3	-1
170	1719	2589	333	171	2	-1
180	1819	2739	333	181	2	-1
197	1971	2946	333	199	1	2
210	2121	3176	444	214	3	1
215	2164	3259	444	218	1	-1
221	2211	3331	333	223	1	2
231	2312	3477	444	234	1	2


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a>b
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       d-e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       d-e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
 ORDER BY 1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1,5,4,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       c,
       abs(a),
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       c,
       abs(a),
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 ORDER BY 3,2,5,4,1,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       a+b*2+c*3,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
105	643	107	333


-- !query
SELECT e,
       a+b*2+c*3,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,4,3
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
105	643	107	333


-- !query
SELECT e,
       a+b*2+c*3,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
105	643	107	333


-- !query
SELECT e,
       a+b*2+c*3,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
 ORDER BY 4,2
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
105	643	107	333


-- !query
SELECT e,
       a+b*2+c*3,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
105	643	107	333


-- !query
SELECT e,
       a+b*2+c*3,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 4,1
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
105	643	107	333


-- !query
SELECT e,
       a+b*2+c*3,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
105	643	107	333


-- !query
SELECT e,
       a+b*2+c*3,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,4,1
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
105	643	107	333


-- !query
SELECT e,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,(b - c):int>
-- !query output
105	643	1060	1	-2
125	770	1280	-1	-1


-- !query
SELECT e,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,1,4,2
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,(b - c):int>
-- !query output
105	643	1060	1	-2
125	770	1280	-1	-1


-- !query
SELECT e,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       b-c
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,(b - c):int>
-- !query output
105	643	1060	1	-2
125	770	1280	-1	-1


-- !query
SELECT e,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       b-c
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 5,4,3,1,2
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,(b - c):int>
-- !query output
105	643	1060	1	-2
125	770	1280	-1	-1


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 4,1,5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
-- !query schema
struct<d:int>
-- !query output
192


-- !query
SELECT d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
 ORDER BY 1
-- !query schema
struct<d:int>
-- !query output
192


-- !query
SELECT d
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<d:int>
-- !query output
192


-- !query
SELECT d
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<d:int>
-- !query output
192


-- !query
SELECT c,
       (a+b+c+d+e)/5,
       e,
       d-e,
       a+b*2,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND c>d
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (a+b+c+d+e)/5,
       e,
       d-e,
       a+b*2,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND c>d
   AND (e>a AND e<b)
 ORDER BY 3,4,6,7,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (a+b+c+d+e)/5,
       e,
       d-e,
       a+b*2,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
   AND d>e
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (a+b+c+d+e)/5,
       e,
       d-e,
       a+b*2,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
   AND d>e
   AND c>d
 ORDER BY 6,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (a+b+c+d+e)/5,
       e,
       d-e,
       a+b*2,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
   AND c>d
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (a+b+c+d+e)/5,
       e,
       d-e,
       a+b*2,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
   AND c>d
   AND d>e
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (a+b+c+d+e)/5,
       e,
       d-e,
       a+b*2,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND (e>a AND e<b)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (a+b+c+d+e)/5,
       e,
       d-e,
       a+b*2,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND (e>a AND e<b)
   AND c>d
 ORDER BY 5,1,6,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
    OR c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
    OR c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444


-- !query
SELECT e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
104	1020
105	1060
113	1140
121	1220
125	1280
130	1340
137	1360
143	1410
147	1490
158	1570
162	1600
166	NULL
174	1700
175	354
184	362
185	374
191	380
195	398
204	NULL
207	NULL
211	428
219	436
224	446
225	452
233	468
238	474
245	492
NULL	1190
NULL	1500
NULL	NULL


-- !query
SELECT e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL
166	NULL
204	NULL
207	NULL
175	354
184	362
185	374
191	380
195	398
211	428
219	436
224	446
225	452
233	468
238	474
245	492
104	1020
105	1060
113	1140
NULL	1190
121	1220
125	1280
130	1340
137	1360
143	1410
147	1490
NULL	1500
158	1570
162	1600
174	1700


-- !query
SELECT a,
       b-c,
       (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<a:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
116	2	NULL	117
127	-1	127.0	129
132	3	132.0	131
138	-3	137.0	139
144	1	142.0	140
167	NULL	NULL	168
187	2	187.0	186
199	-1	197.0	198
223	-1	222.0	222
234	-1	232.0	232
246	1	247.0	247
NULL	-1	NULL	203
NULL	4	NULL	240


-- !query
SELECT a,
       b-c,
       (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 1,4,2
-- !query schema
struct<a:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
NULL	-1	NULL	203
NULL	4	NULL	240
116	2	NULL	117
127	-1	127.0	129
132	3	132.0	131
138	-3	137.0	139
144	1	142.0	140
167	NULL	NULL	168
187	2	187.0	186
199	-1	197.0	198
223	-1	222.0	222
234	-1	232.0	232
246	1	247.0	247


-- !query
SELECT a,
       c-d,
       abs(b-c),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
-- !query schema
struct<a:int,(c - d):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output



-- !query
SELECT a,
       c-d,
       abs(b-c),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
 ORDER BY 1,2,5
-- !query schema
struct<a:int,(c - d):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output



-- !query
SELECT a,
       c-d,
       abs(b-c),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
-- !query schema
struct<a:int,(c - d):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output



-- !query
SELECT a,
       c-d,
       abs(b-c),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
 ORDER BY 2,3
-- !query schema
struct<a:int,(c - d):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output



-- !query
SELECT a,
       c-d,
       abs(b-c),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<a:int,(c - d):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output



-- !query
SELECT a,
       c-d,
       abs(b-c),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 3,4
-- !query schema
struct<a:int,(c - d):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output



-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       c-d,
       b,
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       c-d,
       b,
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 5,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-2
-2
-3
2
2
2
3
3
NULL
NULL
NULL


-- !query
SELECT a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
NULL
NULL
-3
-2
-2
-1
-1
2
2
2
3
3


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       d,
       a-b
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,d:int,(a - b):int>
-- !query output
107.0	1604	-1	333	643	109	1
127.0	1899	3	222	770	126	-1
132.0	1975	-2	222	793	133	-2
137.0	2052	4	333	827	135	2
142.0	2129	-2	444	846	142	3
162.0	2436	-1	333	970	164	1
172.0	2589	-1	333	1027	173	1
182.0	2739	-1	333	1087	183	1
187.0	2802	-3	222	1121	189	-1
192.0	2880	1	111	1157	192	-4
197.0	2946	2	333	1187	196	2
212.0	3176	1	444	1273	212	4
217.0	3259	-1	444	1296	217	3
222.0	3331	2	333	1331	220	2
227.0	3405	-1	222	1364	229	-1
232.0	3477	2	444	1392	230	3
247.0	3704	-2	222	1483	249	-2
NULL	NULL	-3	444	NULL	243	NULL
NULL	NULL	2	222	705	115	-3
NULL	NULL	2	444	NULL	201	NULL
NULL	NULL	3	444	NULL	165	NULL
NULL	NULL	NULL	111	674	NULL	-4
NULL	NULL	NULL	111	881	NULL	-4
NULL	NULL	NULL	222	946	NULL	-2
NULL	NULL	NULL	333	1066	NULL	1
NULL	NULL	NULL	333	1426	NULL	1
NULL	NULL	NULL	333	739	NULL	1
NULL	NULL	NULL	333	910	NULL	1
NULL	NULL	NULL	444	NULL	101	NULL
NULL	NULL	NULL	444	NULL	206	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       d,
       a-b
  FROM t1
 ORDER BY 3,7,4,2,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,d:int,(a - b):int>
-- !query output
NULL	NULL	NULL	444	NULL	101	NULL
NULL	NULL	NULL	444	NULL	206	NULL
NULL	NULL	NULL	111	674	NULL	-4
NULL	NULL	NULL	111	881	NULL	-4
NULL	NULL	NULL	222	946	NULL	-2
NULL	NULL	NULL	333	1426	NULL	1
NULL	NULL	NULL	333	739	NULL	1
NULL	NULL	NULL	333	1066	NULL	1
NULL	NULL	NULL	333	910	NULL	1
NULL	NULL	-3	444	NULL	243	NULL
187.0	2802	-3	222	1121	189	-1
132.0	1975	-2	222	793	133	-2
247.0	3704	-2	222	1483	249	-2
142.0	2129	-2	444	846	142	3
227.0	3405	-1	222	1364	229	-1
107.0	1604	-1	333	643	109	1
162.0	2436	-1	333	970	164	1
172.0	2589	-1	333	1027	173	1
182.0	2739	-1	333	1087	183	1
217.0	3259	-1	444	1296	217	3
192.0	2880	1	111	1157	192	-4
212.0	3176	1	444	1273	212	4
NULL	NULL	2	444	NULL	201	NULL
NULL	NULL	2	222	705	115	-3
197.0	2946	2	333	1187	196	2
222.0	3331	2	333	1331	220	2
232.0	3477	2	444	1392	230	3
NULL	NULL	3	444	NULL	165	NULL
127.0	1899	3	222	770	126	-1
137.0	2052	4	333	827	135	2


-- !query
SELECT c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3
  FROM t1
 WHERE a>b
-- !query schema
struct<c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
108	222	643
124	222	739
139	222	827
140	555	846
153	555	910
163	444	970
172	222	1027
179	555	1066
182	222	1087
198	555	1187
213	555	1273
216	444	1296
222	444	1331
232	555	1392
239	444	1426


-- !query
SELECT c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3
  FROM t1
 WHERE a>b
 ORDER BY 1,3
-- !query schema
struct<c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
108	222	643
124	222	739
139	222	827
140	555	846
153	555	910
163	444	970
172	222	1027
179	555	1066
182	222	1087
198	555	1187
213	555	1273
216	444	1296
222	444	1331
232	555	1392
239	444	1426


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       a+b*2,
       d-e
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,(a + (b * 2)):int,(d - e):int>
-- !query output
111	113	338	NULL
111	147	443	NULL
111	191	578	1
222	125	383	1
222	130	400	3
222	158	469	NULL
222	185	563	4
222	225	680	4
222	245	742	4
222	NULL	354	NULL
333	105	319	4
333	121	367	NULL
333	137	410	-2
333	162	481	2
333	174	511	-1
333	175	529	NULL
333	184	541	-1
333	195	593	1
333	224	665	-4
333	238	709	NULL
333	NULL	451	NULL
444	104	NULL	-3
444	143	426	-1
444	166	NULL	-1
444	204	NULL	-3
444	207	NULL	-1
444	211	634	1
444	219	648	-2
444	233	696	-3
444	NULL	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       a+b*2,
       d-e
  FROM t1
 ORDER BY 1,2,3,4
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,(a + (b * 2)):int,(d - e):int>
-- !query output
111	113	338	NULL
111	147	443	NULL
111	191	578	1
222	NULL	354	NULL
222	125	383	1
222	130	400	3
222	158	469	NULL
222	185	563	4
222	225	680	4
222	245	742	4
333	NULL	451	NULL
333	105	319	4
333	121	367	NULL
333	137	410	-2
333	162	481	2
333	174	511	-1
333	175	529	NULL
333	184	541	-1
333	195	593	1
333	224	665	-4
333	238	709	NULL
444	NULL	NULL	NULL
444	104	NULL	-3
444	143	426	-1
444	166	NULL	-1
444	204	NULL	-3
444	207	NULL	-1
444	211	634	1
444	219	648	-2
444	233	696	-3


-- !query
SELECT c-d,
       d,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(c - d):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	109	1604	107	1079
-1	164	2436	161	1626
-1	173	2589	171	1719
-1	183	2739	181	1819
-1	217	3259	218	2164
-1	229	3405	226	2280
-2	133	1975	132	1325
-2	142	2129	144	1414
-2	249	3704	246	2479
-3	189	2802	187	1877
-3	243	NULL	NULL	NULL
1	192	2880	190	1925
1	212	3176	214	2121
2	115	NULL	116	1165
2	196	2946	199	1971
2	201	NULL	NULL	NULL
2	220	3331	223	2211
2	230	3477	234	2312
3	126	1899	127	1274
3	165	NULL	167	NULL
4	135	2052	138	1367
NULL	101	NULL	NULL	NULL
NULL	206	NULL	208	NULL
NULL	NULL	NULL	110	NULL
NULL	NULL	NULL	123	NULL
NULL	NULL	NULL	145	NULL
NULL	NULL	NULL	151	NULL
NULL	NULL	NULL	155	NULL
NULL	NULL	NULL	177	NULL
NULL	NULL	NULL	237	NULL


-- !query
SELECT c-d,
       d,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       a+b*2+c*3+d*4
  FROM t1
 ORDER BY 5,1,4
-- !query schema
struct<(c - d):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	101	NULL	NULL	NULL
NULL	NULL	NULL	110	NULL
NULL	NULL	NULL	123	NULL
NULL	NULL	NULL	145	NULL
NULL	NULL	NULL	151	NULL
NULL	NULL	NULL	155	NULL
NULL	NULL	NULL	177	NULL
NULL	206	NULL	208	NULL
NULL	NULL	NULL	237	NULL
-3	243	NULL	NULL	NULL
2	201	NULL	NULL	NULL
3	165	NULL	167	NULL
-1	109	1604	107	1079
2	115	NULL	116	1165
3	126	1899	127	1274
-2	133	1975	132	1325
4	135	2052	138	1367
-2	142	2129	144	1414
-1	164	2436	161	1626
-1	173	2589	171	1719
-1	183	2739	181	1819
-3	189	2802	187	1877
1	192	2880	190	1925
2	196	2946	199	1971
1	212	3176	214	2121
-1	217	3259	218	2164
2	220	3331	223	2211
-1	229	3405	226	2280
2	230	3477	234	2312
-2	249	3704	246	2479


-- !query
SELECT d,
       (a+b+c+d+e)/5,
       d-e,
       b-c,
       b,
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c>d
-- !query schema
struct<d:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,(b - c):int,b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output
109	107.0	4	-2	106	1604	319
115	NULL	NULL	2	119	NULL	354
126	127.0	1	-1	128	1899	383
133	132.0	3	3	134	1975	400
135	137.0	-2	-3	136	2052	410
142	142.0	-1	1	141	2129	426
164	162.0	2	-3	160	2436	481
165	NULL	-1	NULL	NULL	NULL	NULL
173	172.0	-1	-2	170	2589	511
183	182.0	-1	-2	180	2739	541
189	187.0	4	2	188	2802	563
192	192.0	1	1	194	2880	578
196	197.0	1	-1	197	2946	593
201	NULL	-3	-1	202	NULL	NULL
212	212.0	1	-3	210	3176	634
217	217.0	-2	-1	215	3259	648
220	222.0	-4	-1	221	3331	665
229	227.0	4	-1	227	3405	680
230	232.0	-3	-1	231	3477	696
243	NULL	NULL	4	244	NULL	NULL
249	247.0	4	1	248	3704	742
NULL	NULL	NULL	-2	122	NULL	367
NULL	NULL	NULL	-2	157	NULL	469
NULL	NULL	NULL	-3	150	NULL	451
NULL	NULL	NULL	-3	176	NULL	529
NULL	NULL	NULL	-3	236	NULL	709
NULL	NULL	NULL	2	114	NULL	338
NULL	NULL	NULL	3	149	NULL	443


-- !query
SELECT d,
       (a+b+c+d+e)/5,
       d-e,
       b-c,
       b,
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c>d
 ORDER BY 1,5,2,3,4,6,7
-- !query schema
struct<d:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,(b - c):int,b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output
NULL	NULL	NULL	2	114	NULL	338
NULL	NULL	NULL	-2	122	NULL	367
NULL	NULL	NULL	3	149	NULL	443
NULL	NULL	NULL	-3	150	NULL	451
NULL	NULL	NULL	-2	157	NULL	469
NULL	NULL	NULL	-3	176	NULL	529
NULL	NULL	NULL	-3	236	NULL	709
109	107.0	4	-2	106	1604	319
115	NULL	NULL	2	119	NULL	354
126	127.0	1	-1	128	1899	383
133	132.0	3	3	134	1975	400
135	137.0	-2	-3	136	2052	410
142	142.0	-1	1	141	2129	426
164	162.0	2	-3	160	2436	481
165	NULL	-1	NULL	NULL	NULL	NULL
173	172.0	-1	-2	170	2589	511
183	182.0	-1	-2	180	2739	541
189	187.0	4	2	188	2802	563
192	192.0	1	1	194	2880	578
196	197.0	1	-1	197	2946	593
201	NULL	-3	-1	202	NULL	NULL
212	212.0	1	-3	210	3176	634
217	217.0	-2	-1	215	3259	648
220	222.0	-4	-1	221	3331	665
229	227.0	4	-1	227	3405	680
230	232.0	-3	-1	231	3477	696
243	NULL	NULL	4	244	NULL	NULL
249	247.0	4	1	248	3704	742


-- !query
SELECT d,
       (a+b+c+d+e)/5,
       d-e,
       b-c,
       b,
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE c>d
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<d:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,(b - c):int,b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output
109	107.0	4	-2	106	1604	319
115	NULL	NULL	2	119	NULL	354
126	127.0	1	-1	128	1899	383
133	132.0	3	3	134	1975	400
135	137.0	-2	-3	136	2052	410
142	142.0	-1	1	141	2129	426
164	162.0	2	-3	160	2436	481
165	NULL	-1	NULL	NULL	NULL	NULL
173	172.0	-1	-2	170	2589	511
183	182.0	-1	-2	180	2739	541
189	187.0	4	2	188	2802	563
192	192.0	1	1	194	2880	578
196	197.0	1	-1	197	2946	593
201	NULL	-3	-1	202	NULL	NULL
212	212.0	1	-3	210	3176	634
217	217.0	-2	-1	215	3259	648
220	222.0	-4	-1	221	3331	665
229	227.0	4	-1	227	3405	680
230	232.0	-3	-1	231	3477	696
243	NULL	NULL	4	244	NULL	NULL
249	247.0	4	1	248	3704	742
NULL	NULL	NULL	-2	122	NULL	367
NULL	NULL	NULL	-2	157	NULL	469
NULL	NULL	NULL	-3	150	NULL	451
NULL	NULL	NULL	-3	176	NULL	529
NULL	NULL	NULL	-3	236	NULL	709
NULL	NULL	NULL	2	114	NULL	338
NULL	NULL	NULL	3	149	NULL	443


-- !query
SELECT d,
       (a+b+c+d+e)/5,
       d-e,
       b-c,
       b,
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE c>d
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,7,5,1,4,6,3
-- !query schema
struct<d:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,(b - c):int,b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output
165	NULL	-1	NULL	NULL	NULL	NULL
201	NULL	-3	-1	202	NULL	NULL
243	NULL	NULL	4	244	NULL	NULL
NULL	NULL	NULL	2	114	NULL	338
115	NULL	NULL	2	119	NULL	354
NULL	NULL	NULL	-2	122	NULL	367
NULL	NULL	NULL	3	149	NULL	443
NULL	NULL	NULL	-3	150	NULL	451
NULL	NULL	NULL	-2	157	NULL	469
NULL	NULL	NULL	-3	176	NULL	529
NULL	NULL	NULL	-3	236	NULL	709
109	107.0	4	-2	106	1604	319
126	127.0	1	-1	128	1899	383
133	132.0	3	3	134	1975	400
135	137.0	-2	-3	136	2052	410
142	142.0	-1	1	141	2129	426
164	162.0	2	-3	160	2436	481
173	172.0	-1	-2	170	2589	511
183	182.0	-1	-2	180	2739	541
189	187.0	4	2	188	2802	563
192	192.0	1	1	194	2880	578
196	197.0	1	-1	197	2946	593
212	212.0	1	-3	210	3176	634
217	217.0	-2	-1	215	3259	648
220	222.0	-4	-1	221	3331	665
229	227.0	4	-1	227	3405	680
230	232.0	-3	-1	231	3477	696
249	247.0	4	1	248	3704	742


-- !query
SELECT a+b*2,
       b,
       abs(b-c),
       d-e,
       a,
       c-d
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a + (b * 2)):int,b:int,abs((b - c)):int,(d - e):int,a:int,(c - d):int>
-- !query output
319	106	2	4	107	-1
367	122	2	NULL	123	NULL
383	128	1	1	127	3
410	136	3	-2	138	4
426	141	1	-1	144	-2
451	150	3	NULL	151	NULL
481	160	3	2	161	-1
511	170	2	-1	171	-1
529	176	3	NULL	177	NULL
541	180	2	-1	181	-1
593	197	1	1	199	2
634	210	3	1	214	1
648	215	1	-2	218	-1
665	221	1	-4	223	2
696	231	1	-3	234	2
709	236	3	NULL	237	NULL


-- !query
SELECT a+b*2,
       b,
       abs(b-c),
       d-e,
       a,
       c-d
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,3,5
-- !query schema
struct<(a + (b * 2)):int,b:int,abs((b - c)):int,(d - e):int,a:int,(c - d):int>
-- !query output
319	106	2	4	107	-1
367	122	2	NULL	123	NULL
383	128	1	1	127	3
410	136	3	-2	138	4
426	141	1	-1	144	-2
451	150	3	NULL	151	NULL
481	160	3	2	161	-1
511	170	2	-1	171	-1
529	176	3	NULL	177	NULL
541	180	2	-1	181	-1
593	197	1	1	199	2
634	210	3	1	214	1
648	215	1	-2	218	-1
665	221	1	-4	223	2
696	231	1	-3	234	2
709	236	3	NULL	237	NULL


-- !query
SELECT a+b*2,
       b,
       abs(b-c),
       d-e,
       a,
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
-- !query schema
struct<(a + (b * 2)):int,b:int,abs((b - c)):int,(d - e):int,a:int,(c - d):int>
-- !query output
319	106	2	4	107	-1
367	122	2	NULL	123	NULL
383	128	1	1	127	3
410	136	3	-2	138	4
426	141	1	-1	144	-2
451	150	3	NULL	151	NULL
481	160	3	2	161	-1
511	170	2	-1	171	-1
529	176	3	NULL	177	NULL
541	180	2	-1	181	-1
593	197	1	1	199	2
634	210	3	1	214	1
648	215	1	-2	218	-1
665	221	1	-4	223	2
696	231	1	-3	234	2
709	236	3	NULL	237	NULL


-- !query
SELECT a+b*2,
       b,
       abs(b-c),
       d-e,
       a,
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
 ORDER BY 2,6,5,1,3,4
-- !query schema
struct<(a + (b * 2)):int,b:int,abs((b - c)):int,(d - e):int,a:int,(c - d):int>
-- !query output
319	106	2	4	107	-1
367	122	2	NULL	123	NULL
383	128	1	1	127	3
410	136	3	-2	138	4
426	141	1	-1	144	-2
451	150	3	NULL	151	NULL
481	160	3	2	161	-1
511	170	2	-1	171	-1
529	176	3	NULL	177	NULL
541	180	2	-1	181	-1
593	197	1	1	199	2
634	210	3	1	214	1
648	215	1	-2	218	-1
665	221	1	-4	223	2
696	231	1	-3	234	2
709	236	3	NULL	237	NULL


-- !query
SELECT d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-2
-2
-3
-3
-4
1
1
1
1
2
3
4
4
4
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
-4
-3
-3
-2
-2
-1
-1
-1
1
1
1
1
2
3
4
4
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-2
-2
-3
-3
-4
1
1
1
1
2
3
4
4
4
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
-4
-3
-3
-2
-2
-1
-1
-1
1
1
1
1
2
3
4
4
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-2
-2
-3
-3
-4
1
1
1
1
2
3
4
4
4
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
-4
-3
-3
-2
-2
-1
-1
-1
1
1
1
1
2
3
4
4
4
4


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a),
       d,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a),
       d,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c
  FROM t1
 ORDER BY 5,1,4,3,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       a+b*2+c*3+d*4+e*5,
       a-b
  FROM t1
-- !query schema
struct<a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a - b):int>
-- !query output
107	333	105	1604	1
110	111	113	NULL	-4
116	222	NULL	NULL	-3
123	333	121	NULL	1
127	222	125	1899	-1
132	222	130	1975	-2
138	333	137	2052	2
144	444	143	2129	3
145	111	147	NULL	-4
151	333	NULL	NULL	1
155	222	158	NULL	-2
161	333	162	2436	1
167	444	166	NULL	NULL
171	333	174	2589	1
177	333	175	NULL	1
181	333	184	2739	1
187	222	185	2802	-1
190	111	191	2880	-4
199	333	195	2946	2
208	444	207	NULL	NULL
214	444	211	3176	4
218	444	219	3259	3
223	333	224	3331	2
226	222	225	3405	-1
234	444	233	3477	3
237	333	238	NULL	1
246	222	245	3704	-2
NULL	444	104	NULL	NULL
NULL	444	204	NULL	NULL
NULL	444	NULL	NULL	NULL


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       a+b*2+c*3+d*4+e*5,
       a-b
  FROM t1
 ORDER BY 3,5
-- !query schema
struct<a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a - b):int>
-- !query output
NULL	444	NULL	NULL	NULL
116	222	NULL	NULL	-3
151	333	NULL	NULL	1
NULL	444	104	NULL	NULL
107	333	105	1604	1
110	111	113	NULL	-4
123	333	121	NULL	1
127	222	125	1899	-1
132	222	130	1975	-2
138	333	137	2052	2
144	444	143	2129	3
145	111	147	NULL	-4
155	222	158	NULL	-2
161	333	162	2436	1
167	444	166	NULL	NULL
171	333	174	2589	1
177	333	175	NULL	1
181	333	184	2739	1
187	222	185	2802	-1
190	111	191	2880	-4
199	333	195	2946	2
NULL	444	204	NULL	NULL
208	444	207	NULL	NULL
214	444	211	3176	4
218	444	219	3259	3
223	333	224	3331	2
226	222	225	3405	-1
234	444	233	3477	3
237	333	238	NULL	1
246	222	245	3704	-2


-- !query
SELECT abs(a),
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
    OR (e>a AND e<b)
 ORDER BY 7,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       a+b*2+c*3,
       b-c,
       (a+b+c+d+e)/5,
       abs(b-c),
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       a+b*2+c*3,
       b-c,
       (a+b+c+d+e)/5,
       abs(b-c),
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,5,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       a+b*2+c*3,
       b-c,
       (a+b+c+d+e)/5,
       abs(b-c),
       c
  FROM t1
 WHERE a>b
   AND (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       a+b*2+c*3,
       b-c,
       (a+b+c+d+e)/5,
       abs(b-c),
       c
  FROM t1
 WHERE a>b
   AND (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 6,4,7,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       a+b*2+c*3,
       b-c,
       (a+b+c+d+e)/5,
       abs(b-c),
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       a+b*2+c*3,
       b-c,
       (a+b+c+d+e)/5,
       abs(b-c),
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
   AND a>b
 ORDER BY 1,3,4,5,6,2,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a)
  FROM t1
-- !query schema
struct<b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int>
-- !query output
102	444	NULL
106	333	107
114	111	110
119	222	116
122	333	123
128	222	127
134	222	132
136	333	138
141	444	144
149	111	145
150	333	151
157	222	155
160	333	161
170	333	171
176	333	177
180	333	181
188	222	187
194	111	190
197	333	199
202	444	NULL
210	444	214
215	444	218
221	333	223
227	222	226
231	444	234
236	333	237
244	444	NULL
248	222	246
NULL	444	167
NULL	444	208


-- !query
SELECT b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a)
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int>
-- !query output
114	111	110
149	111	145
194	111	190
119	222	116
128	222	127
134	222	132
157	222	155
188	222	187
227	222	226
248	222	246
106	333	107
122	333	123
136	333	138
150	333	151
160	333	161
170	333	171
176	333	177
180	333	181
197	333	199
221	333	223
236	333	237
NULL	444	167
NULL	444	208
102	444	NULL
141	444	144
202	444	NULL
210	444	214
215	444	218
231	444	234
244	444	NULL


-- !query
SELECT b-c,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e
  FROM t1
 ORDER BY 2,7,3,4,1,5,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       abs(a),
       b
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       abs(a),
       b
  FROM t1
 ORDER BY 4,1,3,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<b:int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
102	-3	555	NULL	NULL
106	4	222	-1	1604
114	NULL	555	NULL	NULL
119	NULL	222	2	NULL
122	NULL	222	NULL	NULL
128	1	111	3	1899
134	3	333	-2	1975
136	-2	222	4	2052
141	-1	555	-2	2129
149	NULL	222	NULL	NULL
150	NULL	555	NULL	NULL
157	NULL	555	NULL	NULL
160	2	444	-1	2436
170	-1	222	-1	2589
176	NULL	555	NULL	NULL
180	-1	222	-1	2739
188	4	111	-3	2802
194	1	444	1	2880
197	1	555	2	2946
202	-3	555	2	NULL
210	1	555	1	3176
215	-2	444	-1	3259
221	-4	444	2	3331
227	4	111	-1	3405
231	-3	555	2	3477
236	NULL	444	NULL	NULL
244	NULL	555	-3	NULL
248	4	222	-2	3704
NULL	-1	222	3	NULL
NULL	-1	555	NULL	NULL


-- !query
SELECT b,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 2,5,4,1,3
-- !query schema
struct<b:int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
114	NULL	555	NULL	NULL
122	NULL	222	NULL	NULL
149	NULL	222	NULL	NULL
150	NULL	555	NULL	NULL
157	NULL	555	NULL	NULL
176	NULL	555	NULL	NULL
236	NULL	444	NULL	NULL
244	NULL	555	-3	NULL
119	NULL	222	2	NULL
221	-4	444	2	3331
102	-3	555	NULL	NULL
202	-3	555	2	NULL
231	-3	555	2	3477
136	-2	222	4	2052
215	-2	444	-1	3259
NULL	-1	555	NULL	NULL
NULL	-1	222	3	NULL
141	-1	555	-2	2129
170	-1	222	-1	2589
180	-1	222	-1	2739
128	1	111	3	1899
194	1	444	1	2880
197	1	555	2	2946
210	1	555	1	3176
160	2	444	-1	2436
134	3	333	-2	1975
106	4	222	-1	1604
188	4	111	-3	2802
227	4	111	-1	3405
248	4	222	-2	3704


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
   AND (a>b-2 AND a<b+2)
   AND d>e
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
127	222


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
   AND (a>b-2 AND a<b+2)
   AND d>e
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
127	222


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND c>d
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
127	222


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND c>d
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
127	222


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
   AND d>e
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
127	222


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
   AND d>e
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
127	222


-- !query
SELECT e,
       (a+b+c+d+e)/5,
       abs(a),
       c-d,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<e:int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int,(c - d):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
104	NULL	NULL	NULL	NULL
105	107.0	107	-1	643
113	NULL	110	NULL	674
121	NULL	123	NULL	739
125	127.0	127	3	770
130	132.0	132	-2	793
137	137.0	138	4	827
143	142.0	144	-2	846
147	NULL	145	NULL	881
158	NULL	155	NULL	946
162	162.0	161	-1	970
166	NULL	167	3	NULL
174	172.0	171	-1	1027
175	NULL	177	NULL	1066
184	182.0	181	-1	1087
185	187.0	187	-3	1121
191	192.0	190	1	1157
195	197.0	199	2	1187
204	NULL	NULL	2	NULL
207	NULL	208	NULL	NULL
211	212.0	214	1	1273
219	217.0	218	-1	1296
224	222.0	223	2	1331
225	227.0	226	-1	1364
233	232.0	234	2	1392
238	NULL	237	NULL	1426
245	247.0	246	-2	1483
NULL	NULL	116	2	705
NULL	NULL	151	NULL	910
NULL	NULL	NULL	-3	NULL


-- !query
SELECT e,
       (a+b+c+d+e)/5,
       abs(a),
       c-d,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 3,4,2,5,1
-- !query schema
struct<e:int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int,(c - d):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
104	NULL	NULL	NULL	NULL
NULL	NULL	NULL	-3	NULL
204	NULL	NULL	2	NULL
105	107.0	107	-1	643
113	NULL	110	NULL	674
NULL	NULL	116	2	705
121	NULL	123	NULL	739
125	127.0	127	3	770
130	132.0	132	-2	793
137	137.0	138	4	827
143	142.0	144	-2	846
147	NULL	145	NULL	881
NULL	NULL	151	NULL	910
158	NULL	155	NULL	946
162	162.0	161	-1	970
166	NULL	167	3	NULL
174	172.0	171	-1	1027
175	NULL	177	NULL	1066
184	182.0	181	-1	1087
185	187.0	187	-3	1121
191	192.0	190	1	1157
195	197.0	199	2	1187
207	NULL	208	NULL	NULL
211	212.0	214	1	1273
219	217.0	218	-1	1296
224	222.0	223	2	1331
225	227.0	226	-1	1364
233	232.0	234	2	1392
238	NULL	237	NULL	1426
245	247.0	246	-2	1483


-- !query
SELECT d,
       a+b*2+c*3,
       c,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<d:int,((a + (b * 2)) + (c * 3)):int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
101	NULL	NULL	NULL	444
109	643	108	1079	333
115	705	117	1165	222
126	770	129	1274	222
133	793	131	1325	222
135	827	139	1367	333
142	846	140	1414	444
164	970	163	1626	333
165	NULL	168	NULL	444
173	1027	172	1719	333
183	1087	182	1819	333
189	1121	186	1877	222
192	1157	193	1925	111
196	1187	198	1971	333
201	NULL	203	NULL	444
206	NULL	NULL	NULL	444
212	1273	213	2121	444
217	1296	216	2164	444
220	1331	222	2211	333
229	1364	228	2280	222
230	1392	232	2312	444
243	NULL	240	NULL	444
249	1483	247	2479	222
NULL	1066	179	NULL	333
NULL	1426	239	NULL	333
NULL	674	112	NULL	111
NULL	739	124	NULL	333
NULL	881	146	NULL	111
NULL	910	153	NULL	333
NULL	946	159	NULL	222


-- !query
SELECT d,
       a+b*2+c*3,
       c,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 3,2,5,4
-- !query schema
struct<d:int,((a + (b * 2)) + (c * 3)):int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
101	NULL	NULL	NULL	444
206	NULL	NULL	NULL	444
109	643	108	1079	333
NULL	674	112	NULL	111
115	705	117	1165	222
NULL	739	124	NULL	333
126	770	129	1274	222
133	793	131	1325	222
135	827	139	1367	333
142	846	140	1414	444
NULL	881	146	NULL	111
NULL	910	153	NULL	333
NULL	946	159	NULL	222
164	970	163	1626	333
165	NULL	168	NULL	444
173	1027	172	1719	333
NULL	1066	179	NULL	333
183	1087	182	1819	333
189	1121	186	1877	222
192	1157	193	1925	111
196	1187	198	1971	333
201	NULL	203	NULL	444
212	1273	213	2121	444
217	1296	216	2164	444
220	1331	222	2211	333
229	1364	228	2280	222
230	1392	232	2312	444
NULL	1426	239	NULL	333
243	NULL	240	NULL	444
249	1483	247	2479	222


-- !query
SELECT c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-2	1340
-2	1410
-2	492
-3	374
-3	NULL
2	1190
2	398
2	446
2	468
2	NULL
3	1280
3	NULL
4	1360


-- !query
SELECT c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-3	NULL
2	NULL
3	NULL
-3	374
2	398
2	446
2	468
-2	492
2	1190
3	1280
-2	1340
4	1360
-2	1410


-- !query
SELECT d,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       e,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       e,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 7,5,4,6,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
    OR b>c
 ORDER BY 4,2,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
    OR d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
    OR d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
    OR b>c
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
-- !query schema
struct<e:int,(a - b):int>
-- !query output
105	1
113	-4
121	1
125	-1
130	-2
143	3
147	-4
162	1
174	1
175	1
184	1
185	-1
191	-4
225	-1
238	1
245	-2
NULL	-3
NULL	1
NULL	NULL


-- !query
SELECT e,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
 ORDER BY 2,1
-- !query schema
struct<e:int,(a - b):int>
-- !query output
NULL	NULL
113	-4
147	-4
191	-4
NULL	-3
130	-2
245	-2
125	-1
185	-1
225	-1
NULL	1
105	1
121	1
162	1
174	1
175	1
184	1
238	1
143	3


-- !query
SELECT e,
       a-b
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<e:int,(a - b):int>
-- !query output
105	1
113	-4
121	1
125	-1
130	-2
143	3
147	-4
162	1
174	1
175	1
184	1
185	-1
191	-4
225	-1
238	1
245	-2
NULL	-3
NULL	1
NULL	NULL


-- !query
SELECT e,
       a-b
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<e:int,(a - b):int>
-- !query output
NULL	NULL
113	-4
147	-4
191	-4
NULL	-3
130	-2
245	-2
125	-1
185	-1
225	-1
NULL	1
105	1
121	1
162	1
174	1
175	1
184	1
238	1
143	3


-- !query
SELECT c,
       d-e,
       abs(a),
       e
  FROM t1
-- !query schema
struct<c:int,(d - e):int,abs(a):int,e:int>
-- !query output
108	4	107	105
112	NULL	110	113
117	NULL	116	NULL
124	NULL	123	121
129	1	127	125
131	3	132	130
139	-2	138	137
140	-1	144	143
146	NULL	145	147
153	NULL	151	NULL
159	NULL	155	158
163	2	161	162
168	-1	167	166
172	-1	171	174
179	NULL	177	175
182	-1	181	184
186	4	187	185
193	1	190	191
198	1	199	195
203	-3	NULL	204
213	1	214	211
216	-2	218	219
222	-4	223	224
228	4	226	225
232	-3	234	233
239	NULL	237	238
240	NULL	NULL	NULL
247	4	246	245
NULL	-1	208	207
NULL	-3	NULL	104


-- !query
SELECT c,
       d-e,
       abs(a),
       e
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<c:int,(d - e):int,abs(a):int,e:int>
-- !query output
NULL	-3	NULL	104
NULL	-1	208	207
108	4	107	105
112	NULL	110	113
117	NULL	116	NULL
124	NULL	123	121
129	1	127	125
131	3	132	130
139	-2	138	137
140	-1	144	143
146	NULL	145	147
153	NULL	151	NULL
159	NULL	155	158
163	2	161	162
168	-1	167	166
172	-1	171	174
179	NULL	177	175
182	-1	181	184
186	4	187	185
193	1	190	191
198	1	199	195
203	-3	NULL	204
213	1	214	211
216	-2	218	219
222	-4	223	224
228	4	226	225
232	-3	234	233
239	NULL	237	238
240	NULL	NULL	NULL
247	4	246	245


-- !query
SELECT a,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
 ORDER BY 4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       abs(a),
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       abs(a),
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 4,3,1,2,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1060
1220
1360
1410
1500
1600
1700
354
362
398
428
436
446
468
474


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
 ORDER BY 1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
354
362
398
428
436
446
468
474
1060
1220
1360
1410
1500
1600
1700


-- !query
SELECT c-d,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
-- !query schema
struct<(c - d):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
-1	109	222	4
-1	164	444	2
-1	173	222	-1
-1	183	222	-1
-1	217	444	-2
-1	229	111	4
-2	133	333	3
-2	142	555	-1
-2	249	222	4
-3	189	111	4
-3	243	555	NULL
1	192	444	1
1	212	555	1
2	115	222	NULL
2	196	555	1
2	201	555	-3
2	220	444	-4
2	230	555	-3
3	126	111	1
3	165	222	-1
4	135	222	-2
NULL	101	555	-3
NULL	206	555	-1
NULL	NULL	222	NULL
NULL	NULL	222	NULL
NULL	NULL	444	NULL
NULL	NULL	555	NULL
NULL	NULL	555	NULL
NULL	NULL	555	NULL
NULL	NULL	555	NULL


-- !query
SELECT c-d,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 ORDER BY 4,2,1
-- !query schema
struct<(c - d):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
NULL	NULL	555	NULL
NULL	NULL	555	NULL
NULL	NULL	444	NULL
NULL	NULL	222	NULL
NULL	NULL	222	NULL
NULL	NULL	555	NULL
NULL	NULL	555	NULL
2	115	222	NULL
-3	243	555	NULL
2	220	444	-4
NULL	101	555	-3
2	201	555	-3
2	230	555	-3
4	135	222	-2
-1	217	444	-2
-2	142	555	-1
3	165	222	-1
-1	173	222	-1
-1	183	222	-1
NULL	206	555	-1
3	126	111	1
1	192	444	1
2	196	555	1
1	212	555	1
-1	164	444	2
-2	133	333	3
-1	109	222	4
-3	189	111	4
-1	229	111	4
-2	249	222	4


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       b,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND (e>a AND e<b)
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       b,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND (e>a AND e<b)
   AND (e>c OR e<d)
 ORDER BY 5,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       b,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       b,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND (e>a AND e<b)
 ORDER BY 2,5,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       abs(a)
  FROM t1
-- !query schema
struct<b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int>
-- !query output
102	NULL	NULL	NULL
106	1604	107.0	107
114	NULL	NULL	110
119	NULL	NULL	116
122	NULL	NULL	123
128	1899	127.0	127
134	1975	132.0	132
136	2052	137.0	138
141	2129	142.0	144
149	NULL	NULL	145
150	NULL	NULL	151
157	NULL	NULL	155
160	2436	162.0	161
170	2589	172.0	171
176	NULL	NULL	177
180	2739	182.0	181
188	2802	187.0	187
194	2880	192.0	190
197	2946	197.0	199
202	NULL	NULL	NULL
210	3176	212.0	214
215	3259	217.0	218
221	3331	222.0	223
227	3405	227.0	226
231	3477	232.0	234
236	NULL	NULL	237
244	NULL	NULL	NULL
248	3704	247.0	246
NULL	NULL	NULL	167
NULL	NULL	NULL	208


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       abs(a)
  FROM t1
 ORDER BY 1,2,4,3
-- !query schema
struct<b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int>
-- !query output
NULL	NULL	NULL	167
NULL	NULL	NULL	208
102	NULL	NULL	NULL
106	1604	107.0	107
114	NULL	NULL	110
119	NULL	NULL	116
122	NULL	NULL	123
128	1899	127.0	127
134	1975	132.0	132
136	2052	137.0	138
141	2129	142.0	144
149	NULL	NULL	145
150	NULL	NULL	151
157	NULL	NULL	155
160	2436	162.0	161
170	2589	172.0	171
176	NULL	NULL	177
180	2739	182.0	181
188	2802	187.0	187
194	2880	192.0	190
197	2946	197.0	199
202	NULL	NULL	NULL
210	3176	212.0	214
215	3259	217.0	218
221	3331	222.0	223
227	3405	227.0	226
231	3477	232.0	234
236	NULL	NULL	237
244	NULL	NULL	NULL
248	3704	247.0	246


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       d-e,
       a+b*2
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       d-e,
       a+b*2
  FROM t1
 WHERE c>d
 ORDER BY 4,5,6,3,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 ORDER BY 4,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	1280	1	111	125	770
-1	374	4	111	185	1121
-1	452	4	111	225	1364
-2	1340	3	333	130	793
-2	1570	NULL	555	158	946
-2	492	4	222	245	1483
-3	1190	NULL	222	NULL	705
-4	1140	NULL	555	113	674
-4	1490	NULL	222	147	881
-4	380	1	444	191	1157
1	1060	4	222	105	643
1	1220	NULL	222	121	739
1	1500	NULL	555	NULL	910
1	1600	2	444	162	970
1	1700	-1	222	174	1027
1	354	NULL	555	175	1066
1	362	-1	222	184	1087
1	474	NULL	444	238	1426
2	1360	-2	222	137	827
2	398	1	555	195	1187
2	446	-4	444	224	1331
3	1410	-1	555	143	846
3	436	-2	444	219	1296
3	468	-3	555	233	1392
4	428	1	555	211	1273
NULL	1020	-3	555	104	NULL
NULL	NULL	-1	222	166	NULL
NULL	NULL	-1	555	207	NULL
NULL	NULL	-3	555	204	NULL
NULL	NULL	NULL	555	NULL	NULL


-- !query
SELECT a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       a+b*2+c*3
  FROM t1
 ORDER BY 6,1
-- !query schema
struct<(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL	-1	222	166	NULL
NULL	NULL	-3	555	204	NULL
NULL	1020	-3	555	104	NULL
NULL	NULL	-1	555	207	NULL
NULL	NULL	NULL	555	NULL	NULL
1	1060	4	222	105	643
-4	1140	NULL	555	113	674
-3	1190	NULL	222	NULL	705
1	1220	NULL	222	121	739
-1	1280	1	111	125	770
-2	1340	3	333	130	793
2	1360	-2	222	137	827
3	1410	-1	555	143	846
-4	1490	NULL	222	147	881
1	1500	NULL	555	NULL	910
-2	1570	NULL	555	158	946
1	1600	2	444	162	970
1	1700	-1	222	174	1027
1	354	NULL	555	175	1066
1	362	-1	222	184	1087
-1	374	4	111	185	1121
-4	380	1	444	191	1157
2	398	1	555	195	1187
4	428	1	555	211	1273
3	436	-2	444	219	1296
2	446	-4	444	224	1331
-1	452	4	111	225	1364
3	468	-3	555	233	1392
1	474	NULL	444	238	1426
-2	492	4	222	245	1483


-- !query
SELECT a-b,
       a+b*2,
       c
  FROM t1
-- !query schema
struct<(a - b):int,(a + (b * 2)):int,c:int>
-- !query output
-1	383	129
-1	563	186
-1	680	228
-2	400	131
-2	469	159
-2	742	247
-3	354	117
-4	338	112
-4	443	146
-4	578	193
1	319	108
1	367	124
1	451	153
1	481	163
1	511	172
1	529	179
1	541	182
1	709	239
2	410	139
2	593	198
2	665	222
3	426	140
3	648	216
3	696	232
4	634	213
NULL	NULL	168
NULL	NULL	203
NULL	NULL	240
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT a-b,
       a+b*2,
       c
  FROM t1
 ORDER BY 3,1
-- !query schema
struct<(a - b):int,(a + (b * 2)):int,c:int>
-- !query output
NULL	NULL	NULL
NULL	NULL	NULL
1	319	108
-4	338	112
-3	354	117
1	367	124
-1	383	129
-2	400	131
2	410	139
3	426	140
-4	443	146
1	451	153
-2	469	159
1	481	163
NULL	NULL	168
1	511	172
1	529	179
1	541	182
-1	563	186
-4	578	193
2	593	198
NULL	NULL	203
4	634	213
3	648	216
2	665	222
-1	680	228
3	696	232
1	709	239
NULL	NULL	240
-2	742	247


-- !query
SELECT d-e,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
-- !query schema
struct<(d - e):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
-1	142.0	426
-1	172.0	511
-1	182.0	541
-2	217.0	648
-3	232.0	696
-4	222.0	665
1	197.0	593
1	212.0	634
2	162.0	481
4	107.0	319


-- !query
SELECT d-e,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
 ORDER BY 3,2
-- !query schema
struct<(d - e):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
4	107.0	319
-1	142.0	426
2	162.0	481
-1	172.0	511
-1	182.0	541
1	197.0	593
1	212.0	634
-2	217.0	648
-4	222.0	665
-3	232.0	696


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE b>c
   AND d>e
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE b>c
   AND d>e
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND d>e
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND d>e
   AND b>c
 ORDER BY 3,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE b>c
   AND d NOT BETWEEN 110 AND 150
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE b>c
   AND d NOT BETWEEN 110 AND 150
   AND d>e
 ORDER BY 3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
1027	171
1087	181
1121	187
1157	190
1187	199
1273	214
1296	218
1331	223
1364	226
1392	234
1483	246
643	107
705	116
770	127
793	132
827	138
846	144
970	161
NULL	167
NULL	208
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	167
NULL	208
643	107
705	116
770	127
793	132
827	138
846	144
970	161
1027	171
1087	181
1121	187
1157	190
1187	199
1273	214
1296	218
1331	223
1364	226
1392	234
1483	246


-- !query
SELECT a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
1027	171
1087	181
1121	187
1157	190
1187	199
1273	214
1296	218
1331	223
1364	226
1392	234
1483	246
643	107
705	116
770	127
793	132
827	138
846	144
970	161
NULL	167
NULL	208
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	167
NULL	208
643	107
705	116
770	127
793	132
827	138
846	144
970	161
1027	171
1087	181
1121	187
1157	190
1187	199
1273	214
1296	218
1331	223
1364	226
1392	234
1483	246


-- !query
SELECT a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
1027	171
1087	181
1121	187
1157	190
1187	199
1273	214
1296	218
1331	223
1364	226
1392	234
1483	246
643	107
705	116
770	127
793	132
827	138
846	144
970	161
NULL	167
NULL	208
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 2,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
643	107
705	116
770	127
793	132
827	138
846	144
970	161
NULL	167
1027	171
1087	181
1121	187
1157	190
1187	199
NULL	208
1273	214
1296	218
1331	223
1364	226
1392	234
1483	246


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       abs(a),
       a-b,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       abs(a),
       a-b,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
    OR b>c
 ORDER BY 5,3,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       abs(a),
       a-b,
       e
  FROM t1
 WHERE b>c
    OR e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       abs(a),
       a-b,
       e
  FROM t1
 WHERE b>c
    OR e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 2,6,5,1,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       abs(a),
       a-b,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       abs(a),
       a-b,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 5,6,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c>d
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
127.0	3	222	128


-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c>d
 ORDER BY 3,2,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
127.0	3	222	128


-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE c>d
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
127.0	3	222	128


-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE c>d
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,4
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
127.0	3	222	128


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND c>d
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
   AND c>d
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 5,3,2,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND b>c
 ORDER BY 3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int>
-- !query output
1165	116
1274	127
1325	132
1367	138
1414	144
1877	187
1971	199
2211	223
2312	234
2479	246
NULL	167
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int>
-- !query output
NULL	NULL
NULL	NULL
1165	116
1274	127
1325	132
1367	138
1414	144
NULL	167
1877	187
1971	199
2211	223
2312	234
2479	246


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
    OR c>d
 ORDER BY 3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
    OR (e>c OR e<d)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
    OR (e>c OR e<d)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 3,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
 ORDER BY 5,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3,
       a,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR c>d
    OR (e>a AND e<b)
-- !query schema
struct<d:int,((a + (b * 2)) + (c * 3)):int,a:int,e:int>
-- !query output
109	643	107	105
115	705	116	NULL
126	770	127	125
135	827	138	137
142	846	144	143
164	970	161	162
165	NULL	167	166
173	1027	171	174
183	1087	181	184
189	1121	187	185
192	1157	190	191
196	1187	199	195
201	NULL	NULL	204
212	1273	214	211
217	1296	218	219
220	1331	223	224
229	1364	226	225
230	1392	234	233
249	1483	246	245
NULL	674	110	113
NULL	881	145	147


-- !query
SELECT d,
       a+b*2+c*3,
       a,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR c>d
    OR (e>a AND e<b)
 ORDER BY 4,2,3,1
-- !query schema
struct<d:int,((a + (b * 2)) + (c * 3)):int,a:int,e:int>
-- !query output
115	705	116	NULL
109	643	107	105
NULL	674	110	113
126	770	127	125
135	827	138	137
142	846	144	143
NULL	881	145	147
164	970	161	162
165	NULL	167	166
173	1027	171	174
183	1087	181	184
189	1121	187	185
192	1157	190	191
196	1187	199	195
201	NULL	NULL	204
212	1273	214	211
217	1296	218	219
220	1331	223	224
229	1364	226	225
230	1392	234	233
249	1483	246	245


-- !query
SELECT d,
       a+b*2+c*3,
       a,
       e
  FROM t1
 WHERE (e>a AND e<b)
    OR c>d
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<d:int,((a + (b * 2)) + (c * 3)):int,a:int,e:int>
-- !query output
109	643	107	105
115	705	116	NULL
126	770	127	125
135	827	138	137
142	846	144	143
164	970	161	162
165	NULL	167	166
173	1027	171	174
183	1087	181	184
189	1121	187	185
192	1157	190	191
196	1187	199	195
201	NULL	NULL	204
212	1273	214	211
217	1296	218	219
220	1331	223	224
229	1364	226	225
230	1392	234	233
249	1483	246	245
NULL	674	110	113
NULL	881	145	147


-- !query
SELECT d,
       a+b*2+c*3,
       a,
       e
  FROM t1
 WHERE (e>a AND e<b)
    OR c>d
    OR c BETWEEN b-2 AND d+2
 ORDER BY 2,1,4,3
-- !query schema
struct<d:int,((a + (b * 2)) + (c * 3)):int,a:int,e:int>
-- !query output
165	NULL	167	166
201	NULL	NULL	204
109	643	107	105
NULL	674	110	113
115	705	116	NULL
126	770	127	125
135	827	138	137
142	846	144	143
NULL	881	145	147
164	970	161	162
173	1027	171	174
183	1087	181	184
189	1121	187	185
192	1157	190	191
196	1187	199	195
212	1273	214	211
217	1296	218	219
220	1331	223	224
229	1364	226	225
230	1392	234	233
249	1483	246	245


-- !query
SELECT d,
       a+b*2+c*3,
       a,
       e
  FROM t1
 WHERE c>d
    OR (e>a AND e<b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<d:int,((a + (b * 2)) + (c * 3)):int,a:int,e:int>
-- !query output
109	643	107	105
115	705	116	NULL
126	770	127	125
135	827	138	137
142	846	144	143
164	970	161	162
165	NULL	167	166
173	1027	171	174
183	1087	181	184
189	1121	187	185
192	1157	190	191
196	1187	199	195
201	NULL	NULL	204
212	1273	214	211
217	1296	218	219
220	1331	223	224
229	1364	226	225
230	1392	234	233
249	1483	246	245
NULL	674	110	113
NULL	881	145	147


-- !query
SELECT d,
       a+b*2+c*3,
       a,
       e
  FROM t1
 WHERE c>d
    OR (e>a AND e<b)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 3,4
-- !query schema
struct<d:int,((a + (b * 2)) + (c * 3)):int,a:int,e:int>
-- !query output
201	NULL	NULL	204
109	643	107	105
NULL	674	110	113
115	705	116	NULL
126	770	127	125
135	827	138	137
142	846	144	143
NULL	881	145	147
164	970	161	162
165	NULL	167	166
173	1027	171	174
183	1087	181	184
189	1121	187	185
192	1157	190	191
196	1187	199	195
212	1273	214	211
217	1296	218	219
220	1331	223	224
229	1364	226	225
230	1392	234	233
249	1483	246	245


-- !query
SELECT d,
       a+b*2+c*3,
       a,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>a AND e<b)
    OR c>d
-- !query schema
struct<d:int,((a + (b * 2)) + (c * 3)):int,a:int,e:int>
-- !query output
109	643	107	105
115	705	116	NULL
126	770	127	125
135	827	138	137
142	846	144	143
164	970	161	162
165	NULL	167	166
173	1027	171	174
183	1087	181	184
189	1121	187	185
192	1157	190	191
196	1187	199	195
201	NULL	NULL	204
212	1273	214	211
217	1296	218	219
220	1331	223	224
229	1364	226	225
230	1392	234	233
249	1483	246	245
NULL	674	110	113
NULL	881	145	147


-- !query
SELECT d,
       a+b*2+c*3,
       a,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>a AND e<b)
    OR c>d
 ORDER BY 1,3,2
-- !query schema
struct<d:int,((a + (b * 2)) + (c * 3)):int,a:int,e:int>
-- !query output
NULL	674	110	113
NULL	881	145	147
109	643	107	105
115	705	116	NULL
126	770	127	125
135	827	138	137
142	846	144	143
164	970	161	162
165	NULL	167	166
173	1027	171	174
183	1087	181	184
189	1121	187	185
192	1157	190	191
196	1187	199	195
201	NULL	NULL	204
212	1273	214	211
217	1296	218	219
220	1331	223	224
229	1364	226	225
230	1392	234	233
249	1483	246	245


-- !query
SELECT b-c,
       b,
       d-e,
       (a+b+c+d+e)/5,
       c
  FROM t1
-- !query schema
struct<(b - c):int,b:int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
-1	128	1	127.0	129
-1	197	1	197.0	198
-1	202	-3	NULL	203
-1	215	-2	217.0	216
-1	221	-4	222.0	222
-1	227	4	227.0	228
-1	231	-3	232.0	232
-2	106	4	107.0	108
-2	122	NULL	NULL	124
-2	157	NULL	NULL	159
-2	170	-1	172.0	172
-2	180	-1	182.0	182
-3	136	-2	137.0	139
-3	150	NULL	NULL	153
-3	160	2	162.0	163
-3	176	NULL	NULL	179
-3	210	1	212.0	213
-3	236	NULL	NULL	239
1	141	-1	142.0	140
1	194	1	192.0	193
1	248	4	247.0	247
2	114	NULL	NULL	112
2	119	NULL	NULL	117
2	188	4	187.0	186
3	134	3	132.0	131
3	149	NULL	NULL	146
4	244	NULL	NULL	240
NULL	102	-3	NULL	NULL
NULL	NULL	-1	NULL	168
NULL	NULL	-1	NULL	NULL


-- !query
SELECT b-c,
       b,
       d-e,
       (a+b+c+d+e)/5,
       c
  FROM t1
 ORDER BY 5,1,2
-- !query schema
struct<(b - c):int,b:int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
NULL	NULL	-1	NULL	NULL
NULL	102	-3	NULL	NULL
-2	106	4	107.0	108
2	114	NULL	NULL	112
2	119	NULL	NULL	117
-2	122	NULL	NULL	124
-1	128	1	127.0	129
3	134	3	132.0	131
-3	136	-2	137.0	139
1	141	-1	142.0	140
3	149	NULL	NULL	146
-3	150	NULL	NULL	153
-2	157	NULL	NULL	159
-3	160	2	162.0	163
NULL	NULL	-1	NULL	168
-2	170	-1	172.0	172
-3	176	NULL	NULL	179
-2	180	-1	182.0	182
2	188	4	187.0	186
1	194	1	192.0	193
-1	197	1	197.0	198
-1	202	-3	NULL	203
-3	210	1	212.0	213
-1	215	-2	217.0	216
-1	221	-4	222.0	222
-1	227	4	227.0	228
-1	231	-3	232.0	232
-3	236	NULL	NULL	239
4	244	NULL	NULL	240
1	248	4	247.0	247


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1020
1060
1140
1190
1220
1280
1340
1360
1410
1490
1500
1570
1600
1700
354
362
374
380
398
428
436
446
452
468
474
492
NULL
NULL
NULL
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL
NULL
NULL
NULL
354
362
374
380
398
428
436
446
452
468
474
492
1020
1060
1140
1190
1220
1280
1340
1360
1410
1490
1500
1570
1600
1700


-- !query
SELECT a+b*2
  FROM t1
 WHERE d>e
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
383
400
481
563
578
593
634
680
742


-- !query
SELECT a+b*2
  FROM t1
 WHERE d>e
 ORDER BY 1
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
383
400
481
563
578
593
634
680
742


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,4,6,3,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1,3,6,4,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
    OR c BETWEEN b-2 AND d+2
 ORDER BY 2,5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 6,5,2,3,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       b-c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(d - e):int,(b - c):int>
-- !query output
-1	-2
-1	-2
1	-1
2	-3
4	-1
4	-2
4	2
NULL	-2
NULL	-3
NULL	-3
NULL	-3


-- !query
SELECT d-e,
       b-c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<(d - e):int,(b - c):int>
-- !query output
NULL	-3
NULL	-3
NULL	-3
2	-3
NULL	-2
-1	-2
-1	-2
4	-2
1	-1
4	-1
4	2


-- !query
SELECT d-e,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(d - e):int,(b - c):int>
-- !query output
-1	-2
-1	-2
1	-1
2	-3
4	-1
4	-2
4	2
NULL	-2
NULL	-3
NULL	-3
NULL	-3


-- !query
SELECT d-e,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,1
-- !query schema
struct<(d - e):int,(b - c):int>
-- !query output
NULL	-3
NULL	-3
NULL	-3
2	-3
NULL	-2
-1	-2
-1	-2
4	-2
1	-1
4	-1
4	2


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int>
-- !query output
1604	106
1899	128
1975	134
2129	141
2436	160
2589	170
2739	180
2802	188
2880	194
2946	197
3176	210
3259	215
3331	221
3405	227
3477	231
3704	248
NULL	114
NULL	149
NULL	202


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 2,1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int>
-- !query output
1604	106
NULL	114
1899	128
1975	134
2129	141
NULL	149
2436	160
2589	170
2739	180
2802	188
2880	194
2946	197
NULL	202
3176	210
3259	215
3331	221
3405	227
3477	231
3704	248


-- !query
SELECT e,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<e:int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
104	NULL	444
105	-1	333
113	NULL	111
121	NULL	333
125	3	222
130	-2	222
137	4	333
143	-2	444
147	NULL	111
158	NULL	222
162	-1	333
166	3	444
174	-1	333
175	NULL	333
184	-1	333
185	-3	222
191	1	111
195	2	333
204	2	444
207	NULL	444
211	1	444
219	-1	444
224	2	333
225	-1	222
233	2	444
238	NULL	333
245	-2	222
NULL	-3	444
NULL	2	222
NULL	NULL	333


-- !query
SELECT e,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 1,3
-- !query schema
struct<e:int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	2	222
NULL	NULL	333
NULL	-3	444
104	NULL	444
105	-1	333
113	NULL	111
121	NULL	333
125	3	222
130	-2	222
137	4	333
143	-2	444
147	NULL	111
158	NULL	222
162	-1	333
166	3	444
174	-1	333
175	NULL	333
184	-1	333
185	-3	222
191	1	111
195	2	333
204	2	444
207	NULL	444
211	1	444
219	-1	444
224	2	333
225	-1	222
233	2	444
238	NULL	333
245	-2	222


-- !query
SELECT a-b
  FROM t1
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-1
-2
-2
-2
-3
-4
-4
-4
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a-b
  FROM t1
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
-4
-4
-4
-3
-2
-2
-2
-1
-1
-1
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
192	111	1	578	444
NULL	111	NULL	338	555
NULL	111	NULL	443	222


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 1,5,3
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	111	NULL	443	222
NULL	111	NULL	338	555
192	111	1	578	444


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       e,
       a-b,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,(a - b):int,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	1079	105	1	2	333
123	NULL	121	1	2	333
127	1274	125	-1	1	222
151	NULL	NULL	1	3	333
161	1626	162	1	3	333
171	1719	174	1	2	333
177	NULL	175	1	3	333
181	1819	184	1	2	333
187	1877	185	-1	2	222
226	2280	225	-1	1	222
237	NULL	238	1	3	333


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       e,
       a-b,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 5,2
-- !query schema
struct<a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,(a - b):int,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
127	1274	125	-1	1	222
226	2280	225	-1	1	222
123	NULL	121	1	2	333
107	1079	105	1	2	333
171	1719	174	1	2	333
181	1819	184	1	2	333
187	1877	185	-1	2	222
237	NULL	238	1	3	333
177	NULL	175	1	3	333
151	NULL	NULL	1	3	333
161	1626	162	1	3	333


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
108	1604
112	NULL
117	NULL
124	NULL
129	1899
131	1975
139	2052
140	2129
146	NULL
153	NULL
159	NULL
163	2436
172	2589
179	NULL
182	2739
186	2802
193	2880
198	2946
203	NULL
213	3176
216	3259
222	3331
228	3405
232	3477
239	NULL
240	NULL
247	3704


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
 ORDER BY 2,1
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
112	NULL
117	NULL
124	NULL
146	NULL
153	NULL
159	NULL
179	NULL
203	NULL
239	NULL
240	NULL
108	1604
129	1899
131	1975
139	2052
140	2129
163	2436
172	2589
182	2739
186	2802
193	2880
198	2946
213	3176
216	3259
222	3331
228	3405
232	3477
247	3704


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
108	1604
112	NULL
117	NULL
124	NULL
129	1899
131	1975
139	2052
140	2129
146	NULL
153	NULL
159	NULL
163	2436
172	2589
179	NULL
182	2739
186	2802
193	2880
198	2946
203	NULL
213	3176
216	3259
222	3331
228	3405
232	3477
239	NULL
240	NULL
247	3704


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
108	1604
112	NULL
117	NULL
124	NULL
129	1899
131	1975
139	2052
140	2129
146	NULL
153	NULL
159	NULL
163	2436
172	2589
179	NULL
182	2739
186	2802
193	2880
198	2946
203	NULL
213	3176
216	3259
222	3331
228	3405
232	3477
239	NULL
240	NULL
247	3704


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>c OR e<d)
    OR a>b
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,abs((b - c)):int>
-- !query output
107.0	109	2
127.0	126	1
132.0	133	3
137.0	135	3
142.0	142	1
162.0	164	3
172.0	173	2
182.0	183	2
187.0	189	2
192.0	192	1
197.0	196	1
212.0	212	3
217.0	217	1
222.0	220	1
227.0	229	1
232.0	230	1
247.0	249	1
NULL	115	2
NULL	201	1
NULL	243	4
NULL	NULL	2
NULL	NULL	2
NULL	NULL	2
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>c OR e<d)
    OR a>b
 ORDER BY 1,3
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,abs((b - c)):int>
-- !query output
NULL	201	1
NULL	NULL	2
NULL	115	2
NULL	NULL	2
NULL	NULL	2
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	243	4
107.0	109	2
127.0	126	1
132.0	133	3
137.0	135	3
142.0	142	1
162.0	164	3
172.0	173	2
182.0	183	2
187.0	189	2
192.0	192	1
197.0	196	1
212.0	212	3
217.0	217	1
222.0	220	1
227.0	229	1
232.0	230	1
247.0	249	1


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       abs(b-c)
  FROM t1
 WHERE a>b
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>c OR e<d)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,abs((b - c)):int>
-- !query output
107.0	109	2
127.0	126	1
132.0	133	3
137.0	135	3
142.0	142	1
162.0	164	3
172.0	173	2
182.0	183	2
187.0	189	2
192.0	192	1
197.0	196	1
212.0	212	3
217.0	217	1
222.0	220	1
227.0	229	1
232.0	230	1
247.0	249	1
NULL	115	2
NULL	201	1
NULL	243	4
NULL	NULL	2
NULL	NULL	2
NULL	NULL	2
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       abs(b-c)
  FROM t1
 WHERE a>b
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>c OR e<d)
 ORDER BY 2,3
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,abs((b - c)):int>
-- !query output
NULL	NULL	2
NULL	NULL	2
NULL	NULL	2
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
107.0	109	2
NULL	115	2
127.0	126	1
132.0	133	3
137.0	135	3
142.0	142	1
162.0	164	3
172.0	173	2
182.0	183	2
187.0	189	2
192.0	192	1
197.0	196	1
NULL	201	1
212.0	212	3
217.0	217	1
222.0	220	1
227.0	229	1
232.0	230	1
NULL	243	4
247.0	249	1


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       abs(b-c)
  FROM t1
 WHERE a>b
    OR (e>c OR e<d)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,abs((b - c)):int>
-- !query output
107.0	109	2
127.0	126	1
132.0	133	3
137.0	135	3
142.0	142	1
162.0	164	3
172.0	173	2
182.0	183	2
187.0	189	2
192.0	192	1
197.0	196	1
212.0	212	3
217.0	217	1
222.0	220	1
227.0	229	1
232.0	230	1
247.0	249	1
NULL	115	2
NULL	201	1
NULL	243	4
NULL	NULL	2
NULL	NULL	2
NULL	NULL	2
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       abs(b-c)
  FROM t1
 WHERE a>b
    OR (e>c OR e<d)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,abs((b - c)):int>
-- !query output
NULL	NULL	2
NULL	NULL	2
NULL	NULL	3
NULL	NULL	2
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
107.0	109	2
NULL	115	2
127.0	126	1
132.0	133	3
137.0	135	3
142.0	142	1
162.0	164	3
172.0	173	2
182.0	183	2
187.0	189	2
192.0	192	1
197.0	196	1
NULL	201	1
212.0	212	3
217.0	217	1
222.0	220	1
227.0	229	1
232.0	230	1
NULL	243	4
247.0	249	1


-- !query
SELECT abs(a),
       d,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
    OR b>c
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
    OR b>c
    OR (a>b-2 AND a<b+2)
 ORDER BY 4,2,5,1,6,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
    OR a>b
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
    OR a>b
    OR (a>b-2 AND a<b+2)
 ORDER BY 4,6,5,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
    OR b>c
 ORDER BY 5,1,2,6,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2+c*3
  FROM t1
 WHERE d>e
-- !query schema
struct<abs(a):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
107	643
127	770
132	793
161	970
187	1121
190	1157
199	1187
214	1273
226	1364
246	1483


-- !query
SELECT abs(a),
       a+b*2+c*3
  FROM t1
 WHERE d>e
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
107	643
127	770
132	793
161	970
187	1121
190	1157
199	1187
214	1273
226	1364
246	1483


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       a,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       a,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b>c
 ORDER BY 1,6,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,1,2,5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
 ORDER BY 4,1,3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       abs(b-c),
       abs(a),
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE b>c
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int>
-- !query output
319	2	107	1079	1060	105
338	2	110	NULL	1140	113
354	2	116	1165	1190	NULL
400	3	132	1325	1340	130
426	1	144	1414	1410	143
443	3	145	NULL	1490	147
481	3	161	1626	1600	162
511	2	171	1719	1700	174
541	2	181	1819	362	184
563	2	187	1877	374	185
578	1	190	1925	380	191
593	1	199	1971	398	195
634	3	214	2121	428	211
648	1	218	2164	436	219
665	1	223	2211	446	224
680	1	226	2280	452	225
696	1	234	2312	468	233
742	1	246	2479	492	245
NULL	1	NULL	NULL	NULL	204
NULL	4	NULL	NULL	NULL	NULL
NULL	NULL	167	NULL	NULL	166
NULL	NULL	208	NULL	NULL	207
NULL	NULL	NULL	NULL	1020	104


-- !query
SELECT a+b*2,
       abs(b-c),
       abs(a),
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE b>c
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 2,4,3
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int>
-- !query output
NULL	NULL	NULL	NULL	1020	104
NULL	NULL	167	NULL	NULL	166
NULL	NULL	208	NULL	NULL	207
NULL	1	NULL	NULL	NULL	204
426	1	144	1414	1410	143
578	1	190	1925	380	191
593	1	199	1971	398	195
648	1	218	2164	436	219
665	1	223	2211	446	224
680	1	226	2280	452	225
696	1	234	2312	468	233
742	1	246	2479	492	245
338	2	110	NULL	1140	113
319	2	107	1079	1060	105
354	2	116	1165	1190	NULL
511	2	171	1719	1700	174
541	2	181	1819	362	184
563	2	187	1877	374	185
443	3	145	NULL	1490	147
400	3	132	1325	1340	130
481	3	161	1626	1600	162
634	3	214	2121	428	211
NULL	4	NULL	NULL	NULL	NULL


-- !query
SELECT d-e,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
 ORDER BY 3,4,1,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       c
  FROM t1
-- !query schema
struct<b:int,c:int>
-- !query output
102	NULL
106	108
114	112
119	117
122	124
128	129
134	131
136	139
141	140
149	146
150	153
157	159
160	163
170	172
176	179
180	182
188	186
194	193
197	198
202	203
210	213
215	216
221	222
227	228
231	232
236	239
244	240
248	247
NULL	168
NULL	NULL


-- !query
SELECT b,
       c
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<b:int,c:int>
-- !query output
NULL	NULL
NULL	168
102	NULL
106	108
114	112
119	117
122	124
128	129
134	131
136	139
141	140
149	146
150	153
157	159
160	163
170	172
176	179
180	182
188	186
194	193
197	198
202	203
210	213
215	216
221	222
227	228
231	232
236	239
244	240
248	247


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND d>e
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d>e
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d>e
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	192	2880
111	NULL	NULL
111	NULL	NULL
222	115	NULL
222	126	1899
222	133	1975
222	189	2802
222	229	3405
222	249	3704
222	NULL	NULL
333	109	1604
333	135	2052
333	164	2436
333	173	2589
333	183	2739
333	196	2946
333	220	3331
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
444	142	2129
444	201	NULL
444	212	3176
444	217	3259
444	230	3477
444	243	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	NULL	NULL
111	NULL	NULL
111	192	2880
222	NULL	NULL
222	115	NULL
222	126	1899
222	133	1975
222	189	2802
222	229	3405
222	249	3704
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
333	109	1604
333	135	2052
333	164	2436
333	173	2589
333	183	2739
333	196	2946
333	220	3331
444	142	2129
444	201	NULL
444	212	3176
444	217	3259
444	230	3477
444	243	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>c OR e<d)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	192	2880
111	NULL	NULL
111	NULL	NULL
222	115	NULL
222	126	1899
222	133	1975
222	189	2802
222	229	3405
222	249	3704
222	NULL	NULL
333	109	1604
333	135	2052
333	164	2436
333	173	2589
333	183	2739
333	196	2946
333	220	3331
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
444	142	2129
444	201	NULL
444	212	3176
444	217	3259
444	230	3477
444	243	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>c OR e<d)
 ORDER BY 1,3,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	NULL	NULL
111	NULL	NULL
111	192	2880
222	NULL	NULL
222	115	NULL
222	126	1899
222	133	1975
222	189	2802
222	229	3405
222	249	3704
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
333	109	1604
333	135	2052
333	164	2436
333	173	2589
333	183	2739
333	196	2946
333	220	3331
444	201	NULL
444	243	NULL
444	142	2129
444	212	3176
444	217	3259
444	230	3477


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
    OR (e>c OR e<d)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	192	2880
111	NULL	NULL
111	NULL	NULL
222	115	NULL
222	126	1899
222	133	1975
222	189	2802
222	229	3405
222	249	3704
222	NULL	NULL
333	109	1604
333	135	2052
333	164	2436
333	173	2589
333	183	2739
333	196	2946
333	220	3331
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
444	142	2129
444	201	NULL
444	212	3176
444	217	3259
444	230	3477
444	243	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
    OR (e>c OR e<d)
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	NULL	NULL
111	NULL	NULL
222	NULL	NULL
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
333	NULL	NULL
333	109	1604
222	115	NULL
222	126	1899
222	133	1975
333	135	2052
444	142	2129
333	164	2436
333	173	2589
333	183	2739
222	189	2802
111	192	2880
333	196	2946
444	201	NULL
444	212	3176
444	217	3259
333	220	3331
222	229	3405
444	230	3477
444	243	NULL
222	249	3704


-- !query
SELECT c-d,
       d-e,
       d,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<(c - d):int,(d - e):int,d:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	-1	173	1027
-1	-1	183	1087
-1	-2	217	1296
-1	2	164	970
-1	4	109	643
-1	4	229	1364
-2	-1	142	846
-2	3	133	793
-2	4	249	1483
-3	4	189	1121
-3	NULL	243	NULL
1	1	192	1157
1	1	212	1273
2	-3	201	NULL
2	-3	230	1392
2	-4	220	1331
2	1	196	1187
2	NULL	115	705
3	-1	165	NULL
3	1	126	770
4	-2	135	827
NULL	-1	206	NULL
NULL	-3	101	NULL
NULL	NULL	NULL	1066
NULL	NULL	NULL	1426
NULL	NULL	NULL	674
NULL	NULL	NULL	739
NULL	NULL	NULL	881
NULL	NULL	NULL	910
NULL	NULL	NULL	946


-- !query
SELECT c-d,
       d-e,
       d,
       a+b*2+c*3
  FROM t1
 ORDER BY 2,1,3,4
-- !query schema
struct<(c - d):int,(d - e):int,d:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL	NULL	674
NULL	NULL	NULL	739
NULL	NULL	NULL	881
NULL	NULL	NULL	910
NULL	NULL	NULL	946
NULL	NULL	NULL	1066
NULL	NULL	NULL	1426
-3	NULL	243	NULL
2	NULL	115	705
2	-4	220	1331
NULL	-3	101	NULL
2	-3	201	NULL
2	-3	230	1392
-1	-2	217	1296
4	-2	135	827
NULL	-1	206	NULL
-2	-1	142	846
-1	-1	173	1027
-1	-1	183	1087
3	-1	165	NULL
1	1	192	1157
1	1	212	1273
2	1	196	1187
3	1	126	770
-1	2	164	970
-2	3	133	793
-3	4	189	1121
-2	4	249	1483
-1	4	109	643
-1	4	229	1364


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
2
2


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
2
2


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d>e
    OR (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	1274	129	1899
111	1877	186	2802
111	2280	228	3405
222	1079	108	1604
222	1165	117	NULL
222	1367	139	2052
222	2479	247	3704
222	NULL	146	NULL
222	NULL	168	NULL
333	1325	131	1975
444	1626	163	2436
444	1925	193	2880
444	2211	222	3331
555	1414	140	2129
555	1971	198	2946
555	2121	213	3176
555	2312	232	3477
555	NULL	112	NULL
555	NULL	203	NULL
555	NULL	240	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d>e
    OR (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,4,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
555	NULL	112	NULL
222	NULL	146	NULL
222	NULL	168	NULL
555	NULL	203	NULL
555	NULL	240	NULL
222	1079	108	1604
222	1165	117	NULL
111	1274	129	1899
333	1325	131	1975
222	1367	139	2052
555	1414	140	2129
444	1626	163	2436
111	1877	186	2802
444	1925	193	2880
555	1971	198	2946
555	2121	213	3176
444	2211	222	3331
111	2280	228	3405
555	2312	232	3477
222	2479	247	3704


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d>e
    OR (e>a AND e<b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	1274	129	1899
111	1877	186	2802
111	2280	228	3405
222	1079	108	1604
222	1165	117	NULL
222	1367	139	2052
222	2479	247	3704
222	NULL	146	NULL
222	NULL	168	NULL
333	1325	131	1975
444	1626	163	2436
444	1925	193	2880
444	2211	222	3331
555	1414	140	2129
555	1971	198	2946
555	2121	213	3176
555	2312	232	3477
555	NULL	112	NULL
555	NULL	203	NULL
555	NULL	240	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d>e
    OR (e>a AND e<b)
 ORDER BY 3,4,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
222	1079	108	1604
555	NULL	112	NULL
222	1165	117	NULL
111	1274	129	1899
333	1325	131	1975
222	1367	139	2052
555	1414	140	2129
222	NULL	146	NULL
444	1626	163	2436
222	NULL	168	NULL
111	1877	186	2802
444	1925	193	2880
555	1971	198	2946
555	NULL	203	NULL
555	2121	213	3176
444	2211	222	3331
111	2280	228	3405
555	2312	232	3477
555	NULL	240	NULL
222	2479	247	3704


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d-e
  FROM t1
 WHERE d>e
    OR (a>b-2 AND a<b+2)
    OR c>d
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(d - e):int>
-- !query output
1604	333	1	4
1899	222	-1	1
1975	222	-2	3
2052	333	2	-2
2436	333	1	2
2589	333	1	-1
2739	333	1	-1
2802	222	-1	4
2880	111	-4	1
2946	333	2	1
3176	444	4	1
3331	333	2	-4
3405	222	-1	4
3477	444	3	-3
3704	222	-2	4
NULL	222	-3	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	444	NULL	-1
NULL	444	NULL	-3


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d-e
  FROM t1
 WHERE d>e
    OR (a>b-2 AND a<b+2)
    OR c>d
 ORDER BY 2,3
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(d - e):int>
-- !query output
2880	111	-4	1
NULL	222	-3	NULL
1975	222	-2	3
3704	222	-2	4
3405	222	-1	4
1899	222	-1	1
2802	222	-1	4
2436	333	1	2
2589	333	1	-1
2739	333	1	-1
1604	333	1	4
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
2052	333	2	-2
3331	333	2	-4
2946	333	2	1
NULL	444	NULL	-1
NULL	444	NULL	-3
3477	444	3	-3
3176	444	4	1


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c>d
    OR d>e
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(d - e):int>
-- !query output
1604	333	1	4
1899	222	-1	1
1975	222	-2	3
2052	333	2	-2
2436	333	1	2
2589	333	1	-1
2739	333	1	-1
2802	222	-1	4
2880	111	-4	1
2946	333	2	1
3176	444	4	1
3331	333	2	-4
3405	222	-1	4
3477	444	3	-3
3704	222	-2	4
NULL	222	-3	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	444	NULL	-1
NULL	444	NULL	-3


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c>d
    OR d>e
 ORDER BY 1,2
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(d - e):int>
-- !query output
NULL	222	-3	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	444	NULL	-1
NULL	444	NULL	-3
1604	333	1	4
1899	222	-1	1
1975	222	-2	3
2052	333	2	-2
2436	333	1	2
2589	333	1	-1
2739	333	1	-1
2802	222	-1	4
2880	111	-4	1
2946	333	2	1
3176	444	4	1
3331	333	2	-4
3405	222	-1	4
3477	444	3	-3
3704	222	-2	4


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d-e
  FROM t1
 WHERE d>e
    OR c>d
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(d - e):int>
-- !query output
1604	333	1	4
1899	222	-1	1
1975	222	-2	3
2052	333	2	-2
2436	333	1	2
2589	333	1	-1
2739	333	1	-1
2802	222	-1	4
2880	111	-4	1
2946	333	2	1
3176	444	4	1
3331	333	2	-4
3405	222	-1	4
3477	444	3	-3
3704	222	-2	4
NULL	222	-3	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	444	NULL	-1
NULL	444	NULL	-3


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d-e
  FROM t1
 WHERE d>e
    OR c>d
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,4,1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(d - e):int>
-- !query output
2880	111	-4	1
NULL	222	-3	NULL
1899	222	-1	1
1975	222	-2	3
2802	222	-1	4
3405	222	-1	4
3704	222	-2	4
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
NULL	333	1	NULL
3331	333	2	-4
2052	333	2	-2
2589	333	1	-1
2739	333	1	-1
2946	333	2	1
2436	333	1	2
1604	333	1	4
NULL	444	NULL	-3
3477	444	3	-3
NULL	444	NULL	-1
3176	444	4	1


-- !query
SELECT abs(a),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs(a):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
107	108	222	4
127	129	111	1


-- !query
SELECT abs(a),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
 ORDER BY 4,3,2,1
-- !query schema
struct<abs(a):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
127	129	111	1
107	108	222	4


-- !query
SELECT abs(a),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<abs(a):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
107	108	222	4
127	129	111	1


-- !query
SELECT abs(a),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,1,2,3
-- !query schema
struct<abs(a):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
127	129	111	1
107	108	222	4


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1274


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1274


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1274


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1274


-- !query
SELECT b-c
  FROM t1
 WHERE c>d
-- !query schema
struct<(b - c):int>
-- !query output
-1
-1
-1
-1
-1
-3
-3
1
2
NULL


-- !query
SELECT b-c
  FROM t1
 WHERE c>d
 ORDER BY 1
-- !query schema
struct<(b - c):int>
-- !query output
NULL
-3
-3
-1
-1
-1
-1
-1
1
2


-- !query
SELECT a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE b>c
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
1165	117
1325	131
1414	140
1877	186
1925	193
2479	247
NULL	112
NULL	146
NULL	240


-- !query
SELECT a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE b>c
 ORDER BY 1,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
NULL	112
NULL	146
NULL	240
1165	117
1325	131
1414	140
1877	186
1925	193
2479	247


-- !query
SELECT a+b*2+c*3+d*4,
       c-d,
       a+b*2+c*3,
       d,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       c-d,
       a+b*2+c*3,
       d,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c)
  FROM t1
 ORDER BY 5,4,7,6,1,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
    OR b>c
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
    OR d>e
 ORDER BY 1,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
1121	-3
1157	1
1483	-2
674	NULL
705	2
793	-2
846	-2
881	NULL
NULL	-3


-- !query
SELECT a+b*2+c*3,
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
 ORDER BY 2,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
674	NULL
881	NULL
NULL	-3
1121	-3
793	-2
846	-2
1483	-2
1157	1
705	2


-- !query
SELECT a+b*2+c*3,
       c-d
  FROM t1
 WHERE b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
1121	-3
1157	1
1483	-2
674	NULL
705	2
793	-2
846	-2
881	NULL
NULL	-3


-- !query
SELECT a+b*2+c*3,
       c-d
  FROM t1
 WHERE b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
NULL	-3
674	NULL
705	2
793	-2
846	-2
881	NULL
1121	-3
1157	1
1483	-2


-- !query
SELECT c,
       a+b*2+c*3+d*4,
       b,
       abs(b-c),
       (a+b+c+d+e)/5,
       abs(a)
  FROM t1
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int>
-- !query output
108	1079	106	2	107.0	107
112	NULL	114	2	NULL	110
117	1165	119	2	NULL	116
124	NULL	122	2	NULL	123
129	1274	128	1	127.0	127
131	1325	134	3	132.0	132
139	1367	136	3	137.0	138
140	1414	141	1	142.0	144
146	NULL	149	3	NULL	145
153	NULL	150	3	NULL	151
159	NULL	157	2	NULL	155
163	1626	160	3	162.0	161
168	NULL	NULL	NULL	NULL	167
172	1719	170	2	172.0	171
179	NULL	176	3	NULL	177
182	1819	180	2	182.0	181
186	1877	188	2	187.0	187
193	1925	194	1	192.0	190
198	1971	197	1	197.0	199
203	NULL	202	1	NULL	NULL
213	2121	210	3	212.0	214
216	2164	215	1	217.0	218
222	2211	221	1	222.0	223
228	2280	227	1	227.0	226
232	2312	231	1	232.0	234
239	NULL	236	3	NULL	237
240	NULL	244	4	NULL	NULL
247	2479	248	1	247.0	246
NULL	NULL	102	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	208


-- !query
SELECT c,
       a+b*2+c*3+d*4,
       b,
       abs(b-c),
       (a+b+c+d+e)/5,
       abs(a)
  FROM t1
 ORDER BY 3,4,5
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int>
-- !query output
168	NULL	NULL	NULL	NULL	167
NULL	NULL	NULL	NULL	NULL	208
NULL	NULL	102	NULL	NULL	NULL
108	1079	106	2	107.0	107
112	NULL	114	2	NULL	110
117	1165	119	2	NULL	116
124	NULL	122	2	NULL	123
129	1274	128	1	127.0	127
131	1325	134	3	132.0	132
139	1367	136	3	137.0	138
140	1414	141	1	142.0	144
146	NULL	149	3	NULL	145
153	NULL	150	3	NULL	151
159	NULL	157	2	NULL	155
163	1626	160	3	162.0	161
172	1719	170	2	172.0	171
179	NULL	176	3	NULL	177
182	1819	180	2	182.0	181
186	1877	188	2	187.0	187
193	1925	194	1	192.0	190
198	1971	197	1	197.0	199
203	NULL	202	1	NULL	NULL
213	2121	210	3	212.0	214
216	2164	215	1	217.0	218
222	2211	221	1	222.0	223
228	2280	227	1	227.0	226
232	2312	231	1	232.0	234
239	NULL	236	3	NULL	237
240	NULL	244	4	NULL	NULL
247	2479	248	1	247.0	246


-- !query
SELECT a,
       c-d
  FROM t1
-- !query schema
struct<a:int,(c - d):int>
-- !query output
107	-1
110	NULL
116	2
123	NULL
127	3
132	-2
138	4
144	-2
145	NULL
151	NULL
155	NULL
161	-1
167	3
171	-1
177	NULL
181	-1
187	-3
190	1
199	2
208	NULL
214	1
218	-1
223	2
226	-1
234	2
237	NULL
246	-2
NULL	-3
NULL	2
NULL	NULL


-- !query
SELECT a,
       c-d
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<a:int,(c - d):int>
-- !query output
NULL	NULL
110	NULL
123	NULL
145	NULL
151	NULL
155	NULL
177	NULL
208	NULL
237	NULL
NULL	-3
187	-3
132	-2
144	-2
246	-2
107	-1
161	-1
171	-1
181	-1
218	-1
226	-1
190	1
214	1
NULL	2
116	2
199	2
223	2
234	2
127	3
167	3
138	4


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       a+b*2+c*3+d*4+e*5,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       a+b*2+c*3+d*4+e*5,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR d>e
 ORDER BY 3,4,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       a+b*2+c*3+d*4+e*5,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       a+b*2+c*3+d*4+e*5,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
    OR (e>a AND e<b)
 ORDER BY 1,6,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       a+b*2+c*3+d*4+e*5,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>a AND e<b)
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       a+b*2+c*3+d*4+e*5,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>a AND e<b)
    OR d>e
 ORDER BY 6,2,3,5,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a-b,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<b:int,(a - b):int,(a + (b * 2)):int>
-- !query output
106	1	319
114	-4	338
119	-3	354
122	1	367
128	-1	383
134	-2	400
136	2	410
141	3	426
149	-4	443
150	1	451
157	-2	469
160	1	481
170	1	511
176	1	529
180	1	541
188	-1	563
194	-4	578
197	2	593
202	NULL	NULL
210	4	634
215	3	648
221	2	665
227	-1	680
231	3	696
236	1	709
244	NULL	NULL
248	-2	742


-- !query
SELECT b,
       a-b,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<b:int,(a - b):int,(a + (b * 2)):int>
-- !query output
202	NULL	NULL
244	NULL	NULL
114	-4	338
149	-4	443
194	-4	578
119	-3	354
134	-2	400
157	-2	469
248	-2	742
128	-1	383
188	-1	563
227	-1	680
106	1	319
122	1	367
150	1	451
160	1	481
170	1	511
176	1	529
180	1	541
236	1	709
136	2	410
197	2	593
221	2	665
141	3	426
215	3	648
231	3	696
210	4	634


-- !query
SELECT b,
       a-b,
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<b:int,(a - b):int,(a + (b * 2)):int>
-- !query output
106	1	319
114	-4	338
119	-3	354
122	1	367
128	-1	383
134	-2	400
136	2	410
141	3	426
149	-4	443
150	1	451
157	-2	469
160	1	481
170	1	511
176	1	529
180	1	541
188	-1	563
194	-4	578
197	2	593
202	NULL	NULL
210	4	634
215	3	648
221	2	665
227	-1	680
231	3	696
236	1	709
244	NULL	NULL
248	-2	742


-- !query
SELECT b,
       a-b,
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<b:int,(a - b):int,(a + (b * 2)):int>
-- !query output
202	NULL	NULL
244	NULL	NULL
114	-4	338
149	-4	443
194	-4	578
119	-3	354
134	-2	400
157	-2	469
248	-2	742
128	-1	383
188	-1	563
227	-1	680
106	1	319
122	1	367
150	1	451
160	1	481
170	1	511
176	1	529
180	1	541
236	1	709
136	2	410
197	2	593
221	2	665
141	3	426
215	3	648
231	3	696
210	4	634


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a-b,
       abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d NOT BETWEEN 110 AND 150
    OR a>b
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a - b):int,abs((b - c)):int>
-- !query output
111	128	222	1	-1	1
111	188	222	4	-1	2
111	227	222	4	-1	1
222	106	333	4	1	2
222	119	222	NULL	-3	2
222	122	333	NULL	1	2
222	136	333	-2	2	3
222	170	333	-1	1	2
222	180	333	-1	1	2
222	248	222	4	-2	1
222	NULL	444	-1	NULL	NULL
333	134	222	3	-2	3
444	160	333	2	1	3
444	194	111	1	-4	1
444	215	444	-2	3	1
444	221	333	-4	2	1
444	236	333	NULL	1	3
555	102	444	-3	NULL	NULL
555	141	444	-1	3	1
555	150	333	NULL	1	3
555	176	333	NULL	1	3
555	197	333	1	2	1
555	202	444	-3	NULL	1
555	210	444	1	4	3
555	231	444	-3	3	1
555	244	444	NULL	NULL	4
555	NULL	444	-1	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a-b,
       abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d NOT BETWEEN 110 AND 150
    OR a>b
 ORDER BY 3,5,6,2,1,4
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a - b):int,abs((b - c)):int>
-- !query output
444	194	111	1	-4	1
222	119	222	NULL	-3	2
222	248	222	4	-2	1
333	134	222	3	-2	3
111	128	222	1	-1	1
111	227	222	4	-1	1
111	188	222	4	-1	2
222	106	333	4	1	2
222	122	333	NULL	1	2
222	170	333	-1	1	2
222	180	333	-1	1	2
555	150	333	NULL	1	3
444	160	333	2	1	3
555	176	333	NULL	1	3
444	236	333	NULL	1	3
555	197	333	1	2	1
444	221	333	-4	2	1
222	136	333	-2	2	3
222	NULL	444	-1	NULL	NULL
555	NULL	444	-1	NULL	NULL
555	102	444	-3	NULL	NULL
555	202	444	-3	NULL	1
555	244	444	NULL	NULL	4
555	141	444	-1	3	1
444	215	444	-2	3	1
555	231	444	-3	3	1
555	210	444	1	4	3


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a-b,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (c<=d-2 OR c>=d+2)
    OR a>b
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a - b):int,abs((b - c)):int>
-- !query output
111	128	222	1	-1	1
111	188	222	4	-1	2
111	227	222	4	-1	1
222	106	333	4	1	2
222	119	222	NULL	-3	2
222	122	333	NULL	1	2
222	136	333	-2	2	3
222	170	333	-1	1	2
222	180	333	-1	1	2
222	248	222	4	-2	1
222	NULL	444	-1	NULL	NULL
333	134	222	3	-2	3
444	160	333	2	1	3
444	194	111	1	-4	1
444	215	444	-2	3	1
444	221	333	-4	2	1
444	236	333	NULL	1	3
555	102	444	-3	NULL	NULL
555	141	444	-1	3	1
555	150	333	NULL	1	3
555	176	333	NULL	1	3
555	197	333	1	2	1
555	202	444	-3	NULL	1
555	210	444	1	4	3
555	231	444	-3	3	1
555	244	444	NULL	NULL	4
555	NULL	444	-1	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a-b,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (c<=d-2 OR c>=d+2)
    OR a>b
 ORDER BY 4,1,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a - b):int,abs((b - c)):int>
-- !query output
222	119	222	NULL	-3	2
222	122	333	NULL	1	2
444	236	333	NULL	1	3
555	176	333	NULL	1	3
555	150	333	NULL	1	3
555	244	444	NULL	NULL	4
444	221	333	-4	2	1
555	231	444	-3	3	1
555	202	444	-3	NULL	1
555	102	444	-3	NULL	NULL
222	136	333	-2	2	3
444	215	444	-2	3	1
222	170	333	-1	1	2
222	180	333	-1	1	2
222	NULL	444	-1	NULL	NULL
555	141	444	-1	3	1
555	NULL	444	-1	NULL	NULL
111	128	222	1	-1	1
444	194	111	1	-4	1
555	197	333	1	2	1
555	210	444	1	4	3
444	160	333	2	1	3
333	134	222	3	-2	3
111	227	222	4	-1	1
111	188	222	4	-1	2
222	248	222	4	-2	1
222	106	333	4	1	2


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a-b,
       abs(b-c)
  FROM t1
 WHERE a>b
    OR d NOT BETWEEN 110 AND 150
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a - b):int,abs((b - c)):int>
-- !query output
111	128	222	1	-1	1
111	188	222	4	-1	2
111	227	222	4	-1	1
222	106	333	4	1	2
222	119	222	NULL	-3	2
222	122	333	NULL	1	2
222	136	333	-2	2	3
222	170	333	-1	1	2
222	180	333	-1	1	2
222	248	222	4	-2	1
222	NULL	444	-1	NULL	NULL
333	134	222	3	-2	3
444	160	333	2	1	3
444	194	111	1	-4	1
444	215	444	-2	3	1
444	221	333	-4	2	1
444	236	333	NULL	1	3
555	102	444	-3	NULL	NULL
555	141	444	-1	3	1
555	150	333	NULL	1	3
555	176	333	NULL	1	3
555	197	333	1	2	1
555	202	444	-3	NULL	1
555	210	444	1	4	3
555	231	444	-3	3	1
555	244	444	NULL	NULL	4
555	NULL	444	-1	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a-b,
       abs(b-c)
  FROM t1
 WHERE a>b
    OR d NOT BETWEEN 110 AND 150
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 5,6,2,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a - b):int,abs((b - c)):int>
-- !query output
222	NULL	444	-1	NULL	NULL
555	NULL	444	-1	NULL	NULL
555	102	444	-3	NULL	NULL
555	202	444	-3	NULL	1
555	244	444	NULL	NULL	4
444	194	111	1	-4	1
222	119	222	NULL	-3	2
222	248	222	4	-2	1
333	134	222	3	-2	3
111	128	222	1	-1	1
111	227	222	4	-1	1
111	188	222	4	-1	2
222	106	333	4	1	2
222	122	333	NULL	1	2
222	170	333	-1	1	2
222	180	333	-1	1	2
555	150	333	NULL	1	3
444	160	333	2	1	3
555	176	333	NULL	1	3
444	236	333	NULL	1	3
555	197	333	1	2	1
444	221	333	-4	2	1
222	136	333	-2	2	3
555	141	444	-1	3	1
444	215	444	-2	3	1
555	231	444	-3	3	1
555	210	444	1	4	3


-- !query
SELECT a+b*2+c*3,
       d-e,
       abs(a)
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(d - e):int,abs(a):int>
-- !query output
1121	4	187
1157	1	190
1483	4	246
705	NULL	116
846	-1	144


-- !query
SELECT a+b*2+c*3,
       d-e,
       abs(a)
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,3,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(d - e):int,abs(a):int>
-- !query output
705	NULL	116
846	-1	144
1157	1	190
1121	4	187
1483	4	246


-- !query
SELECT a+b*2+c*3,
       d-e,
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(d - e):int,abs(a):int>
-- !query output
1121	4	187
1157	1	190
1483	4	246
705	NULL	116
846	-1	144


-- !query
SELECT a+b*2+c*3,
       d-e,
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
 ORDER BY 3,1,2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(d - e):int,abs(a):int>
-- !query output
705	NULL	116
846	-1	144
1121	4	187
1157	1	190
1483	4	246


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE d>e
 ORDER BY 3,7,1,6,2,4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a-b,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE a>b
    OR b>c
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a-b,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE a>b
    OR b>c
    OR (e>c OR e<d)
 ORDER BY 2,4,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a-b,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a-b,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR a>b
 ORDER BY 4,5,3,7,6,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a-b,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
    OR a>b
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a-b,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
    OR a>b
    OR b>c
 ORDER BY 4,7,1,5,6,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
 ORDER BY 3,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1,4,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1,2,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
    OR (e>a AND e<b)
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d-e,
       a,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<abs(a):int,(d - e):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
107	4	107	643
110	NULL	110	674
116	NULL	116	705
123	NULL	123	739
127	1	127	770
132	3	132	793
138	-2	138	827
144	-1	144	846
145	NULL	145	881
151	NULL	151	910
155	NULL	155	946
161	2	161	970
167	-1	167	NULL
171	-1	171	1027
177	NULL	177	1066
181	-1	181	1087
187	4	187	1121
190	1	190	1157
199	1	199	1187
208	-1	208	NULL
214	1	214	1273
218	-2	218	1296
223	-4	223	1331
226	4	226	1364
234	-3	234	1392
237	NULL	237	1426
246	4	246	1483
NULL	-3	NULL	NULL
NULL	-3	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT abs(a),
       d-e,
       a,
       a+b*2+c*3
  FROM t1
 ORDER BY 4,1
-- !query schema
struct<abs(a):int,(d - e):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	-3	NULL	NULL
NULL	-3	NULL	NULL
NULL	NULL	NULL	NULL
167	-1	167	NULL
208	-1	208	NULL
107	4	107	643
110	NULL	110	674
116	NULL	116	705
123	NULL	123	739
127	1	127	770
132	3	132	793
138	-2	138	827
144	-1	144	846
145	NULL	145	881
151	NULL	151	910
155	NULL	155	946
161	2	161	970
171	-1	171	1027
177	NULL	177	1066
181	-1	181	1087
187	4	187	1121
190	1	190	1157
199	1	199	1187
214	1	214	1273
218	-2	218	1296
223	-4	223	1331
226	4	226	1364
234	-3	234	1392
237	NULL	237	1426
246	4	246	1483


-- !query
SELECT a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a - b):int>
-- !query output
-1
1


-- !query
SELECT a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
-1
1


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       b-c,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,(b - c):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1604	107	-2	1079
1899	127	-1	1274
1975	132	3	1325
2052	138	-3	1367
2129	144	1	1414
2436	161	-3	1626
2589	171	-2	1719
2739	181	-2	1819
2802	187	2	1877
2880	190	1	1925
2946	199	-1	1971
3176	214	-3	2121
3259	218	-1	2164
3331	223	-1	2211
3405	226	-1	2280
3477	234	-1	2312
3704	246	1	2479
NULL	110	2	NULL
NULL	116	2	1165
NULL	123	-2	NULL
NULL	145	3	NULL
NULL	151	-3	NULL
NULL	155	-2	NULL
NULL	167	NULL	NULL
NULL	177	-3	NULL
NULL	208	NULL	NULL
NULL	237	-3	NULL
NULL	NULL	-1	NULL
NULL	NULL	4	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       b-c,
       a+b*2+c*3+d*4
  FROM t1
 ORDER BY 4,1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,(b - c):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	167	NULL	NULL
NULL	NULL	-1	NULL
NULL	110	2	NULL
NULL	155	-2	NULL
NULL	237	-3	NULL
NULL	123	-2	NULL
NULL	145	3	NULL
NULL	177	-3	NULL
NULL	NULL	NULL	NULL
NULL	208	NULL	NULL
NULL	NULL	4	NULL
NULL	151	-3	NULL
1604	107	-2	1079
NULL	116	2	1165
1899	127	-1	1274
1975	132	3	1325
2052	138	-3	1367
2129	144	1	1414
2436	161	-3	1626
2589	171	-2	1719
2739	181	-2	1819
2802	187	2	1877
2880	190	1	1925
2946	199	-1	1971
3176	214	-3	2121
3259	218	-1	2164
3331	223	-1	2211
3405	226	-1	2280
3477	234	-1	2312
3704	246	1	2479


-- !query
SELECT a+b*2,
       b-c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       b-c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,5,3,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND b>c
-- !query schema
struct<(c - d):int,abs(a):int>
-- !query output
2	116


-- !query
SELECT c-d,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND b>c
 ORDER BY 1,2
-- !query schema
struct<(c - d):int,abs(a):int>
-- !query output
2	116


-- !query
SELECT c-d,
       abs(a)
  FROM t1
 WHERE c>d
   AND b>c
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(c - d):int,abs(a):int>
-- !query output
2	116


-- !query
SELECT c-d,
       abs(a)
  FROM t1
 WHERE c>d
   AND b>c
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<(c - d):int,abs(a):int>
-- !query output
2	116


-- !query
SELECT c-d,
       abs(a)
  FROM t1
 WHERE b>c
   AND c>d
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(c - d):int,abs(a):int>
-- !query output
2	116


-- !query
SELECT c-d,
       abs(a)
  FROM t1
 WHERE b>c
   AND c>d
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<(c - d):int,abs(a):int>
-- !query output
2	116


-- !query
SELECT a+b*2+c*3,
       a+b*2,
       c,
       abs(b-c),
       e,
       b
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,c:int,abs((b - c)):int,e:int,b:int>
-- !query output
1121	563	186	2	185	188
1157	578	193	1	191	194
1483	742	247	1	245	248
846	426	140	1	143	141


-- !query
SELECT a+b*2+c*3,
       a+b*2,
       c,
       abs(b-c),
       e,
       b
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 4,5,1,3
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,c:int,abs((b - c)):int,e:int,b:int>
-- !query output
846	426	140	1	143	141
1157	578	193	1	191	194
1483	742	247	1	245	248
1121	563	186	2	185	188


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE (e>c OR e<d)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE (e>c OR e<d)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 5,2,4,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>c OR e<d)
 ORDER BY 5,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(b-c),
       e,
       c-d,
       a-b,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs((b - c)):int,e:int,(c - d):int,(a - b):int,d:int>
-- !query output
2802	2	185	-3	-1	189


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(b-c),
       e,
       c-d,
       a-b,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs((b - c)):int,e:int,(c - d):int,(a - b):int,d:int>
-- !query output
2802	2	185	-3	-1	189


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(b-c),
       e,
       c-d,
       a-b,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND b>c
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs((b - c)):int,e:int,(c - d):int,(a - b):int,d:int>
-- !query output
2802	2	185	-3	-1	189


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(b-c),
       e,
       c-d,
       a-b,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND b>c
 ORDER BY 4,2,1,5
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs((b - c)):int,e:int,(c - d):int,(a - b):int,d:int>
-- !query output
2802	2	185	-3	-1	189


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(b-c),
       e,
       c-d,
       a-b,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs((b - c)):int,e:int,(c - d):int,(a - b):int,d:int>
-- !query output
2802	2	185	-3	-1	189


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(b-c),
       e,
       c-d,
       a-b,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 4,6,3,5,2,1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs((b - c)):int,e:int,(c - d):int,(a - b):int,d:int>
-- !query output
2802	2	185	-3	-1	189


-- !query
SELECT b-c,
       a+b*2+c*3,
       d,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,d:int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	1187	196	1	555
-1	1296	217	1	444
-1	1331	220	1	444
-1	1364	229	1	111
-1	1392	230	1	555
-1	770	126	1	111
-1	NULL	201	1	555
-2	1027	173	2	222
-2	1087	183	2	222
-2	643	109	2	222
-3	1273	212	3	555
-3	970	164	3	444
1	1157	192	1	444
1	1483	249	1	222
1	846	142	1	555
2	1121	189	2	111
2	674	NULL	2	555
3	793	133	3	333
3	881	NULL	3	222


-- !query
SELECT b-c,
       a+b*2+c*3,
       d,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 1,2,5
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,d:int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-3	970	164	3	444
-3	1273	212	3	555
-2	643	109	2	222
-2	1027	173	2	222
-2	1087	183	2	222
-1	NULL	201	1	555
-1	770	126	1	111
-1	1187	196	1	555
-1	1296	217	1	444
-1	1331	220	1	444
-1	1364	229	1	111
-1	1392	230	1	555
1	846	142	1	555
1	1157	192	1	444
1	1483	249	1	222
2	674	NULL	2	555
2	1121	189	2	111
3	793	133	3	333
3	881	NULL	3	222


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1140
1190
1280
1340
1360
1410
1490
374
380
398
446
468
492
NULL
NULL
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL
NULL
NULL
374
380
398
446
468
492
1140
1190
1280
1340
1360
1410
1490


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1140
1190
1280
1340
1360
1410
1490
374
380
398
446
468
492
NULL
NULL
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
 ORDER BY 1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL
NULL
NULL
374
380
398
446
468
492
1140
1190
1280
1340
1360
1410
1490


-- !query
SELECT abs(b-c),
       abs(a),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
    OR a>b
-- !query schema
struct<abs((b - c)):int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1	127	1274
1	144	1414
1	190	1925
1	199	1971
1	218	2164
1	223	2211
1	234	2312
1	NULL	NULL
2	107	1079
2	116	1165
2	123	NULL
2	171	1719
2	181	1819
3	138	1367
3	151	NULL
3	161	1626
3	177	NULL
3	214	2121
3	237	NULL
NULL	167	NULL


-- !query
SELECT abs(b-c),
       abs(a),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
    OR a>b
 ORDER BY 2,1
-- !query schema
struct<abs((b - c)):int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1	NULL	NULL
2	107	1079
2	116	1165
2	123	NULL
1	127	1274
3	138	1367
1	144	1414
3	151	NULL
3	161	1626
NULL	167	NULL
2	171	1719
3	177	NULL
2	181	1819
1	190	1925
1	199	1971
3	214	2121
1	218	2164
1	223	2211
1	234	2312
3	237	NULL


-- !query
SELECT abs(b-c),
       abs(a),
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
    OR c>d
-- !query schema
struct<abs((b - c)):int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1	127	1274
1	144	1414
1	190	1925
1	199	1971
1	218	2164
1	223	2211
1	234	2312
1	NULL	NULL
2	107	1079
2	116	1165
2	123	NULL
2	171	1719
2	181	1819
3	138	1367
3	151	NULL
3	161	1626
3	177	NULL
3	214	2121
3	237	NULL
NULL	167	NULL


-- !query
SELECT abs(b-c),
       abs(a),
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
    OR c>d
 ORDER BY 2,3,1
-- !query schema
struct<abs((b - c)):int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1	NULL	NULL
2	107	1079
2	116	1165
2	123	NULL
1	127	1274
3	138	1367
1	144	1414
3	151	NULL
3	161	1626
NULL	167	NULL
2	171	1719
3	177	NULL
2	181	1819
1	190	1925
1	199	1971
3	214	2121
1	218	2164
1	223	2211
1	234	2312
3	237	NULL


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
-- !query schema
struct<b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
106	1604
128	1899
134	1975
160	2436
188	2802
194	2880
197	2946
210	3176
227	3405
248	3704


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
 ORDER BY 1,2
-- !query schema
struct<b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
106	1604
128	1899
134	1975
160	2436
188	2802
194	2880
197	2946
210	3176
227	3405
248	3704


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
106	1604
128	1899
134	1975
160	2436
188	2802
194	2880
197	2946
210	3176
227	3405
248	3704


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
106	1604
128	1899
134	1975
160	2436
188	2802
194	2880
197	2946
210	3176
227	3405
248	3704


-- !query
SELECT d-e,
       a,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
-- !query schema
struct<(d - e):int,a:int,(a + (b * 2)):int>
-- !query output
-1	144	426
-1	171	511
-1	181	541
-2	218	648
-3	234	696
-3	NULL	NULL
-4	223	665
1	127	383
1	190	578
1	199	593
1	214	634
2	161	481
3	132	400
4	107	319
4	187	563
4	226	680
4	246	742
NULL	110	338
NULL	116	354
NULL	123	367
NULL	145	443
NULL	151	451
NULL	177	529
NULL	237	709


-- !query
SELECT d-e,
       a,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
 ORDER BY 1,2,3
-- !query schema
struct<(d - e):int,a:int,(a + (b * 2)):int>
-- !query output
NULL	110	338
NULL	116	354
NULL	123	367
NULL	145	443
NULL	151	451
NULL	177	529
NULL	237	709
-4	223	665
-3	NULL	NULL
-3	234	696
-2	218	648
-1	144	426
-1	171	511
-1	181	541
1	127	383
1	190	578
1	199	593
1	214	634
2	161	481
3	132	400
4	107	319
4	187	563
4	226	680
4	246	742


-- !query
SELECT d-e,
       a,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
-- !query schema
struct<(d - e):int,a:int,(a + (b * 2)):int>
-- !query output
-1	144	426
-1	171	511
-1	181	541
-2	218	648
-3	234	696
-3	NULL	NULL
-4	223	665
1	127	383
1	190	578
1	199	593
1	214	634
2	161	481
3	132	400
4	107	319
4	187	563
4	226	680
4	246	742
NULL	110	338
NULL	116	354
NULL	123	367
NULL	145	443
NULL	151	451
NULL	177	529
NULL	237	709


-- !query
SELECT d-e,
       a,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
 ORDER BY 2,3,1
-- !query schema
struct<(d - e):int,a:int,(a + (b * 2)):int>
-- !query output
-3	NULL	NULL
4	107	319
NULL	110	338
NULL	116	354
NULL	123	367
1	127	383
3	132	400
-1	144	426
NULL	145	443
NULL	151	451
2	161	481
-1	171	511
NULL	177	529
-1	181	541
4	187	563
1	190	578
1	199	593
1	214	634
-2	218	648
-4	223	665
4	226	680
-3	234	696
NULL	237	709
4	246	742


-- !query
SELECT d-e,
       a,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(d - e):int,a:int,(a + (b * 2)):int>
-- !query output
-1	144	426
-1	171	511
-1	181	541
-2	218	648
-3	234	696
-3	NULL	NULL
-4	223	665
1	127	383
1	190	578
1	199	593
1	214	634
2	161	481
3	132	400
4	107	319
4	187	563
4	226	680
4	246	742
NULL	110	338
NULL	116	354
NULL	123	367
NULL	145	443
NULL	151	451
NULL	177	529
NULL	237	709


-- !query
SELECT d-e,
       a,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
 ORDER BY 3,1
-- !query schema
struct<(d - e):int,a:int,(a + (b * 2)):int>
-- !query output
-3	NULL	NULL
4	107	319
NULL	110	338
NULL	116	354
NULL	123	367
1	127	383
3	132	400
-1	144	426
NULL	145	443
NULL	151	451
2	161	481
-1	171	511
NULL	177	529
-1	181	541
4	187	563
1	190	578
1	199	593
1	214	634
-2	218	648
-4	223	665
4	226	680
-3	234	696
NULL	237	709
4	246	742


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       d,
       a-b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,d:int,(a - b):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1975	133	-2	132.0
2129	142	3	142.0
2802	189	-1	187.0
2880	192	-4	192.0
3704	249	-2	247.0
NULL	NULL	-4	NULL
NULL	NULL	-4	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       d,
       a-b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
 ORDER BY 2,4,3
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,d:int,(a - b):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	-4	NULL
NULL	NULL	-4	NULL
1975	133	-2	132.0
2129	142	3	142.0
2802	189	-1	187.0
2880	192	-4	192.0
3704	249	-2	247.0


-- !query
SELECT a+b*2,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 3,4,2,5,1,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       b,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       b,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e
  FROM t1
 ORDER BY 4,5,2,7,1,3,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       d-e,
       abs(b-c),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<e:int,(d - e):int,abs((b - c)):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
105	4	2	108	222	1060
143	-1	1	140	555	1410
162	2	3	163	444	1600
174	-1	2	172	222	1700
184	-1	2	182	222	362
185	4	2	186	111	374
191	1	1	193	444	380
195	1	1	198	555	398
204	-3	1	203	555	NULL
211	1	3	213	555	428
219	-2	1	216	444	436
224	-4	1	222	444	446
225	4	1	228	111	452
233	-3	1	232	555	468
245	4	1	247	222	492
NULL	NULL	2	117	222	1190


-- !query
SELECT e,
       d-e,
       abs(b-c),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1,4
-- !query schema
struct<e:int,(d - e):int,abs((b - c)):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL	2	117	222	1190
105	4	2	108	222	1060
143	-1	1	140	555	1410
162	2	3	163	444	1600
174	-1	2	172	222	1700
184	-1	2	182	222	362
185	4	2	186	111	374
191	1	1	193	444	380
195	1	1	198	555	398
204	-3	1	203	555	NULL
211	1	3	213	555	428
219	-2	1	216	444	436
224	-4	1	222	444	446
225	4	1	228	111	452
233	-3	1	232	555	468
245	4	1	247	222	492


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       d,
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       d,
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,1,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       d,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       d,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 4,2,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       a+b*2,
       abs(a),
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,(a + (b * 2)):int,abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1027	2	511	171	2589
1066	3	529	177	NULL
1087	2	541	181	2739
1121	2	563	187	2802
1157	1	578	190	2880
1187	1	593	199	2946
1273	3	634	214	3176
1296	1	648	218	3259
1331	1	665	223	3331
1364	1	680	226	3405
1392	1	696	234	3477
1426	3	709	237	NULL
1483	1	742	246	3704
643	2	319	107	1604
674	2	338	110	NULL
705	2	354	116	NULL
739	2	367	123	NULL
770	1	383	127	1899
793	3	400	132	1975
827	3	410	138	2052
846	1	426	144	2129
881	3	443	145	NULL
910	3	451	151	NULL
946	2	469	155	NULL
970	3	481	161	2436
NULL	1	NULL	NULL	NULL
NULL	4	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       a+b*2,
       abs(a),
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,3,2,4
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,(a + (b * 2)):int,abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	1	NULL	NULL	NULL
NULL	4	NULL	NULL	NULL
643	2	319	107	1604
674	2	338	110	NULL
705	2	354	116	NULL
739	2	367	123	NULL
770	1	383	127	1899
793	3	400	132	1975
827	3	410	138	2052
846	1	426	144	2129
881	3	443	145	NULL
910	3	451	151	NULL
946	2	469	155	NULL
970	3	481	161	2436
1027	2	511	171	2589
1066	3	529	177	NULL
1087	2	541	181	2739
1121	2	563	187	2802
1157	1	578	190	2880
1187	1	593	199	2946
1273	3	634	214	3176
1296	1	648	218	3259
1331	1	665	223	3331
1364	1	680	226	3405
1392	1	696	234	3477
1426	3	709	237	NULL
1483	1	742	246	3704


-- !query
SELECT e,
       a-b,
       c,
       d-e
  FROM t1
-- !query schema
struct<e:int,(a - b):int,c:int,(d - e):int>
-- !query output
104	NULL	NULL	-3
105	1	108	4
113	-4	112	NULL
121	1	124	NULL
125	-1	129	1
130	-2	131	3
137	2	139	-2
143	3	140	-1
147	-4	146	NULL
158	-2	159	NULL
162	1	163	2
166	NULL	168	-1
174	1	172	-1
175	1	179	NULL
184	1	182	-1
185	-1	186	4
191	-4	193	1
195	2	198	1
204	NULL	203	-3
207	NULL	NULL	-1
211	4	213	1
219	3	216	-2
224	2	222	-4
225	-1	228	4
233	3	232	-3
238	1	239	NULL
245	-2	247	4
NULL	-3	117	NULL
NULL	1	153	NULL
NULL	NULL	240	NULL


-- !query
SELECT e,
       a-b,
       c,
       d-e
  FROM t1
 ORDER BY 1,3
-- !query schema
struct<e:int,(a - b):int,c:int,(d - e):int>
-- !query output
NULL	-3	117	NULL
NULL	1	153	NULL
NULL	NULL	240	NULL
104	NULL	NULL	-3
105	1	108	4
113	-4	112	NULL
121	1	124	NULL
125	-1	129	1
130	-2	131	3
137	2	139	-2
143	3	140	-1
147	-4	146	NULL
158	-2	159	NULL
162	1	163	2
166	NULL	168	-1
174	1	172	-1
175	1	179	NULL
184	1	182	-1
185	-1	186	4
191	-4	193	1
195	2	198	1
204	NULL	203	-3
207	NULL	NULL	-1
211	4	213	1
219	3	216	-2
224	2	222	-4
225	-1	228	4
233	3	232	-3
238	1	239	NULL
245	-2	247	4


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1079	107.0	2	333
1165	NULL	2	222
1274	127.0	1	222
1325	132.0	3	222
1367	137.0	3	333
1414	142.0	1	444
1626	162.0	3	333
1719	172.0	2	333
1819	182.0	2	333
1877	187.0	2	222
1925	192.0	1	111
1971	197.0	1	333
2121	212.0	3	444
2164	217.0	1	444
2211	222.0	1	333
2280	227.0	1	222
2312	232.0	1	444
2479	247.0	1	222
NULL	NULL	1	444
NULL	NULL	2	111
NULL	NULL	3	111
NULL	NULL	4	444
NULL	NULL	NULL	444


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
 ORDER BY 3,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	NULL	NULL	444
NULL	NULL	1	444
1274	127.0	1	222
1414	142.0	1	444
1925	192.0	1	111
1971	197.0	1	333
2164	217.0	1	444
2211	222.0	1	333
2280	227.0	1	222
2312	232.0	1	444
2479	247.0	1	222
NULL	NULL	2	111
1165	NULL	2	222
1079	107.0	2	333
1719	172.0	2	333
1819	182.0	2	333
1877	187.0	2	222
NULL	NULL	3	111
1325	132.0	3	222
1367	137.0	3	333
1626	162.0	3	333
2121	212.0	3	444
NULL	NULL	4	444


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1079	107.0	2	333
1165	NULL	2	222
1274	127.0	1	222
1325	132.0	3	222
1367	137.0	3	333
1414	142.0	1	444
1626	162.0	3	333
1719	172.0	2	333
1819	182.0	2	333
1877	187.0	2	222
1925	192.0	1	111
1971	197.0	1	333
2121	212.0	3	444
2164	217.0	1	444
2211	222.0	1	333
2280	227.0	1	222
2312	232.0	1	444
2479	247.0	1	222
NULL	NULL	1	444
NULL	NULL	2	111
NULL	NULL	3	111
NULL	NULL	4	444
NULL	NULL	NULL	444


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,1,2,4
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	NULL	NULL	444
NULL	NULL	1	444
1274	127.0	1	222
1414	142.0	1	444
1925	192.0	1	111
1971	197.0	1	333
2164	217.0	1	444
2211	222.0	1	333
2280	227.0	1	222
2312	232.0	1	444
2479	247.0	1	222
NULL	NULL	2	111
1079	107.0	2	333
1165	NULL	2	222
1719	172.0	2	333
1819	182.0	2	333
1877	187.0	2	222
NULL	NULL	3	111
1325	132.0	3	222
1367	137.0	3	333
1626	162.0	3	333
2121	212.0	3	444
NULL	NULL	4	444


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1079	107.0	2	333
1165	NULL	2	222
1274	127.0	1	222
1325	132.0	3	222
1367	137.0	3	333
1414	142.0	1	444
1626	162.0	3	333
1719	172.0	2	333
1819	182.0	2	333
1877	187.0	2	222
1925	192.0	1	111
1971	197.0	1	333
2121	212.0	3	444
2164	217.0	1	444
2211	222.0	1	333
2280	227.0	1	222
2312	232.0	1	444
2479	247.0	1	222
NULL	NULL	1	444
NULL	NULL	2	111
NULL	NULL	3	111
NULL	NULL	4	444
NULL	NULL	NULL	444


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 3,4,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	NULL	NULL	444
1925	192.0	1	111
1274	127.0	1	222
2280	227.0	1	222
2479	247.0	1	222
1971	197.0	1	333
2211	222.0	1	333
NULL	NULL	1	444
1414	142.0	1	444
2164	217.0	1	444
2312	232.0	1	444
NULL	NULL	2	111
1165	NULL	2	222
1877	187.0	2	222
1079	107.0	2	333
1719	172.0	2	333
1819	182.0	2	333
NULL	NULL	3	111
1325	132.0	3	222
1367	137.0	3	333
1626	162.0	3	333
2121	212.0	3	444
NULL	NULL	4	444


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       (a+b+c+d+e)/5,
       c-d,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       (a+b+c+d+e)/5,
       c-d,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 4,5,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c
  FROM t1
 WHERE d>e
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<c:int>
-- !query output
108
124
129
131
153
163
172
179
182
186
193
198
213
228
239
247


-- !query
SELECT c
  FROM t1
 WHERE d>e
    OR (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<c:int>
-- !query output
108
124
129
131
153
163
172
179
182
186
193
198
213
228
239
247


-- !query
SELECT c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d>e
-- !query schema
struct<c:int>
-- !query output
108
124
129
131
153
163
172
179
182
186
193
198
213
228
239
247


-- !query
SELECT c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d>e
 ORDER BY 1
-- !query schema
struct<c:int>
-- !query output
108
124
129
131
153
163
172
179
182
186
193
198
213
228
239
247


-- !query
SELECT e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<e:int>
-- !query output
105
121
125
162
174
175
184
185
225
238
NULL


-- !query
SELECT e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
NULL
105
121
125
162
174
175
184
185
225
238


-- !query
SELECT a+b*2+c*3,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(d - e):int>
-- !query output
1121	4
1157	1
1187	1
1331	-4
1392	-3
1483	4
674	NULL
705	NULL
770	1
793	3
827	-2
846	-1
881	NULL
NULL	-1
NULL	-3
NULL	NULL


-- !query
SELECT a+b*2+c*3,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(d - e):int>
-- !query output
NULL	NULL
NULL	-3
NULL	-1
674	NULL
705	NULL
770	1
793	3
827	-2
846	-1
881	NULL
1121	4
1157	1
1187	1
1331	-4
1392	-3
1483	4


-- !query
SELECT a+b*2+c*3,
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>a AND e<b)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(d - e):int>
-- !query output
1121	4
1157	1
1187	1
1331	-4
1392	-3
1483	4
674	NULL
705	NULL
770	1
793	3
827	-2
846	-1
881	NULL
NULL	-1
NULL	-3
NULL	NULL


-- !query
SELECT a+b*2+c*3,
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(d - e):int>
-- !query output
NULL	NULL
674	NULL
705	NULL
881	NULL
1331	-4
NULL	-3
1392	-3
827	-2
NULL	-1
846	-1
770	1
1157	1
1187	1
793	3
1121	4
1483	4


-- !query
SELECT a,
       e,
       a+b*2+c*3,
       a+b*2
  FROM t1
-- !query schema
struct<a:int,e:int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int>
-- !query output
107	105	643	319
110	113	674	338
116	NULL	705	354
123	121	739	367
127	125	770	383
132	130	793	400
138	137	827	410
144	143	846	426
145	147	881	443
151	NULL	910	451
155	158	946	469
161	162	970	481
167	166	NULL	NULL
171	174	1027	511
177	175	1066	529
181	184	1087	541
187	185	1121	563
190	191	1157	578
199	195	1187	593
208	207	NULL	NULL
214	211	1273	634
218	219	1296	648
223	224	1331	665
226	225	1364	680
234	233	1392	696
237	238	1426	709
246	245	1483	742
NULL	104	NULL	NULL
NULL	204	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT a,
       e,
       a+b*2+c*3,
       a+b*2
  FROM t1
 ORDER BY 3,1
-- !query schema
struct<a:int,e:int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int>
-- !query output
NULL	204	NULL	NULL
NULL	104	NULL	NULL
NULL	NULL	NULL	NULL
167	166	NULL	NULL
208	207	NULL	NULL
107	105	643	319
110	113	674	338
116	NULL	705	354
123	121	739	367
127	125	770	383
132	130	793	400
138	137	827	410
144	143	846	426
145	147	881	443
151	NULL	910	451
155	158	946	469
161	162	970	481
171	174	1027	511
177	175	1066	529
181	184	1087	541
187	185	1121	563
190	191	1157	578
199	195	1187	593
214	211	1273	634
218	219	1296	648
223	224	1331	665
226	225	1364	680
234	233	1392	696
237	238	1426	709
246	245	1483	742


-- !query
SELECT d,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c>d
-- !query schema
struct<d:int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
101	NULL	NULL
109	108	1079
115	117	1165
126	129	1274
135	139	1367
164	163	1626
165	168	NULL
173	172	1719
183	182	1819
189	186	1877
192	193	1925
196	198	1971
201	203	NULL
206	NULL	NULL
212	213	2121
217	216	2164
220	222	2211
229	228	2280
230	232	2312
243	240	NULL
249	247	2479


-- !query
SELECT d,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c>d
 ORDER BY 1,2,3
-- !query schema
struct<d:int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
101	NULL	NULL
109	108	1079
115	117	1165
126	129	1274
135	139	1367
164	163	1626
165	168	NULL
173	172	1719
183	182	1819
189	186	1877
192	193	1925
196	198	1971
201	203	NULL
206	NULL	NULL
212	213	2121
217	216	2164
220	222	2211
229	228	2280
230	232	2312
243	240	NULL
249	247	2479


-- !query
SELECT d,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<d:int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
101	NULL	NULL
109	108	1079
115	117	1165
126	129	1274
135	139	1367
164	163	1626
165	168	NULL
173	172	1719
183	182	1819
189	186	1877
192	193	1925
196	198	1971
201	203	NULL
206	NULL	NULL
212	213	2121
217	216	2164
220	222	2211
229	228	2280
230	232	2312
243	240	NULL
249	247	2479


-- !query
SELECT d,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 2,3,1
-- !query schema
struct<d:int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
101	NULL	NULL
206	NULL	NULL
109	108	1079
115	117	1165
126	129	1274
135	139	1367
164	163	1626
165	168	NULL
173	172	1719
183	182	1819
189	186	1877
192	193	1925
196	198	1971
201	203	NULL
212	213	2121
217	216	2164
220	222	2211
229	228	2280
230	232	2312
243	240	NULL
249	247	2479


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
 ORDER BY 1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(a - b):int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
-1	1121	187
-1	1364	226
-1	770	127
1	1027	171
1	1066	177
1	1087	181
1	1426	237
1	643	107
1	739	123
1	910	151
1	970	161


-- !query
SELECT a-b,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<(a - b):int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
1	643	107
1	739	123
-1	770	127
1	910	151
1	970	161
1	1027	171
1	1066	177
1	1087	181
-1	1121	187
-1	1364	226
1	1426	237


-- !query
SELECT a-b,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a - b):int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
-1	1121	187
-1	1364	226
-1	770	127
1	1027	171
1	1066	177
1	1087	181
1	1426	237
1	643	107
1	739	123
1	910	151
1	970	161


-- !query
SELECT a-b,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,3
-- !query schema
struct<(a - b):int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
-1	770	127
-1	1121	187
-1	1364	226
1	643	107
1	739	123
1	910	151
1	970	161
1	1027	171
1	1066	177
1	1087	181
1	1426	237


-- !query
SELECT c,
       a,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<c:int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
168	167	NULL
186	187	1121
198	199	1187
203	NULL	NULL
222	223	1331
232	234	1392
240	NULL	NULL
247	246	1483


-- !query
SELECT c,
       a,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 3,2
-- !query schema
struct<c:int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
203	NULL	NULL
240	NULL	NULL
168	167	NULL
186	187	1121
198	199	1187
222	223	1331
232	234	1392
247	246	1483


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       c,
       b-c,
       d-e,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR a>b
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       c,
       b-c,
       d-e,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR a>b
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,5,1,7,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       c,
       b-c,
       d-e,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
    OR (c<=d-2 OR c>=d+2)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       c,
       b-c,
       d-e,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
    OR (c<=d-2 OR c>=d+2)
    OR (a>b-2 AND a<b+2)
 ORDER BY 7,1,5,3,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       c,
       b-c,
       d-e,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       c,
       b-c,
       d-e,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 3,1,4,5,2,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       c,
       b-c,
       d-e,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       c,
       b-c,
       d-e,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
    OR a>b
 ORDER BY 7,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       a+b*2,
       (a+b+c+d+e)/5,
       e
  FROM t1
 WHERE b>c
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<c:int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,e:int>
-- !query output
186	187	222	1877	563	187.0	185
193	190	111	1925	578	192.0	191
240	NULL	444	NULL	NULL	NULL	NULL
247	246	222	2479	742	247.0	245


-- !query
SELECT c,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       a+b*2,
       (a+b+c+d+e)/5,
       e
  FROM t1
 WHERE b>c
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,2,5,7,3,4,6
-- !query schema
struct<c:int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,e:int>
-- !query output
186	187	222	1877	563	187.0	185
193	190	111	1925	578	192.0	191
240	NULL	444	NULL	NULL	NULL	NULL
247	246	222	2479	742	247.0	245


-- !query
SELECT c,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       a+b*2,
       (a+b+c+d+e)/5,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
-- !query schema
struct<c:int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,e:int>
-- !query output
186	187	222	1877	563	187.0	185
193	190	111	1925	578	192.0	191
240	NULL	444	NULL	NULL	NULL	NULL
247	246	222	2479	742	247.0	245


-- !query
SELECT c,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       a+b*2,
       (a+b+c+d+e)/5,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
 ORDER BY 2,3,7,4,1
-- !query schema
struct<c:int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,e:int>
-- !query output
240	NULL	444	NULL	NULL	NULL	NULL
186	187	222	1877	563	187.0	185
193	190	111	1925	578	192.0	191
247	246	222	2479	742	247.0	245


-- !query
SELECT abs(a),
       b
  FROM t1
 WHERE b>c
-- !query schema
struct<abs(a):int,b:int>
-- !query output
110	114
116	119
132	134
144	141
145	149
187	188
190	194
246	248
NULL	244


-- !query
SELECT abs(a),
       b
  FROM t1
 WHERE b>c
 ORDER BY 2,1
-- !query schema
struct<abs(a):int,b:int>
-- !query output
110	114
116	119
132	134
144	141
145	149
187	188
190	194
NULL	244
246	248


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
222	NULL
444	192.0
555	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
222	NULL
444	192.0
555	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
222	NULL
444	192.0
555	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
222	NULL
555	NULL
444	192.0


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
109	333
115	222
126	222
133	222
135	333
142	444
164	333
165	444
173	333
183	333
189	222
192	111
196	333
201	444
212	444
217	444
220	333
229	222
230	444
243	444
249	222
NULL	111
NULL	111


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	111
NULL	111
109	333
115	222
126	222
133	222
135	333
142	444
164	333
165	444
173	333
183	333
189	222
192	111
196	333
201	444
212	444
217	444
220	333
229	222
230	444
243	444
249	222


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
109	333
115	222
126	222
133	222
135	333
142	444
164	333
165	444
173	333
183	333
189	222
192	111
196	333
201	444
212	444
217	444
220	333
229	222
230	444
243	444
249	222
NULL	111
NULL	111


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	111
NULL	111
192	111
115	222
126	222
133	222
189	222
229	222
249	222
109	333
135	333
164	333
173	333
183	333
196	333
220	333
142	444
165	444
201	444
212	444
217	444
230	444
243	444


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
    OR b>c
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
109	333
115	222
126	222
133	222
135	333
142	444
164	333
165	444
173	333
183	333
189	222
192	111
196	333
201	444
212	444
217	444
220	333
229	222
230	444
243	444
249	222
NULL	111
NULL	111


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
    OR b>c
 ORDER BY 2,1
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	111
NULL	111
192	111
115	222
126	222
133	222
189	222
229	222
249	222
109	333
135	333
164	333
173	333
183	333
196	333
220	333
142	444
165	444
201	444
212	444
217	444
230	444
243	444


-- !query
SELECT c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<c:int>
-- !query output
108
129


-- !query
SELECT c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<c:int>
-- !query output
108
129


-- !query
SELECT c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<c:int>
-- !query output
108
129


-- !query
SELECT c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<c:int>
-- !query output
108
129


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 6,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       d-e
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       d-e
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,6,4,3,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
    OR b>c
 ORDER BY 2,4,5,3,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a+b*2,
       a
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a + (b * 2)):int,a:int>
-- !query output



-- !query
SELECT a+b*2+c*3+d*4+e*5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a+b*2,
       a
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
 ORDER BY 3,4,6,5
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a + (b * 2)):int,a:int>
-- !query output



-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4+e*5,
       b
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int>
-- !query output
319	1604	106
338	NULL	114
354	NULL	119
367	NULL	122
383	1899	128
400	1975	134
410	2052	136
426	2129	141
443	NULL	149
451	NULL	150
469	NULL	157
481	2436	160
511	2589	170
529	NULL	176
541	2739	180
563	2802	188
578	2880	194
593	2946	197
634	3176	210
648	3259	215
665	3331	221
680	3405	227
696	3477	231
709	NULL	236
742	3704	248
NULL	NULL	102
NULL	NULL	202
NULL	NULL	244
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4+e*5,
       b
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<(a + (b * 2)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int>
-- !query output
NULL	NULL	NULL
NULL	NULL	202
NULL	NULL	102
NULL	NULL	NULL
NULL	NULL	244
319	1604	106
338	NULL	114
354	NULL	119
367	NULL	122
383	1899	128
400	1975	134
410	2052	136
426	2129	141
443	NULL	149
451	NULL	150
469	NULL	157
481	2436	160
511	2589	170
529	NULL	176
541	2739	180
563	2802	188
578	2880	194
593	2946	197
634	3176	210
648	3259	215
665	3331	221
680	3405	227
696	3477	231
709	NULL	236
742	3704	248


-- !query
SELECT a+b*2+c*3+d*4,
       d-e,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int,(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int>
-- !query output
1079	4	-1	1060	107
1165	NULL	2	1190	116
1274	1	3	1280	127
1325	3	-2	1340	132
1367	-2	4	1360	138
1414	-1	-2	1410	144
1626	2	-1	1600	161
1719	-1	-1	1700	171
1819	-1	-1	362	181
1877	4	-3	374	187
1925	1	1	380	190
1971	1	2	398	199
2121	1	1	428	214
2164	-2	-1	436	218
2211	-4	2	446	223
2280	4	-1	452	226
2312	-3	2	468	234
2479	4	-2	492	246
NULL	-1	3	NULL	167
NULL	-1	NULL	NULL	208
NULL	-3	2	NULL	NULL
NULL	-3	NULL	1020	NULL
NULL	NULL	-3	NULL	NULL
NULL	NULL	NULL	1140	110
NULL	NULL	NULL	1220	123
NULL	NULL	NULL	1490	145
NULL	NULL	NULL	1500	151
NULL	NULL	NULL	1570	155
NULL	NULL	NULL	354	177
NULL	NULL	NULL	474	237


-- !query
SELECT a+b*2+c*3+d*4,
       d-e,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,3,5
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int,(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int>
-- !query output
NULL	NULL	NULL	1140	110
NULL	NULL	NULL	1220	123
NULL	NULL	NULL	1490	145
NULL	NULL	NULL	1500	151
NULL	NULL	NULL	1570	155
NULL	NULL	NULL	354	177
NULL	NULL	NULL	474	237
NULL	NULL	-3	NULL	NULL
1165	NULL	2	1190	116
2211	-4	2	446	223
NULL	-3	NULL	1020	NULL
NULL	-3	2	NULL	NULL
2312	-3	2	468	234
2164	-2	-1	436	218
1367	-2	4	1360	138
NULL	-1	NULL	NULL	208
1414	-1	-2	1410	144
1719	-1	-1	1700	171
1819	-1	-1	362	181
NULL	-1	3	NULL	167
1925	1	1	380	190
2121	1	1	428	214
1971	1	2	398	199
1274	1	3	1280	127
1626	2	-1	1600	161
1325	3	-2	1340	132
1877	4	-3	374	187
2479	4	-2	492	246
1079	4	-1	1060	107
2280	4	-1	452	226


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       a,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       a,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
 ORDER BY 5,7,6,2,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1060	106	1	333
1280	128	-1	222


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,4,3,1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1060	106	1	333
1280	128	-1	222


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 2,3,4,6,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       d-e,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       a,
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<c:int,(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,a:int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT c,
       d-e,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       a,
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,6,7,3
-- !query schema
struct<c:int,(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,a:int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       a
  FROM t1
 ORDER BY 2,1,3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<e:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int>
-- !query output
105	106	222	107
113	114	555	110
121	122	222	123
125	128	111	127
130	134	333	132
137	136	222	138
143	141	555	144
147	149	222	145
158	157	555	155
162	160	444	161
174	170	222	171
175	176	555	177
184	180	222	181
185	188	111	187
191	194	444	190
195	197	555	199
204	202	555	NULL
211	210	555	214
219	215	444	218
224	221	444	223
225	227	111	226
233	231	555	234
238	236	444	237
245	248	222	246
NULL	119	222	116
NULL	150	555	151
NULL	244	555	NULL


-- !query
SELECT e,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,4,1
-- !query schema
struct<e:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int>
-- !query output
125	128	111	127
185	188	111	187
225	227	111	226
105	106	222	107
NULL	119	222	116
121	122	222	123
137	136	222	138
147	149	222	145
174	170	222	171
184	180	222	181
245	248	222	246
130	134	333	132
162	160	444	161
191	194	444	190
219	215	444	218
224	221	444	223
238	236	444	237
NULL	244	555	NULL
204	202	555	NULL
113	114	555	110
143	141	555	144
NULL	150	555	151
158	157	555	155
175	176	555	177
195	197	555	199
211	210	555	214
233	231	555	234


-- !query
SELECT e,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<e:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int>
-- !query output
105	106	222	107
113	114	555	110
121	122	222	123
125	128	111	127
130	134	333	132
137	136	222	138
143	141	555	144
147	149	222	145
158	157	555	155
162	160	444	161
174	170	222	171
175	176	555	177
184	180	222	181
185	188	111	187
191	194	444	190
195	197	555	199
204	202	555	NULL
211	210	555	214
219	215	444	218
224	221	444	223
225	227	111	226
233	231	555	234
238	236	444	237
245	248	222	246
NULL	119	222	116
NULL	150	555	151
NULL	244	555	NULL


-- !query
SELECT e,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,3,4
-- !query schema
struct<e:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int>
-- !query output
105	106	222	107
113	114	555	110
NULL	119	222	116
121	122	222	123
125	128	111	127
130	134	333	132
137	136	222	138
143	141	555	144
147	149	222	145
NULL	150	555	151
158	157	555	155
162	160	444	161
174	170	222	171
175	176	555	177
184	180	222	181
185	188	111	187
191	194	444	190
195	197	555	199
204	202	555	NULL
211	210	555	214
219	215	444	218
224	221	444	223
225	227	111	226
233	231	555	234
238	236	444	237
NULL	244	555	NULL
245	248	222	246


-- !query
SELECT abs(b-c),
       b-c,
       c-d,
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<abs((b - c)):int,(b - c):int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1	-1	-1	2164	436
1	-1	-1	2280	452
1	-1	2	1971	398
1	-1	2	2211	446
1	-1	2	2312	468
1	-1	2	NULL	NULL
1	-1	3	1274	1280
1	1	-2	1414	1410
1	1	-2	2479	492
1	1	1	1925	380
2	-2	-1	1079	1060
2	-2	-1	1719	1700
2	-2	-1	1819	362
2	-2	NULL	NULL	1220
2	-2	NULL	NULL	1570
2	2	-3	1877	374
2	2	2	1165	1190
2	2	NULL	NULL	1140
3	-3	-1	1626	1600
3	-3	1	2121	428
3	-3	4	1367	1360
3	-3	NULL	NULL	1500
3	-3	NULL	NULL	354
3	-3	NULL	NULL	474
3	3	-2	1325	1340
3	3	NULL	NULL	1490
4	4	-3	NULL	NULL
NULL	NULL	3	NULL	NULL
NULL	NULL	NULL	NULL	1020
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT abs(b-c),
       b-c,
       c-d,
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 1,4,2,5
-- !query schema
struct<abs((b - c)):int,(b - c):int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL	3	NULL	NULL
NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1020
1	-1	2	NULL	NULL
1	-1	3	1274	1280
1	1	-2	1414	1410
1	1	1	1925	380
1	-1	2	1971	398
1	-1	-1	2164	436
1	-1	2	2211	446
1	-1	-1	2280	452
1	-1	2	2312	468
1	1	-2	2479	492
2	-2	NULL	NULL	1220
2	-2	NULL	NULL	1570
2	2	NULL	NULL	1140
2	-2	-1	1079	1060
2	2	2	1165	1190
2	-2	-1	1719	1700
2	-2	-1	1819	362
2	2	-3	1877	374
3	-3	NULL	NULL	354
3	-3	NULL	NULL	474
3	-3	NULL	NULL	1500
3	3	NULL	NULL	1490
3	3	-2	1325	1340
3	-3	4	1367	1360
3	-3	-1	1626	1600
3	-3	1	2121	428
4	4	-3	NULL	NULL


-- !query
SELECT b-c,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
-- !query schema
struct<(b - c):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	129	111
-1	198	555
-1	203	555
-1	216	444
-1	222	444
-1	228	111
-1	232	555
-2	108	222
-2	124	222
-2	172	222
-2	182	222
-3	153	555
-3	163	444
-3	179	555
-3	213	555
-3	239	444
1	140	555
1	193	444
1	247	222
2	112	555
2	186	111
3	131	333
3	146	222


-- !query
SELECT b-c,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
 ORDER BY 3,1,2
-- !query schema
struct<(b - c):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	129	111
-1	228	111
2	186	111
-2	108	222
-2	124	222
-2	172	222
-2	182	222
1	247	222
3	146	222
3	131	333
-3	163	444
-3	239	444
-1	216	444
-1	222	444
1	193	444
-3	153	555
-3	179	555
-3	213	555
-1	198	555
-1	203	555
-1	232	555
1	140	555
2	112	555


-- !query
SELECT b-c,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(b - c):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	129	111
-1	198	555
-1	203	555
-1	216	444
-1	222	444
-1	228	111
-1	232	555
-2	108	222
-2	124	222
-2	172	222
-2	182	222
-3	153	555
-3	163	444
-3	179	555
-3	213	555
-3	239	444
1	140	555
1	193	444
1	247	222
2	112	555
2	186	111
3	131	333
3	146	222


-- !query
SELECT b-c,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
 ORDER BY 1,3
-- !query schema
struct<(b - c):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-3	163	444
-3	239	444
-3	213	555
-3	179	555
-3	153	555
-2	172	222
-2	182	222
-2	108	222
-2	124	222
-1	228	111
-1	129	111
-1	216	444
-1	222	444
-1	198	555
-1	232	555
-1	203	555
1	247	222
1	193	444
1	140	555
2	186	111
2	112	555
3	146	222
3	131	333


-- !query
SELECT d,
       c,
       a+b*2,
       abs(b-c),
       abs(a),
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<d:int,c:int,(a + (b * 2)):int,abs((b - c)):int,abs(a):int,(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
109	108	319	2	107	-1	222
126	129	383	1	127	3	111
164	163	481	3	161	-1	444
173	172	511	2	171	-1	222
183	182	541	2	181	-1	222
189	186	563	2	187	-3	111
229	228	680	1	226	-1	111
NULL	124	367	2	123	NULL	222
NULL	153	451	3	151	NULL	555
NULL	179	529	3	177	NULL	555
NULL	239	709	3	237	NULL	444


-- !query
SELECT d,
       c,
       a+b*2,
       abs(b-c),
       abs(a),
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 4,2
-- !query schema
struct<d:int,c:int,(a + (b * 2)):int,abs((b - c)):int,abs(a):int,(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
126	129	383	1	127	3	111
229	228	680	1	226	-1	111
109	108	319	2	107	-1	222
NULL	124	367	2	123	NULL	222
173	172	511	2	171	-1	222
183	182	541	2	181	-1	222
189	186	563	2	187	-3	111
NULL	153	451	3	151	NULL	555
164	163	481	3	161	-1	444
NULL	179	529	3	177	NULL	555
NULL	239	709	3	237	NULL	444


-- !query
SELECT d-e,
       a,
       b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
-- !query schema
struct<(d - e):int,a:int,b:int>
-- !query output
1	190	194


-- !query
SELECT d-e,
       a,
       b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
 ORDER BY 3,1,2
-- !query schema
struct<(d - e):int,a:int,b:int>
-- !query output
1	190	194


-- !query
SELECT d-e,
       a,
       b
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(d - e):int,a:int,b:int>
-- !query output
1	190	194


-- !query
SELECT d-e,
       a,
       b
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,3,1
-- !query schema
struct<(d - e):int,a:int,b:int>
-- !query output
1	190	194


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       d-e,
       d
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       d-e,
       d
  FROM t1
 WHERE b>c
 ORDER BY 4,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 5,7,4,3,1,6,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
-- !query schema
struct<e:int>
-- !query output
105
121
125
137
143
162
174
175
184
185
195
211
219
224
225
233
238
NULL


-- !query
SELECT e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
NULL
105
121
125
137
143
162
174
175
184
185
195
211
219
224
225
233
238


-- !query
SELECT e
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<e:int>
-- !query output
105
121
125
137
143
162
174
175
184
185
195
211
219
224
225
233
238
NULL


-- !query
SELECT e
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
NULL
105
121
125
137
143
162
174
175
184
185
195
211
219
224
225
233
238


-- !query
SELECT c-d
  FROM t1
 WHERE a>b
    OR d>e
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-2
-2
-3
1
1
2
2
2
2
2
3
4
NULL
NULL
NULL
NULL


-- !query
SELECT c-d
  FROM t1
 WHERE a>b
    OR d>e
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<(c - d):int>
-- !query output
NULL
NULL
NULL
NULL
-3
-2
-2
-2
-1
-1
-1
-1
-1
-1
1
1
2
2
2
2
2
3
4


-- !query
SELECT c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d>e
    OR a>b
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-2
-2
-3
1
1
2
2
2
2
2
3
4
NULL
NULL
NULL
NULL


-- !query
SELECT c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d>e
    OR a>b
 ORDER BY 1
-- !query schema
struct<(c - d):int>
-- !query output
NULL
NULL
NULL
NULL
-3
-2
-2
-2
-1
-1
-1
-1
-1
-1
1
1
2
2
2
2
2
3
4


-- !query
SELECT c-d
  FROM t1
 WHERE a>b
    OR c BETWEEN b-2 AND d+2
    OR d>e
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-2
-2
-3
1
1
2
2
2
2
2
3
4
NULL
NULL
NULL
NULL


-- !query
SELECT c-d
  FROM t1
 WHERE a>b
    OR c BETWEEN b-2 AND d+2
    OR d>e
 ORDER BY 1
-- !query schema
struct<(c - d):int>
-- !query output
NULL
NULL
NULL
NULL
-3
-2
-2
-2
-1
-1
-1
-1
-1
-1
1
1
2
2
2
2
2
3
4


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1165
1274
1325
1367
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
1079
1165
1274
1325
1367
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 2,1,4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
 ORDER BY 2,4,5,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       b-c,
       a+b*2+c*3,
       a-b,
       e,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
-- !query schema
struct<abs((b - c)):int,(b - c):int,((a + (b * 2)) + (c * 3)):int,(a - b):int,e:int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1	-1	1187	2	195	593	398
1	-1	1296	3	219	648	436
1	-1	1331	2	224	665	446
1	-1	1364	-1	225	680	452
1	-1	1392	3	233	696	468
1	-1	770	-1	125	383	1280
1	-1	NULL	NULL	204	NULL	NULL
1	1	1157	-4	191	578	380
1	1	1483	-2	245	742	492
1	1	846	3	143	426	1410
2	-2	1027	1	174	511	1700
2	-2	1087	1	184	541	362
2	-2	643	1	105	319	1060
2	2	1121	-1	185	563	374
2	2	674	-4	113	338	1140
3	-3	1273	4	211	634	428
3	-3	970	1	162	481	1600
3	3	793	-2	130	400	1340
3	3	881	-4	147	443	1490


-- !query
SELECT abs(b-c),
       b-c,
       a+b*2+c*3,
       a-b,
       e,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
 ORDER BY 7,6,4,3,1,5
-- !query schema
struct<abs((b - c)):int,(b - c):int,((a + (b * 2)) + (c * 3)):int,(a - b):int,e:int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1	-1	NULL	NULL	204	NULL	NULL
2	-2	1087	1	184	541	362
2	2	1121	-1	185	563	374
1	1	1157	-4	191	578	380
1	-1	1187	2	195	593	398
3	-3	1273	4	211	634	428
1	-1	1296	3	219	648	436
1	-1	1331	2	224	665	446
1	-1	1364	-1	225	680	452
1	-1	1392	3	233	696	468
1	1	1483	-2	245	742	492
2	-2	643	1	105	319	1060
2	2	674	-4	113	338	1140
1	-1	770	-1	125	383	1280
3	3	793	-2	130	400	1340
1	1	846	3	143	426	1410
3	3	881	-4	147	443	1490
3	-3	970	1	162	481	1600
2	-2	1027	1	174	511	1700


-- !query
SELECT abs(b-c),
       b-c,
       a+b*2+c*3,
       a-b,
       e,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<abs((b - c)):int,(b - c):int,((a + (b * 2)) + (c * 3)):int,(a - b):int,e:int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1	-1	1187	2	195	593	398
1	-1	1296	3	219	648	436
1	-1	1331	2	224	665	446
1	-1	1364	-1	225	680	452
1	-1	1392	3	233	696	468
1	-1	770	-1	125	383	1280
1	-1	NULL	NULL	204	NULL	NULL
1	1	1157	-4	191	578	380
1	1	1483	-2	245	742	492
1	1	846	3	143	426	1410
2	-2	1027	1	174	511	1700
2	-2	1087	1	184	541	362
2	-2	643	1	105	319	1060
2	2	1121	-1	185	563	374
2	2	674	-4	113	338	1140
3	-3	1273	4	211	634	428
3	-3	970	1	162	481	1600
3	3	793	-2	130	400	1340
3	3	881	-4	147	443	1490


-- !query
SELECT abs(b-c),
       b-c,
       a+b*2+c*3,
       a-b,
       e,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 7,5,6,1,4,3,2
-- !query schema
struct<abs((b - c)):int,(b - c):int,((a + (b * 2)) + (c * 3)):int,(a - b):int,e:int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1	-1	NULL	NULL	204	NULL	NULL
2	-2	1087	1	184	541	362
2	2	1121	-1	185	563	374
1	1	1157	-4	191	578	380
1	-1	1187	2	195	593	398
3	-3	1273	4	211	634	428
1	-1	1296	3	219	648	436
1	-1	1331	2	224	665	446
1	-1	1364	-1	225	680	452
1	-1	1392	3	233	696	468
1	1	1483	-2	245	742	492
2	-2	643	1	105	319	1060
2	2	674	-4	113	338	1140
1	-1	770	-1	125	383	1280
3	3	793	-2	130	400	1340
1	1	846	3	143	426	1410
3	3	881	-4	147	443	1490
3	-3	970	1	162	481	1600
2	-2	1027	1	174	511	1700


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       e,
       a+b*2
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,e:int,(a + (b * 2)):int>
-- !query output
107.0	109	105	319
127.0	126	125	383
132.0	133	130	400
137.0	135	137	410
142.0	142	143	426
162.0	164	162	481
172.0	173	174	511
182.0	183	184	541
187.0	189	185	563
192.0	192	191	578
197.0	196	195	593
212.0	212	211	634
217.0	217	219	648
222.0	220	224	665
227.0	229	225	680
232.0	230	233	696
247.0	249	245	742
NULL	101	104	NULL
NULL	115	NULL	354
NULL	165	166	NULL
NULL	201	204	NULL
NULL	206	207	NULL
NULL	243	NULL	NULL
NULL	NULL	113	338
NULL	NULL	121	367
NULL	NULL	147	443
NULL	NULL	158	469
NULL	NULL	175	529
NULL	NULL	238	709
NULL	NULL	NULL	451


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       e,
       a+b*2
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,e:int,(a + (b * 2)):int>
-- !query output
NULL	NULL	113	338
NULL	NULL	158	469
NULL	NULL	238	709
NULL	NULL	121	367
NULL	NULL	147	443
NULL	NULL	175	529
NULL	NULL	NULL	451
NULL	101	104	NULL
NULL	115	NULL	354
NULL	165	166	NULL
NULL	201	204	NULL
NULL	206	207	NULL
NULL	243	NULL	NULL
107.0	109	105	319
127.0	126	125	383
132.0	133	130	400
137.0	135	137	410
142.0	142	143	426
162.0	164	162	481
172.0	173	174	511
182.0	183	184	541
187.0	189	185	563
192.0	192	191	578
197.0	196	195	593
212.0	212	211	634
217.0	217	219	648
222.0	220	224	665
227.0	229	225	680
232.0	230	233	696
247.0	249	245	742


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND (e>c OR e<d)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int>
-- !query output
111	186
222	146
222	247
333	131
444	193
555	112
555	140


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND (e>c OR e<d)
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int>
-- !query output
111	186
222	146
222	247
333	131
444	193
555	112
555	140


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int>
-- !query output
111	186
222	146
222	247
333	131
444	193
555	112
555	140


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int>
-- !query output
555	112
333	131
555	140
222	146
111	186
444	193
222	247


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
   AND b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int>
-- !query output
111	186
222	146
222	247
333	131
444	193
555	112
555	140


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
   AND b>c
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int>
-- !query output
111	186
222	146
222	247
333	131
444	193
555	112
555	140


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int>
-- !query output
111	186
222	146
222	247
333	131
444	193
555	112
555	140


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int>
-- !query output
111	186
222	146
222	247
333	131
444	193
555	112
555	140


-- !query
SELECT abs(a),
       b-c,
       a,
       d-e,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs(a):int,(b - c):int,a:int,(d - e):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
107	-2	107	4	319	1060
161	-3	161	2	481	1600
167	NULL	167	-1	NULL	NULL
171	-2	171	-1	511	1700
181	-2	181	-1	541	362
187	2	187	4	563	374
190	1	190	1	578	380
199	-1	199	1	593	398
208	NULL	208	-1	NULL	NULL
214	-3	214	1	634	428
218	-1	218	-2	648	436
223	-1	223	-4	665	446
226	-1	226	4	680	452
234	-1	234	-3	696	468
246	1	246	4	742	492
NULL	-1	NULL	-3	NULL	NULL
NULL	4	NULL	NULL	NULL	NULL
NULL	NULL	NULL	-3	NULL	1020


-- !query
SELECT abs(a),
       b-c,
       a,
       d-e,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 5,4,3,6,2,1
-- !query schema
struct<abs(a):int,(b - c):int,a:int,(d - e):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	4	NULL	NULL	NULL	NULL
NULL	-1	NULL	-3	NULL	NULL
NULL	NULL	NULL	-3	NULL	1020
167	NULL	167	-1	NULL	NULL
208	NULL	208	-1	NULL	NULL
107	-2	107	4	319	1060
161	-3	161	2	481	1600
171	-2	171	-1	511	1700
181	-2	181	-1	541	362
187	2	187	4	563	374
190	1	190	1	578	380
199	-1	199	1	593	398
214	-3	214	1	634	428
218	-1	218	-2	648	436
223	-1	223	-4	665	446
226	-1	226	4	680	452
234	-1	234	-3	696	468
246	1	246	4	742	492


-- !query
SELECT e,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
-- !query schema
struct<e:int,abs((b - c)):int>
-- !query output
105	2
113	2
121	2
125	1
130	3
143	1
147	3
162	3
174	2
175	3
184	2
185	2
191	1
225	1
238	3
245	1
NULL	2
NULL	3
NULL	4


-- !query
SELECT e,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
 ORDER BY 1,2
-- !query schema
struct<e:int,abs((b - c)):int>
-- !query output
NULL	2
NULL	3
NULL	4
105	2
113	2
121	2
125	1
130	3
143	1
147	3
162	3
174	2
175	3
184	2
185	2
191	1
225	1
238	3
245	1


-- !query
SELECT e,
       abs(b-c)
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<e:int,abs((b - c)):int>
-- !query output
105	2
113	2
121	2
125	1
130	3
143	1
147	3
162	3
174	2
175	3
184	2
185	2
191	1
225	1
238	3
245	1
NULL	2
NULL	3
NULL	4


-- !query
SELECT e,
       abs(b-c)
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<e:int,abs((b - c)):int>
-- !query output
125	1
143	1
191	1
225	1
245	1
NULL	2
105	2
113	2
121	2
174	2
184	2
185	2
NULL	3
130	3
147	3
162	3
175	3
238	3
NULL	4


-- !query
SELECT b-c,
       c,
       d-e,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<(b - c):int,c:int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	129	1	127.0
-1	198	1	197.0
-1	203	-3	NULL
-1	216	-2	217.0
-1	222	-4	222.0
-1	228	4	227.0
-1	232	-3	232.0
-2	108	4	107.0
-2	124	NULL	NULL
-2	159	NULL	NULL
-2	172	-1	172.0
-2	182	-1	182.0
-3	139	-2	137.0
-3	153	NULL	NULL
-3	163	2	162.0
-3	179	NULL	NULL
-3	213	1	212.0
-3	239	NULL	NULL
1	140	-1	142.0
1	193	1	192.0
1	247	4	247.0
2	112	NULL	NULL
2	117	NULL	NULL
2	186	4	187.0
3	131	3	132.0
3	146	NULL	NULL
4	240	NULL	NULL
NULL	168	-1	NULL
NULL	NULL	-1	NULL
NULL	NULL	-3	NULL


-- !query
SELECT b-c,
       c,
       d-e,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 1,2,4
-- !query schema
struct<(b - c):int,c:int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	-3	NULL
NULL	NULL	-1	NULL
NULL	168	-1	NULL
-3	139	-2	137.0
-3	153	NULL	NULL
-3	163	2	162.0
-3	179	NULL	NULL
-3	213	1	212.0
-3	239	NULL	NULL
-2	108	4	107.0
-2	124	NULL	NULL
-2	159	NULL	NULL
-2	172	-1	172.0
-2	182	-1	182.0
-1	129	1	127.0
-1	198	1	197.0
-1	203	-3	NULL
-1	216	-2	217.0
-1	222	-4	222.0
-1	228	4	227.0
-1	232	-3	232.0
1	140	-1	142.0
1	193	1	192.0
1	247	4	247.0
2	112	NULL	NULL
2	117	NULL	NULL
2	186	4	187.0
3	131	3	132.0
3	146	NULL	NULL
4	240	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE b>c
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
111	1
111	4
222	4
222	4
222	NULL
222	NULL
333	3
444	1
555	-1
555	NULL
555	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE b>c
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
222	NULL
222	NULL
555	NULL
555	NULL
555	-1
111	1
444	1
333	3
111	4
222	4
222	4


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
111	1
111	4
222	4
222	4
222	NULL
222	NULL
333	3
444	1
555	-1
555	NULL
555	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR b>c
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
111	1
111	4
222	NULL
222	NULL
222	4
222	4
333	3
444	1
555	NULL
555	NULL
555	-1


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 2,6,1,7,4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c
  FROM t1
 WHERE a>b
-- !query schema
struct<d:int,c:int>
-- !query output
109	108
135	139
142	140
164	163
173	172
183	182
196	198
212	213
217	216
220	222
230	232
NULL	124
NULL	153
NULL	179
NULL	239


-- !query
SELECT d,
       c
  FROM t1
 WHERE a>b
 ORDER BY 2,1
-- !query schema
struct<d:int,c:int>
-- !query output
109	108
NULL	124
135	139
142	140
NULL	153
164	163
173	172
NULL	179
183	182
196	198
212	213
217	216
220	222
230	232
NULL	239


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c>d
    OR a>b
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int,(d - e):int>
-- !query output
111	125	1
111	185	4
111	225	4
222	105	4
222	121	NULL
222	137	-2
222	166	-1
222	174	-1
222	184	-1
222	NULL	NULL
444	162	2
444	191	1
444	219	-2
444	224	-4
444	238	NULL
555	143	-1
555	175	NULL
555	195	1
555	204	-3
555	211	1
555	233	-3
555	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c>d
    OR a>b
 ORDER BY 3,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int,(d - e):int>
-- !query output
222	NULL	NULL
555	NULL	NULL
222	121	NULL
555	175	NULL
444	238	NULL
444	224	-4
555	204	-3
555	233	-3
222	137	-2
444	219	-2
555	143	-1
222	166	-1
222	174	-1
222	184	-1
111	125	1
444	191	1
555	195	1
555	211	1
444	162	2
222	105	4
111	185	4
111	225	4


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
    OR c>d
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int,(d - e):int>
-- !query output
111	125	1
111	185	4
111	225	4
222	105	4
222	121	NULL
222	137	-2
222	166	-1
222	174	-1
222	184	-1
222	NULL	NULL
444	162	2
444	191	1
444	219	-2
444	224	-4
444	238	NULL
555	143	-1
555	175	NULL
555	195	1
555	204	-3
555	211	1
555	233	-3
555	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
    OR c>d
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int,(d - e):int>
-- !query output
222	NULL	NULL
555	NULL	NULL
222	105	4
222	121	NULL
111	125	1
222	137	-2
555	143	-1
444	162	2
222	166	-1
222	174	-1
555	175	NULL
222	184	-1
111	185	4
444	191	1
555	195	1
555	204	-3
555	211	1
444	219	-2
444	224	-4
111	225	4
555	233	-3
444	238	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       d-e
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
    OR c>d
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int,(d - e):int>
-- !query output
111	125	1
111	185	4
111	225	4
222	105	4
222	121	NULL
222	137	-2
222	166	-1
222	174	-1
222	184	-1
222	NULL	NULL
444	162	2
444	191	1
444	219	-2
444	224	-4
444	238	NULL
555	143	-1
555	175	NULL
555	195	1
555	204	-3
555	211	1
555	233	-3
555	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       d-e
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
    OR c>d
 ORDER BY 2,1,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int,(d - e):int>
-- !query output
222	NULL	NULL
555	NULL	NULL
222	105	4
222	121	NULL
111	125	1
222	137	-2
555	143	-1
444	162	2
222	166	-1
222	174	-1
555	175	NULL
222	184	-1
111	185	4
444	191	1
555	195	1
555	204	-3
555	211	1
444	219	-2
444	224	-4
111	225	4
555	233	-3
444	238	NULL


-- !query
SELECT e,
       abs(b-c)
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<e:int,abs((b - c)):int>
-- !query output
105	2
113	2
130	3
143	1
147	3
162	3
174	2
184	2
185	2
191	1
195	1
204	1
211	3
219	1
224	1
225	1
233	1
245	1
NULL	2
NULL	4


-- !query
SELECT e,
       abs(b-c)
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
 ORDER BY 2,1
-- !query schema
struct<e:int,abs((b - c)):int>
-- !query output
143	1
191	1
195	1
204	1
219	1
224	1
225	1
233	1
245	1
NULL	2
105	2
113	2
174	2
184	2
185	2
130	3
147	3
162	3
211	3
NULL	4


-- !query
SELECT b-c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(b - c):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-2	1079


-- !query
SELECT b-c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,1
-- !query schema
struct<(b - c):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-2	1079


-- !query
SELECT c,
       a-b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
   AND d>e
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a-b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
   AND d>e
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,2,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a-b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a-b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
   AND d>e
 ORDER BY 4,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a-b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a-b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
   AND d>e
 ORDER BY 3,2,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,5,6,1,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c>d
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c>d
    OR d>e
 ORDER BY 1,4,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
    OR c>d
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
    OR c>d
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c-d,
       c,
       abs(a),
       a-b
  FROM t1
 WHERE b>c
   AND a>b
   AND c>d
-- !query schema
struct<d:int,(c - d):int,c:int,abs(a):int,(a - b):int>
-- !query output



-- !query
SELECT d,
       c-d,
       c,
       abs(a),
       a-b
  FROM t1
 WHERE b>c
   AND a>b
   AND c>d
 ORDER BY 1,4,2
-- !query schema
struct<d:int,(c - d):int,c:int,abs(a):int,(a - b):int>
-- !query output



-- !query
SELECT d,
       c-d,
       c,
       abs(a),
       a-b
  FROM t1
 WHERE b>c
   AND c>d
   AND a>b
-- !query schema
struct<d:int,(c - d):int,c:int,abs(a):int,(a - b):int>
-- !query output



-- !query
SELECT d,
       c-d,
       c,
       abs(a),
       a-b
  FROM t1
 WHERE b>c
   AND c>d
   AND a>b
 ORDER BY 2,1,5
-- !query schema
struct<d:int,(c - d):int,c:int,abs(a):int,(a - b):int>
-- !query output



-- !query
SELECT d,
       c-d,
       c,
       abs(a),
       a-b
  FROM t1
 WHERE c>d
   AND a>b
   AND b>c
-- !query schema
struct<d:int,(c - d):int,c:int,abs(a):int,(a - b):int>
-- !query output



-- !query
SELECT d,
       c-d,
       c,
       abs(a),
       a-b
  FROM t1
 WHERE c>d
   AND a>b
   AND b>c
 ORDER BY 4,5,1,2,3
-- !query schema
struct<d:int,(c - d):int,c:int,abs(a):int,(a - b):int>
-- !query output



-- !query
SELECT a-b,
       c
  FROM t1
-- !query schema
struct<(a - b):int,c:int>
-- !query output
-1	129
-1	186
-1	228
-2	131
-2	159
-2	247
-3	117
-4	112
-4	146
-4	193
1	108
1	124
1	153
1	163
1	172
1	179
1	182
1	239
2	139
2	198
2	222
3	140
3	216
3	232
4	213
NULL	168
NULL	203
NULL	240
NULL	NULL
NULL	NULL


-- !query
SELECT a-b,
       c
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<(a - b):int,c:int>
-- !query output
NULL	NULL
NULL	NULL
1	108
-4	112
-3	117
1	124
-1	129
-2	131
2	139
3	140
-4	146
1	153
-2	159
1	163
NULL	168
1	172
1	179
1	182
-1	186
-4	193
2	198
NULL	203
4	213
3	216
2	222
-1	228
3	232
1	239
NULL	240
-2	247


-- !query
SELECT e
  FROM t1
 WHERE b>c
   AND d NOT BETWEEN 110 AND 150
   AND a>b
-- !query schema
struct<e:int>
-- !query output



-- !query
SELECT e
  FROM t1
 WHERE b>c
   AND d NOT BETWEEN 110 AND 150
   AND a>b
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output



-- !query
SELECT e
  FROM t1
 WHERE b>c
   AND a>b
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<e:int>
-- !query output



-- !query
SELECT e
  FROM t1
 WHERE b>c
   AND a>b
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output



-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
   AND a>b
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
319	1079	643
481	1626	970
511	1719	1027
541	1819	1087
593	1971	1187
634	2121	1273
648	2164	1296
665	2211	1331
696	2312	1392


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
   AND a>b
 ORDER BY 1,3
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
319	1079	643
481	1626	970
511	1719	1027
541	1819	1087
593	1971	1187
634	2121	1273
648	2164	1296
665	2211	1331
696	2312	1392


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
319	1079	643
481	1626	970
511	1719	1027
541	1819	1087
593	1971	1187
634	2121	1273
648	2164	1296
665	2211	1331
696	2312	1392


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,2,1
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
319	1079	643
481	1626	970
511	1719	1027
541	1819	1087
593	1971	1187
634	2121	1273
648	2164	1296
665	2211	1331
696	2312	1392


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
   AND a>b
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
319	1079	643
481	1626	970
511	1719	1027
541	1819	1087
593	1971	1187
634	2121	1273
648	2164	1296
665	2211	1331
696	2312	1392


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
   AND a>b
 ORDER BY 1,2,3
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
319	1079	643
481	1626	970
511	1719	1027
541	1819	1087
593	1971	1187
634	2121	1273
648	2164	1296
665	2211	1331
696	2312	1392


-- !query
SELECT abs(a),
       a+b*2,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
187	563	189	111	222


-- !query
SELECT abs(a),
       a+b*2,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
 ORDER BY 5,3,2,4,1
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
187	563	189	111	222


-- !query
SELECT abs(a),
       a+b*2,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
187	563	189	111	222


-- !query
SELECT abs(a),
       a+b*2,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,3,4,5,2
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
187	563	189	111	222


-- !query
SELECT a+b*2,
       a-b,
       b,
       c-d,
       e,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(a + (b * 2)):int,(a - b):int,b:int,(c - d):int,e:int,(b - c):int>
-- !query output
319	1	106	-1	105	-2
338	-4	114	NULL	113	2
354	-3	119	2	NULL	2
367	1	122	NULL	121	-2
383	-1	128	3	125	-1
400	-2	134	-2	130	3
410	2	136	4	137	-3
426	3	141	-2	143	1
443	-4	149	NULL	147	3
451	1	150	NULL	NULL	-3
469	-2	157	NULL	158	-2
481	1	160	-1	162	-3
511	1	170	-1	174	-2
529	1	176	NULL	175	-3
541	1	180	-1	184	-2
563	-1	188	-3	185	2
578	-4	194	1	191	1
593	2	197	2	195	-1
634	4	210	1	211	-3
648	3	215	-1	219	-1
665	2	221	2	224	-1
680	-1	227	-1	225	-1
696	3	231	2	233	-1
709	1	236	NULL	238	-3
742	-2	248	-2	245	1
NULL	NULL	202	2	204	-1
NULL	NULL	244	-3	NULL	4


-- !query
SELECT a+b*2,
       a-b,
       b,
       c-d,
       e,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2,6,4,5,3
-- !query schema
struct<(a + (b * 2)):int,(a - b):int,b:int,(c - d):int,e:int,(b - c):int>
-- !query output
NULL	NULL	202	2	204	-1
NULL	NULL	244	-3	NULL	4
319	1	106	-1	105	-2
338	-4	114	NULL	113	2
354	-3	119	2	NULL	2
367	1	122	NULL	121	-2
383	-1	128	3	125	-1
400	-2	134	-2	130	3
410	2	136	4	137	-3
426	3	141	-2	143	1
443	-4	149	NULL	147	3
451	1	150	NULL	NULL	-3
469	-2	157	NULL	158	-2
481	1	160	-1	162	-3
511	1	170	-1	174	-2
529	1	176	NULL	175	-3
541	1	180	-1	184	-2
563	-1	188	-3	185	2
578	-4	194	1	191	1
593	2	197	2	195	-1
634	4	210	1	211	-3
648	3	215	-1	219	-1
665	2	221	2	224	-1
680	-1	227	-1	225	-1
696	3	231	2	233	-1
709	1	236	NULL	238	-3
742	-2	248	-2	245	1


-- !query
SELECT a+b*2,
       a-b,
       b,
       c-d,
       e,
       b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>a AND e<b)
-- !query schema
struct<(a + (b * 2)):int,(a - b):int,b:int,(c - d):int,e:int,(b - c):int>
-- !query output
319	1	106	-1	105	-2
338	-4	114	NULL	113	2
354	-3	119	2	NULL	2
367	1	122	NULL	121	-2
383	-1	128	3	125	-1
400	-2	134	-2	130	3
410	2	136	4	137	-3
426	3	141	-2	143	1
443	-4	149	NULL	147	3
451	1	150	NULL	NULL	-3
469	-2	157	NULL	158	-2
481	1	160	-1	162	-3
511	1	170	-1	174	-2
529	1	176	NULL	175	-3
541	1	180	-1	184	-2
563	-1	188	-3	185	2
578	-4	194	1	191	1
593	2	197	2	195	-1
634	4	210	1	211	-3
648	3	215	-1	219	-1
665	2	221	2	224	-1
680	-1	227	-1	225	-1
696	3	231	2	233	-1
709	1	236	NULL	238	-3
742	-2	248	-2	245	1
NULL	NULL	202	2	204	-1
NULL	NULL	244	-3	NULL	4


-- !query
SELECT a+b*2,
       a-b,
       b,
       c-d,
       e,
       b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>a AND e<b)
 ORDER BY 3,1,5,6,4
-- !query schema
struct<(a + (b * 2)):int,(a - b):int,b:int,(c - d):int,e:int,(b - c):int>
-- !query output
319	1	106	-1	105	-2
338	-4	114	NULL	113	2
354	-3	119	2	NULL	2
367	1	122	NULL	121	-2
383	-1	128	3	125	-1
400	-2	134	-2	130	3
410	2	136	4	137	-3
426	3	141	-2	143	1
443	-4	149	NULL	147	3
451	1	150	NULL	NULL	-3
469	-2	157	NULL	158	-2
481	1	160	-1	162	-3
511	1	170	-1	174	-2
529	1	176	NULL	175	-3
541	1	180	-1	184	-2
563	-1	188	-3	185	2
578	-4	194	1	191	1
593	2	197	2	195	-1
NULL	NULL	202	2	204	-1
634	4	210	1	211	-3
648	3	215	-1	219	-1
665	2	221	2	224	-1
680	-1	227	-1	225	-1
696	3	231	2	233	-1
709	1	236	NULL	238	-3
NULL	NULL	244	-3	NULL	4
742	-2	248	-2	245	1


-- !query
SELECT c,
       a+b*2+c*3,
       d
  FROM t1
 WHERE b>c
-- !query schema
struct<c:int,((a + (b * 2)) + (c * 3)):int,d:int>
-- !query output
112	674	NULL
117	705	115
131	793	133
140	846	142
146	881	NULL
186	1121	189
193	1157	192
240	NULL	243
247	1483	249


-- !query
SELECT c,
       a+b*2+c*3,
       d
  FROM t1
 WHERE b>c
 ORDER BY 1,2
-- !query schema
struct<c:int,((a + (b * 2)) + (c * 3)):int,d:int>
-- !query output
112	674	NULL
117	705	115
131	793	133
140	846	142
146	881	NULL
186	1121	189
193	1157	192
240	NULL	243
247	1483	249


-- !query
SELECT a+b*2+c*3+d*4,
       e,
       c-d
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,(c - d):int>
-- !query output
1079	105	-1
1165	NULL	2
1274	125	3
1325	130	-2
1367	137	4
1414	143	-2
1626	162	-1
1719	174	-1
1819	184	-1
1877	185	-3
1925	191	1
1971	195	2
2121	211	1
2164	219	-1
2211	224	2
2280	225	-1
2312	233	2
2479	245	-2
NULL	104	NULL
NULL	113	NULL
NULL	121	NULL
NULL	147	NULL
NULL	158	NULL
NULL	166	3
NULL	175	NULL
NULL	204	2
NULL	207	NULL
NULL	238	NULL
NULL	NULL	-3
NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       e,
       c-d
  FROM t1
 ORDER BY 3,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,(c - d):int>
-- !query output
NULL	NULL	NULL
NULL	104	NULL
NULL	113	NULL
NULL	121	NULL
NULL	147	NULL
NULL	158	NULL
NULL	175	NULL
NULL	207	NULL
NULL	238	NULL
NULL	NULL	-3
1877	185	-3
1325	130	-2
1414	143	-2
2479	245	-2
1079	105	-1
1626	162	-1
1719	174	-1
1819	184	-1
2164	219	-1
2280	225	-1
1925	191	1
2121	211	1
1165	NULL	2
1971	195	2
NULL	204	2
2211	224	2
2312	233	2
1274	125	3
NULL	166	3
1367	137	4


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c)
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
1
2
4
4
4
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
-1
-1
1
2
4
4
4


-- !query
SELECT d-e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
1
2
4
4
4
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
-1
-1
1
2
4
4
4


-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e
  FROM t1
 WHERE c>d
   AND a>b
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e
  FROM t1
 WHERE c>d
   AND a>b
   AND d>e
 ORDER BY 4,6,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e
  FROM t1
 WHERE a>b
   AND d>e
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e
  FROM t1
 WHERE a>b
   AND d>e
   AND c>d
 ORDER BY 5,1,4,6,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e
  FROM t1
 WHERE c>d
   AND d>e
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e
  FROM t1
 WHERE c>d
   AND d>e
   AND a>b
 ORDER BY 1,4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a - b):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	1121
-1	770
-2	1483
-2	793
-3	705
1	643
2	1187
2	1331
2	827
3	1392
3	846
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a-b,
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<(a - b):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
-3	705
-2	793
-2	1483
-1	770
-1	1121
1	643
2	827
2	1187
2	1331
3	846
3	1392


-- !query
SELECT a-b,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a - b):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	1121
-1	770
-2	1483
-2	793
-3	705
1	643
2	1187
2	1331
2	827
3	1392
3	846
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a-b,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2
-- !query schema
struct<(a - b):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
-3	705
-2	793
-2	1483
-1	770
-1	1121
1	643
2	827
2	1187
2	1331
3	846
3	1392


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a)
  FROM t1
 WHERE d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a)
  FROM t1
 WHERE d>e
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d
  FROM t1
-- !query schema
struct<d:int>
-- !query output
101
109
115
126
133
135
142
164
165
173
183
189
192
196
201
206
212
217
220
229
230
243
249
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT d
  FROM t1
 ORDER BY 1
-- !query schema
struct<d:int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
101
109
115
126
133
135
142
164
165
173
183
189
192
196
201
206
212
217
220
229
230
243
249


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	111
-1	222
-1	222
-1	222
-1	444
-1	444
-2	222
-2	333
-2	555
-3	111
-3	555
1	444
1	555
2	222
2	444
2	555
2	555
2	555
3	111
4	222
NULL	222
NULL	222
NULL	444
NULL	555
NULL	555
NULL	555
NULL	555


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	222
NULL	222
NULL	444
NULL	555
NULL	555
NULL	555
NULL	555
-3	111
-3	555
-2	222
-2	333
-2	555
-1	111
-1	222
-1	222
-1	222
-1	444
-1	444
1	444
1	555
2	222
2	444
2	555
2	555
2	555
3	111
4	222


-- !query
SELECT a,
       d-e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       c,
       abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       d-e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       c,
       abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
   AND a>b
 ORDER BY 3,5,4,7,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       d-e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       c,
       abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       d-e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       c,
       abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 5,6,3,1,4,7,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       d-e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       c,
       abs(b-c)
  FROM t1
 WHERE a>b
   AND d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       d-e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       c,
       abs(b-c)
  FROM t1
 WHERE a>b
   AND d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
 ORDER BY 6,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       d-e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       c,
       abs(b-c)
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       d-e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       c,
       abs(b-c)
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,4,3,7,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a)
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
    OR c>d
-- !query schema
struct<abs(a):int>
-- !query output
107
116
127
132
138
161
167
171
181
187
190
199
208
214
218
223
226
234
246
NULL
NULL
NULL


-- !query
SELECT abs(a)
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
    OR c>d
 ORDER BY 1
-- !query schema
struct<abs(a):int>
-- !query output
NULL
NULL
NULL
107
116
127
132
138
161
167
171
181
187
190
199
208
214
218
223
226
234
246


-- !query
SELECT abs(a)
  FROM t1
 WHERE d>e
    OR c>d
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs(a):int>
-- !query output
107
116
127
132
138
161
167
171
181
187
190
199
208
214
218
223
226
234
246
NULL
NULL
NULL


-- !query
SELECT abs(a)
  FROM t1
 WHERE d>e
    OR c>d
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<abs(a):int>
-- !query output
NULL
NULL
NULL
107
116
127
132
138
161
167
171
181
187
190
199
208
214
218
223
226
234
246


-- !query
SELECT abs(a)
  FROM t1
 WHERE c>d
    OR d>e
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs(a):int>
-- !query output
107
116
127
132
138
161
167
171
181
187
190
199
208
214
218
223
226
234
246
NULL
NULL
NULL


-- !query
SELECT abs(a)
  FROM t1
 WHERE c>d
    OR d>e
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<abs(a):int>
-- !query output
NULL
NULL
NULL
107
116
127
132
138
161
167
171
181
187
190
199
208
214
218
223
226
234
246


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
319	1079
338	NULL
354	1165
383	1274
400	1325
410	1367
426	1414
443	NULL
481	1626
511	1719
541	1819
563	1877
578	1925
593	1971
634	2121
648	2164
665	2211
680	2280
696	2312
742	2479
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
 ORDER BY 1,2
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
319	1079
338	NULL
354	1165
383	1274
400	1325
410	1367
426	1414
443	NULL
481	1626
511	1719
541	1819
563	1877
578	1925
593	1971
634	2121
648	2164
665	2211
680	2280
696	2312
742	2479


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
319	1079
338	NULL
354	1165
383	1274
400	1325
410	1367
426	1414
443	NULL
481	1626
511	1719
541	1819
563	1877
578	1925
593	1971
634	2121
648	2164
665	2211
680	2280
696	2312
742	2479
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
319	1079
338	NULL
354	1165
383	1274
400	1325
410	1367
426	1414
443	NULL
481	1626
511	1719
541	1819
563	1877
578	1925
593	1971
634	2121
648	2164
665	2211
680	2280
696	2312
742	2479


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
319	1079
338	NULL
354	1165
383	1274
400	1325
410	1367
426	1414
443	NULL
481	1626
511	1719
541	1819
563	1877
578	1925
593	1971
634	2121
648	2164
665	2211
680	2280
696	2312
742	2479
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
319	1079
338	NULL
354	1165
383	1274
400	1325
410	1367
426	1414
443	NULL
481	1626
511	1719
541	1819
563	1877
578	1925
593	1971
634	2121
648	2164
665	2211
680	2280
696	2312
742	2479


-- !query
SELECT d-e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
 ORDER BY 5,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
   AND b>c
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c
  FROM t1
 WHERE a>b
   AND (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int>
-- !query output
333	2	198
333	2	222
444	-2	140
444	2	232


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c
  FROM t1
 WHERE a>b
   AND (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,3
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int>
-- !query output
444	-2	140
333	2	198
333	2	222
444	2	232


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND a>b
   AND (e>c OR e<d)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int>
-- !query output
333	2	198
333	2	222
444	-2	140
444	2	232


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND a>b
   AND (e>c OR e<d)
 ORDER BY 3,2,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int>
-- !query output
444	-2	140
333	2	198
333	2	222
444	2	232


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
   AND a>b
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int>
-- !query output
333	2	198
333	2	222
444	-2	140
444	2	232


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
   AND a>b
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int>
-- !query output
444	-2	140
333	2	222
333	2	198
444	2	232


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND a>b
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int>
-- !query output
333	2	198
333	2	222
444	-2	140
444	2	232


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND a>b
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int>
-- !query output
333	2	222
333	2	198
444	-2	140
444	2	232


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       d-e,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       d-e,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
 ORDER BY 1,6,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       d-e,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       d-e,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       d-e,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       d-e,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,1,7,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       c-d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>c OR e<d)
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
319	1079	333	106	-1	1604
338	NULL	111	114	NULL	NULL
354	1165	222	119	2	NULL
367	NULL	333	122	NULL	NULL
383	1274	222	128	3	1899
400	1325	222	134	-2	1975
410	1367	333	136	4	2052
426	1414	444	141	-2	2129
443	NULL	111	149	NULL	NULL
451	NULL	333	150	NULL	NULL
469	NULL	222	157	NULL	NULL
481	1626	333	160	-1	2436
511	1719	333	170	-1	2589
529	NULL	333	176	NULL	NULL
541	1819	333	180	-1	2739
563	1877	222	188	-3	2802
578	1925	111	194	1	2880
593	1971	333	197	2	2946
634	2121	444	210	1	3176
648	2164	444	215	-1	3259
665	2211	333	221	2	3331
680	2280	222	227	-1	3405
696	2312	444	231	2	3477
709	NULL	333	236	NULL	NULL
742	2479	222	248	-2	3704
NULL	NULL	444	202	2	NULL
NULL	NULL	444	244	-3	NULL


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       c-d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>c OR e<d)
 ORDER BY 2,6
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	NULL	444	202	2	NULL
338	NULL	111	114	NULL	NULL
469	NULL	222	157	NULL	NULL
709	NULL	333	236	NULL	NULL
367	NULL	333	122	NULL	NULL
443	NULL	111	149	NULL	NULL
529	NULL	333	176	NULL	NULL
NULL	NULL	444	244	-3	NULL
451	NULL	333	150	NULL	NULL
319	1079	333	106	-1	1604
354	1165	222	119	2	NULL
383	1274	222	128	3	1899
400	1325	222	134	-2	1975
410	1367	333	136	4	2052
426	1414	444	141	-2	2129
481	1626	333	160	-1	2436
511	1719	333	170	-1	2589
541	1819	333	180	-1	2739
563	1877	222	188	-3	2802
578	1925	111	194	1	2880
593	1971	333	197	2	2946
634	2121	444	210	1	3176
648	2164	444	215	-1	3259
665	2211	333	221	2	3331
680	2280	222	227	-1	3405
696	2312	444	231	2	3477
742	2479	222	248	-2	3704


-- !query
SELECT a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
 ORDER BY 4,2,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 3,4,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a-b
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
-- !query schema
struct<a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a - b):int>
-- !query output
127	1274	127.0	222	1	-1
190	1925	192.0	111	1	-4
199	1971	197.0	333	1	2
214	2121	212.0	444	1	4
223	2211	222.0	333	-4	2
234	2312	232.0	444	-3	3
NULL	NULL	NULL	444	-3	NULL


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a-b
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
 ORDER BY 2,6,1,4,5
-- !query schema
struct<a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a - b):int>
-- !query output
NULL	NULL	NULL	444	-3	NULL
127	1274	127.0	222	1	-1
190	1925	192.0	111	1	-4
199	1971	197.0	333	1	2
214	2121	212.0	444	1	4
223	2211	222.0	333	-4	2
234	2312	232.0	444	-3	3


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a-b
  FROM t1
 WHERE (e>c OR e<d)
   AND c>d
-- !query schema
struct<a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a - b):int>
-- !query output
127	1274	127.0	222	1	-1
190	1925	192.0	111	1	-4
199	1971	197.0	333	1	2
214	2121	212.0	444	1	4
223	2211	222.0	333	-4	2
234	2312	232.0	444	-3	3
NULL	NULL	NULL	444	-3	NULL


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a-b
  FROM t1
 WHERE (e>c OR e<d)
   AND c>d
 ORDER BY 6,1,2,5,3,4
-- !query schema
struct<a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(a - b):int>
-- !query output
NULL	NULL	NULL	444	-3	NULL
190	1925	192.0	111	1	-4
127	1274	127.0	222	1	-1
199	1971	197.0	333	1	2
223	2211	222.0	333	-4	2
234	2312	232.0	444	-3	3
214	2121	212.0	444	1	4


-- !query
SELECT b,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d>e
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<b:int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
128	-1	1899
188	2	2802


-- !query
SELECT b,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d>e
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<b:int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
128	-1	1899
188	2	2802


-- !query
SELECT b,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d>e
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<b:int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
128	-1	1899
188	2	2802


-- !query
SELECT b,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d>e
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<b:int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
128	-1	1899
188	2	2802


-- !query
SELECT b,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<b:int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
128	-1	1899
188	2	2802


-- !query
SELECT b,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 3,1,2
-- !query schema
struct<b:int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
128	-1	1899
188	2	2802


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
   AND b>c
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
   AND b>c
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c>d
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c>d
   AND b>c
 ORDER BY 3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b>c
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b>c
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,3,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       b,
       abs(a)
  FROM t1
-- !query schema
struct<(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs(a):int>
-- !query output
-1	1274	1899	128	127
-1	1877	2802	188	187
-1	2280	3405	227	226
-2	1325	1975	134	132
-2	2479	3704	248	246
-2	NULL	NULL	157	155
-3	1165	NULL	119	116
-4	1925	2880	194	190
-4	NULL	NULL	114	110
-4	NULL	NULL	149	145
1	1079	1604	106	107
1	1626	2436	160	161
1	1719	2589	170	171
1	1819	2739	180	181
1	NULL	NULL	122	123
1	NULL	NULL	150	151
1	NULL	NULL	176	177
1	NULL	NULL	236	237
2	1367	2052	136	138
2	1971	2946	197	199
2	2211	3331	221	223
3	1414	2129	141	144
3	2164	3259	215	218
3	2312	3477	231	234
4	2121	3176	210	214
NULL	NULL	NULL	102	NULL
NULL	NULL	NULL	202	NULL
NULL	NULL	NULL	244	NULL
NULL	NULL	NULL	NULL	167
NULL	NULL	NULL	NULL	208


-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       b,
       abs(a)
  FROM t1
 ORDER BY 3,2,4,1,5
-- !query schema
struct<(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs(a):int>
-- !query output
NULL	NULL	NULL	NULL	167
NULL	NULL	NULL	NULL	208
NULL	NULL	NULL	102	NULL
-4	NULL	NULL	114	110
1	NULL	NULL	122	123
-4	NULL	NULL	149	145
1	NULL	NULL	150	151
-2	NULL	NULL	157	155
1	NULL	NULL	176	177
NULL	NULL	NULL	202	NULL
1	NULL	NULL	236	237
NULL	NULL	NULL	244	NULL
-3	1165	NULL	119	116
1	1079	1604	106	107
-1	1274	1899	128	127
-2	1325	1975	134	132
2	1367	2052	136	138
3	1414	2129	141	144
1	1626	2436	160	161
1	1719	2589	170	171
1	1819	2739	180	181
-1	1877	2802	188	187
-4	1925	2880	194	190
2	1971	2946	197	199
4	2121	3176	210	214
3	2164	3259	215	218
2	2211	3331	221	223
-1	2280	3405	227	226
3	2312	3477	231	234
-2	2479	3704	248	246


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
222	1274	129
222	1877	186
222	2280	228
333	1079	108
333	1626	163
333	1719	172
333	1819	182
333	NULL	124
333	NULL	153
333	NULL	179
333	NULL	239


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 1,2,3
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int>
-- !query output
222	1274	129
222	1877	186
222	2280	228
333	NULL	124
333	NULL	153
333	NULL	179
333	NULL	239
333	1079	108
333	1626	163
333	1719	172
333	1819	182


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE a>b
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
333	106
333	122
333	136
333	150
333	160
333	170
333	176
333	180
333	197
333	221
333	236
444	141
444	210
444	215
444	231


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE a>b
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
333	106
333	122
333	136
444	141
333	150
333	160
333	170
333	176
333	180
333	197
444	210
444	215
333	221
444	231
333	236


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       abs(b-c),
       b-c,
       a+b*2+c*3+d*4+e*5,
       abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int>
-- !query output
319	1079	643	2	-2	1604	107
481	1626	970	3	-3	2436	161
511	1719	1027	2	-2	2589	171
541	1819	1087	2	-2	2739	181
563	1877	1121	2	2	2802	187
578	1925	1157	1	1	2880	190
593	1971	1187	1	-1	2946	199
634	2121	1273	3	-3	3176	214
648	2164	1296	1	-1	3259	218
665	2211	1331	1	-1	3331	223
680	2280	1364	1	-1	3405	226
696	2312	1392	1	-1	3477	234
742	2479	1483	1	1	3704	246
NULL	NULL	NULL	1	-1	NULL	NULL
NULL	NULL	NULL	4	4	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	167
NULL	NULL	NULL	NULL	NULL	NULL	208
NULL	NULL	NULL	NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       abs(b-c),
       b-c,
       a+b*2+c*3+d*4+e*5,
       abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 3,7,6,1
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int>
-- !query output
NULL	NULL	NULL	1	-1	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	4	4	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	167
NULL	NULL	NULL	NULL	NULL	NULL	208
319	1079	643	2	-2	1604	107
481	1626	970	3	-3	2436	161
511	1719	1027	2	-2	2589	171
541	1819	1087	2	-2	2739	181
563	1877	1121	2	2	2802	187
578	1925	1157	1	1	2880	190
593	1971	1187	1	-1	2946	199
634	2121	1273	3	-3	3176	214
648	2164	1296	1	-1	3259	218
665	2211	1331	1	-1	3331	223
680	2280	1364	1	-1	3405	226
696	2312	1392	1	-1	3477	234
742	2479	1483	1	1	3704	246


-- !query
SELECT b-c,
       (a+b+c+d+e)/5,
       abs(a),
       abs(b-c),
       d,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
-- !query schema
struct<(b - c):int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int,abs((b - c)):int,d:int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	127.0	127	1	126	1	111
-1	197.0	199	1	196	1	555
-1	227.0	226	1	229	4	111
-2	107.0	107	2	109	4	222
-3	162.0	161	3	164	2	444
-3	212.0	214	3	212	1	555
1	192.0	190	1	192	1	444
1	247.0	246	1	249	4	222
2	187.0	187	2	189	4	111
3	132.0	132	3	133	3	333


-- !query
SELECT b-c,
       (a+b+c+d+e)/5,
       abs(a),
       abs(b-c),
       d,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
 ORDER BY 1,4,5
-- !query schema
struct<(b - c):int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int,abs((b - c)):int,d:int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-3	162.0	161	3	164	2	444
-3	212.0	214	3	212	1	555
-2	107.0	107	2	109	4	222
-1	127.0	127	1	126	1	111
-1	197.0	199	1	196	1	555
-1	227.0	226	1	229	4	111
1	192.0	190	1	192	1	444
1	247.0	246	1	249	4	222
2	187.0	187	2	189	4	111
3	132.0	132	3	133	3	333


-- !query
SELECT b-c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(b - c):int>
-- !query output
-1
-2


-- !query
SELECT b-c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<(b - c):int>
-- !query output
-2
-1


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 5,6,1,7,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,4,7,3,1,6,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       a,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       a,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 6,1,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c
  FROM t1
 ORDER BY 2,3,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,a:int>
-- !query output
319	1079	109	1060	-1	107


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,6,4,1,5,3
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,a:int>
-- !query output
319	1079	109	1060	-1	107


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND a>b
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,a:int>
-- !query output
319	1079	109	1060	-1	107


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND a>b
 ORDER BY 1,2,5,3,6
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,a:int>
-- !query output
319	1079	109	1060	-1	107


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,a:int>
-- !query output
319	1079	109	1060	-1	107


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,1
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,a:int>
-- !query output
319	1079	109	1060	-1	107


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a
  FROM t1
 WHERE a>b
   AND e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,a:int>
-- !query output
319	1079	109	1060	-1	107


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a
  FROM t1
 WHERE a>b
   AND e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,4
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,a:int>
-- !query output
319	1079	109	1060	-1	107


-- !query
SELECT a+b*2,
       a-b,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a + (b * 2)):int,(a - b):int,(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,c:int>
-- !query output
319	1	-1	1060	105	108
338	-4	NULL	1140	113	112
354	-3	2	1190	NULL	117
367	1	NULL	1220	121	124
383	-1	3	1280	125	129
400	-2	-2	1340	130	131
410	2	4	1360	137	139
426	3	-2	1410	143	140
443	-4	NULL	1490	147	146
451	1	NULL	1500	NULL	153
469	-2	NULL	1570	158	159
481	1	-1	1600	162	163
511	1	-1	1700	174	172
529	1	NULL	354	175	179
541	1	-1	362	184	182
563	-1	-3	374	185	186
578	-4	1	380	191	193
593	2	2	398	195	198
634	4	1	428	211	213
648	3	-1	436	219	216
665	2	2	446	224	222
680	-1	-1	452	225	228
696	3	2	468	233	232
709	1	NULL	474	238	239
742	-2	-2	492	245	247
NULL	NULL	-3	NULL	NULL	240
NULL	NULL	2	NULL	204	203


-- !query
SELECT a+b*2,
       a-b,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,1
-- !query schema
struct<(a + (b * 2)):int,(a - b):int,(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,c:int>
-- !query output
338	-4	NULL	1140	113	112
367	1	NULL	1220	121	124
443	-4	NULL	1490	147	146
451	1	NULL	1500	NULL	153
469	-2	NULL	1570	158	159
529	1	NULL	354	175	179
709	1	NULL	474	238	239
NULL	NULL	-3	NULL	NULL	240
563	-1	-3	374	185	186
400	-2	-2	1340	130	131
426	3	-2	1410	143	140
742	-2	-2	492	245	247
319	1	-1	1060	105	108
481	1	-1	1600	162	163
511	1	-1	1700	174	172
541	1	-1	362	184	182
648	3	-1	436	219	216
680	-1	-1	452	225	228
578	-4	1	380	191	193
634	4	1	428	211	213
NULL	NULL	2	NULL	204	203
354	-3	2	1190	NULL	117
593	2	2	398	195	198
665	2	2	446	224	222
696	3	2	468	233	232
383	-1	3	1280	125	129
410	2	4	1360	137	139


-- !query
SELECT a+b*2,
       a-b,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(a + (b * 2)):int,(a - b):int,(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,c:int>
-- !query output
319	1	-1	1060	105	108
338	-4	NULL	1140	113	112
354	-3	2	1190	NULL	117
367	1	NULL	1220	121	124
383	-1	3	1280	125	129
400	-2	-2	1340	130	131
410	2	4	1360	137	139
426	3	-2	1410	143	140
443	-4	NULL	1490	147	146
451	1	NULL	1500	NULL	153
469	-2	NULL	1570	158	159
481	1	-1	1600	162	163
511	1	-1	1700	174	172
529	1	NULL	354	175	179
541	1	-1	362	184	182
563	-1	-3	374	185	186
578	-4	1	380	191	193
593	2	2	398	195	198
634	4	1	428	211	213
648	3	-1	436	219	216
665	2	2	446	224	222
680	-1	-1	452	225	228
696	3	2	468	233	232
709	1	NULL	474	238	239
742	-2	-2	492	245	247
NULL	NULL	-3	NULL	NULL	240
NULL	NULL	2	NULL	204	203


-- !query
SELECT a+b*2,
       a-b,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 2,1,5
-- !query schema
struct<(a + (b * 2)):int,(a - b):int,(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,c:int>
-- !query output
NULL	NULL	-3	NULL	NULL	240
NULL	NULL	2	NULL	204	203
338	-4	NULL	1140	113	112
443	-4	NULL	1490	147	146
578	-4	1	380	191	193
354	-3	2	1190	NULL	117
400	-2	-2	1340	130	131
469	-2	NULL	1570	158	159
742	-2	-2	492	245	247
383	-1	3	1280	125	129
563	-1	-3	374	185	186
680	-1	-1	452	225	228
319	1	-1	1060	105	108
367	1	NULL	1220	121	124
451	1	NULL	1500	NULL	153
481	1	-1	1600	162	163
511	1	-1	1700	174	172
529	1	NULL	354	175	179
541	1	-1	362	184	182
709	1	NULL	474	238	239
410	2	4	1360	137	139
593	2	2	398	195	198
665	2	2	446	224	222
426	3	-2	1410	143	140
648	3	-1	436	219	216
696	3	2	468	233	232
634	4	1	428	211	213


-- !query
SELECT a+b*2,
       a-b,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(a + (b * 2)):int,(a - b):int,(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,c:int>
-- !query output
319	1	-1	1060	105	108
338	-4	NULL	1140	113	112
354	-3	2	1190	NULL	117
367	1	NULL	1220	121	124
383	-1	3	1280	125	129
400	-2	-2	1340	130	131
410	2	4	1360	137	139
426	3	-2	1410	143	140
443	-4	NULL	1490	147	146
451	1	NULL	1500	NULL	153
469	-2	NULL	1570	158	159
481	1	-1	1600	162	163
511	1	-1	1700	174	172
529	1	NULL	354	175	179
541	1	-1	362	184	182
563	-1	-3	374	185	186
578	-4	1	380	191	193
593	2	2	398	195	198
634	4	1	428	211	213
648	3	-1	436	219	216
665	2	2	446	224	222
680	-1	-1	452	225	228
696	3	2	468	233	232
709	1	NULL	474	238	239
742	-2	-2	492	245	247
NULL	NULL	-3	NULL	NULL	240
NULL	NULL	2	NULL	204	203


-- !query
SELECT a+b*2,
       a-b,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 6,1
-- !query schema
struct<(a + (b * 2)):int,(a - b):int,(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,c:int>
-- !query output
319	1	-1	1060	105	108
338	-4	NULL	1140	113	112
354	-3	2	1190	NULL	117
367	1	NULL	1220	121	124
383	-1	3	1280	125	129
400	-2	-2	1340	130	131
410	2	4	1360	137	139
426	3	-2	1410	143	140
443	-4	NULL	1490	147	146
451	1	NULL	1500	NULL	153
469	-2	NULL	1570	158	159
481	1	-1	1600	162	163
511	1	-1	1700	174	172
529	1	NULL	354	175	179
541	1	-1	362	184	182
563	-1	-3	374	185	186
578	-4	1	380	191	193
593	2	2	398	195	198
NULL	NULL	2	NULL	204	203
634	4	1	428	211	213
648	3	-1	436	219	216
665	2	2	446	224	222
680	-1	-1	452	225	228
696	3	2	468	233	232
709	1	NULL	474	238	239
NULL	NULL	-3	NULL	NULL	240
742	-2	-2	492	245	247


-- !query
SELECT b-c,
       c-d,
       a+b*2
  FROM t1
 WHERE c>d
    OR d>e
    OR (e>a AND e<b)
-- !query schema
struct<(b - c):int,(c - d):int,(a + (b * 2)):int>
-- !query output
-1	-1	680
-1	2	593
-1	2	665
-1	2	696
-1	2	NULL
-1	3	383
-2	-1	319
-3	-1	481
-3	1	634
-3	4	410
1	-2	742
1	1	578
2	-3	563
2	2	354
2	NULL	338
3	-2	400
3	NULL	443
NULL	3	NULL


-- !query
SELECT b-c,
       c-d,
       a+b*2
  FROM t1
 WHERE c>d
    OR d>e
    OR (e>a AND e<b)
 ORDER BY 3,1
-- !query schema
struct<(b - c):int,(c - d):int,(a + (b * 2)):int>
-- !query output
NULL	3	NULL
-1	2	NULL
-2	-1	319
2	NULL	338
2	2	354
-1	3	383
3	-2	400
-3	4	410
3	NULL	443
-3	-1	481
2	-3	563
1	1	578
-1	2	593
-3	1	634
-1	2	665
-1	-1	680
-1	2	696
1	-2	742


-- !query
SELECT b-c,
       c-d,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
    OR c>d
    OR d>e
-- !query schema
struct<(b - c):int,(c - d):int,(a + (b * 2)):int>
-- !query output
-1	-1	680
-1	2	593
-1	2	665
-1	2	696
-1	2	NULL
-1	3	383
-2	-1	319
-3	-1	481
-3	1	634
-3	4	410
1	-2	742
1	1	578
2	-3	563
2	2	354
2	NULL	338
3	-2	400
3	NULL	443
NULL	3	NULL


-- !query
SELECT b-c,
       c-d,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
    OR c>d
    OR d>e
 ORDER BY 2,1
-- !query schema
struct<(b - c):int,(c - d):int,(a + (b * 2)):int>
-- !query output
2	NULL	338
3	NULL	443
2	-3	563
1	-2	742
3	-2	400
-3	-1	481
-2	-1	319
-1	-1	680
-3	1	634
1	1	578
-1	2	665
-1	2	593
-1	2	696
-1	2	NULL
2	2	354
NULL	3	NULL
-1	3	383
-3	4	410


-- !query
SELECT b-c,
       c-d,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
    OR d>e
    OR c>d
-- !query schema
struct<(b - c):int,(c - d):int,(a + (b * 2)):int>
-- !query output
-1	-1	680
-1	2	593
-1	2	665
-1	2	696
-1	2	NULL
-1	3	383
-2	-1	319
-3	-1	481
-3	1	634
-3	4	410
1	-2	742
1	1	578
2	-3	563
2	2	354
2	NULL	338
3	-2	400
3	NULL	443
NULL	3	NULL


-- !query
SELECT b-c,
       c-d,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
    OR d>e
    OR c>d
 ORDER BY 1,2
-- !query schema
struct<(b - c):int,(c - d):int,(a + (b * 2)):int>
-- !query output
NULL	3	NULL
-3	-1	481
-3	1	634
-3	4	410
-2	-1	319
-1	-1	680
-1	2	665
-1	2	593
-1	2	696
-1	2	NULL
-1	3	383
1	-2	742
1	1	578
2	NULL	338
2	-3	563
2	2	354
3	NULL	443
3	-2	400


-- !query
SELECT b-c,
       c-d,
       a+b*2
  FROM t1
 WHERE c>d
    OR (e>a AND e<b)
    OR d>e
-- !query schema
struct<(b - c):int,(c - d):int,(a + (b * 2)):int>
-- !query output
-1	-1	680
-1	2	593
-1	2	665
-1	2	696
-1	2	NULL
-1	3	383
-2	-1	319
-3	-1	481
-3	1	634
-3	4	410
1	-2	742
1	1	578
2	-3	563
2	2	354
2	NULL	338
3	-2	400
3	NULL	443
NULL	3	NULL


-- !query
SELECT b-c,
       c-d,
       a+b*2
  FROM t1
 WHERE c>d
    OR (e>a AND e<b)
    OR d>e
 ORDER BY 2,1,3
-- !query schema
struct<(b - c):int,(c - d):int,(a + (b * 2)):int>
-- !query output
2	NULL	338
3	NULL	443
2	-3	563
1	-2	742
3	-2	400
-3	-1	481
-2	-1	319
-1	-1	680
-3	1	634
1	1	578
-1	2	NULL
-1	2	593
-1	2	665
-1	2	696
2	2	354
NULL	3	NULL
-1	3	383
-3	4	410


-- !query
SELECT c,
       a+b*2+c*3,
       a,
       d,
       a+b*2,
       b
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<c:int,((a + (b * 2)) + (c * 3)):int,a:int,d:int,(a + (b * 2)):int,b:int>
-- !query output
108	643	107	109	319	106
112	674	110	NULL	338	114
129	770	127	126	383	128
131	793	132	133	400	134
140	846	144	142	426	141
146	881	145	NULL	443	149
163	970	161	164	481	160
172	1027	171	173	511	170
182	1087	181	183	541	180
186	1121	187	189	563	188
193	1157	190	192	578	194
198	1187	199	196	593	197
203	NULL	NULL	201	NULL	202
213	1273	214	212	634	210
216	1296	218	217	648	215
222	1331	223	220	665	221
228	1364	226	229	680	227
232	1392	234	230	696	231
247	1483	246	249	742	248


-- !query
SELECT c,
       a+b*2+c*3,
       a,
       d,
       a+b*2,
       b
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 3,5,6,1,2
-- !query schema
struct<c:int,((a + (b * 2)) + (c * 3)):int,a:int,d:int,(a + (b * 2)):int,b:int>
-- !query output
203	NULL	NULL	201	NULL	202
108	643	107	109	319	106
112	674	110	NULL	338	114
129	770	127	126	383	128
131	793	132	133	400	134
140	846	144	142	426	141
146	881	145	NULL	443	149
163	970	161	164	481	160
172	1027	171	173	511	170
182	1087	181	183	541	180
186	1121	187	189	563	188
193	1157	190	192	578	194
198	1187	199	196	593	197
213	1273	214	212	634	210
216	1296	218	217	648	215
222	1331	223	220	665	221
228	1364	226	229	680	227
232	1392	234	230	696	231
247	1483	246	249	742	248


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       d,
       a
  FROM t1
-- !query schema
struct<(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,d:int,a:int>
-- !query output
-1	1410	426	142	144
-1	1700	511	173	171
-1	362	541	183	181
-1	NULL	NULL	165	167
-1	NULL	NULL	206	208
-2	1360	410	135	138
-2	436	648	217	218
-3	1020	NULL	101	NULL
-3	468	696	230	234
-3	NULL	NULL	201	NULL
-4	446	665	220	223
1	1280	383	126	127
1	380	578	192	190
1	398	593	196	199
1	428	634	212	214
2	1600	481	164	161
3	1340	400	133	132
4	1060	319	109	107
4	374	563	189	187
4	452	680	229	226
4	492	742	249	246
NULL	1140	338	NULL	110
NULL	1190	354	115	116
NULL	1220	367	NULL	123
NULL	1490	443	NULL	145
NULL	1500	451	NULL	151
NULL	1570	469	NULL	155
NULL	354	529	NULL	177
NULL	474	709	NULL	237
NULL	NULL	NULL	243	NULL


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       d,
       a
  FROM t1
 ORDER BY 5,1
-- !query schema
struct<(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,d:int,a:int>
-- !query output
NULL	NULL	NULL	243	NULL
-3	NULL	NULL	201	NULL
-3	1020	NULL	101	NULL
4	1060	319	109	107
NULL	1140	338	NULL	110
NULL	1190	354	115	116
NULL	1220	367	NULL	123
1	1280	383	126	127
3	1340	400	133	132
-2	1360	410	135	138
-1	1410	426	142	144
NULL	1490	443	NULL	145
NULL	1500	451	NULL	151
NULL	1570	469	NULL	155
2	1600	481	164	161
-1	NULL	NULL	165	167
-1	1700	511	173	171
NULL	354	529	NULL	177
-1	362	541	183	181
4	374	563	189	187
1	380	578	192	190
1	398	593	196	199
-1	NULL	NULL	206	208
1	428	634	212	214
-2	436	648	217	218
-4	446	665	220	223
4	452	680	229	226
-3	468	696	230	234
NULL	474	709	NULL	237
4	492	742	249	246


-- !query
SELECT abs(a),
       b-c,
       a-b,
       a,
       d-e
  FROM t1
-- !query schema
struct<abs(a):int,(b - c):int,(a - b):int,a:int,(d - e):int>
-- !query output
107	-2	1	107	4
110	2	-4	110	NULL
116	2	-3	116	NULL
123	-2	1	123	NULL
127	-1	-1	127	1
132	3	-2	132	3
138	-3	2	138	-2
144	1	3	144	-1
145	3	-4	145	NULL
151	-3	1	151	NULL
155	-2	-2	155	NULL
161	-3	1	161	2
167	NULL	NULL	167	-1
171	-2	1	171	-1
177	-3	1	177	NULL
181	-2	1	181	-1
187	2	-1	187	4
190	1	-4	190	1
199	-1	2	199	1
208	NULL	NULL	208	-1
214	-3	4	214	1
218	-1	3	218	-2
223	-1	2	223	-4
226	-1	-1	226	4
234	-1	3	234	-3
237	-3	1	237	NULL
246	1	-2	246	4
NULL	-1	NULL	NULL	-3
NULL	4	NULL	NULL	NULL
NULL	NULL	NULL	NULL	-3


-- !query
SELECT abs(a),
       b-c,
       a-b,
       a,
       d-e
  FROM t1
 ORDER BY 4,5,3
-- !query schema
struct<abs(a):int,(b - c):int,(a - b):int,a:int,(d - e):int>
-- !query output
NULL	4	NULL	NULL	NULL
NULL	-1	NULL	NULL	-3
NULL	NULL	NULL	NULL	-3
107	-2	1	107	4
110	2	-4	110	NULL
116	2	-3	116	NULL
123	-2	1	123	NULL
127	-1	-1	127	1
132	3	-2	132	3
138	-3	2	138	-2
144	1	3	144	-1
145	3	-4	145	NULL
151	-3	1	151	NULL
155	-2	-2	155	NULL
161	-3	1	161	2
167	NULL	NULL	167	-1
171	-2	1	171	-1
177	-3	1	177	NULL
181	-2	1	181	-1
187	2	-1	187	4
190	1	-4	190	1
199	-1	2	199	1
208	NULL	NULL	208	-1
214	-3	4	214	1
218	-1	3	218	-2
223	-1	2	223	-4
226	-1	-1	226	4
234	-1	3	234	-3
237	-3	1	237	NULL
246	1	-2	246	4


-- !query
SELECT b,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a)
  FROM t1
 ORDER BY 6,4,2,7,5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d-e,
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
-- !query schema
struct<abs((b - c)):int,(d - e):int,b:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1	1	128	1280	3	127	222
1	1	194	380	1	190	111
1	1	197	398	2	199	333
1	4	227	452	-1	226	222
1	4	248	492	-2	246	222
2	4	106	1060	-1	107	333
2	4	188	374	-3	187	222
3	1	210	428	1	214	444
3	2	160	1600	-1	161	333
3	3	134	1340	-2	132	222


-- !query
SELECT abs(b-c),
       d-e,
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
 ORDER BY 6,4,5,1,7,2,3
-- !query schema
struct<abs((b - c)):int,(d - e):int,b:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
2	4	106	1060	-1	107	333
1	1	128	1280	3	127	222
3	3	134	1340	-2	132	222
3	2	160	1600	-1	161	333
2	4	188	374	-3	187	222
1	1	194	380	1	190	111
1	1	197	398	2	199	333
3	1	210	428	1	214	444
1	4	227	452	-1	226	222
1	4	248	492	-2	246	222


-- !query
SELECT b-c,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 6,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       c-d,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
    OR a>b
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int,(a + (b * 2)):int>
-- !query output
109	1604	643	333	1079	-1	319
115	NULL	705	222	1165	2	354
126	1899	770	222	1274	3	383
133	1975	793	222	1325	-2	400
135	2052	827	333	1367	4	410
142	2129	846	444	1414	-2	426
164	2436	970	333	1626	-1	481
165	NULL	NULL	444	NULL	3	NULL
173	2589	1027	333	1719	-1	511
183	2739	1087	333	1819	-1	541
189	2802	1121	222	1877	-3	563
192	2880	1157	111	1925	1	578
196	2946	1187	333	1971	2	593
201	NULL	NULL	444	NULL	2	NULL
212	3176	1273	444	2121	1	634
217	3259	1296	444	2164	-1	648
220	3331	1331	333	2211	2	665
230	3477	1392	444	2312	2	696
243	NULL	NULL	444	NULL	-3	NULL
249	3704	1483	222	2479	-2	742
NULL	NULL	1066	333	NULL	NULL	529
NULL	NULL	1426	333	NULL	NULL	709
NULL	NULL	674	111	NULL	NULL	338
NULL	NULL	739	333	NULL	NULL	367
NULL	NULL	881	111	NULL	NULL	443
NULL	NULL	910	333	NULL	NULL	451


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       c-d,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
    OR a>b
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 5,6,4,3,1,7
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int,(a + (b * 2)):int>
-- !query output
NULL	NULL	674	111	NULL	NULL	338
NULL	NULL	881	111	NULL	NULL	443
NULL	NULL	739	333	NULL	NULL	367
NULL	NULL	910	333	NULL	NULL	451
NULL	NULL	1066	333	NULL	NULL	529
NULL	NULL	1426	333	NULL	NULL	709
243	NULL	NULL	444	NULL	-3	NULL
201	NULL	NULL	444	NULL	2	NULL
165	NULL	NULL	444	NULL	3	NULL
109	1604	643	333	1079	-1	319
115	NULL	705	222	1165	2	354
126	1899	770	222	1274	3	383
133	1975	793	222	1325	-2	400
135	2052	827	333	1367	4	410
142	2129	846	444	1414	-2	426
164	2436	970	333	1626	-1	481
173	2589	1027	333	1719	-1	511
183	2739	1087	333	1819	-1	541
189	2802	1121	222	1877	-3	563
192	2880	1157	111	1925	1	578
196	2946	1187	333	1971	2	593
212	3176	1273	444	2121	1	634
217	3259	1296	444	2164	-1	648
220	3331	1331	333	2211	2	665
230	3477	1392	444	2312	2	696
249	3704	1483	222	2479	-2	742


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       c-d,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
    OR a>b
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int,(a + (b * 2)):int>
-- !query output
109	1604	643	333	1079	-1	319
115	NULL	705	222	1165	2	354
126	1899	770	222	1274	3	383
133	1975	793	222	1325	-2	400
135	2052	827	333	1367	4	410
142	2129	846	444	1414	-2	426
164	2436	970	333	1626	-1	481
165	NULL	NULL	444	NULL	3	NULL
173	2589	1027	333	1719	-1	511
183	2739	1087	333	1819	-1	541
189	2802	1121	222	1877	-3	563
192	2880	1157	111	1925	1	578
196	2946	1187	333	1971	2	593
201	NULL	NULL	444	NULL	2	NULL
212	3176	1273	444	2121	1	634
217	3259	1296	444	2164	-1	648
220	3331	1331	333	2211	2	665
230	3477	1392	444	2312	2	696
243	NULL	NULL	444	NULL	-3	NULL
249	3704	1483	222	2479	-2	742
NULL	NULL	1066	333	NULL	NULL	529
NULL	NULL	1426	333	NULL	NULL	709
NULL	NULL	674	111	NULL	NULL	338
NULL	NULL	739	333	NULL	NULL	367
NULL	NULL	881	111	NULL	NULL	443
NULL	NULL	910	333	NULL	NULL	451


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       c-d,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
    OR a>b
 ORDER BY 5,6,1,2,7,3,4
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int,(a + (b * 2)):int>
-- !query output
NULL	NULL	674	111	NULL	NULL	338
NULL	NULL	739	333	NULL	NULL	367
NULL	NULL	881	111	NULL	NULL	443
NULL	NULL	910	333	NULL	NULL	451
NULL	NULL	1066	333	NULL	NULL	529
NULL	NULL	1426	333	NULL	NULL	709
243	NULL	NULL	444	NULL	-3	NULL
201	NULL	NULL	444	NULL	2	NULL
165	NULL	NULL	444	NULL	3	NULL
109	1604	643	333	1079	-1	319
115	NULL	705	222	1165	2	354
126	1899	770	222	1274	3	383
133	1975	793	222	1325	-2	400
135	2052	827	333	1367	4	410
142	2129	846	444	1414	-2	426
164	2436	970	333	1626	-1	481
173	2589	1027	333	1719	-1	511
183	2739	1087	333	1819	-1	541
189	2802	1121	222	1877	-3	563
192	2880	1157	111	1925	1	578
196	2946	1187	333	1971	2	593
212	3176	1273	444	2121	1	634
217	3259	1296	444	2164	-1	648
220	3331	1331	333	2211	2	665
230	3477	1392	444	2312	2	696
249	3704	1483	222	2479	-2	742


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	-4	1	192.0	578	380


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
   AND (e>a AND e<b)
 ORDER BY 1,5
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	-4	1	192.0	578	380


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	-4	1	192.0	578	380


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
 ORDER BY 5,4
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	-4	1	192.0	578	380


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>a AND e<b)
   AND d>e
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	-4	1	192.0	578	380


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>a AND e<b)
   AND d>e
   AND c BETWEEN b-2 AND d+2
 ORDER BY 4,3
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	-4	1	192.0	578	380


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
   AND d>e
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	-4	1	192.0	578	380


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
   AND d>e
 ORDER BY 5,2,3
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	-4	1	192.0	578	380


-- !query
SELECT a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-2
-3
-4
1
1
1
1
2
2
3
3
3
4
NULL


-- !query
SELECT a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
-4
-3
-2
-1
-1
1
1
1
1
2
2
3
3
3
4


-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 4,3,6,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3,
       c,
       b
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int,c:int,b:int>
-- !query output
107.0	643	108	106
127.0	770	129	128
132.0	793	131	134
137.0	827	139	136
142.0	846	140	141
162.0	970	163	160
172.0	1027	172	170
182.0	1087	182	180
187.0	1121	186	188
192.0	1157	193	194
197.0	1187	198	197
212.0	1273	213	210
217.0	1296	216	215
222.0	1331	222	221
227.0	1364	228	227
232.0	1392	232	231
247.0	1483	247	248
NULL	1066	179	176
NULL	1426	239	236
NULL	674	112	114
NULL	705	117	119
NULL	739	124	122
NULL	881	146	149
NULL	910	153	150
NULL	946	159	157
NULL	NULL	168	NULL
NULL	NULL	203	202
NULL	NULL	240	244
NULL	NULL	NULL	102
NULL	NULL	NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3,
       c,
       b
  FROM t1
 ORDER BY 3,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int,c:int,b:int>
-- !query output
NULL	NULL	NULL	102
NULL	NULL	NULL	NULL
107.0	643	108	106
NULL	674	112	114
NULL	705	117	119
NULL	739	124	122
127.0	770	129	128
132.0	793	131	134
137.0	827	139	136
142.0	846	140	141
NULL	881	146	149
NULL	910	153	150
NULL	946	159	157
162.0	970	163	160
NULL	NULL	168	NULL
172.0	1027	172	170
NULL	1066	179	176
182.0	1087	182	180
187.0	1121	186	188
192.0	1157	193	194
197.0	1187	198	197
NULL	NULL	203	202
212.0	1273	213	210
217.0	1296	216	215
222.0	1331	222	221
227.0	1364	228	227
232.0	1392	232	231
NULL	1426	239	236
NULL	NULL	240	244
247.0	1483	247	248


-- !query
SELECT d-e,
       abs(a),
       a,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c>d
-- !query schema
struct<(d - e):int,abs(a):int,a:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	144	144	1	846
-1	167	167	NULL	NULL
-1	171	171	2	1027
-1	181	181	2	1087
-2	138	138	3	827
-2	218	218	1	1296
-3	234	234	1	1392
-3	NULL	NULL	1	NULL
-4	223	223	1	1331
1	127	127	1	770
1	190	190	1	1157
1	199	199	1	1187
1	214	214	3	1273
2	161	161	3	970
3	132	132	3	793
4	107	107	2	643
4	187	187	2	1121
4	226	226	1	1364
4	246	246	1	1483
NULL	110	110	2	674
NULL	116	116	2	705
NULL	123	123	2	739
NULL	145	145	3	881
NULL	151	151	3	910
NULL	155	155	2	946
NULL	177	177	3	1066
NULL	237	237	3	1426
NULL	NULL	NULL	4	NULL


-- !query
SELECT d-e,
       abs(a),
       a,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c>d
 ORDER BY 5,2
-- !query schema
struct<(d - e):int,abs(a):int,a:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-3	NULL	NULL	1	NULL
NULL	NULL	NULL	4	NULL
-1	167	167	NULL	NULL
4	107	107	2	643
NULL	110	110	2	674
NULL	116	116	2	705
NULL	123	123	2	739
1	127	127	1	770
3	132	132	3	793
-2	138	138	3	827
-1	144	144	1	846
NULL	145	145	3	881
NULL	151	151	3	910
NULL	155	155	2	946
2	161	161	3	970
-1	171	171	2	1027
NULL	177	177	3	1066
-1	181	181	2	1087
4	187	187	2	1121
1	190	190	1	1157
1	199	199	1	1187
1	214	214	3	1273
-2	218	218	1	1296
-4	223	223	1	1331
4	226	226	1	1364
-3	234	234	1	1392
NULL	237	237	3	1426
4	246	246	1	1483


-- !query
SELECT abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<abs(a):int>
-- !query output
167
187
199
223
234
246
NULL
NULL


-- !query
SELECT abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<abs(a):int>
-- !query output
NULL
NULL
167
187
199
223
234
246


-- !query
SELECT abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs(a):int>
-- !query output
167
187
199
223
234
246
NULL
NULL


-- !query
SELECT abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<abs(a):int>
-- !query output
NULL
NULL
167
187
199
223
234
246


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       a,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,a:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	333	643	107	106	222	107.0
1274	222	770	127	128	111	127.0
1325	222	793	132	134	333	132.0
1414	444	846	144	141	555	142.0
1626	333	970	161	160	444	162.0
1719	333	1027	171	170	222	172.0
1819	333	1087	181	180	222	182.0
1877	222	1121	187	188	111	187.0
1925	111	1157	190	194	444	192.0
1971	333	1187	199	197	555	197.0
2121	444	1273	214	210	555	212.0
2164	444	1296	218	215	444	217.0
2211	333	1331	223	221	444	222.0
2280	222	1364	226	227	111	227.0
2312	444	1392	234	231	555	232.0
2479	222	1483	246	248	222	247.0
NULL	111	674	110	114	555	NULL
NULL	111	881	145	149	222	NULL
NULL	444	NULL	NULL	202	555	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       a,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 5,7,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,a:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	333	643	107	106	222	107.0
NULL	111	674	110	114	555	NULL
1274	222	770	127	128	111	127.0
1325	222	793	132	134	333	132.0
1414	444	846	144	141	555	142.0
NULL	111	881	145	149	222	NULL
1626	333	970	161	160	444	162.0
1719	333	1027	171	170	222	172.0
1819	333	1087	181	180	222	182.0
1877	222	1121	187	188	111	187.0
1925	111	1157	190	194	444	192.0
1971	333	1187	199	197	555	197.0
NULL	444	NULL	NULL	202	555	NULL
2121	444	1273	214	210	555	212.0
2164	444	1296	218	215	444	217.0
2211	333	1331	223	221	444	222.0
2280	222	1364	226	227	111	227.0
2312	444	1392	234	231	555	232.0
2479	222	1483	246	248	222	247.0


-- !query
SELECT abs(a),
       e,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       e,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 1,5,6,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
   AND a>b
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
 ORDER BY 3,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       a+b*2,
       abs(a),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
    OR a>b
-- !query schema
struct<abs((b - c)):int,(a + (b * 2)):int,abs(a):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1	383	127	1	222
1	426	144	-1	444
1	578	190	1	111
1	593	199	1	333
1	648	218	-2	444
1	665	223	-4	333
1	696	234	-3	444
1	742	246	4	222
1	NULL	NULL	-3	444
2	319	107	4	333
2	338	110	NULL	111
2	354	116	NULL	222
2	367	123	NULL	333
2	511	171	-1	333
2	541	181	-1	333
2	563	187	4	222
3	400	132	3	222
3	410	138	-2	333
3	443	145	NULL	111
3	451	151	NULL	333
3	481	161	2	333
3	529	177	NULL	333
3	634	214	1	444
3	709	237	NULL	333
4	NULL	NULL	NULL	444
NULL	NULL	167	-1	444


-- !query
SELECT abs(b-c),
       a+b*2,
       abs(a),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
    OR a>b
 ORDER BY 3,2,5,1
-- !query schema
struct<abs((b - c)):int,(a + (b * 2)):int,abs(a):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1	NULL	NULL	-3	444
4	NULL	NULL	NULL	444
2	319	107	4	333
2	338	110	NULL	111
2	354	116	NULL	222
2	367	123	NULL	333
1	383	127	1	222
3	400	132	3	222
3	410	138	-2	333
1	426	144	-1	444
3	443	145	NULL	111
3	451	151	NULL	333
3	481	161	2	333
NULL	NULL	167	-1	444
2	511	171	-1	333
3	529	177	NULL	333
2	541	181	-1	333
2	563	187	4	222
1	578	190	1	111
1	593	199	1	333
3	634	214	1	444
1	648	218	-2	444
1	665	223	-4	333
1	696	234	-3	444
3	709	237	NULL	333
1	742	246	4	222


-- !query
SELECT abs(b-c),
       a+b*2,
       abs(a),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
    OR (c<=d-2 OR c>=d+2)
    OR b>c
-- !query schema
struct<abs((b - c)):int,(a + (b * 2)):int,abs(a):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1	383	127	1	222
1	426	144	-1	444
1	578	190	1	111
1	593	199	1	333
1	648	218	-2	444
1	665	223	-4	333
1	696	234	-3	444
1	742	246	4	222
1	NULL	NULL	-3	444
2	319	107	4	333
2	338	110	NULL	111
2	354	116	NULL	222
2	367	123	NULL	333
2	511	171	-1	333
2	541	181	-1	333
2	563	187	4	222
3	400	132	3	222
3	410	138	-2	333
3	443	145	NULL	111
3	451	151	NULL	333
3	481	161	2	333
3	529	177	NULL	333
3	634	214	1	444
3	709	237	NULL	333
4	NULL	NULL	NULL	444
NULL	NULL	167	-1	444


-- !query
SELECT abs(b-c),
       a+b*2,
       abs(a),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
    OR (c<=d-2 OR c>=d+2)
    OR b>c
 ORDER BY 1,4
-- !query schema
struct<abs((b - c)):int,(a + (b * 2)):int,abs(a):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	NULL	167	-1	444
1	665	223	-4	333
1	696	234	-3	444
1	NULL	NULL	-3	444
1	648	218	-2	444
1	426	144	-1	444
1	578	190	1	111
1	383	127	1	222
1	593	199	1	333
1	742	246	4	222
2	338	110	NULL	111
2	354	116	NULL	222
2	367	123	NULL	333
2	511	171	-1	333
2	541	181	-1	333
2	319	107	4	333
2	563	187	4	222
3	709	237	NULL	333
3	443	145	NULL	111
3	529	177	NULL	333
3	451	151	NULL	333
3	410	138	-2	333
3	634	214	1	444
3	481	161	2	333
3	400	132	3	222
4	NULL	NULL	NULL	444


-- !query
SELECT abs(b-c),
       a+b*2,
       abs(a),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
    OR a>b
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<abs((b - c)):int,(a + (b * 2)):int,abs(a):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1	383	127	1	222
1	426	144	-1	444
1	578	190	1	111
1	593	199	1	333
1	648	218	-2	444
1	665	223	-4	333
1	696	234	-3	444
1	742	246	4	222
1	NULL	NULL	-3	444
2	319	107	4	333
2	338	110	NULL	111
2	354	116	NULL	222
2	367	123	NULL	333
2	511	171	-1	333
2	541	181	-1	333
2	563	187	4	222
3	400	132	3	222
3	410	138	-2	333
3	443	145	NULL	111
3	451	151	NULL	333
3	481	161	2	333
3	529	177	NULL	333
3	634	214	1	444
3	709	237	NULL	333
4	NULL	NULL	NULL	444
NULL	NULL	167	-1	444


-- !query
SELECT abs(b-c),
       a+b*2,
       abs(a),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
    OR a>b
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 3,4,1
-- !query schema
struct<abs((b - c)):int,(a + (b * 2)):int,abs(a):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
4	NULL	NULL	NULL	444
1	NULL	NULL	-3	444
2	319	107	4	333
2	338	110	NULL	111
2	354	116	NULL	222
2	367	123	NULL	333
1	383	127	1	222
3	400	132	3	222
3	410	138	-2	333
1	426	144	-1	444
3	443	145	NULL	111
3	451	151	NULL	333
3	481	161	2	333
NULL	NULL	167	-1	444
2	511	171	-1	333
3	529	177	NULL	333
2	541	181	-1	333
2	563	187	4	222
1	578	190	1	111
1	593	199	1	333
3	634	214	1	444
1	648	218	-2	444
1	665	223	-4	333
1	696	234	-3	444
3	709	237	NULL	333
1	742	246	4	222


-- !query
SELECT a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 3,1,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       a-b,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<a:int,((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a - b):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107	643	1079	1604	1	107.0
110	674	NULL	NULL	-4	NULL
116	705	1165	NULL	-3	NULL
123	739	NULL	NULL	1	NULL
127	770	1274	1899	-1	127.0
132	793	1325	1975	-2	132.0
138	827	1367	2052	2	137.0
144	846	1414	2129	3	142.0
145	881	NULL	NULL	-4	NULL
151	910	NULL	NULL	1	NULL
155	946	NULL	NULL	-2	NULL
161	970	1626	2436	1	162.0
167	NULL	NULL	NULL	NULL	NULL
171	1027	1719	2589	1	172.0
177	1066	NULL	NULL	1	NULL
181	1087	1819	2739	1	182.0
187	1121	1877	2802	-1	187.0
190	1157	1925	2880	-4	192.0
199	1187	1971	2946	2	197.0
208	NULL	NULL	NULL	NULL	NULL
214	1273	2121	3176	4	212.0
218	1296	2164	3259	3	217.0
223	1331	2211	3331	2	222.0
226	1364	2280	3405	-1	227.0
234	1392	2312	3477	3	232.0
237	1426	NULL	NULL	1	NULL
246	1483	2479	3704	-2	247.0
NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL


-- !query
SELECT a,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       a-b,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 3,2,6,1,5
-- !query schema
struct<a:int,((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a - b):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL
167	NULL	NULL	NULL	NULL	NULL
208	NULL	NULL	NULL	NULL	NULL
110	674	NULL	NULL	-4	NULL
123	739	NULL	NULL	1	NULL
145	881	NULL	NULL	-4	NULL
151	910	NULL	NULL	1	NULL
155	946	NULL	NULL	-2	NULL
177	1066	NULL	NULL	1	NULL
237	1426	NULL	NULL	1	NULL
107	643	1079	1604	1	107.0
116	705	1165	NULL	-3	NULL
127	770	1274	1899	-1	127.0
132	793	1325	1975	-2	132.0
138	827	1367	2052	2	137.0
144	846	1414	2129	3	142.0
161	970	1626	2436	1	162.0
171	1027	1719	2589	1	172.0
181	1087	1819	2739	1	182.0
187	1121	1877	2802	-1	187.0
190	1157	1925	2880	-4	192.0
199	1187	1971	2946	2	197.0
214	1273	2121	3176	4	212.0
218	1296	2164	3259	3	217.0
223	1331	2211	3331	2	222.0
226	1364	2280	3405	-1	227.0
234	1392	2312	3477	3	232.0
246	1483	2479	3704	-2	247.0


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND a>b
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       b-c,
       b
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,b:int>
-- !query output
319	107	333	1079	-2	106
338	110	111	NULL	2	114
354	116	222	1165	2	119
367	123	333	NULL	-2	122
383	127	222	1274	-1	128
400	132	222	1325	3	134
410	138	333	1367	-3	136
426	144	444	1414	1	141
443	145	111	NULL	3	149
451	151	333	NULL	-3	150
469	155	222	NULL	-2	157
481	161	333	1626	-3	160
511	171	333	1719	-2	170
529	177	333	NULL	-3	176
541	181	333	1819	-2	180
563	187	222	1877	2	188
578	190	111	1925	1	194
593	199	333	1971	-1	197
634	214	444	2121	-3	210
648	218	444	2164	-1	215
665	223	333	2211	-1	221
680	226	222	2280	-1	227
696	234	444	2312	-1	231
709	237	333	NULL	-3	236
742	246	222	2479	1	248
NULL	167	444	NULL	NULL	NULL
NULL	208	444	NULL	NULL	NULL
NULL	NULL	444	NULL	-1	202
NULL	NULL	444	NULL	4	244
NULL	NULL	444	NULL	NULL	102


-- !query
SELECT a+b*2,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       b-c,
       b
  FROM t1
 ORDER BY 6,3,5,2,1
-- !query schema
struct<(a + (b * 2)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,b:int>
-- !query output
NULL	167	444	NULL	NULL	NULL
NULL	208	444	NULL	NULL	NULL
NULL	NULL	444	NULL	NULL	102
319	107	333	1079	-2	106
338	110	111	NULL	2	114
354	116	222	1165	2	119
367	123	333	NULL	-2	122
383	127	222	1274	-1	128
400	132	222	1325	3	134
410	138	333	1367	-3	136
426	144	444	1414	1	141
443	145	111	NULL	3	149
451	151	333	NULL	-3	150
469	155	222	NULL	-2	157
481	161	333	1626	-3	160
511	171	333	1719	-2	170
529	177	333	NULL	-3	176
541	181	333	1819	-2	180
563	187	222	1877	2	188
578	190	111	1925	1	194
593	199	333	1971	-1	197
NULL	NULL	444	NULL	-1	202
634	214	444	2121	-3	210
648	218	444	2164	-1	215
665	223	333	2211	-1	221
680	226	222	2280	-1	227
696	234	444	2312	-1	231
709	237	333	NULL	-3	236
NULL	NULL	444	NULL	4	244
742	246	222	2479	1	248


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       c-d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d>e
   AND (e>c OR e<d)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,(c - d):int>
-- !query output
111	1274	127	222	383	3
111	1877	187	222	563	-3
222	2479	246	222	742	-2
333	1325	132	222	400	-2
555	1971	199	333	593	2


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       c-d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d>e
   AND (e>c OR e<d)
 ORDER BY 6,3,2,1,5
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,(c - d):int>
-- !query output
111	1877	187	222	563	-3
333	1325	132	222	400	-2
222	2479	246	222	742	-2
555	1971	199	333	593	2
111	1274	127	222	383	3


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
   AND d>e
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,(c - d):int>
-- !query output
111	1274	127	222	383	3
111	1877	187	222	563	-3
222	2479	246	222	742	-2
333	1325	132	222	400	-2
555	1971	199	333	593	2


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
   AND d>e
 ORDER BY 4,1,2,6
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,(c - d):int>
-- !query output
111	1274	127	222	383	3
111	1877	187	222	563	-3
222	2479	246	222	742	-2
333	1325	132	222	400	-2
555	1971	199	333	593	2


-- !query
SELECT b-c,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d>e
 ORDER BY 4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2,
       c-d,
       abs(b-c),
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE b>c
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,(c - d):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
110	338	NULL	2	674	-4
116	354	2	2	705	-3
132	400	-2	3	793	-2
144	426	-2	1	846	3
145	443	NULL	3	881	-4
187	563	-3	2	1121	-1
190	578	1	1	1157	-4
246	742	-2	1	1483	-2
NULL	NULL	-3	4	NULL	NULL


-- !query
SELECT abs(a),
       a+b*2,
       c-d,
       abs(b-c),
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE b>c
 ORDER BY 3,2
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,(c - d):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
110	338	NULL	2	674	-4
145	443	NULL	3	881	-4
NULL	NULL	-3	4	NULL	NULL
187	563	-3	2	1121	-1
132	400	-2	3	793	-2
144	426	-2	1	846	3
246	742	-2	1	1483	-2
190	578	1	1	1157	-4
116	354	2	2	705	-3


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>a AND e<b)
 ORDER BY 1,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
222
222
222
222
333
333
333
333
333
333
444
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
222
222
222
222
333
333
333
333
333
333
444
444
444
444
444


-- !query
SELECT a+b*2+c*3,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
 ORDER BY 4,1,6,3,5,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
 ORDER BY 4,3,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483
643
674
705
770
793
846
881
970
NULL
NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
NULL
643
674
705
770
793
846
881
970
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
    OR b>c
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483
643
674
705
770
793
846
881
970
NULL
NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
    OR b>c
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
NULL
643
674
705
770
793
846
881
970
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483
643
674
705
770
793
846
881
970
NULL
NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
NULL
643
674
705
770
793
846
881
970
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	333
110	111
116	222
123	333
127	222
132	222
138	333
144	444
145	111
151	333
155	222
161	333
167	444
171	333
177	333
181	333
187	222
190	111
199	333
208	444
214	444
218	444
223	333
226	222
234	444
237	333
246	222
NULL	444
NULL	444
NULL	444


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
110	111
145	111
190	111
116	222
127	222
132	222
155	222
187	222
226	222
246	222
107	333
123	333
138	333
151	333
161	333
171	333
177	333
181	333
199	333
223	333
237	333
NULL	444
NULL	444
NULL	444
144	444
167	444
208	444
214	444
218	444
234	444


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e,
       b
  FROM t1
 WHERE (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int,b:int>
-- !query output
127	222	111	1	128
132	222	333	3	134
144	444	555	-1	141
187	222	111	4	188
199	333	555	1	197
223	333	444	-4	221
234	444	555	-3	231
246	222	222	4	248
NULL	444	555	-3	202


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e,
       b
  FROM t1
 WHERE (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,1,3,4,5
-- !query schema
struct<a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int,b:int>
-- !query output
127	222	111	1	128
132	222	333	3	134
187	222	111	4	188
246	222	222	4	248
199	333	555	1	197
223	333	444	-4	221
NULL	444	555	-3	202
144	444	555	-1	141
234	444	555	-3	231


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e,
       b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
-- !query schema
struct<a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int,b:int>
-- !query output
127	222	111	1	128
132	222	333	3	134
144	444	555	-1	141
187	222	111	4	188
199	333	555	1	197
223	333	444	-4	221
234	444	555	-3	231
246	222	222	4	248
NULL	444	555	-3	202


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e,
       b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
 ORDER BY 4,3,2,5,1
-- !query schema
struct<a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int,b:int>
-- !query output
223	333	444	-4	221
NULL	444	555	-3	202
234	444	555	-3	231
144	444	555	-1	141
127	222	111	1	128
199	333	555	1	197
132	222	333	3	134
187	222	111	4	188
246	222	222	4	248


-- !query
SELECT c,
       (a+b+c+d+e)/5,
       c-d,
       a-b,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (a+b+c+d+e)/5,
       c-d,
       a-b,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a
  FROM t1
 ORDER BY 2,4,6,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3
  FROM t1
 ORDER BY 4,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
 ORDER BY 4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
 ORDER BY 3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 4,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       c-d,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
   AND a>b
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,e:int>
-- !query output
222	1027	-1	174
222	1087	-1	184
222	643	-1	105
444	970	-1	162


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       c-d,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
   AND a>b
 ORDER BY 3,2,1,4
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,e:int>
-- !query output
222	643	-1	105
444	970	-1	162
222	1027	-1	174
222	1087	-1	184


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       c-d,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,e:int>
-- !query output
222	1027	-1	174
222	1087	-1	184
222	643	-1	105
444	970	-1	162


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       c-d,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,4,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,e:int>
-- !query output
222	643	-1	105
444	970	-1	162
222	1027	-1	174
222	1087	-1	184


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       b,
       abs(a),
       d,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       b,
       abs(a),
       d,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,5,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       a+b*2+c*3+d*4,
       abs(a),
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       a+b*2+c*3+d*4,
       abs(a),
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
 ORDER BY 3,2,1,5,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       a+b*2+c*3+d*4,
       abs(a),
       a-b
  FROM t1
 WHERE b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       a+b*2+c*3+d*4,
       abs(a),
       a-b
  FROM t1
 WHERE b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
    OR b>c
 ORDER BY 5,4,3,6,2,1,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR (e>a AND e<b)
 ORDER BY 1,4,6,2,3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR (e>a AND e<b)
 ORDER BY 4,3,6,5,7,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
    OR b>c
 ORDER BY 5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       c-d,
       a
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,(c - d):int,a:int>
-- !query output
1079	-2	-1	107
1165	2	2	116
1274	-1	3	127
1325	3	-2	132
1367	-3	4	138
1414	1	-2	144
1626	-3	-1	161
1719	-2	-1	171
1819	-2	-1	181
1877	2	-3	187
1925	1	1	190
1971	-1	2	199
2121	-3	1	214
2164	-1	-1	218
2211	-1	2	223
2280	-1	-1	226
2312	-1	2	234
2479	1	-2	246
NULL	-1	2	NULL
NULL	2	NULL	110
NULL	3	NULL	145
NULL	4	-3	NULL
NULL	NULL	3	167


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       c-d,
       a
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 3,4,2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,(c - d):int,a:int>
-- !query output
NULL	2	NULL	110
NULL	3	NULL	145
NULL	4	-3	NULL
1877	2	-3	187
1325	3	-2	132
1414	1	-2	144
2479	1	-2	246
1079	-2	-1	107
1626	-3	-1	161
1719	-2	-1	171
1819	-2	-1	181
2164	-1	-1	218
2280	-1	-1	226
1925	1	1	190
2121	-3	1	214
NULL	-1	2	NULL
1165	2	2	116
1971	-1	2	199
2211	-1	2	223
2312	-1	2	234
1274	-1	3	127
NULL	NULL	3	167
1367	-3	4	138


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       c-d,
       a
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,(c - d):int,a:int>
-- !query output
1079	-2	-1	107
1165	2	2	116
1274	-1	3	127
1325	3	-2	132
1367	-3	4	138
1414	1	-2	144
1626	-3	-1	161
1719	-2	-1	171
1819	-2	-1	181
1877	2	-3	187
1925	1	1	190
1971	-1	2	199
2121	-3	1	214
2164	-1	-1	218
2211	-1	2	223
2280	-1	-1	226
2312	-1	2	234
2479	1	-2	246
NULL	-1	2	NULL
NULL	2	NULL	110
NULL	3	NULL	145
NULL	4	-3	NULL
NULL	NULL	3	167


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       c-d,
       a
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,3
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,(c - d):int,a:int>
-- !query output
NULL	NULL	3	167
1626	-3	-1	161
2121	-3	1	214
1367	-3	4	138
1719	-2	-1	171
1819	-2	-1	181
1079	-2	-1	107
2164	-1	-1	218
2280	-1	-1	226
2211	-1	2	223
1971	-1	2	199
2312	-1	2	234
NULL	-1	2	NULL
1274	-1	3	127
1414	1	-2	144
2479	1	-2	246
1925	1	1	190
NULL	2	NULL	110
1877	2	-3	187
1165	2	2	116
NULL	3	NULL	145
1325	3	-2	132
NULL	4	-3	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       c-d,
       a
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,(c - d):int,a:int>
-- !query output
1079	-2	-1	107
1165	2	2	116
1274	-1	3	127
1325	3	-2	132
1367	-3	4	138
1414	1	-2	144
1626	-3	-1	161
1719	-2	-1	171
1819	-2	-1	181
1877	2	-3	187
1925	1	1	190
1971	-1	2	199
2121	-3	1	214
2164	-1	-1	218
2211	-1	2	223
2280	-1	-1	226
2312	-1	2	234
2479	1	-2	246
NULL	-1	2	NULL
NULL	2	NULL	110
NULL	3	NULL	145
NULL	4	-3	NULL
NULL	NULL	3	167


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       c-d,
       a
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
 ORDER BY 3,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,(c - d):int,a:int>
-- !query output
NULL	2	NULL	110
NULL	3	NULL	145
1877	2	-3	187
NULL	4	-3	NULL
1414	1	-2	144
2479	1	-2	246
1325	3	-2	132
1626	-3	-1	161
1719	-2	-1	171
1819	-2	-1	181
1079	-2	-1	107
2164	-1	-1	218
2280	-1	-1	226
2121	-3	1	214
1925	1	1	190
2211	-1	2	223
1971	-1	2	199
2312	-1	2	234
NULL	-1	2	NULL
1165	2	2	116
NULL	NULL	3	167
1274	-1	3	127
1367	-3	4	138


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       c-d,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
    OR (e>c OR e<d)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,(c - d):int,a:int>
-- !query output
1079	-2	-1	107
1165	2	2	116
1274	-1	3	127
1325	3	-2	132
1367	-3	4	138
1414	1	-2	144
1626	-3	-1	161
1719	-2	-1	171
1819	-2	-1	181
1877	2	-3	187
1925	1	1	190
1971	-1	2	199
2121	-3	1	214
2164	-1	-1	218
2211	-1	2	223
2280	-1	-1	226
2312	-1	2	234
2479	1	-2	246
NULL	-1	2	NULL
NULL	2	NULL	110
NULL	3	NULL	145
NULL	4	-3	NULL
NULL	NULL	3	167


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       c-d,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
    OR (e>c OR e<d)
 ORDER BY 4,1,3
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,(c - d):int,a:int>
-- !query output
NULL	4	-3	NULL
NULL	-1	2	NULL
1079	-2	-1	107
NULL	2	NULL	110
1165	2	2	116
1274	-1	3	127
1325	3	-2	132
1367	-3	4	138
1414	1	-2	144
NULL	3	NULL	145
1626	-3	-1	161
NULL	NULL	3	167
1719	-2	-1	171
1819	-2	-1	181
1877	2	-3	187
1925	1	1	190
1971	-1	2	199
2121	-3	1	214
2164	-1	-1	218
2211	-1	2	223
2280	-1	-1	226
2312	-1	2	234
2479	1	-2	246


-- !query
SELECT abs(a),
       a,
       b-c
  FROM t1
-- !query schema
struct<abs(a):int,a:int,(b - c):int>
-- !query output
107	107	-2
110	110	2
116	116	2
123	123	-2
127	127	-1
132	132	3
138	138	-3
144	144	1
145	145	3
151	151	-3
155	155	-2
161	161	-3
167	167	NULL
171	171	-2
177	177	-3
181	181	-2
187	187	2
190	190	1
199	199	-1
208	208	NULL
214	214	-3
218	218	-1
223	223	-1
226	226	-1
234	234	-1
237	237	-3
246	246	1
NULL	NULL	-1
NULL	NULL	4
NULL	NULL	NULL


-- !query
SELECT abs(a),
       a,
       b-c
  FROM t1
 ORDER BY 1,3
-- !query schema
struct<abs(a):int,a:int,(b - c):int>
-- !query output
NULL	NULL	NULL
NULL	NULL	-1
NULL	NULL	4
107	107	-2
110	110	2
116	116	2
123	123	-2
127	127	-1
132	132	3
138	138	-3
144	144	1
145	145	3
151	151	-3
155	155	-2
161	161	-3
167	167	NULL
171	171	-2
177	177	-3
181	181	-2
187	187	2
190	190	1
199	199	-1
208	208	NULL
214	214	-3
218	218	-1
223	223	-1
226	226	-1
234	234	-1
237	237	-3
246	246	1


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       c,
       d,
       e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       c,
       d,
       e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 5,1,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       c,
       d,
       e
  FROM t1
 WHERE b>c
   AND (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       c,
       d,
       e
  FROM t1
 WHERE b>c
   AND (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 5,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       c,
       d,
       e
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       c,
       d,
       e
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       e,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       e,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c
  FROM t1
 ORDER BY 4,2,1,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       e
  FROM t1
 WHERE d>e
    OR a>b
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(b - c):int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int>
-- !query output
-1	127	111	-1	1280	1274	125
-1	199	555	2	398	1971	195
-1	218	444	3	436	2164	219
-1	223	444	2	446	2211	224
-1	226	111	-1	452	2280	225
-1	234	555	3	468	2312	233
-2	107	222	1	1060	1079	105
-2	123	222	1	1220	NULL	121
-2	171	222	1	1700	1719	174
-2	181	222	1	362	1819	184
-3	138	222	2	1360	1367	137
-3	151	555	1	1500	NULL	NULL
-3	161	444	1	1600	1626	162
-3	177	555	1	354	NULL	175
-3	214	555	4	428	2121	211
-3	237	444	1	474	NULL	238
1	144	555	3	1410	1414	143
1	190	444	-4	380	1925	191
1	246	222	-2	492	2479	245
2	187	111	-1	374	1877	185
3	132	333	-2	1340	1325	130


-- !query
SELECT b-c,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       e
  FROM t1
 WHERE d>e
    OR a>b
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 5,3
-- !query schema
struct<(b - c):int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int>
-- !query output
-3	177	555	1	354	NULL	175
-2	181	222	1	362	1819	184
2	187	111	-1	374	1877	185
1	190	444	-4	380	1925	191
-1	199	555	2	398	1971	195
-3	214	555	4	428	2121	211
-1	218	444	3	436	2164	219
-1	223	444	2	446	2211	224
-1	226	111	-1	452	2280	225
-1	234	555	3	468	2312	233
-3	237	444	1	474	NULL	238
1	246	222	-2	492	2479	245
-2	107	222	1	1060	1079	105
-2	123	222	1	1220	NULL	121
-1	127	111	-1	1280	1274	125
3	132	333	-2	1340	1325	130
-3	138	222	2	1360	1367	137
1	144	555	3	1410	1414	143
-3	151	555	1	1500	NULL	NULL
-3	161	444	1	1600	1626	162
-2	171	222	1	1700	1719	174


-- !query
SELECT b-c,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
    OR d>e
-- !query schema
struct<(b - c):int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int>
-- !query output
-1	127	111	-1	1280	1274	125
-1	199	555	2	398	1971	195
-1	218	444	3	436	2164	219
-1	223	444	2	446	2211	224
-1	226	111	-1	452	2280	225
-1	234	555	3	468	2312	233
-2	107	222	1	1060	1079	105
-2	123	222	1	1220	NULL	121
-2	171	222	1	1700	1719	174
-2	181	222	1	362	1819	184
-3	138	222	2	1360	1367	137
-3	151	555	1	1500	NULL	NULL
-3	161	444	1	1600	1626	162
-3	177	555	1	354	NULL	175
-3	214	555	4	428	2121	211
-3	237	444	1	474	NULL	238
1	144	555	3	1410	1414	143
1	190	444	-4	380	1925	191
1	246	222	-2	492	2479	245
2	187	111	-1	374	1877	185
3	132	333	-2	1340	1325	130


-- !query
SELECT b-c,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
    OR d>e
 ORDER BY 5,4
-- !query schema
struct<(b - c):int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int>
-- !query output
-3	177	555	1	354	NULL	175
-2	181	222	1	362	1819	184
2	187	111	-1	374	1877	185
1	190	444	-4	380	1925	191
-1	199	555	2	398	1971	195
-3	214	555	4	428	2121	211
-1	218	444	3	436	2164	219
-1	223	444	2	446	2211	224
-1	226	111	-1	452	2280	225
-1	234	555	3	468	2312	233
-3	237	444	1	474	NULL	238
1	246	222	-2	492	2479	245
-2	107	222	1	1060	1079	105
-2	123	222	1	1220	NULL	121
-1	127	111	-1	1280	1274	125
3	132	333	-2	1340	1325	130
-3	138	222	2	1360	1367	137
1	144	555	3	1410	1414	143
-3	151	555	1	1500	NULL	NULL
-3	161	444	1	1600	1626	162
-2	171	222	1	1700	1719	174


-- !query
SELECT b-c,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       e
  FROM t1
 WHERE a>b
    OR d>e
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(b - c):int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int>
-- !query output
-1	127	111	-1	1280	1274	125
-1	199	555	2	398	1971	195
-1	218	444	3	436	2164	219
-1	223	444	2	446	2211	224
-1	226	111	-1	452	2280	225
-1	234	555	3	468	2312	233
-2	107	222	1	1060	1079	105
-2	123	222	1	1220	NULL	121
-2	171	222	1	1700	1719	174
-2	181	222	1	362	1819	184
-3	138	222	2	1360	1367	137
-3	151	555	1	1500	NULL	NULL
-3	161	444	1	1600	1626	162
-3	177	555	1	354	NULL	175
-3	214	555	4	428	2121	211
-3	237	444	1	474	NULL	238
1	144	555	3	1410	1414	143
1	190	444	-4	380	1925	191
1	246	222	-2	492	2479	245
2	187	111	-1	374	1877	185
3	132	333	-2	1340	1325	130


-- !query
SELECT b-c,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       e
  FROM t1
 WHERE a>b
    OR d>e
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 6,1,3,5,7,4
-- !query schema
struct<(b - c):int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int>
-- !query output
-3	237	444	1	474	NULL	238
-3	177	555	1	354	NULL	175
-3	151	555	1	1500	NULL	NULL
-2	123	222	1	1220	NULL	121
-2	107	222	1	1060	1079	105
-1	127	111	-1	1280	1274	125
3	132	333	-2	1340	1325	130
-3	138	222	2	1360	1367	137
1	144	555	3	1410	1414	143
-3	161	444	1	1600	1626	162
-2	171	222	1	1700	1719	174
-2	181	222	1	362	1819	184
2	187	111	-1	374	1877	185
1	190	444	-4	380	1925	191
-1	199	555	2	398	1971	195
-3	214	555	4	428	2121	211
-1	218	444	3	436	2164	219
-1	223	444	2	446	2211	224
-1	226	111	-1	452	2280	225
-1	234	555	3	468	2312	233
1	246	222	-2	492	2479	245


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,4,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 3,2,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       b
  FROM t1
-- !query schema
struct<e:int,b:int>
-- !query output
104	102
105	106
113	114
121	122
125	128
130	134
137	136
143	141
147	149
158	157
162	160
166	NULL
174	170
175	176
184	180
185	188
191	194
195	197
204	202
207	NULL
211	210
219	215
224	221
225	227
233	231
238	236
245	248
NULL	119
NULL	150
NULL	244


-- !query
SELECT e,
       b
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<e:int,b:int>
-- !query output
NULL	119
NULL	150
NULL	244
104	102
105	106
113	114
121	122
125	128
130	134
137	136
143	141
147	149
158	157
162	160
166	NULL
174	170
175	176
184	180
185	188
191	194
195	197
204	202
207	NULL
211	210
219	215
224	221
225	227
233	231
238	236
245	248


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
 ORDER BY 5,1,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       c,
       d,
       a-b,
       a+b*2+c*3+d*4+e*5,
       b-c
  FROM t1
-- !query schema
struct<(c - d):int,c:int,d:int,(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int>
-- !query output
-1	108	109	1	1604	-2
-1	163	164	1	2436	-3
-1	172	173	1	2589	-2
-1	182	183	1	2739	-2
-1	216	217	3	3259	-1
-1	228	229	-1	3405	-1
-2	131	133	-2	1975	3
-2	140	142	3	2129	1
-2	247	249	-2	3704	1
-3	186	189	-1	2802	2
-3	240	243	NULL	NULL	4
1	193	192	-4	2880	1
1	213	212	4	3176	-3
2	117	115	-3	NULL	2
2	198	196	2	2946	-1
2	203	201	NULL	NULL	-1
2	222	220	2	3331	-1
2	232	230	3	3477	-1
3	129	126	-1	1899	-1
3	168	165	NULL	NULL	NULL
4	139	135	2	2052	-3
NULL	112	NULL	-4	NULL	2
NULL	124	NULL	1	NULL	-2
NULL	146	NULL	-4	NULL	3
NULL	153	NULL	1	NULL	-3
NULL	159	NULL	-2	NULL	-2
NULL	179	NULL	1	NULL	-3
NULL	239	NULL	1	NULL	-3
NULL	NULL	101	NULL	NULL	NULL
NULL	NULL	206	NULL	NULL	NULL


-- !query
SELECT c-d,
       c,
       d,
       a-b,
       a+b*2+c*3+d*4+e*5,
       b-c
  FROM t1
 ORDER BY 5,2,4,1
-- !query schema
struct<(c - d):int,c:int,d:int,(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int>
-- !query output
NULL	NULL	101	NULL	NULL	NULL
NULL	NULL	206	NULL	NULL	NULL
NULL	112	NULL	-4	NULL	2
2	117	115	-3	NULL	2
NULL	124	NULL	1	NULL	-2
NULL	146	NULL	-4	NULL	3
NULL	153	NULL	1	NULL	-3
NULL	159	NULL	-2	NULL	-2
3	168	165	NULL	NULL	NULL
NULL	179	NULL	1	NULL	-3
2	203	201	NULL	NULL	-1
NULL	239	NULL	1	NULL	-3
-3	240	243	NULL	NULL	4
-1	108	109	1	1604	-2
3	129	126	-1	1899	-1
-2	131	133	-2	1975	3
4	139	135	2	2052	-3
-2	140	142	3	2129	1
-1	163	164	1	2436	-3
-1	172	173	1	2589	-2
-1	182	183	1	2739	-2
-3	186	189	-1	2802	2
1	193	192	-4	2880	1
2	198	196	2	2946	-1
1	213	212	4	3176	-3
-1	216	217	3	3259	-1
2	222	220	2	3331	-1
-1	228	229	-1	3405	-1
2	232	230	3	3477	-1
-2	247	249	-2	3704	1


-- !query
SELECT a,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
    OR b>c
-- !query schema
struct<a:int,(b - c):int>
-- !query output
107	-2
110	2
116	2
123	-2
127	-1
132	3
138	-3
144	1
145	3
151	-3
161	-3
167	NULL
171	-2
177	-3
181	-2
187	2
190	1
199	-1
223	-1
226	-1
234	-1
237	-3
246	1
NULL	-1
NULL	4


-- !query
SELECT a,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
    OR b>c
 ORDER BY 1,2
-- !query schema
struct<a:int,(b - c):int>
-- !query output
NULL	-1
NULL	4
107	-2
110	2
116	2
123	-2
127	-1
132	3
138	-3
144	1
145	3
151	-3
161	-3
167	NULL
171	-2
177	-3
181	-2
187	2
190	1
199	-1
223	-1
226	-1
234	-1
237	-3
246	1


-- !query
SELECT a,
       b-c
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<a:int,(b - c):int>
-- !query output
107	-2
110	2
116	2
123	-2
127	-1
132	3
138	-3
144	1
145	3
151	-3
161	-3
167	NULL
171	-2
177	-3
181	-2
187	2
190	1
199	-1
223	-1
226	-1
234	-1
237	-3
246	1
NULL	-1
NULL	4


-- !query
SELECT a,
       b-c
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<a:int,(b - c):int>
-- !query output
167	NULL
138	-3
151	-3
161	-3
177	-3
237	-3
107	-2
123	-2
171	-2
181	-2
NULL	-1
127	-1
199	-1
223	-1
226	-1
234	-1
144	1
190	1
246	1
110	2
116	2
187	2
132	3
145	3
NULL	4


-- !query
SELECT a,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<a:int,(b - c):int>
-- !query output
107	-2
110	2
116	2
123	-2
127	-1
132	3
138	-3
144	1
145	3
151	-3
161	-3
167	NULL
171	-2
177	-3
181	-2
187	2
190	1
199	-1
223	-1
226	-1
234	-1
237	-3
246	1
NULL	-1
NULL	4


-- !query
SELECT a,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<a:int,(b - c):int>
-- !query output
NULL	-1
NULL	4
107	-2
110	2
116	2
123	-2
127	-1
132	3
138	-3
144	1
145	3
151	-3
161	-3
167	NULL
171	-2
177	-3
181	-2
187	2
190	1
199	-1
223	-1
226	-1
234	-1
237	-3
246	1


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int>
-- !query output
319	333	105
383	222	125


-- !query
SELECT a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,3,2
-- !query schema
struct<(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int>
-- !query output
319	333	105
383	222	125


-- !query
SELECT c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       c-d,
       d,
       abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,(c - d):int,d:int,abs((b - c)):int>
-- !query output
129	222	125	3	126	1
186	222	185	-3	189	2


-- !query
SELECT c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       c-d,
       d,
       abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,3
-- !query schema
struct<c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,(c - d):int,d:int,abs((b - c)):int>
-- !query output
129	222	125	3	126	1
186	222	185	-3	189	2


-- !query
SELECT c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       c-d,
       d,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,(c - d):int,d:int,abs((b - c)):int>
-- !query output
129	222	125	3	126	1
186	222	185	-3	189	2


-- !query
SELECT c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       c-d,
       d,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,6,1
-- !query schema
struct<c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,(c - d):int,d:int,abs((b - c)):int>
-- !query output
129	222	125	3	126	1
186	222	185	-3	189	2


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE (e>a AND e<b)
    OR d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
108	1060	1079	-1
112	1140	NULL	NULL
129	1280	1274	3
131	1340	1325	-2
140	1410	1414	-2
146	1490	NULL	NULL
163	1600	1626	-1
168	NULL	NULL	3
172	1700	1719	-1
182	362	1819	-1
186	374	1877	-3
193	380	1925	1
198	398	1971	2
203	NULL	NULL	2
213	428	2121	1
216	436	2164	-1
222	446	2211	2
228	452	2280	-1
232	468	2312	2
240	NULL	NULL	-3
247	492	2479	-2
NULL	1020	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE (e>a AND e<b)
    OR d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
 ORDER BY 2,4,3,1
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
NULL	NULL	NULL	NULL
240	NULL	NULL	-3
203	NULL	NULL	2
168	NULL	NULL	3
182	362	1819	-1
186	374	1877	-3
193	380	1925	1
198	398	1971	2
213	428	2121	1
216	436	2164	-1
222	446	2211	2
228	452	2280	-1
232	468	2312	2
247	492	2479	-2
NULL	1020	NULL	NULL
108	1060	1079	-1
112	1140	NULL	NULL
129	1280	1274	3
131	1340	1325	-2
140	1410	1414	-2
146	1490	NULL	NULL
163	1600	1626	-1
172	1700	1719	-1


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
108	1060	1079	-1
112	1140	NULL	NULL
129	1280	1274	3
131	1340	1325	-2
140	1410	1414	-2
146	1490	NULL	NULL
163	1600	1626	-1
168	NULL	NULL	3
172	1700	1719	-1
182	362	1819	-1
186	374	1877	-3
193	380	1925	1
198	398	1971	2
203	NULL	NULL	2
213	428	2121	1
216	436	2164	-1
222	446	2211	2
228	452	2280	-1
232	468	2312	2
240	NULL	NULL	-3
247	492	2479	-2
NULL	1020	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1,3,2
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
NULL	NULL	NULL	NULL
NULL	1020	NULL	NULL
108	1060	1079	-1
112	1140	NULL	NULL
129	1280	1274	3
131	1340	1325	-2
140	1410	1414	-2
146	1490	NULL	NULL
163	1600	1626	-1
168	NULL	NULL	3
172	1700	1719	-1
182	362	1819	-1
186	374	1877	-3
193	380	1925	1
198	398	1971	2
203	NULL	NULL	2
213	428	2121	1
216	436	2164	-1
222	446	2211	2
228	452	2280	-1
232	468	2312	2
240	NULL	NULL	-3
247	492	2479	-2


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
    OR (e>a AND e<b)
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
108	1060	1079	-1
112	1140	NULL	NULL
129	1280	1274	3
131	1340	1325	-2
140	1410	1414	-2
146	1490	NULL	NULL
163	1600	1626	-1
168	NULL	NULL	3
172	1700	1719	-1
182	362	1819	-1
186	374	1877	-3
193	380	1925	1
198	398	1971	2
203	NULL	NULL	2
213	428	2121	1
216	436	2164	-1
222	446	2211	2
228	452	2280	-1
232	468	2312	2
240	NULL	NULL	-3
247	492	2479	-2
NULL	1020	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
    OR (e>a AND e<b)
 ORDER BY 2,3,4,1
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
NULL	NULL	NULL	NULL
240	NULL	NULL	-3
203	NULL	NULL	2
168	NULL	NULL	3
182	362	1819	-1
186	374	1877	-3
193	380	1925	1
198	398	1971	2
213	428	2121	1
216	436	2164	-1
222	446	2211	2
228	452	2280	-1
232	468	2312	2
247	492	2479	-2
NULL	1020	NULL	NULL
108	1060	1079	-1
112	1140	NULL	NULL
129	1280	1274	3
131	1340	1325	-2
140	1410	1414	-2
146	1490	NULL	NULL
163	1600	1626	-1
172	1700	1719	-1


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
108	1060	1079	-1
112	1140	NULL	NULL
129	1280	1274	3
131	1340	1325	-2
140	1410	1414	-2
146	1490	NULL	NULL
163	1600	1626	-1
168	NULL	NULL	3
172	1700	1719	-1
182	362	1819	-1
186	374	1877	-3
193	380	1925	1
198	398	1971	2
203	NULL	NULL	2
213	428	2121	1
216	436	2164	-1
222	446	2211	2
228	452	2280	-1
232	468	2312	2
240	NULL	NULL	-3
247	492	2479	-2
NULL	1020	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 4,1
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
NULL	1020	NULL	NULL
NULL	NULL	NULL	NULL
112	1140	NULL	NULL
146	1490	NULL	NULL
186	374	1877	-3
240	NULL	NULL	-3
131	1340	1325	-2
140	1410	1414	-2
247	492	2479	-2
108	1060	1079	-1
163	1600	1626	-1
172	1700	1719	-1
182	362	1819	-1
216	436	2164	-1
228	452	2280	-1
193	380	1925	1
213	428	2121	1
198	398	1971	2
203	NULL	NULL	2
222	446	2211	2
232	468	2312	2
129	1280	1274	3
168	NULL	NULL	3


-- !query
SELECT b
  FROM t1
 WHERE d>e
    OR (e>c OR e<d)
-- !query schema
struct<b:int>
-- !query output
106
114
128
134
141
149
160
170
180
188
194
197
202
210
215
221
227
231
248


-- !query
SELECT b
  FROM t1
 WHERE d>e
    OR (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<b:int>
-- !query output
106
114
128
134
141
149
160
170
180
188
194
197
202
210
215
221
227
231
248


-- !query
SELECT b
  FROM t1
 WHERE (e>c OR e<d)
    OR d>e
-- !query schema
struct<b:int>
-- !query output
106
114
128
134
141
149
160
170
180
188
194
197
202
210
215
221
227
231
248


-- !query
SELECT b
  FROM t1
 WHERE (e>c OR e<d)
    OR d>e
 ORDER BY 1
-- !query schema
struct<b:int>
-- !query output
106
114
128
134
141
149
160
170
180
188
194
197
202
210
215
221
227
231
248


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
107	333	1060
110	111	1140
116	222	1190
123	333	1220
127	222	1280
132	222	1340
138	333	1360
144	444	1410
145	111	1490
151	333	1500
155	222	1570
161	333	1600
167	444	NULL
171	333	1700
177	333	354
181	333	362
187	222	374
190	111	380
199	333	398
208	444	NULL
214	444	428
218	444	436
223	333	446
226	222	452
234	444	468
237	333	474
246	222	492
NULL	444	1020
NULL	444	NULL
NULL	444	NULL


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 1,2,3
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	444	NULL
NULL	444	NULL
NULL	444	1020
107	333	1060
110	111	1140
116	222	1190
123	333	1220
127	222	1280
132	222	1340
138	333	1360
144	444	1410
145	111	1490
151	333	1500
155	222	1570
161	333	1600
167	444	NULL
171	333	1700
177	333	354
181	333	362
187	222	374
190	111	380
199	333	398
208	444	NULL
214	444	428
218	444	436
223	333	446
226	222	452
234	444	468
237	333	474
246	222	492


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       b-c,
       a
  FROM t1
 WHERE a>b
    OR c>d
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int>
-- !query output
108	1604	-2	107
117	NULL	2	116
124	NULL	-2	123
129	1899	-1	127
139	2052	-3	138
140	2129	1	144
153	NULL	-3	151
163	2436	-3	161
168	NULL	NULL	167
172	2589	-2	171
179	NULL	-3	177
182	2739	-2	181
193	2880	1	190
198	2946	-1	199
203	NULL	-1	NULL
213	3176	-3	214
216	3259	-1	218
222	3331	-1	223
232	3477	-1	234
239	NULL	-3	237


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       b-c,
       a
  FROM t1
 WHERE a>b
    OR c>d
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,3
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int>
-- !query output
203	NULL	-1	NULL
108	1604	-2	107
117	NULL	2	116
124	NULL	-2	123
129	1899	-1	127
139	2052	-3	138
140	2129	1	144
153	NULL	-3	151
163	2436	-3	161
168	NULL	NULL	167
172	2589	-2	171
179	NULL	-3	177
182	2739	-2	181
193	2880	1	190
198	2946	-1	199
213	3176	-3	214
216	3259	-1	218
222	3331	-1	223
232	3477	-1	234
239	NULL	-3	237


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       b-c,
       a
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
    OR c>d
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int>
-- !query output
108	1604	-2	107
117	NULL	2	116
124	NULL	-2	123
129	1899	-1	127
139	2052	-3	138
140	2129	1	144
153	NULL	-3	151
163	2436	-3	161
168	NULL	NULL	167
172	2589	-2	171
179	NULL	-3	177
182	2739	-2	181
193	2880	1	190
198	2946	-1	199
203	NULL	-1	NULL
213	3176	-3	214
216	3259	-1	218
222	3331	-1	223
232	3477	-1	234
239	NULL	-3	237


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       b-c,
       a
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
    OR c>d
 ORDER BY 3,1,4
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int>
-- !query output
168	NULL	NULL	167
139	2052	-3	138
153	NULL	-3	151
163	2436	-3	161
179	NULL	-3	177
213	3176	-3	214
239	NULL	-3	237
108	1604	-2	107
124	NULL	-2	123
172	2589	-2	171
182	2739	-2	181
129	1899	-1	127
198	2946	-1	199
203	NULL	-1	NULL
216	3259	-1	218
222	3331	-1	223
232	3477	-1	234
140	2129	1	144
193	2880	1	190
117	NULL	2	116


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       b-c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       b-c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       b-c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       b-c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
 ORDER BY 2,1,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1060	107.0
1140	NULL
1190	NULL
1220	NULL
1280	127.0
1340	132.0
1360	137.0
1410	142.0
1490	NULL
1500	NULL
1570	NULL
1600	162.0
1700	172.0
354	NULL
362	182.0
374	187.0
380	192.0
398	197.0
428	212.0
436	217.0
446	222.0
452	227.0
468	232.0
474	NULL
492	247.0
NULL	NULL
NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL
NULL	NULL
354	NULL
474	NULL
1140	NULL
1190	NULL
1220	NULL
1490	NULL
1500	NULL
1570	NULL
1060	107.0
1280	127.0
1340	132.0
1360	137.0
1410	142.0
1600	162.0
1700	172.0
362	182.0
374	187.0
380	192.0
398	197.0
428	212.0
436	217.0
446	222.0
452	227.0
468	232.0
492	247.0


-- !query
SELECT c-d,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       b
  FROM t1
-- !query schema
struct<(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int>
-- !query output
-1	1604	222	1079	106
-1	2436	444	1626	160
-1	2589	222	1719	170
-1	2739	222	1819	180
-1	3259	444	2164	215
-1	3405	111	2280	227
-2	1975	333	1325	134
-2	2129	555	1414	141
-2	3704	222	2479	248
-3	2802	111	1877	188
-3	NULL	555	NULL	244
1	2880	444	1925	194
1	3176	555	2121	210
2	2946	555	1971	197
2	3331	444	2211	221
2	3477	555	2312	231
2	NULL	222	1165	119
2	NULL	555	NULL	202
3	1899	111	1274	128
3	NULL	222	NULL	NULL
4	2052	222	1367	136
NULL	NULL	222	NULL	122
NULL	NULL	222	NULL	149
NULL	NULL	444	NULL	236
NULL	NULL	555	NULL	102
NULL	NULL	555	NULL	114
NULL	NULL	555	NULL	150
NULL	NULL	555	NULL	157
NULL	NULL	555	NULL	176
NULL	NULL	555	NULL	NULL


-- !query
SELECT c-d,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       b
  FROM t1
 ORDER BY 3,5,4,2,1
-- !query schema
struct<(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int>
-- !query output
3	1899	111	1274	128
-3	2802	111	1877	188
-1	3405	111	2280	227
3	NULL	222	NULL	NULL
-1	1604	222	1079	106
2	NULL	222	1165	119
NULL	NULL	222	NULL	122
4	2052	222	1367	136
NULL	NULL	222	NULL	149
-1	2589	222	1719	170
-1	2739	222	1819	180
-2	3704	222	2479	248
-2	1975	333	1325	134
-1	2436	444	1626	160
1	2880	444	1925	194
-1	3259	444	2164	215
2	3331	444	2211	221
NULL	NULL	444	NULL	236
NULL	NULL	555	NULL	NULL
NULL	NULL	555	NULL	102
NULL	NULL	555	NULL	114
-2	2129	555	1414	141
NULL	NULL	555	NULL	150
NULL	NULL	555	NULL	157
NULL	NULL	555	NULL	176
2	2946	555	1971	197
2	NULL	555	NULL	202
1	3176	555	2121	210
2	3477	555	2312	231
-3	NULL	555	NULL	244


-- !query
SELECT d-e,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(d - e):int,(c - d):int>
-- !query output
-1	-1
-1	-1
-2	-1
-3	2
-3	2
-4	2
1	1
1	1
1	2
2	-1
4	-1
4	-1
4	-2
4	-3


-- !query
SELECT d-e,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,1
-- !query schema
struct<(d - e):int,(c - d):int>
-- !query output
4	-3
4	-2
-2	-1
-1	-1
-1	-1
2	-1
4	-1
4	-1
1	1
1	1
-4	2
-3	2
-3	2
1	2


-- !query
SELECT d-e,
       c-d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
-- !query schema
struct<(d - e):int,(c - d):int>
-- !query output
-1	-1
-1	-1
-2	-1
-3	2
-3	2
-4	2
1	1
1	1
1	2
2	-1
4	-1
4	-1
4	-2
4	-3


-- !query
SELECT d-e,
       c-d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
 ORDER BY 2,1
-- !query schema
struct<(d - e):int,(c - d):int>
-- !query output
4	-3
4	-2
-2	-1
-1	-1
-1	-1
2	-1
4	-1
4	-1
1	1
1	1
-4	2
-3	2
-3	2
1	2


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       d-e,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
108	1604	4	107.0
124	NULL	NULL	NULL
129	1899	1	127.0
131	1975	3	132.0
153	NULL	NULL	NULL
163	2436	2	162.0
172	2589	-1	172.0
179	NULL	NULL	NULL
182	2739	-1	182.0
186	2802	4	187.0
193	2880	1	192.0
198	2946	1	197.0
213	3176	1	212.0
228	3405	4	227.0
239	NULL	NULL	NULL
247	3704	4	247.0


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       d-e,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
    OR (a>b-2 AND a<b+2)
 ORDER BY 3,1,2
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
124	NULL	NULL	NULL
153	NULL	NULL	NULL
179	NULL	NULL	NULL
239	NULL	NULL	NULL
172	2589	-1	172.0
182	2739	-1	182.0
129	1899	1	127.0
193	2880	1	192.0
198	2946	1	197.0
213	3176	1	212.0
163	2436	2	162.0
131	1975	3	132.0
108	1604	4	107.0
186	2802	4	187.0
228	3405	4	227.0
247	3704	4	247.0


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       d-e,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d>e
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
108	1604	4	107.0
124	NULL	NULL	NULL
129	1899	1	127.0
131	1975	3	132.0
153	NULL	NULL	NULL
163	2436	2	162.0
172	2589	-1	172.0
179	NULL	NULL	NULL
182	2739	-1	182.0
186	2802	4	187.0
193	2880	1	192.0
198	2946	1	197.0
213	3176	1	212.0
228	3405	4	227.0
239	NULL	NULL	NULL
247	3704	4	247.0


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       d-e,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d>e
 ORDER BY 3,1
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
124	NULL	NULL	NULL
153	NULL	NULL	NULL
179	NULL	NULL	NULL
239	NULL	NULL	NULL
172	2589	-1	172.0
182	2739	-1	182.0
129	1899	1	127.0
193	2880	1	192.0
198	2946	1	197.0
213	3176	1	212.0
163	2436	2	162.0
131	1975	3	132.0
108	1604	4	107.0
186	2802	4	187.0
228	3405	4	227.0
247	3704	4	247.0


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int>
-- !query output
109	1604	107.0	105	1060	107
126	1899	127.0	125	1280	127
133	1975	132.0	130	1340	132
164	2436	162.0	162	1600	161
189	2802	187.0	185	374	187
192	2880	192.0	191	380	190
196	2946	197.0	195	398	199
212	3176	212.0	211	428	214
229	3405	227.0	225	452	226
249	3704	247.0	245	492	246


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
 ORDER BY 5,6,3,4,1
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int>
-- !query output
189	2802	187.0	185	374	187
192	2880	192.0	191	380	190
196	2946	197.0	195	398	199
212	3176	212.0	211	428	214
229	3405	227.0	225	452	226
249	3704	247.0	245	492	246
109	1604	107.0	105	1060	107
126	1899	127.0	125	1280	127
133	1975	132.0	130	1340	132
164	2436	162.0	162	1600	161


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int>
-- !query output
109	1604	107.0	105	1060	107
126	1899	127.0	125	1280	127
133	1975	132.0	130	1340	132
164	2436	162.0	162	1600	161
189	2802	187.0	185	374	187
192	2880	192.0	191	380	190
196	2946	197.0	195	398	199
212	3176	212.0	211	428	214
229	3405	227.0	225	452	226
249	3704	247.0	245	492	246


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,5,4,3
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int>
-- !query output
109	1604	107.0	105	1060	107
126	1899	127.0	125	1280	127
133	1975	132.0	130	1340	132
164	2436	162.0	162	1600	161
189	2802	187.0	185	374	187
192	2880	192.0	191	380	190
196	2946	197.0	195	398	199
212	3176	212.0	211	428	214
229	3405	227.0	225	452	226
249	3704	247.0	245	492	246


-- !query
SELECT e,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(a),
       d,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(a),
       d,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
 ORDER BY 5,1,7,6,4,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(a),
       d,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(a),
       d,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,3,1,5,4,6,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 1,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
   AND (e>c OR e<d)
 ORDER BY 2,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
   AND a>b
 ORDER BY 2,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
   AND (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
   AND (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,1,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       c-d,
       a-b,
       a+b*2+c*3,
       abs(a)
  FROM t1
-- !query schema
struct<c:int,(c - d):int,(a - b):int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
108	-1	1	643	107
112	NULL	-4	674	110
117	2	-3	705	116
124	NULL	1	739	123
129	3	-1	770	127
131	-2	-2	793	132
139	4	2	827	138
140	-2	3	846	144
146	NULL	-4	881	145
153	NULL	1	910	151
159	NULL	-2	946	155
163	-1	1	970	161
168	3	NULL	NULL	167
172	-1	1	1027	171
179	NULL	1	1066	177
182	-1	1	1087	181
186	-3	-1	1121	187
193	1	-4	1157	190
198	2	2	1187	199
203	2	NULL	NULL	NULL
213	1	4	1273	214
216	-1	3	1296	218
222	2	2	1331	223
228	-1	-1	1364	226
232	2	3	1392	234
239	NULL	1	1426	237
240	-3	NULL	NULL	NULL
247	-2	-2	1483	246
NULL	NULL	NULL	NULL	208
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT c,
       c-d,
       a-b,
       a+b*2+c*3,
       abs(a)
  FROM t1
 ORDER BY 5,3,2,4,1
-- !query schema
struct<c:int,(c - d):int,(a - b):int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
NULL	NULL	NULL	NULL	NULL
240	-3	NULL	NULL	NULL
203	2	NULL	NULL	NULL
108	-1	1	643	107
112	NULL	-4	674	110
117	2	-3	705	116
124	NULL	1	739	123
129	3	-1	770	127
131	-2	-2	793	132
139	4	2	827	138
140	-2	3	846	144
146	NULL	-4	881	145
153	NULL	1	910	151
159	NULL	-2	946	155
163	-1	1	970	161
168	3	NULL	NULL	167
172	-1	1	1027	171
179	NULL	1	1066	177
182	-1	1	1087	181
186	-3	-1	1121	187
193	1	-4	1157	190
198	2	2	1187	199
NULL	NULL	NULL	NULL	208
213	1	4	1273	214
216	-1	3	1296	218
222	2	2	1331	223
228	-1	-1	1364	226
232	2	3	1392	234
239	NULL	1	1426	237
247	-2	-2	1483	246


-- !query
SELECT b,
       abs(a),
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       a,
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR d>e
-- !query schema
struct<b:int,abs(a):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,a:int,c:int>
-- !query output
102	NULL	NULL	1020	-3	NULL	NULL
106	107	319	1060	4	107	108
128	127	383	1280	1	127	129
134	132	400	1340	3	132	131
160	161	481	1600	2	161	163
170	171	511	1700	-1	171	172
180	181	541	362	-1	181	182
188	187	563	374	4	187	186
194	190	578	380	1	190	193
197	199	593	398	1	199	198
202	NULL	NULL	NULL	-3	NULL	203
210	214	634	428	1	214	213
215	218	648	436	-2	218	216
221	223	665	446	-4	223	222
227	226	680	452	4	226	228
231	234	696	468	-3	234	232
244	NULL	NULL	NULL	NULL	NULL	240
248	246	742	492	4	246	247
NULL	167	NULL	NULL	-1	167	168
NULL	208	NULL	NULL	-1	208	NULL


-- !query
SELECT b,
       abs(a),
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       a,
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR d>e
 ORDER BY 5,2,1,7,3,4
-- !query schema
struct<b:int,abs(a):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,a:int,c:int>
-- !query output
244	NULL	NULL	NULL	NULL	NULL	240
221	223	665	446	-4	223	222
102	NULL	NULL	1020	-3	NULL	NULL
202	NULL	NULL	NULL	-3	NULL	203
231	234	696	468	-3	234	232
215	218	648	436	-2	218	216
NULL	167	NULL	NULL	-1	167	168
170	171	511	1700	-1	171	172
180	181	541	362	-1	181	182
NULL	208	NULL	NULL	-1	208	NULL
128	127	383	1280	1	127	129
194	190	578	380	1	190	193
197	199	593	398	1	199	198
210	214	634	428	1	214	213
160	161	481	1600	2	161	163
134	132	400	1340	3	132	131
106	107	319	1060	4	107	108
188	187	563	374	4	187	186
227	226	680	452	4	226	228
248	246	742	492	4	246	247


-- !query
SELECT b,
       abs(a),
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       a,
       c
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<b:int,abs(a):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,a:int,c:int>
-- !query output
102	NULL	NULL	1020	-3	NULL	NULL
106	107	319	1060	4	107	108
128	127	383	1280	1	127	129
134	132	400	1340	3	132	131
160	161	481	1600	2	161	163
170	171	511	1700	-1	171	172
180	181	541	362	-1	181	182
188	187	563	374	4	187	186
194	190	578	380	1	190	193
197	199	593	398	1	199	198
202	NULL	NULL	NULL	-3	NULL	203
210	214	634	428	1	214	213
215	218	648	436	-2	218	216
221	223	665	446	-4	223	222
227	226	680	452	4	226	228
231	234	696	468	-3	234	232
244	NULL	NULL	NULL	NULL	NULL	240
248	246	742	492	4	246	247
NULL	167	NULL	NULL	-1	167	168
NULL	208	NULL	NULL	-1	208	NULL


-- !query
SELECT b,
       abs(a),
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       a,
       c
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 5,4
-- !query schema
struct<b:int,abs(a):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,a:int,c:int>
-- !query output
244	NULL	NULL	NULL	NULL	NULL	240
221	223	665	446	-4	223	222
202	NULL	NULL	NULL	-3	NULL	203
231	234	696	468	-3	234	232
102	NULL	NULL	1020	-3	NULL	NULL
215	218	648	436	-2	218	216
NULL	167	NULL	NULL	-1	167	168
NULL	208	NULL	NULL	-1	208	NULL
180	181	541	362	-1	181	182
170	171	511	1700	-1	171	172
194	190	578	380	1	190	193
197	199	593	398	1	199	198
210	214	634	428	1	214	213
128	127	383	1280	1	127	129
160	161	481	1600	2	161	163
134	132	400	1340	3	132	131
188	187	563	374	4	187	186
227	226	680	452	4	226	228
248	246	742	492	4	246	247
106	107	319	1060	4	107	108


-- !query
SELECT c-d
  FROM t1
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-2
-2
-3
-3
1
1
2
2
2
2
2
3
3
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT c-d
  FROM t1
 ORDER BY 1
-- !query schema
struct<(c - d):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
-3
-3
-2
-2
-2
-1
-1
-1
-1
-1
-1
1
1
2
2
2
2
2
3
3
4


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       a+b*2,
       a,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       a+b*2,
       a,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
 ORDER BY 1,4,2,6,7,3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE d>e
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int>
-- !query output
1060	105
1280	125
1340	130
1600	162
374	185
380	191
398	195
428	211
452	225
492	245


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE d>e
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int>
-- !query output
374	185
380	191
398	195
428	211
452	225
492	245
1060	105
1280	125
1340	130
1600	162


-- !query
SELECT (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
107.0	1
127.0	-1
132.0	-2
137.0	2
142.0	3
162.0	1
172.0	1
182.0	1
187.0	-1
192.0	-4
197.0	2
212.0	4
217.0	3
222.0	2
227.0	-1
232.0	3
247.0	-2
NULL	-2
NULL	-3
NULL	-4
NULL	-4
NULL	1
NULL	1
NULL	1
NULL	1
NULL	NULL
NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	-4
NULL	-4
NULL	-3
NULL	-2
NULL	1
NULL	1
NULL	1
NULL	1
107.0	1
127.0	-1
132.0	-2
137.0	2
142.0	3
162.0	1
172.0	1
182.0	1
187.0	-1
192.0	-4
197.0	2
212.0	4
217.0	3
222.0	2
227.0	-1
232.0	3
247.0	-2


-- !query
SELECT abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 ORDER BY 3,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
 ORDER BY 4,2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
 ORDER BY 4,1,2,3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
    OR c>d
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
    OR c>d
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,6,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
    OR c>d
 ORDER BY 1,4,6,5,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       d,
       a+b*2,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,d:int,(a + (b * 2)):int,(c - d):int>
-- !query output
-1	1899	127	126	383	3
-1	2946	199	196	593	2
-1	3259	218	217	648	-1
-1	3331	223	220	665	2
-1	3405	226	229	680	-1
-1	3477	234	230	696	2
-1	NULL	NULL	201	NULL	2
-2	1604	107	109	319	-1
-2	2589	171	173	511	-1
-2	2739	181	183	541	-1
-3	2436	161	164	481	-1
-3	3176	214	212	634	1
1	2129	144	142	426	-2
1	2880	190	192	578	1
1	3704	246	249	742	-2
2	2802	187	189	563	-3
2	NULL	110	NULL	338	NULL
3	1975	132	133	400	-2
3	NULL	145	NULL	443	NULL


-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       d,
       a+b*2,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 6,4,1,5,3
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,d:int,(a + (b * 2)):int,(c - d):int>
-- !query output
2	NULL	110	NULL	338	NULL
3	NULL	145	NULL	443	NULL
2	2802	187	189	563	-3
3	1975	132	133	400	-2
1	2129	144	142	426	-2
1	3704	246	249	742	-2
-2	1604	107	109	319	-1
-3	2436	161	164	481	-1
-2	2589	171	173	511	-1
-2	2739	181	183	541	-1
-1	3259	218	217	648	-1
-1	3405	226	229	680	-1
1	2880	190	192	578	1
-3	3176	214	212	634	1
-1	2946	199	196	593	2
-1	NULL	NULL	201	NULL	2
-1	3331	223	220	665	2
-1	3477	234	230	696	2
-1	1899	127	126	383	3


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int>
-- !query output
1060	333	108
1280	222	129


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int>
-- !query output
1060	333	108
1280	222	129


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e
  FROM t1
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-1
-1
-2
-2
-3
-3
-3
-4
1
1
1
1
2
3
4
4
4
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
-4
-3
-3
-3
-2
-2
-1
-1
-1
-1
-1
1
1
1
1
2
3
4
4
4
4


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       d,
       a+b*2+c*3+d*4,
       a+b*2
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       d,
       a+b*2+c*3+d*4,
       a+b*2
  FROM t1
 ORDER BY 1,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
107.0	643	319	1060	222
127.0	770	383	1280	111
132.0	793	400	1340	333
137.0	827	410	1360	222
142.0	846	426	1410	555
162.0	970	481	1600	444
172.0	1027	511	1700	222
182.0	1087	541	362	222
187.0	1121	563	374	111
192.0	1157	578	380	444
197.0	1187	593	398	555
212.0	1273	634	428	555
217.0	1296	648	436	444
222.0	1331	665	446	444
227.0	1364	680	452	111
232.0	1392	696	468	555
247.0	1483	742	492	222
NULL	1066	529	354	555
NULL	1426	709	474	444
NULL	674	338	1140	555
NULL	705	354	1190	222
NULL	739	367	1220	222
NULL	881	443	1490	222
NULL	910	451	1500	555
NULL	946	469	1570	555
NULL	NULL	NULL	1020	555
NULL	NULL	NULL	NULL	222
NULL	NULL	NULL	NULL	555
NULL	NULL	NULL	NULL	555
NULL	NULL	NULL	NULL	555


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 ORDER BY 5,2,1,3,4
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
127.0	770	383	1280	111
187.0	1121	563	374	111
227.0	1364	680	452	111
NULL	NULL	NULL	NULL	222
107.0	643	319	1060	222
NULL	705	354	1190	222
NULL	739	367	1220	222
137.0	827	410	1360	222
NULL	881	443	1490	222
172.0	1027	511	1700	222
182.0	1087	541	362	222
247.0	1483	742	492	222
132.0	793	400	1340	333
162.0	970	481	1600	444
192.0	1157	578	380	444
217.0	1296	648	436	444
222.0	1331	665	446	444
NULL	1426	709	474	444
NULL	NULL	NULL	NULL	555
NULL	NULL	NULL	NULL	555
NULL	NULL	NULL	NULL	555
NULL	NULL	NULL	1020	555
NULL	674	338	1140	555
142.0	846	426	1410	555
NULL	910	451	1500	555
NULL	946	469	1570	555
NULL	1066	529	354	555
197.0	1187	593	398	555
212.0	1273	634	428	555
232.0	1392	696	468	555


-- !query
SELECT b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       (a+b+c+d+e)/5,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a
  FROM t1
-- !query schema
struct<(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int>
-- !query output
-1	111	383	127.0	1	222	127
-1	111	680	227.0	4	222	226
-1	444	648	217.0	-2	444	218
-1	444	665	222.0	-4	333	223
-1	555	593	197.0	1	333	199
-1	555	696	232.0	-3	444	234
-1	555	NULL	NULL	-3	444	NULL
-2	222	319	107.0	4	333	107
-2	222	367	NULL	NULL	333	123
-2	222	511	172.0	-1	333	171
-2	222	541	182.0	-1	333	181
-2	555	469	NULL	NULL	222	155
-3	222	410	137.0	-2	333	138
-3	444	481	162.0	2	333	161
-3	444	709	NULL	NULL	333	237
-3	555	451	NULL	NULL	333	151
-3	555	529	NULL	NULL	333	177
-3	555	634	212.0	1	444	214
1	222	742	247.0	4	222	246
1	444	578	192.0	1	111	190
1	555	426	142.0	-1	444	144
2	111	563	187.0	4	222	187
2	222	354	NULL	NULL	222	116
2	555	338	NULL	NULL	111	110
3	222	443	NULL	NULL	111	145
3	333	400	132.0	3	222	132
4	555	NULL	NULL	NULL	444	NULL
NULL	222	NULL	NULL	-1	444	167
NULL	555	NULL	NULL	-1	444	208
NULL	555	NULL	NULL	-3	444	NULL


-- !query
SELECT b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       (a+b+c+d+e)/5,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a
  FROM t1
 ORDER BY 4,5,2
-- !query schema
struct<(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int>
-- !query output
2	222	354	NULL	NULL	222	116
-2	222	367	NULL	NULL	333	123
3	222	443	NULL	NULL	111	145
-3	444	709	NULL	NULL	333	237
2	555	338	NULL	NULL	111	110
-2	555	469	NULL	NULL	222	155
-3	555	529	NULL	NULL	333	177
4	555	NULL	NULL	NULL	444	NULL
-3	555	451	NULL	NULL	333	151
-1	555	NULL	NULL	-3	444	NULL
NULL	555	NULL	NULL	-3	444	NULL
NULL	222	NULL	NULL	-1	444	167
NULL	555	NULL	NULL	-1	444	208
-2	222	319	107.0	4	333	107
-1	111	383	127.0	1	222	127
3	333	400	132.0	3	222	132
-3	222	410	137.0	-2	333	138
1	555	426	142.0	-1	444	144
-3	444	481	162.0	2	333	161
-2	222	511	172.0	-1	333	171
-2	222	541	182.0	-1	333	181
2	111	563	187.0	4	222	187
1	444	578	192.0	1	111	190
-1	555	593	197.0	1	333	199
-3	555	634	212.0	1	444	214
-1	444	648	217.0	-2	444	218
-1	444	665	222.0	-4	333	223
-1	111	680	227.0	4	222	226
-1	555	696	232.0	-3	444	234
1	222	742	247.0	4	222	246


-- !query
SELECT a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<a:int>
-- !query output
107
123
127
151
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246
NULL
NULL
NULL


-- !query
SELECT a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<a:int>
-- !query output
NULL
NULL
NULL
107
123
127
151
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246


-- !query
SELECT a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<a:int>
-- !query output
107
123
127
151
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246
NULL
NULL
NULL


-- !query
SELECT a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<a:int>
-- !query output
NULL
NULL
NULL
107
123
127
151
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246


-- !query
SELECT a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<a:int>
-- !query output
107
123
127
151
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246
NULL
NULL
NULL


-- !query
SELECT a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<a:int>
-- !query output
NULL
NULL
NULL
107
123
127
151
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1604	1060
1899	1280
1975	1340
2052	1360
2129	1410
2436	1600
2589	1700
2739	362
2802	374
2880	380
2946	398
3176	428
3259	436
3331	446
3405	452
3477	468
3704	492
NULL	1140
NULL	1190
NULL	1220
NULL	1490
NULL	1500
NULL	1570
NULL	354
NULL	474
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL
NULL	NULL
NULL	354
NULL	474
NULL	1140
NULL	1190
NULL	1220
NULL	1490
NULL	1500
NULL	1570
1604	1060
1899	1280
1975	1340
2052	1360
2129	1410
2436	1600
2589	1700
2739	362
2802	374
2880	380
2946	398
3176	428
3259	436
3331	446
3405	452
3477	468
3704	492


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR a>b
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1604	1060
1899	1280
1975	1340
2052	1360
2129	1410
2436	1600
2589	1700
2739	362
2802	374
2880	380
2946	398
3176	428
3259	436
3331	446
3405	452
3477	468
3704	492
NULL	1140
NULL	1190
NULL	1220
NULL	1490
NULL	1500
NULL	1570
NULL	354
NULL	474
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR a>b
 ORDER BY 2,1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL
NULL	NULL
NULL	354
2739	362
2802	374
2880	380
2946	398
3176	428
3259	436
3331	446
3405	452
3477	468
NULL	474
3704	492
1604	1060
NULL	1140
NULL	1190
NULL	1220
1899	1280
1975	1340
2052	1360
2129	1410
NULL	1490
NULL	1500
NULL	1570
2436	1600
2589	1700


-- !query
SELECT c-d,
       abs(a),
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
    OR (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(c - d):int,abs(a):int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	107	106	333	1079
-1	161	160	333	1626
-1	171	170	333	1719
-1	181	180	333	1819
-1	218	215	444	2164
-1	226	227	222	2280
-2	132	134	222	1325
-2	144	141	444	1414
-2	246	248	222	2479
-3	187	188	222	1877
-3	NULL	244	444	NULL
1	190	194	111	1925
1	214	210	444	2121
2	199	197	333	1971
2	223	221	333	2211
2	234	231	444	2312
2	NULL	202	444	NULL
3	127	128	222	1274
3	167	NULL	444	NULL
NULL	110	114	111	NULL
NULL	145	149	111	NULL
NULL	208	NULL	444	NULL
NULL	NULL	102	444	NULL


-- !query
SELECT c-d,
       abs(a),
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
    OR (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 3,2,1
-- !query schema
struct<(c - d):int,abs(a):int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
3	167	NULL	444	NULL
NULL	208	NULL	444	NULL
NULL	NULL	102	444	NULL
-1	107	106	333	1079
NULL	110	114	111	NULL
3	127	128	222	1274
-2	132	134	222	1325
-2	144	141	444	1414
NULL	145	149	111	NULL
-1	161	160	333	1626
-1	171	170	333	1719
-1	181	180	333	1819
-3	187	188	222	1877
1	190	194	111	1925
2	199	197	333	1971
2	NULL	202	444	NULL
1	214	210	444	2121
-1	218	215	444	2164
2	223	221	333	2211
-1	226	227	222	2280
2	234	231	444	2312
-3	NULL	244	444	NULL
-2	246	248	222	2479


-- !query
SELECT c-d,
       abs(a),
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR d>e
    OR (e>c OR e<d)
-- !query schema
struct<(c - d):int,abs(a):int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	107	106	333	1079
-1	161	160	333	1626
-1	171	170	333	1719
-1	181	180	333	1819
-1	218	215	444	2164
-1	226	227	222	2280
-2	132	134	222	1325
-2	144	141	444	1414
-2	246	248	222	2479
-3	187	188	222	1877
-3	NULL	244	444	NULL
1	190	194	111	1925
1	214	210	444	2121
2	199	197	333	1971
2	223	221	333	2211
2	234	231	444	2312
2	NULL	202	444	NULL
3	127	128	222	1274
3	167	NULL	444	NULL
NULL	110	114	111	NULL
NULL	145	149	111	NULL
NULL	208	NULL	444	NULL
NULL	NULL	102	444	NULL


-- !query
SELECT c-d,
       abs(a),
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR d>e
    OR (e>c OR e<d)
 ORDER BY 3,1
-- !query schema
struct<(c - d):int,abs(a):int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	208	NULL	444	NULL
3	167	NULL	444	NULL
NULL	NULL	102	444	NULL
-1	107	106	333	1079
NULL	110	114	111	NULL
3	127	128	222	1274
-2	132	134	222	1325
-2	144	141	444	1414
NULL	145	149	111	NULL
-1	161	160	333	1626
-1	171	170	333	1719
-1	181	180	333	1819
-3	187	188	222	1877
1	190	194	111	1925
2	199	197	333	1971
2	NULL	202	444	NULL
1	214	210	444	2121
-1	218	215	444	2164
2	223	221	333	2211
-1	226	227	222	2280
2	234	231	444	2312
-3	NULL	244	444	NULL
-2	246	248	222	2479


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       d,
       a+b*2+c*3,
       a-b,
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,d:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1020	-3	101	NULL	NULL	NULL	NULL
1060	4	109	643	1	-1	1079
1220	NULL	NULL	739	1	NULL	NULL
1280	1	126	770	-1	3	1274
1500	NULL	NULL	910	1	NULL	NULL
1600	2	164	970	1	-1	1626
1700	-1	173	1027	1	-1	1719
354	NULL	NULL	1066	1	NULL	NULL
362	-1	183	1087	1	-1	1819
374	4	189	1121	-1	-3	1877
380	1	192	1157	-4	1	1925
398	1	196	1187	2	2	1971
428	1	212	1273	4	1	2121
436	-2	217	1296	3	-1	2164
446	-4	220	1331	2	2	2211
452	4	229	1364	-1	-1	2280
468	-3	230	1392	3	2	2312
474	NULL	NULL	1426	1	NULL	NULL
492	4	249	1483	-2	-2	2479
NULL	-1	165	NULL	NULL	3	NULL
NULL	-1	206	NULL	NULL	NULL	NULL
NULL	-3	201	NULL	NULL	2	NULL
NULL	NULL	243	NULL	NULL	-3	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       d,
       a+b*2+c*3,
       a-b,
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
 ORDER BY 5,7,2,6,1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,d:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	NULL	243	NULL	NULL	-3	NULL
1020	-3	101	NULL	NULL	NULL	NULL
NULL	-3	201	NULL	NULL	2	NULL
NULL	-1	206	NULL	NULL	NULL	NULL
NULL	-1	165	NULL	NULL	3	NULL
380	1	192	1157	-4	1	1925
492	4	249	1483	-2	-2	2479
1280	1	126	770	-1	3	1274
374	4	189	1121	-1	-3	1877
452	4	229	1364	-1	-1	2280
354	NULL	NULL	1066	1	NULL	NULL
474	NULL	NULL	1426	1	NULL	NULL
1220	NULL	NULL	739	1	NULL	NULL
1500	NULL	NULL	910	1	NULL	NULL
1060	4	109	643	1	-1	1079
1600	2	164	970	1	-1	1626
1700	-1	173	1027	1	-1	1719
362	-1	183	1087	1	-1	1819
398	1	196	1187	2	2	1971
446	-4	220	1331	2	2	2211
436	-2	217	1296	3	-1	2164
468	-3	230	1392	3	2	2312
428	1	212	1273	4	1	2121


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       d,
       a+b*2+c*3,
       a-b,
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,d:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1020	-3	101	NULL	NULL	NULL	NULL
1060	4	109	643	1	-1	1079
1220	NULL	NULL	739	1	NULL	NULL
1280	1	126	770	-1	3	1274
1500	NULL	NULL	910	1	NULL	NULL
1600	2	164	970	1	-1	1626
1700	-1	173	1027	1	-1	1719
354	NULL	NULL	1066	1	NULL	NULL
362	-1	183	1087	1	-1	1819
374	4	189	1121	-1	-3	1877
380	1	192	1157	-4	1	1925
398	1	196	1187	2	2	1971
428	1	212	1273	4	1	2121
436	-2	217	1296	3	-1	2164
446	-4	220	1331	2	2	2211
452	4	229	1364	-1	-1	2280
468	-3	230	1392	3	2	2312
474	NULL	NULL	1426	1	NULL	NULL
492	4	249	1483	-2	-2	2479
NULL	-1	165	NULL	NULL	3	NULL
NULL	-1	206	NULL	NULL	NULL	NULL
NULL	-3	201	NULL	NULL	2	NULL
NULL	NULL	243	NULL	NULL	-3	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       d,
       a+b*2+c*3,
       a-b,
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 6,2,1,7
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,d:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
354	NULL	NULL	1066	1	NULL	NULL
474	NULL	NULL	1426	1	NULL	NULL
1220	NULL	NULL	739	1	NULL	NULL
1500	NULL	NULL	910	1	NULL	NULL
1020	-3	101	NULL	NULL	NULL	NULL
NULL	-1	206	NULL	NULL	NULL	NULL
NULL	NULL	243	NULL	NULL	-3	NULL
374	4	189	1121	-1	-3	1877
492	4	249	1483	-2	-2	2479
436	-2	217	1296	3	-1	2164
362	-1	183	1087	1	-1	1819
1700	-1	173	1027	1	-1	1719
1600	2	164	970	1	-1	1626
452	4	229	1364	-1	-1	2280
1060	4	109	643	1	-1	1079
380	1	192	1157	-4	1	1925
428	1	212	1273	4	1	2121
446	-4	220	1331	2	2	2211
NULL	-3	201	NULL	NULL	2	NULL
468	-3	230	1392	3	2	2312
398	1	196	1187	2	2	1971
NULL	-1	165	NULL	NULL	3	NULL
1280	1	126	770	-1	3	1274


-- !query
SELECT d,
       (a+b+c+d+e)/5,
       e,
       a+b*2+c*3
  FROM t1
 WHERE c>d
   AND (e>a AND e<b)
-- !query schema
struct<d:int,(((((a + b) + c) + d) + e) / 5):double,e:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
192	192.0	191	1157


-- !query
SELECT d,
       (a+b+c+d+e)/5,
       e,
       a+b*2+c*3
  FROM t1
 WHERE c>d
   AND (e>a AND e<b)
 ORDER BY 3,1,4
-- !query schema
struct<d:int,(((((a + b) + c) + d) + e) / 5):double,e:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
192	192.0	191	1157


-- !query
SELECT e,
       c-d,
       (a+b+c+d+e)/5,
       abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<e:int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
104	NULL	NULL	NULL	1020	NULL	444
105	-1	107.0	2	1060	1604	333
113	NULL	NULL	2	1140	NULL	111
121	NULL	NULL	2	1220	NULL	333
125	3	127.0	1	1280	1899	222
130	-2	132.0	3	1340	1975	222
137	4	137.0	3	1360	2052	333
143	-2	142.0	1	1410	2129	444
147	NULL	NULL	3	1490	NULL	111
158	NULL	NULL	2	1570	NULL	222
162	-1	162.0	3	1600	2436	333
166	3	NULL	NULL	NULL	NULL	444
174	-1	172.0	2	1700	2589	333
175	NULL	NULL	3	354	NULL	333
184	-1	182.0	2	362	2739	333
185	-3	187.0	2	374	2802	222
191	1	192.0	1	380	2880	111
195	2	197.0	1	398	2946	333
204	2	NULL	1	NULL	NULL	444
207	NULL	NULL	NULL	NULL	NULL	444
211	1	212.0	3	428	3176	444
219	-1	217.0	1	436	3259	444
224	2	222.0	1	446	3331	333
225	-1	227.0	1	452	3405	222
233	2	232.0	1	468	3477	444
238	NULL	NULL	3	474	NULL	333
245	-2	247.0	1	492	3704	222
NULL	-3	NULL	4	NULL	NULL	444
NULL	2	NULL	2	1190	NULL	222
NULL	NULL	NULL	3	1500	NULL	333


-- !query
SELECT e,
       c-d,
       (a+b+c+d+e)/5,
       abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 2,5,3,6,7,4,1
-- !query schema
struct<e:int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
207	NULL	NULL	NULL	NULL	NULL	444
175	NULL	NULL	3	354	NULL	333
238	NULL	NULL	3	474	NULL	333
104	NULL	NULL	NULL	1020	NULL	444
113	NULL	NULL	2	1140	NULL	111
121	NULL	NULL	2	1220	NULL	333
147	NULL	NULL	3	1490	NULL	111
NULL	NULL	NULL	3	1500	NULL	333
158	NULL	NULL	2	1570	NULL	222
NULL	-3	NULL	4	NULL	NULL	444
185	-3	187.0	2	374	2802	222
245	-2	247.0	1	492	3704	222
130	-2	132.0	3	1340	1975	222
143	-2	142.0	1	1410	2129	444
184	-1	182.0	2	362	2739	333
219	-1	217.0	1	436	3259	444
225	-1	227.0	1	452	3405	222
105	-1	107.0	2	1060	1604	333
162	-1	162.0	3	1600	2436	333
174	-1	172.0	2	1700	2589	333
191	1	192.0	1	380	2880	111
211	1	212.0	3	428	3176	444
204	2	NULL	1	NULL	NULL	444
195	2	197.0	1	398	2946	333
224	2	222.0	1	446	3331	333
233	2	232.0	1	468	3477	444
NULL	2	NULL	2	1190	NULL	222
166	3	NULL	NULL	NULL	NULL	444
125	3	127.0	1	1280	1899	222
137	4	137.0	3	1360	2052	333


-- !query
SELECT c-d,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       d-e
  FROM t1
-- !query schema
struct<(c - d):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int>
-- !query output
-1	108	1060	1079	4
-1	163	1600	1626	2
-1	172	1700	1719	-1
-1	182	362	1819	-1
-1	216	436	2164	-2
-1	228	452	2280	4
-2	131	1340	1325	3
-2	140	1410	1414	-1
-2	247	492	2479	4
-3	186	374	1877	4
-3	240	NULL	NULL	NULL
1	193	380	1925	1
1	213	428	2121	1
2	117	1190	1165	NULL
2	198	398	1971	1
2	203	NULL	NULL	-3
2	222	446	2211	-4
2	232	468	2312	-3
3	129	1280	1274	1
3	168	NULL	NULL	-1
4	139	1360	1367	-2
NULL	112	1140	NULL	NULL
NULL	124	1220	NULL	NULL
NULL	146	1490	NULL	NULL
NULL	153	1500	NULL	NULL
NULL	159	1570	NULL	NULL
NULL	179	354	NULL	NULL
NULL	239	474	NULL	NULL
NULL	NULL	1020	NULL	-3
NULL	NULL	NULL	NULL	-1


-- !query
SELECT c-d,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       d-e
  FROM t1
 ORDER BY 5,3,2,4
-- !query schema
struct<(c - d):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int>
-- !query output
-3	240	NULL	NULL	NULL
NULL	179	354	NULL	NULL
NULL	239	474	NULL	NULL
NULL	112	1140	NULL	NULL
2	117	1190	1165	NULL
NULL	124	1220	NULL	NULL
NULL	146	1490	NULL	NULL
NULL	153	1500	NULL	NULL
NULL	159	1570	NULL	NULL
2	222	446	2211	-4
2	203	NULL	NULL	-3
2	232	468	2312	-3
NULL	NULL	1020	NULL	-3
-1	216	436	2164	-2
4	139	1360	1367	-2
NULL	NULL	NULL	NULL	-1
3	168	NULL	NULL	-1
-1	182	362	1819	-1
-2	140	1410	1414	-1
-1	172	1700	1719	-1
1	193	380	1925	1
2	198	398	1971	1
1	213	428	2121	1
3	129	1280	1274	1
-1	163	1600	1626	2
-2	131	1340	1325	3
-3	186	374	1877	4
-1	228	452	2280	4
-2	247	492	2479	4
-1	108	1060	1079	4


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       b-c
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs(a):int,(b - c):int>
-- !query output
1020	NULL	NULL
1060	107	-2
1140	110	2
1190	116	2
1220	123	-2
1280	127	-1
1340	132	3
1360	138	-3
1410	144	1
1490	145	3
1500	151	-3
1570	155	-2
1600	161	-3
1700	171	-2
354	177	-3
362	181	-2
374	187	2
380	190	1
398	199	-1
428	214	-3
436	218	-1
446	223	-1
452	226	-1
468	234	-1
474	237	-3
492	246	1
NULL	167	NULL
NULL	208	NULL
NULL	NULL	-1
NULL	NULL	4


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       b-c
  FROM t1
 ORDER BY 3,1,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs(a):int,(b - c):int>
-- !query output
NULL	167	NULL
NULL	208	NULL
1020	NULL	NULL
354	177	-3
428	214	-3
474	237	-3
1360	138	-3
1500	151	-3
1600	161	-3
362	181	-2
1060	107	-2
1220	123	-2
1570	155	-2
1700	171	-2
NULL	NULL	-1
398	199	-1
436	218	-1
446	223	-1
452	226	-1
468	234	-1
1280	127	-1
380	190	1
492	246	1
1410	144	1
374	187	2
1140	110	2
1190	116	2
1340	132	3
1490	145	3
NULL	NULL	4


-- !query
SELECT c-d,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(c - d):int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	-1	222	3405	1364
-1	-2	333	1604	643
-1	-3	333	2436	970
-2	1	222	3704	1483
-2	3	222	1975	793
-3	2	222	2802	1121
1	-3	444	3176	1273
1	1	111	2880	1157
2	-1	333	2946	1187
3	-1	222	1899	770


-- !query
SELECT c-d,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,1,5,3
-- !query schema
struct<(c - d):int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	-2	333	1604	643
3	-1	222	1899	770
-2	3	222	1975	793
-1	-3	333	2436	970
-3	2	222	2802	1121
1	1	111	2880	1157
2	-1	333	2946	1187
1	-3	444	3176	1273
-1	-1	222	3405	1364
-2	1	222	3704	1483


-- !query
SELECT c-d,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<(c - d):int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	-1	222	3405	1364
-1	-2	333	1604	643
-1	-3	333	2436	970
-2	1	222	3704	1483
-2	3	222	1975	793
-3	2	222	2802	1121
1	-3	444	3176	1273
1	1	111	2880	1157
2	-1	333	2946	1187
3	-1	222	1899	770


-- !query
SELECT c-d,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
 ORDER BY 1,4,3,2
-- !query schema
struct<(c - d):int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-3	2	222	2802	1121
-2	3	222	1975	793
-2	1	222	3704	1483
-1	-2	333	1604	643
-1	-3	333	2436	970
-1	-1	222	3405	1364
1	1	111	2880	1157
1	-3	444	3176	1273
2	-1	333	2946	1187
3	-1	222	1899	770


-- !query
SELECT c,
       abs(b-c),
       c-d
  FROM t1
-- !query schema
struct<c:int,abs((b - c)):int,(c - d):int>
-- !query output
108	2	-1
112	2	NULL
117	2	2
124	2	NULL
129	1	3
131	3	-2
139	3	4
140	1	-2
146	3	NULL
153	3	NULL
159	2	NULL
163	3	-1
168	NULL	3
172	2	-1
179	3	NULL
182	2	-1
186	2	-3
193	1	1
198	1	2
203	1	2
213	3	1
216	1	-1
222	1	2
228	1	-1
232	1	2
239	3	NULL
240	4	-3
247	1	-2
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT c,
       abs(b-c),
       c-d
  FROM t1
 ORDER BY 3,2,1
-- !query schema
struct<c:int,abs((b - c)):int,(c - d):int>
-- !query output
NULL	NULL	NULL
NULL	NULL	NULL
112	2	NULL
124	2	NULL
159	2	NULL
146	3	NULL
153	3	NULL
179	3	NULL
239	3	NULL
186	2	-3
240	4	-3
140	1	-2
247	1	-2
131	3	-2
216	1	-1
228	1	-1
108	2	-1
172	2	-1
182	2	-1
163	3	-1
193	1	1
213	3	1
198	1	2
203	1	2
222	1	2
232	1	2
117	2	2
168	NULL	3
129	1	3
139	3	4


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4,
       a+b*2,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c>d
-- !query schema
struct<abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1	1274	383	127.0
1	1925	578	192.0
1	1971	593	197.0
1	2211	665	222.0
1	2312	696	232.0
1	NULL	NULL	NULL
2	1165	354	NULL
3	1367	410	137.0
3	2121	634	212.0
NULL	NULL	NULL	NULL


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4,
       a+b*2,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c>d
 ORDER BY 2,1,4,3
-- !query schema
struct<abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	NULL	NULL
1	NULL	NULL	NULL
2	1165	354	NULL
1	1274	383	127.0
3	1367	410	137.0
1	1925	578	192.0
1	1971	593	197.0
3	2121	634	212.0
1	2211	665	222.0
1	2312	696	232.0


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<c:int>
-- !query output
108
163
172
182
186
228


-- !query
SELECT c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<c:int>
-- !query output
108
163
172
182
186
228


-- !query
SELECT c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<c:int>
-- !query output
108
163
172
182
186
228


-- !query
SELECT c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<c:int>
-- !query output
108
163
172
182
186
228


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 4,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 3,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 4,1,3,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,5,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e,
       b-c,
       a
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int,(b - c):int,a:int>
-- !query output
1027	222	-1	-2	171
1066	555	NULL	-3	177
1087	222	-1	-2	181
1121	111	4	2	187
1157	444	1	1	190
1187	555	1	-1	199
1273	555	1	-3	214
1296	444	-2	-1	218
1331	444	-4	-1	223
1364	111	4	-1	226
1392	555	-3	-1	234
1426	444	NULL	-3	237
1483	222	4	1	246
643	222	4	-2	107
674	555	NULL	2	110
705	222	NULL	2	116
739	222	NULL	-2	123
770	111	1	-1	127
793	333	3	3	132
827	222	-2	-3	138
846	555	-1	1	144
881	222	NULL	3	145
910	555	NULL	-3	151
946	555	NULL	-2	155
970	444	2	-3	161
NULL	222	-1	NULL	167
NULL	555	-1	NULL	208
NULL	555	-3	-1	NULL
NULL	555	-3	NULL	NULL
NULL	555	NULL	4	NULL


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e,
       b-c,
       a
  FROM t1
 ORDER BY 1,2,4,3,5
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int,(b - c):int,a:int>
-- !query output
NULL	222	-1	NULL	167
NULL	555	-3	NULL	NULL
NULL	555	-1	NULL	208
NULL	555	-3	-1	NULL
NULL	555	NULL	4	NULL
643	222	4	-2	107
674	555	NULL	2	110
705	222	NULL	2	116
739	222	NULL	-2	123
770	111	1	-1	127
793	333	3	3	132
827	222	-2	-3	138
846	555	-1	1	144
881	222	NULL	3	145
910	555	NULL	-3	151
946	555	NULL	-2	155
970	444	2	-3	161
1027	222	-1	-2	171
1066	555	NULL	-3	177
1087	222	-1	-2	181
1121	111	4	2	187
1157	444	1	1	190
1187	555	1	-1	199
1273	555	1	-3	214
1296	444	-2	-1	218
1331	444	-4	-1	223
1364	111	4	-1	226
1392	555	-3	-1	234
1426	444	NULL	-3	237
1483	222	4	1	246


-- !query
SELECT e,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 1,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 6,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       a
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
    OR a>b
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,a:int>
-- !query output
111	-1	127
111	-1	187
111	-1	226
222	-2	246
222	1	107
222	1	123
222	1	171
222	1	181
222	2	138
333	-2	132
444	-4	190
444	1	161
444	1	237
444	2	223
444	3	218
555	1	151
555	1	177
555	2	199
555	3	144
555	3	234
555	4	214


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       a
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
    OR a>b
 ORDER BY 2,3,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,a:int>
-- !query output
444	-4	190
333	-2	132
222	-2	246
111	-1	127
111	-1	187
111	-1	226
222	1	107
222	1	123
555	1	151
444	1	161
222	1	171
555	1	177
222	1	181
444	1	237
222	2	138
555	2	199
444	2	223
555	3	144
444	3	218
555	3	234
555	4	214


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
    OR a>b
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,a:int>
-- !query output
111	-1	127
111	-1	187
111	-1	226
222	-2	246
222	1	107
222	1	123
222	1	171
222	1	181
222	2	138
333	-2	132
444	-4	190
444	1	161
444	1	237
444	2	223
444	3	218
555	1	151
555	1	177
555	2	199
555	3	144
555	3	234
555	4	214


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
    OR a>b
 ORDER BY 1,2,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,a:int>
-- !query output
111	-1	127
111	-1	187
111	-1	226
222	-2	246
222	1	107
222	1	123
222	1	171
222	1	181
222	2	138
333	-2	132
444	-4	190
444	1	161
444	1	237
444	2	223
444	3	218
555	1	151
555	1	177
555	2	199
555	3	144
555	3	234
555	4	214


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
    OR d>e
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,a:int>
-- !query output
111	-1	127
111	-1	187
111	-1	226
222	-2	246
222	1	107
222	1	123
222	1	171
222	1	181
222	2	138
333	-2	132
444	-4	190
444	1	161
444	1	237
444	2	223
444	3	218
555	1	151
555	1	177
555	2	199
555	3	144
555	3	234
555	4	214


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
    OR d>e
 ORDER BY 2,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,a:int>
-- !query output
444	-4	190
333	-2	132
222	-2	246
111	-1	127
111	-1	187
111	-1	226
222	1	107
222	1	123
555	1	151
444	1	161
222	1	171
555	1	177
222	1	181
444	1	237
222	2	138
555	2	199
444	2	223
555	3	144
444	3	218
555	3	234
555	4	214


-- !query
SELECT a+b*2+c*3,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1121	2	2802
1187	-1	2946
1331	-1	3331
1392	-1	3477
1483	1	3704
705	2	NULL
770	-1	1899
793	3	1975
827	-3	2052
846	1	2129
NULL	-1	NULL
NULL	4	NULL
NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3,
       b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 1,2,3
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	NULL	NULL
NULL	-1	NULL
NULL	4	NULL
705	2	NULL
770	-1	1899
793	3	1975
827	-3	2052
846	1	2129
1121	2	2802
1187	-1	2946
1331	-1	3331
1392	-1	3477
1483	1	3704


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       a+b*2,
       b-c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       a+b*2,
       b-c
  FROM t1
 ORDER BY 3,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c)
  FROM t1
 WHERE d>e
   AND b>c
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int>
-- !query output
187.0	2


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c)
  FROM t1
 WHERE d>e
   AND b>c
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int>
-- !query output
187.0	2


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
   AND d>e
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int>
-- !query output
187.0	2


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
   AND d>e
 ORDER BY 1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int>
-- !query output
187.0	2


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c)
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND b>c
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int>
-- !query output
187.0	2


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c)
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND b>c
 ORDER BY 1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int>
-- !query output
187.0	2


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
107	1604	107.0	1
127	1899	127.0	-1


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,4,3
-- !query schema
struct<abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
107	1604	107.0	1
127	1899	127.0	-1


-- !query
SELECT d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
   AND (e>c OR e<d)
-- !query schema
struct<d:int>
-- !query output
109
126
133
164
189
192
196
212
229
249


-- !query
SELECT d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
   AND (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<d:int>
-- !query output
109
126
133
164
189
192
196
212
229
249


-- !query
SELECT d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
   AND d>e
-- !query schema
struct<d:int>
-- !query output
109
126
133
164
189
192
196
212
229
249


-- !query
SELECT d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
   AND d>e
 ORDER BY 1
-- !query schema
struct<d:int>
-- !query output
109
126
133
164
189
192
196
212
229
249


-- !query
SELECT d
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<d:int>
-- !query output
109
126
133
164
189
192
196
212
229
249


-- !query
SELECT d
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<d:int>
-- !query output
109
126
133
164
189
192
196
212
229
249


-- !query
SELECT d
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
-- !query schema
struct<d:int>
-- !query output
109
126
133
164
189
192
196
212
229
249


-- !query
SELECT d
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<d:int>
-- !query output
109
126
133
164
189
192
196
212
229
249


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a-b,
       b-c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,(b - c):int>
-- !query output
1060	1079	1	-2
1140	NULL	-4	2
1280	1274	-1	-1
1340	1325	-2	3
1410	1414	3	1
1490	NULL	-4	3
1600	1626	1	-3
1700	1719	1	-2
362	1819	1	-2
374	1877	-1	2
380	1925	-4	1
398	1971	2	-1
428	2121	4	-3
436	2164	3	-1
446	2211	2	-1
452	2280	-1	-1
468	2312	3	-1
492	2479	-2	1
NULL	NULL	NULL	-1


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a-b,
       b-c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
 ORDER BY 1,4,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,(b - c):int>
-- !query output
NULL	NULL	NULL	-1
362	1819	1	-2
374	1877	-1	2
380	1925	-4	1
398	1971	2	-1
428	2121	4	-3
436	2164	3	-1
446	2211	2	-1
452	2280	-1	-1
468	2312	3	-1
492	2479	-2	1
1060	1079	1	-2
1140	NULL	-4	2
1280	1274	-1	-1
1340	1325	-2	3
1410	1414	3	1
1490	NULL	-4	3
1600	1626	1	-3
1700	1719	1	-2


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a-b,
       b-c
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,(b - c):int>
-- !query output
1060	1079	1	-2
1140	NULL	-4	2
1280	1274	-1	-1
1340	1325	-2	3
1410	1414	3	1
1490	NULL	-4	3
1600	1626	1	-3
1700	1719	1	-2
362	1819	1	-2
374	1877	-1	2
380	1925	-4	1
398	1971	2	-1
428	2121	4	-3
436	2164	3	-1
446	2211	2	-1
452	2280	-1	-1
468	2312	3	-1
492	2479	-2	1
NULL	NULL	NULL	-1


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a-b,
       b-c
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,4
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,(b - c):int>
-- !query output
NULL	NULL	NULL	-1
380	1925	-4	1
1140	NULL	-4	2
1490	NULL	-4	3
492	2479	-2	1
1340	1325	-2	3
452	2280	-1	-1
1280	1274	-1	-1
374	1877	-1	2
1600	1626	1	-3
1700	1719	1	-2
362	1819	1	-2
1060	1079	1	-2
446	2211	2	-1
398	1971	2	-1
436	2164	3	-1
468	2312	3	-1
1410	1414	3	1
428	2121	4	-3


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
   AND a>b
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
846	1414


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
   AND a>b
 ORDER BY 1,2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
846	1414


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
   AND b>c
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
846	1414


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
   AND b>c
 ORDER BY 2,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
846	1414


-- !query
SELECT d,
       abs(b-c)
  FROM t1
-- !query schema
struct<d:int,abs((b - c)):int>
-- !query output
101	NULL
109	2
115	2
126	1
133	3
135	3
142	1
164	3
165	NULL
173	2
183	2
189	2
192	1
196	1
201	1
206	NULL
212	3
217	1
220	1
229	1
230	1
243	4
249	1
NULL	2
NULL	2
NULL	2
NULL	3
NULL	3
NULL	3
NULL	3


-- !query
SELECT d,
       abs(b-c)
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<d:int,abs((b - c)):int>
-- !query output
101	NULL
165	NULL
206	NULL
126	1
142	1
192	1
196	1
201	1
217	1
220	1
229	1
230	1
249	1
NULL	2
NULL	2
NULL	2
109	2
115	2
173	2
183	2
189	2
NULL	3
NULL	3
NULL	3
NULL	3
133	3
135	3
164	3
212	3
243	4


-- !query
SELECT abs(b-c),
       c-d,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       a-b,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<abs((b - c)):int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int,(a - b):int,e:int>
-- !query output
1	-1	3259	436	-1	3	219
1	-1	3405	452	-1	-1	225
1	-2	2129	1410	1	3	143
1	-2	3704	492	1	-2	245
1	1	2880	380	1	-4	191
1	2	2946	398	-1	2	195
1	2	3331	446	-1	2	224
1	2	3477	468	-1	3	233
1	2	NULL	NULL	-1	NULL	204
2	-1	1604	1060	-2	1	105
2	-1	2589	1700	-2	1	174
2	-1	2739	362	-2	1	184
2	-3	2802	374	2	-1	185
2	2	NULL	1190	2	-3	NULL
3	-1	2436	1600	-3	1	162
3	1	3176	428	-3	4	211


-- !query
SELECT abs(b-c),
       c-d,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       a-b,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 7,6,5,3
-- !query schema
struct<abs((b - c)):int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int,(a - b):int,e:int>
-- !query output
2	2	NULL	1190	2	-3	NULL
2	-1	1604	1060	-2	1	105
1	-2	2129	1410	1	3	143
3	-1	2436	1600	-3	1	162
2	-1	2589	1700	-2	1	174
2	-1	2739	362	-2	1	184
2	-3	2802	374	2	-1	185
1	1	2880	380	1	-4	191
1	2	2946	398	-1	2	195
1	2	NULL	NULL	-1	NULL	204
3	1	3176	428	-3	4	211
1	-1	3259	436	-1	3	219
1	2	3331	446	-1	2	224
1	-1	3405	452	-1	-1	225
1	2	3477	468	-1	3	233
1	-2	3704	492	1	-2	245


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       d-e,
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       d-e,
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 3,5,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
   AND c>d
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
444
555
555
555


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
   AND c>d
 ORDER BY 1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
444
555
555
555


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a>b
   AND d NOT BETWEEN 110 AND 150
   AND c>d
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
444
555
555
555


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a>b
   AND d NOT BETWEEN 110 AND 150
   AND c>d
 ORDER BY 1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
444
555
555
555


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
   AND d NOT BETWEEN 110 AND 150
   AND a>b
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
444
555
555
555


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
   AND d NOT BETWEEN 110 AND 150
   AND a>b
 ORDER BY 1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
444
555
555
555


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
    OR c>d
 ORDER BY 3,6,5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       b-c
  FROM t1
 WHERE c>d
    OR (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       b-c
  FROM t1
 WHERE c>d
    OR (a>b-2 AND a<b+2)
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1,3,4,6,5,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (a>b-2 AND a<b+2)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (a>b-2 AND a<b+2)
    OR c>d
 ORDER BY 5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111	1	383	222
111	4	563	222
111	4	680	222
222	-1	511	333
222	-1	541	333
222	-1	NULL	444
222	-2	410	333
222	4	319	333
222	4	742	222
222	NULL	354	222
222	NULL	367	333
222	NULL	443	111
333	3	400	222
444	-2	648	444
444	-4	665	333
444	1	578	111
444	2	481	333
444	NULL	709	333
555	-1	426	444
555	-1	NULL	444
555	-3	696	444
555	-3	NULL	444
555	-3	NULL	444
555	1	593	333
555	1	634	444
555	NULL	338	111
555	NULL	451	333
555	NULL	469	222
555	NULL	529	333
555	NULL	NULL	444


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 2,4,1,3
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
222	NULL	443	111
555	NULL	338	111
222	NULL	354	222
555	NULL	469	222
222	NULL	367	333
444	NULL	709	333
555	NULL	451	333
555	NULL	529	333
555	NULL	NULL	444
444	-4	665	333
555	-3	NULL	444
555	-3	NULL	444
555	-3	696	444
222	-2	410	333
444	-2	648	444
222	-1	511	333
222	-1	541	333
222	-1	NULL	444
555	-1	NULL	444
555	-1	426	444
444	1	578	111
111	1	383	222
555	1	593	333
555	1	634	444
444	2	481	333
333	3	400	222
111	4	563	222
111	4	680	222
222	4	742	222
222	4	319	333


-- !query
SELECT b-c,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	1187
-1	1331
-1	1392
-1	770
-1	NULL
-3	827
1	1483
1	846
2	1121
2	705
3	793
4	NULL
NULL	NULL


-- !query
SELECT b-c,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL
-1	NULL
4	NULL
2	705
-1	770
3	793
-3	827
1	846
2	1121
-1	1187
-1	1331
-1	1392
1	1483


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       abs(b-c),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int>
-- !query output
1604	107	2	1	222	-1
1899	127	1	-1	111	3
1975	132	3	-2	333	-2
2436	161	3	1	444	-1
2802	187	2	-1	111	-3
2880	190	1	-4	444	1
2946	199	1	2	555	2
3176	214	3	4	555	1
3405	226	1	-1	111	-1
3704	246	1	-2	222	-2


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       abs(b-c),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
 ORDER BY 5,2,1,3
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int>
-- !query output
1899	127	1	-1	111	3
2802	187	2	-1	111	-3
3405	226	1	-1	111	-1
1604	107	2	1	222	-1
3704	246	1	-2	222	-2
1975	132	3	-2	333	-2
2436	161	3	1	444	-1
2880	190	1	-4	444	1
2946	199	1	2	555	2
3176	214	3	4	555	1


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       abs(b-c),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int>
-- !query output
1604	107	2	1	222	-1
1899	127	1	-1	111	3
1975	132	3	-2	333	-2
2436	161	3	1	444	-1
2802	187	2	-1	111	-3
2880	190	1	-4	444	1
2946	199	1	2	555	2
3176	214	3	4	555	1
3405	226	1	-1	111	-1
3704	246	1	-2	222	-2


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       abs(b-c),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,4,3
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int>
-- !query output
1604	107	2	1	222	-1
1899	127	1	-1	111	3
1975	132	3	-2	333	-2
2436	161	3	1	444	-1
2802	187	2	-1	111	-3
2880	190	1	-4	444	1
2946	199	1	2	555	2
3176	214	3	4	555	1
3405	226	1	-1	111	-1
3704	246	1	-2	222	-2


-- !query
SELECT a,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<a:int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
107	643	107
127	770	127


-- !query
SELECT a,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,1,2
-- !query schema
struct<a:int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output
107	643	107
127	770	127


-- !query
SELECT a+b*2+c*3+d*4,
       a,
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3
  FROM t1
 WHERE b>c
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a,
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3
  FROM t1
 WHERE b>c
    OR d>e
 ORDER BY 2,1,3,5,6,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       abs(a)
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,abs(a):int>
-- !query output
1020	104	NULL
1060	105	107
1140	113	110
1190	NULL	116
1220	121	123
1280	125	127
1340	130	132
1360	137	138
1410	143	144
1490	147	145
1500	NULL	151
1570	158	155
1600	162	161
1700	174	171
354	175	177
362	184	181
374	185	187
380	191	190
398	195	199
428	211	214
436	219	218
446	224	223
452	225	226
468	233	234
474	238	237
492	245	246
NULL	166	167
NULL	204	NULL
NULL	207	208
NULL	NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       abs(a)
  FROM t1
 ORDER BY 2,1,3
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,abs(a):int>
-- !query output
NULL	NULL	NULL
1190	NULL	116
1500	NULL	151
1020	104	NULL
1060	105	107
1140	113	110
1220	121	123
1280	125	127
1340	130	132
1360	137	138
1410	143	144
1490	147	145
1570	158	155
1600	162	161
NULL	166	167
1700	174	171
354	175	177
362	184	181
374	185	187
380	191	190
398	195	199
NULL	204	NULL
NULL	207	208
428	211	214
436	219	218
446	224	223
452	225	226
468	233	234
474	238	237
492	245	246


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int>
-- !query output
108	1060	1	1079	333	109
117	1190	-3	1165	222	115
140	1410	3	1414	444	142
163	1600	1	1626	333	164
172	1700	1	1719	333	173
182	362	1	1819	333	183
186	374	-1	1877	222	189
193	380	-4	1925	111	192
198	398	2	1971	333	196
203	NULL	NULL	NULL	444	201
213	428	4	2121	444	212
216	436	3	2164	444	217
222	446	2	2211	333	220
228	452	-1	2280	222	229
232	468	3	2312	444	230
247	492	-2	2479	222	249


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 5,2,3,6,4,1
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int>
-- !query output
193	380	-4	1925	111	192
186	374	-1	1877	222	189
228	452	-1	2280	222	229
247	492	-2	2479	222	249
117	1190	-3	1165	222	115
182	362	1	1819	333	183
198	398	2	1971	333	196
222	446	2	2211	333	220
108	1060	1	1079	333	109
163	1600	1	1626	333	164
172	1700	1	1719	333	173
203	NULL	NULL	NULL	444	201
213	428	4	2121	444	212
216	436	3	2164	444	217
232	468	3	2312	444	230
140	1410	3	1414	444	142


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 4,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,d:int>
-- !query output
1079	105	333	1	109
1165	NULL	222	-3	115
1274	125	222	-1	126
1325	130	222	-2	133
1367	137	333	2	135
1414	143	444	3	142
1626	162	333	1	164
1719	174	333	1	173
1819	184	333	1	183
1877	185	222	-1	189
1925	191	111	-4	192
1971	195	333	2	196
2121	211	444	4	212
2164	219	444	3	217
2211	224	333	2	220
2280	225	222	-1	229
2312	233	444	3	230
2479	245	222	-2	249
NULL	113	111	-4	NULL
NULL	121	333	1	NULL
NULL	147	111	-4	NULL
NULL	158	222	-2	NULL
NULL	175	333	1	NULL
NULL	204	444	NULL	201
NULL	238	333	1	NULL
NULL	NULL	333	1	NULL
NULL	NULL	444	NULL	243


-- !query
SELECT a+b*2+c*3+d*4,
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 5,3,2,4,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,d:int>
-- !query output
NULL	113	111	-4	NULL
NULL	147	111	-4	NULL
NULL	158	222	-2	NULL
NULL	NULL	333	1	NULL
NULL	121	333	1	NULL
NULL	175	333	1	NULL
NULL	238	333	1	NULL
1079	105	333	1	109
1165	NULL	222	-3	115
1274	125	222	-1	126
1325	130	222	-2	133
1367	137	333	2	135
1414	143	444	3	142
1626	162	333	1	164
1719	174	333	1	173
1819	184	333	1	183
1877	185	222	-1	189
1925	191	111	-4	192
1971	195	333	2	196
NULL	204	444	NULL	201
2121	211	444	4	212
2164	219	444	3	217
2211	224	333	2	220
2280	225	222	-1	229
2312	233	444	3	230
NULL	NULL	444	NULL	243
2479	245	222	-2	249


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
 ORDER BY 3,2,4,5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,1,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       abs(a),
       a+b*2,
       b,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs(a):int,(a + (b * 2)):int,b:int,e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1027	171	511	170	174	1700
1066	177	529	176	175	354
1087	181	541	180	184	362
1121	187	563	188	185	374
1157	190	578	194	191	380
1187	199	593	197	195	398
1273	214	634	210	211	428
1296	218	648	215	219	436
1331	223	665	221	224	446
1364	226	680	227	225	452
1392	234	696	231	233	468
1426	237	709	236	238	474
1483	246	742	248	245	492
643	107	319	106	105	1060
674	110	338	114	113	1140
705	116	354	119	NULL	1190
739	123	367	122	121	1220
770	127	383	128	125	1280
793	132	400	134	130	1340
827	138	410	136	137	1360
846	144	426	141	143	1410
881	145	443	149	147	1490
910	151	451	150	NULL	1500
946	155	469	157	158	1570
970	161	481	160	162	1600
NULL	NULL	NULL	202	204	NULL
NULL	NULL	NULL	244	NULL	NULL


-- !query
SELECT a+b*2+c*3,
       abs(a),
       a+b*2,
       b,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,3,5
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs(a):int,(a + (b * 2)):int,b:int,e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL	NULL	244	NULL	NULL
NULL	NULL	NULL	202	204	NULL
643	107	319	106	105	1060
674	110	338	114	113	1140
705	116	354	119	NULL	1190
739	123	367	122	121	1220
770	127	383	128	125	1280
793	132	400	134	130	1340
827	138	410	136	137	1360
846	144	426	141	143	1410
881	145	443	149	147	1490
910	151	451	150	NULL	1500
946	155	469	157	158	1570
970	161	481	160	162	1600
1027	171	511	170	174	1700
1066	177	529	176	175	354
1087	181	541	180	184	362
1121	187	563	188	185	374
1157	190	578	194	191	380
1187	199	593	197	195	398
1273	214	634	210	211	428
1296	218	648	215	219	436
1331	223	665	221	224	446
1364	226	680	227	225	452
1392	234	696	231	233	468
1426	237	709	236	238	474
1483	246	742	248	245	492


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int>
-- !query output
-1	1079	106
-1	1626	160
-1	1719	170
-1	1819	180
-1	2164	215
-1	2280	227
-2	1325	134
-2	1414	141
-2	2479	248
-3	1877	188
1	1925	194
1	2121	210
2	1971	197
2	2211	221
2	2312	231
2	NULL	202
3	1274	128
NULL	NULL	114
NULL	NULL	149


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
 ORDER BY 1,3
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int>
-- !query output
NULL	NULL	114
NULL	NULL	149
-3	1877	188
-2	1325	134
-2	1414	141
-2	2479	248
-1	1079	106
-1	1626	160
-1	1719	170
-1	1819	180
-1	2164	215
-1	2280	227
1	1925	194
1	2121	210
2	1971	197
2	NULL	202
2	2211	221
2	2312	231
3	1274	128


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       b
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int>
-- !query output
-1	1079	106
-1	1626	160
-1	1719	170
-1	1819	180
-1	2164	215
-1	2280	227
-2	1325	134
-2	1414	141
-2	2479	248
-3	1877	188
1	1925	194
1	2121	210
2	1971	197
2	2211	221
2	2312	231
2	NULL	202
3	1274	128
NULL	NULL	114
NULL	NULL	149


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       b
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,1,2
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int>
-- !query output
-1	1079	106
NULL	NULL	114
3	1274	128
-2	1325	134
-2	1414	141
NULL	NULL	149
-1	1626	160
-1	1719	170
-1	1819	180
-3	1877	188
1	1925	194
2	1971	197
2	NULL	202
1	2121	210
-1	2164	215
2	2211	221
-1	2280	227
2	2312	231
-2	2479	248


-- !query
SELECT a-b,
       a+b*2,
       a
  FROM t1
 WHERE d>e
    OR b>c
-- !query schema
struct<(a - b):int,(a + (b * 2)):int,a:int>
-- !query output
-1	383	127
-1	563	187
-1	680	226
-2	400	132
-2	742	246
-3	354	116
-4	338	110
-4	443	145
-4	578	190
1	319	107
1	481	161
2	593	199
3	426	144
4	634	214
NULL	NULL	NULL


-- !query
SELECT a-b,
       a+b*2,
       a
  FROM t1
 WHERE d>e
    OR b>c
 ORDER BY 3,1
-- !query schema
struct<(a - b):int,(a + (b * 2)):int,a:int>
-- !query output
NULL	NULL	NULL
1	319	107
-4	338	110
-3	354	116
-1	383	127
-2	400	132
3	426	144
-4	443	145
1	481	161
-1	563	187
-4	578	190
2	593	199
4	634	214
-1	680	226
-2	742	246


-- !query
SELECT a-b,
       a+b*2,
       a
  FROM t1
 WHERE b>c
    OR d>e
-- !query schema
struct<(a - b):int,(a + (b * 2)):int,a:int>
-- !query output
-1	383	127
-1	563	187
-1	680	226
-2	400	132
-2	742	246
-3	354	116
-4	338	110
-4	443	145
-4	578	190
1	319	107
1	481	161
2	593	199
3	426	144
4	634	214
NULL	NULL	NULL


-- !query
SELECT a-b,
       a+b*2,
       a
  FROM t1
 WHERE b>c
    OR d>e
 ORDER BY 2,3,1
-- !query schema
struct<(a - b):int,(a + (b * 2)):int,a:int>
-- !query output
NULL	NULL	NULL
1	319	107
-4	338	110
-3	354	116
-1	383	127
-2	400	132
3	426	144
-4	443	145
1	481	161
-1	563	187
-4	578	190
2	593	199
4	634	214
-1	680	226
-2	742	246


-- !query
SELECT e,
       b,
       a+b*2+c*3,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
-- !query schema
struct<e:int,b:int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
191	194	1157	578	380	192.0
195	197	1187	593	398	197.0
204	202	NULL	NULL	NULL	NULL
211	210	1273	634	428	212.0
224	221	1331	665	446	222.0
233	231	1392	696	468	232.0
NULL	119	705	354	1190	NULL


-- !query
SELECT e,
       b,
       a+b*2+c*3,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
 ORDER BY 5,4,3,6,2
-- !query schema
struct<e:int,b:int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
204	202	NULL	NULL	NULL	NULL
191	194	1157	578	380	192.0
195	197	1187	593	398	197.0
211	210	1273	634	428	212.0
224	221	1331	665	446	222.0
233	231	1392	696	468	232.0
NULL	119	705	354	1190	NULL


-- !query
SELECT e,
       b,
       a+b*2+c*3,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<e:int,b:int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
191	194	1157	578	380	192.0
195	197	1187	593	398	197.0
204	202	NULL	NULL	NULL	NULL
211	210	1273	634	428	212.0
224	221	1331	665	446	222.0
233	231	1392	696	468	232.0
NULL	119	705	354	1190	NULL


-- !query
SELECT e,
       b,
       a+b*2+c*3,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<e:int,b:int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	119	705	354	1190	NULL
191	194	1157	578	380	192.0
195	197	1187	593	398	197.0
204	202	NULL	NULL	NULL	NULL
211	210	1273	634	428	212.0
224	221	1331	665	446	222.0
233	231	1392	696	468	232.0


-- !query
SELECT a
  FROM t1
-- !query schema
struct<a:int>
-- !query output
107
110
116
123
127
132
138
144
145
151
155
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246
NULL
NULL
NULL


-- !query
SELECT a
  FROM t1
 ORDER BY 1
-- !query schema
struct<a:int>
-- !query output
NULL
NULL
NULL
107
110
116
123
127
132
138
144
145
151
155
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246


-- !query
SELECT a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
 ORDER BY 4,2,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       e,
       b,
       c,
       abs(b-c),
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
    OR a>b
    OR (e>c OR e<d)
-- !query schema
struct<(d - e):int,e:int,b:int,c:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	143	141	140	1	1414	142.0
-1	174	170	172	2	1719	172.0
-1	184	180	182	2	1819	182.0
-2	137	136	139	3	1367	137.0
-2	219	215	216	1	2164	217.0
-3	204	202	203	1	NULL	NULL
-3	233	231	232	1	2312	232.0
-4	224	221	222	1	2211	222.0
1	125	128	129	1	1274	127.0
1	191	194	193	1	1925	192.0
1	195	197	198	1	1971	197.0
1	211	210	213	3	2121	212.0
2	162	160	163	3	1626	162.0
3	130	134	131	3	1325	132.0
4	105	106	108	2	1079	107.0
4	185	188	186	2	1877	187.0
4	225	227	228	1	2280	227.0
4	245	248	247	1	2479	247.0
NULL	113	114	112	2	NULL	NULL
NULL	121	122	124	2	NULL	NULL
NULL	147	149	146	3	NULL	NULL
NULL	175	176	179	3	NULL	NULL
NULL	238	236	239	3	NULL	NULL
NULL	NULL	119	117	2	1165	NULL
NULL	NULL	150	153	3	NULL	NULL
NULL	NULL	244	240	4	NULL	NULL


-- !query
SELECT d-e,
       e,
       b,
       c,
       abs(b-c),
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
    OR a>b
    OR (e>c OR e<d)
 ORDER BY 2,1,6,3
-- !query schema
struct<(d - e):int,e:int,b:int,c:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	150	153	3	NULL	NULL
NULL	NULL	244	240	4	NULL	NULL
NULL	NULL	119	117	2	1165	NULL
4	105	106	108	2	1079	107.0
NULL	113	114	112	2	NULL	NULL
NULL	121	122	124	2	NULL	NULL
1	125	128	129	1	1274	127.0
3	130	134	131	3	1325	132.0
-2	137	136	139	3	1367	137.0
-1	143	141	140	1	1414	142.0
NULL	147	149	146	3	NULL	NULL
2	162	160	163	3	1626	162.0
-1	174	170	172	2	1719	172.0
NULL	175	176	179	3	NULL	NULL
-1	184	180	182	2	1819	182.0
4	185	188	186	2	1877	187.0
1	191	194	193	1	1925	192.0
1	195	197	198	1	1971	197.0
-3	204	202	203	1	NULL	NULL
1	211	210	213	3	2121	212.0
-2	219	215	216	1	2164	217.0
-4	224	221	222	1	2211	222.0
4	225	227	228	1	2280	227.0
-3	233	231	232	1	2312	232.0
NULL	238	236	239	3	NULL	NULL
4	245	248	247	1	2479	247.0


-- !query
SELECT d-e,
       e,
       b,
       c,
       abs(b-c),
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR a>b
-- !query schema
struct<(d - e):int,e:int,b:int,c:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	143	141	140	1	1414	142.0
-1	174	170	172	2	1719	172.0
-1	184	180	182	2	1819	182.0
-2	137	136	139	3	1367	137.0
-2	219	215	216	1	2164	217.0
-3	204	202	203	1	NULL	NULL
-3	233	231	232	1	2312	232.0
-4	224	221	222	1	2211	222.0
1	125	128	129	1	1274	127.0
1	191	194	193	1	1925	192.0
1	195	197	198	1	1971	197.0
1	211	210	213	3	2121	212.0
2	162	160	163	3	1626	162.0
3	130	134	131	3	1325	132.0
4	105	106	108	2	1079	107.0
4	185	188	186	2	1877	187.0
4	225	227	228	1	2280	227.0
4	245	248	247	1	2479	247.0
NULL	113	114	112	2	NULL	NULL
NULL	121	122	124	2	NULL	NULL
NULL	147	149	146	3	NULL	NULL
NULL	175	176	179	3	NULL	NULL
NULL	238	236	239	3	NULL	NULL
NULL	NULL	119	117	2	1165	NULL
NULL	NULL	150	153	3	NULL	NULL
NULL	NULL	244	240	4	NULL	NULL


-- !query
SELECT d-e,
       e,
       b,
       c,
       abs(b-c),
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR a>b
 ORDER BY 4,7,1,2,6
-- !query schema
struct<(d - e):int,e:int,b:int,c:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
4	105	106	108	2	1079	107.0
NULL	113	114	112	2	NULL	NULL
NULL	NULL	119	117	2	1165	NULL
NULL	121	122	124	2	NULL	NULL
1	125	128	129	1	1274	127.0
3	130	134	131	3	1325	132.0
-2	137	136	139	3	1367	137.0
-1	143	141	140	1	1414	142.0
NULL	147	149	146	3	NULL	NULL
NULL	NULL	150	153	3	NULL	NULL
2	162	160	163	3	1626	162.0
-1	174	170	172	2	1719	172.0
NULL	175	176	179	3	NULL	NULL
-1	184	180	182	2	1819	182.0
4	185	188	186	2	1877	187.0
1	191	194	193	1	1925	192.0
1	195	197	198	1	1971	197.0
-3	204	202	203	1	NULL	NULL
1	211	210	213	3	2121	212.0
-2	219	215	216	1	2164	217.0
-4	224	221	222	1	2211	222.0
4	225	227	228	1	2280	227.0
-3	233	231	232	1	2312	232.0
NULL	238	236	239	3	NULL	NULL
NULL	NULL	244	240	4	NULL	NULL
4	245	248	247	1	2479	247.0


-- !query
SELECT d-e,
       e,
       b,
       c,
       abs(b-c),
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
    OR a>b
    OR b>c
-- !query schema
struct<(d - e):int,e:int,b:int,c:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	143	141	140	1	1414	142.0
-1	174	170	172	2	1719	172.0
-1	184	180	182	2	1819	182.0
-2	137	136	139	3	1367	137.0
-2	219	215	216	1	2164	217.0
-3	204	202	203	1	NULL	NULL
-3	233	231	232	1	2312	232.0
-4	224	221	222	1	2211	222.0
1	125	128	129	1	1274	127.0
1	191	194	193	1	1925	192.0
1	195	197	198	1	1971	197.0
1	211	210	213	3	2121	212.0
2	162	160	163	3	1626	162.0
3	130	134	131	3	1325	132.0
4	105	106	108	2	1079	107.0
4	185	188	186	2	1877	187.0
4	225	227	228	1	2280	227.0
4	245	248	247	1	2479	247.0
NULL	113	114	112	2	NULL	NULL
NULL	121	122	124	2	NULL	NULL
NULL	147	149	146	3	NULL	NULL
NULL	175	176	179	3	NULL	NULL
NULL	238	236	239	3	NULL	NULL
NULL	NULL	119	117	2	1165	NULL
NULL	NULL	150	153	3	NULL	NULL
NULL	NULL	244	240	4	NULL	NULL


-- !query
SELECT d-e,
       e,
       b,
       c,
       abs(b-c),
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
    OR a>b
    OR b>c
 ORDER BY 7,2,6,1,5,4,3
-- !query schema
struct<(d - e):int,e:int,b:int,c:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	150	153	3	NULL	NULL
NULL	NULL	244	240	4	NULL	NULL
NULL	NULL	119	117	2	1165	NULL
NULL	113	114	112	2	NULL	NULL
NULL	121	122	124	2	NULL	NULL
NULL	147	149	146	3	NULL	NULL
NULL	175	176	179	3	NULL	NULL
-3	204	202	203	1	NULL	NULL
NULL	238	236	239	3	NULL	NULL
4	105	106	108	2	1079	107.0
1	125	128	129	1	1274	127.0
3	130	134	131	3	1325	132.0
-2	137	136	139	3	1367	137.0
-1	143	141	140	1	1414	142.0
2	162	160	163	3	1626	162.0
-1	174	170	172	2	1719	172.0
-1	184	180	182	2	1819	182.0
4	185	188	186	2	1877	187.0
1	191	194	193	1	1925	192.0
1	195	197	198	1	1971	197.0
1	211	210	213	3	2121	212.0
-2	219	215	216	1	2164	217.0
-4	224	221	222	1	2211	222.0
4	225	227	228	1	2280	227.0
-3	233	231	232	1	2312	232.0
4	245	248	247	1	2479	247.0


-- !query
SELECT c,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       d-e
  FROM t1
 WHERE c>d
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,(d - e):int>
-- !query output



-- !query
SELECT c,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       d-e
  FROM t1
 WHERE c>d
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
 ORDER BY 4,5,6
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,(d - e):int>
-- !query output



-- !query
SELECT c,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,(d - e):int>
-- !query output



-- !query
SELECT c,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,6,2,1,5,3
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,(d - e):int>
-- !query output



-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
 ORDER BY 4,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b
  FROM t1
-- !query schema
struct<b:int>
-- !query output
102
106
114
119
122
128
134
136
141
149
150
157
160
170
176
180
188
194
197
202
210
215
221
227
231
236
244
248
NULL
NULL


-- !query
SELECT b
  FROM t1
 ORDER BY 1
-- !query schema
struct<b:int>
-- !query output
NULL
NULL
102
106
114
119
122
128
134
136
141
149
150
157
160
170
176
180
188
194
197
202
210
215
221
227
231
236
244
248


-- !query
SELECT d,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d>e
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<d:int,(a + (b * 2)):int>
-- !query output
109	319


-- !query
SELECT d,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d>e
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<d:int,(a + (b * 2)):int>
-- !query output
109	319


-- !query
SELECT d,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
   AND d>e
-- !query schema
struct<d:int,(a + (b * 2)):int>
-- !query output
109	319


-- !query
SELECT d,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
   AND d>e
 ORDER BY 2,1
-- !query schema
struct<d:int,(a + (b * 2)):int>
-- !query output
109	319


-- !query
SELECT d,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
   AND d>e
-- !query schema
struct<d:int,(a + (b * 2)):int>
-- !query output
109	319


-- !query
SELECT d,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
   AND d>e
 ORDER BY 2,1
-- !query schema
struct<d:int,(a + (b * 2)):int>
-- !query output
109	319


-- !query
SELECT a+b*2+c*3+d*4,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>a AND e<b)
    OR b>c
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int>
-- !query output
1079	107
1165	116
1325	132
1414	144
1626	161
1719	171
1819	181
1877	187
1925	190
1971	199
2121	214
2164	218
2211	223
2280	226
2312	234
2479	246
NULL	110
NULL	145
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>a AND e<b)
    OR b>c
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int>
-- !query output
NULL	NULL
NULL	NULL
1079	107
NULL	110
1165	116
1325	132
1414	144
NULL	145
1626	161
1719	171
1819	181
1877	187
1925	190
1971	199
2121	214
2164	218
2211	223
2280	226
2312	234
2479	246


-- !query
SELECT a+b*2+c*3+d*4,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
    OR (e>a AND e<b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int>
-- !query output
1079	107
1165	116
1325	132
1414	144
1626	161
1719	171
1819	181
1877	187
1925	190
1971	199
2121	214
2164	218
2211	223
2280	226
2312	234
2479	246
NULL	110
NULL	145
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
    OR (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int>
-- !query output
NULL	NULL
NULL	NULL
1079	107
NULL	110
1165	116
1325	132
1414	144
NULL	145
1626	161
1719	171
1819	181
1877	187
1925	190
1971	199
2121	214
2164	218
2211	223
2280	226
2312	234
2479	246


-- !query
SELECT a+b*2,
       abs(b-c)
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int>
-- !query output
319	2
338	2
354	2
367	2
383	1
400	3
410	3
426	1
443	3
451	3
469	2
481	3
511	2
529	3
541	2
563	2
578	1
593	1
634	3
648	1
665	1
680	1
696	1
709	3
742	1
NULL	1
NULL	4
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2,
       abs(b-c)
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	1
NULL	4
319	2
338	2
354	2
367	2
383	1
400	3
410	3
426	1
443	3
451	3
469	2
481	3
511	2
529	3
541	2
563	2
578	1
593	1
634	3
648	1
665	1
680	1
696	1
709	3
742	1


-- !query
SELECT a+b*2+c*3+d*4,
       e,
       abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
 WHERE c>d
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,abs((b - c)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int>
-- !query output
1165	NULL	2	1190	2
1274	125	1	1280	3
1367	137	3	1360	4
1925	191	1	380	1
1971	195	1	398	2
2121	211	3	428	1
2211	224	1	446	2
2312	233	1	468	2
NULL	166	NULL	NULL	3
NULL	204	1	NULL	2


-- !query
SELECT a+b*2+c*3+d*4,
       e,
       abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
 WHERE c>d
 ORDER BY 1,2,3,5,4
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,abs((b - c)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int>
-- !query output
NULL	166	NULL	NULL	3
NULL	204	1	NULL	2
1165	NULL	2	1190	2
1274	125	1	1280	3
1367	137	3	1360	4
1925	191	1	380	1
1971	195	1	398	2
2121	211	3	428	1
2211	224	1	446	2
2312	233	1	468	2


-- !query
SELECT abs(b-c),
       d-e,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<abs((b - c)):int,(d - e):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1	-1	1414	142.0
1	-3	2312	232.0
1	-4	2211	222.0
1	1	1971	197.0
3	-2	1367	137.0


-- !query
SELECT abs(b-c),
       d-e,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,3,4,2
-- !query schema
struct<abs((b - c)):int,(d - e):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1	-1	1414	142.0
1	1	1971	197.0
1	-4	2211	222.0
1	-3	2312	232.0
3	-2	1367	137.0


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a-b,
       b-c,
       abs(b-c),
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,(b - c):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1060	1079	1	-2	2	107.0
1140	NULL	-4	2	2	NULL
1280	1274	-1	-1	1	127.0
1340	1325	-2	3	3	132.0
1410	1414	3	1	1	142.0
1490	NULL	-4	3	3	NULL
1600	1626	1	-3	3	162.0
1700	1719	1	-2	2	172.0
362	1819	1	-2	2	182.0
374	1877	-1	2	2	187.0
380	1925	-4	1	1	192.0
398	1971	2	-1	1	197.0
428	2121	4	-3	3	212.0
436	2164	3	-1	1	217.0
446	2211	2	-1	1	222.0
452	2280	-1	-1	1	227.0
468	2312	3	-1	1	232.0
492	2479	-2	1	1	247.0
NULL	NULL	NULL	-1	1	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a-b,
       b-c,
       abs(b-c),
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 6,1,5,4
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,(b - c):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	NULL	-1	1	NULL
1140	NULL	-4	2	2	NULL
1490	NULL	-4	3	3	NULL
1060	1079	1	-2	2	107.0
1280	1274	-1	-1	1	127.0
1340	1325	-2	3	3	132.0
1410	1414	3	1	1	142.0
1600	1626	1	-3	3	162.0
1700	1719	1	-2	2	172.0
362	1819	1	-2	2	182.0
374	1877	-1	2	2	187.0
380	1925	-4	1	1	192.0
398	1971	2	-1	1	197.0
428	2121	4	-3	3	212.0
436	2164	3	-1	1	217.0
446	2211	2	-1	1	222.0
452	2280	-1	-1	1	227.0
468	2312	3	-1	1	232.0
492	2479	-2	1	1	247.0


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>a AND e<b)
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (e>a AND e<b)
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1,5,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
 ORDER BY 4,2,5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       abs(b-c),
       (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
1165	2	NULL	117
1325	3	132.0	131
1414	1	142.0	140
1877	2	187.0	186
2479	1	247.0	247
NULL	4	NULL	240


-- !query
SELECT a+b*2+c*3+d*4,
       abs(b-c),
       (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
1414	1	142.0	140
2479	1	247.0	247
1165	2	NULL	117
1877	2	187.0	186
1325	3	132.0	131
NULL	4	NULL	240


-- !query
SELECT a+b*2+c*3+d*4,
       abs(b-c),
       (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
   AND b>c
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
1165	2	NULL	117
1325	3	132.0	131
1414	1	142.0	140
1877	2	187.0	186
2479	1	247.0	247
NULL	4	NULL	240


-- !query
SELECT a+b*2+c*3+d*4,
       abs(b-c),
       (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
   AND b>c
 ORDER BY 4,3,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
1165	2	NULL	117
1325	3	132.0	131
1414	1	142.0	140
1877	2	187.0	186
NULL	4	NULL	240
2479	1	247.0	247


-- !query
SELECT a+b*2+c*3+d*4,
       abs(b-c),
       (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
1165	2	NULL	117
1325	3	132.0	131
1414	1	142.0	140
1877	2	187.0	186
2479	1	247.0	247
NULL	4	NULL	240


-- !query
SELECT a+b*2+c*3+d*4,
       abs(b-c),
       (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 3,1,4
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
NULL	4	NULL	240
1165	2	NULL	117
1325	3	132.0	131
1414	1	142.0	140
1877	2	187.0	186
2479	1	247.0	247


-- !query
SELECT e,
       d-e,
       abs(a),
       b-c,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<e:int,(d - e):int,abs(a):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
104	-3	NULL	NULL	NULL
105	4	107	-2	107.0
113	NULL	110	2	NULL
121	NULL	123	-2	NULL
125	1	127	-1	127.0
130	3	132	3	132.0
137	-2	138	-3	137.0
143	-1	144	1	142.0
147	NULL	145	3	NULL
158	NULL	155	-2	NULL
162	2	161	-3	162.0
166	-1	167	NULL	NULL
174	-1	171	-2	172.0
175	NULL	177	-3	NULL
184	-1	181	-2	182.0
185	4	187	2	187.0
191	1	190	1	192.0
195	1	199	-1	197.0
204	-3	NULL	-1	NULL
207	-1	208	NULL	NULL
211	1	214	-3	212.0
219	-2	218	-1	217.0
224	-4	223	-1	222.0
225	4	226	-1	227.0
233	-3	234	-1	232.0
238	NULL	237	-3	NULL
245	4	246	1	247.0
NULL	NULL	116	2	NULL
NULL	NULL	151	-3	NULL
NULL	NULL	NULL	4	NULL


-- !query
SELECT e,
       d-e,
       abs(a),
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 5,3,4
-- !query schema
struct<e:int,(d - e):int,abs(a):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
104	-3	NULL	NULL	NULL
204	-3	NULL	-1	NULL
NULL	NULL	NULL	4	NULL
113	NULL	110	2	NULL
NULL	NULL	116	2	NULL
121	NULL	123	-2	NULL
147	NULL	145	3	NULL
NULL	NULL	151	-3	NULL
158	NULL	155	-2	NULL
166	-1	167	NULL	NULL
175	NULL	177	-3	NULL
207	-1	208	NULL	NULL
238	NULL	237	-3	NULL
105	4	107	-2	107.0
125	1	127	-1	127.0
130	3	132	3	132.0
137	-2	138	-3	137.0
143	-1	144	1	142.0
162	2	161	-3	162.0
174	-1	171	-2	172.0
184	-1	181	-2	182.0
185	4	187	2	187.0
191	1	190	1	192.0
195	1	199	-1	197.0
211	1	214	-3	212.0
219	-2	218	-1	217.0
224	-4	223	-1	222.0
225	4	226	-1	227.0
233	-3	234	-1	232.0
245	4	246	1	247.0


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1066
1087
1121
1364
1426
643
739
770
910
970


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
643
739
770
910
970
1027
1066
1087
1121
1364
1426


-- !query
SELECT a+b*2,
       d,
       e,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
    OR d>e
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a + (b * 2)):int,d:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
319	109	105	1604	1079
354	115	NULL	NULL	1165
367	NULL	121	NULL	NULL
383	126	125	1899	1274
400	133	130	1975	1325
410	135	137	2052	1367
426	142	143	2129	1414
451	NULL	NULL	NULL	NULL
481	164	162	2436	1626
511	173	174	2589	1719
529	NULL	175	NULL	NULL
541	183	184	2739	1819
563	189	185	2802	1877
578	192	191	2880	1925
593	196	195	2946	1971
634	212	211	3176	2121
648	217	219	3259	2164
665	220	224	3331	2211
680	229	225	3405	2280
696	230	233	3477	2312
709	NULL	238	NULL	NULL
742	249	245	3704	2479
NULL	165	166	NULL	NULL
NULL	201	204	NULL	NULL
NULL	243	NULL	NULL	NULL


-- !query
SELECT a+b*2,
       d,
       e,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
    OR d>e
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,4
-- !query schema
struct<(a + (b * 2)):int,d:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
709	NULL	238	NULL	NULL
367	NULL	121	NULL	NULL
529	NULL	175	NULL	NULL
451	NULL	NULL	NULL	NULL
319	109	105	1604	1079
354	115	NULL	NULL	1165
383	126	125	1899	1274
400	133	130	1975	1325
410	135	137	2052	1367
426	142	143	2129	1414
481	164	162	2436	1626
NULL	165	166	NULL	NULL
511	173	174	2589	1719
541	183	184	2739	1819
563	189	185	2802	1877
578	192	191	2880	1925
593	196	195	2946	1971
NULL	201	204	NULL	NULL
634	212	211	3176	2121
648	217	219	3259	2164
665	220	224	3331	2211
680	229	225	3405	2280
696	230	233	3477	2312
NULL	243	NULL	NULL	NULL
742	249	245	3704	2479


-- !query
SELECT a+b*2,
       d,
       e,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR a>b
    OR d>e
-- !query schema
struct<(a + (b * 2)):int,d:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
319	109	105	1604	1079
354	115	NULL	NULL	1165
367	NULL	121	NULL	NULL
383	126	125	1899	1274
400	133	130	1975	1325
410	135	137	2052	1367
426	142	143	2129	1414
451	NULL	NULL	NULL	NULL
481	164	162	2436	1626
511	173	174	2589	1719
529	NULL	175	NULL	NULL
541	183	184	2739	1819
563	189	185	2802	1877
578	192	191	2880	1925
593	196	195	2946	1971
634	212	211	3176	2121
648	217	219	3259	2164
665	220	224	3331	2211
680	229	225	3405	2280
696	230	233	3477	2312
709	NULL	238	NULL	NULL
742	249	245	3704	2479
NULL	165	166	NULL	NULL
NULL	201	204	NULL	NULL
NULL	243	NULL	NULL	NULL


-- !query
SELECT a+b*2,
       d,
       e,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR a>b
    OR d>e
 ORDER BY 1,3,2,5,4
-- !query schema
struct<(a + (b * 2)):int,d:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	243	NULL	NULL	NULL
NULL	165	166	NULL	NULL
NULL	201	204	NULL	NULL
319	109	105	1604	1079
354	115	NULL	NULL	1165
367	NULL	121	NULL	NULL
383	126	125	1899	1274
400	133	130	1975	1325
410	135	137	2052	1367
426	142	143	2129	1414
451	NULL	NULL	NULL	NULL
481	164	162	2436	1626
511	173	174	2589	1719
529	NULL	175	NULL	NULL
541	183	184	2739	1819
563	189	185	2802	1877
578	192	191	2880	1925
593	196	195	2946	1971
634	212	211	3176	2121
648	217	219	3259	2164
665	220	224	3331	2211
680	229	225	3405	2280
696	230	233	3477	2312
709	NULL	238	NULL	NULL
742	249	245	3704	2479


-- !query
SELECT a+b*2,
       d,
       e,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
    OR a>b
-- !query schema
struct<(a + (b * 2)):int,d:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
319	109	105	1604	1079
354	115	NULL	NULL	1165
367	NULL	121	NULL	NULL
383	126	125	1899	1274
400	133	130	1975	1325
410	135	137	2052	1367
426	142	143	2129	1414
451	NULL	NULL	NULL	NULL
481	164	162	2436	1626
511	173	174	2589	1719
529	NULL	175	NULL	NULL
541	183	184	2739	1819
563	189	185	2802	1877
578	192	191	2880	1925
593	196	195	2946	1971
634	212	211	3176	2121
648	217	219	3259	2164
665	220	224	3331	2211
680	229	225	3405	2280
696	230	233	3477	2312
709	NULL	238	NULL	NULL
742	249	245	3704	2479
NULL	165	166	NULL	NULL
NULL	201	204	NULL	NULL
NULL	243	NULL	NULL	NULL


-- !query
SELECT a+b*2,
       d,
       e,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
    OR a>b
 ORDER BY 1,2,5,4,3
-- !query schema
struct<(a + (b * 2)):int,d:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	165	166	NULL	NULL
NULL	201	204	NULL	NULL
NULL	243	NULL	NULL	NULL
319	109	105	1604	1079
354	115	NULL	NULL	1165
367	NULL	121	NULL	NULL
383	126	125	1899	1274
400	133	130	1975	1325
410	135	137	2052	1367
426	142	143	2129	1414
451	NULL	NULL	NULL	NULL
481	164	162	2436	1626
511	173	174	2589	1719
529	NULL	175	NULL	NULL
541	183	184	2739	1819
563	189	185	2802	1877
578	192	191	2880	1925
593	196	195	2946	1971
634	212	211	3176	2121
648	217	219	3259	2164
665	220	224	3331	2211
680	229	225	3405	2280
696	230	233	3477	2312
709	NULL	238	NULL	NULL
742	249	245	3704	2479


-- !query
SELECT b,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       e
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<b:int,(((((a + b) + c) + d) + e) / 5):double,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int>
-- !query output
106	107.0	1079	105
114	NULL	NULL	113
128	127.0	1274	125
134	132.0	1325	130
141	142.0	1414	143
149	NULL	NULL	147
160	162.0	1626	162
170	172.0	1719	174
180	182.0	1819	184
188	187.0	1877	185
194	192.0	1925	191
197	197.0	1971	195
202	NULL	NULL	204
210	212.0	2121	211
215	217.0	2164	219
221	222.0	2211	224
227	227.0	2280	225
231	232.0	2312	233
248	247.0	2479	245


-- !query
SELECT b,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       e
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 3,1
-- !query schema
struct<b:int,(((((a + b) + c) + d) + e) / 5):double,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int>
-- !query output
114	NULL	NULL	113
149	NULL	NULL	147
202	NULL	NULL	204
106	107.0	1079	105
128	127.0	1274	125
134	132.0	1325	130
141	142.0	1414	143
160	162.0	1626	162
170	172.0	1719	174
180	182.0	1819	184
188	187.0	1877	185
194	192.0	1925	191
197	197.0	1971	195
210	212.0	2121	211
215	217.0	2164	219
221	222.0	2211	224
227	227.0	2280	225
231	232.0	2312	233
248	247.0	2479	245


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,4,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       c,
       abs(a),
       a+b*2+c*3
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
-- !query schema
struct<(c - d):int,c:int,abs(a):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	108	107	643
-1	163	161	970
-1	172	171	1027
-1	182	181	1087
-1	216	218	1296
-1	228	226	1364
-2	140	144	846
-2	247	246	1483
-3	186	187	1121
1	193	190	1157
1	213	214	1273
2	198	199	1187
2	203	NULL	NULL
2	222	223	1331
2	232	234	1392


-- !query
SELECT c-d,
       c,
       abs(a),
       a+b*2+c*3
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
 ORDER BY 2,4,3,1
-- !query schema
struct<(c - d):int,c:int,abs(a):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	108	107	643
-2	140	144	846
-1	163	161	970
-1	172	171	1027
-1	182	181	1087
-3	186	187	1121
1	193	190	1157
2	198	199	1187
2	203	NULL	NULL
1	213	214	1273
-1	216	218	1296
2	222	223	1331
-1	228	226	1364
2	232	234	1392
-2	247	246	1483


-- !query
SELECT c-d,
       c,
       abs(a),
       a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(c - d):int,c:int,abs(a):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	108	107	643
-1	163	161	970
-1	172	171	1027
-1	182	181	1087
-1	216	218	1296
-1	228	226	1364
-2	140	144	846
-2	247	246	1483
-3	186	187	1121
1	193	190	1157
1	213	214	1273
2	198	199	1187
2	203	NULL	NULL
2	222	223	1331
2	232	234	1392


-- !query
SELECT c-d,
       c,
       abs(a),
       a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,1
-- !query schema
struct<(c - d):int,c:int,abs(a):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
2	203	NULL	NULL
-1	108	107	643
-2	140	144	846
-1	163	161	970
-1	172	171	1027
-1	182	181	1087
-3	186	187	1121
1	193	190	1157
2	198	199	1187
1	213	214	1273
-1	216	218	1296
2	222	223	1331
-1	228	226	1364
2	232	234	1392
-2	247	246	1483


-- !query
SELECT a+b*2+c*3+d*4,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d
  FROM t1
 ORDER BY 3,1,5,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5,
       a,
       b-c,
       c-d,
       abs(a)
  FROM t1
 WHERE d>e
    OR (a>b-2 AND a<b+2)
    OR c>d
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,(b - c):int,(c - d):int,abs(a):int>
-- !query output
111	192	2880	190	1	1	190
222	115	NULL	116	2	2	116
222	126	1899	127	-1	3	127
222	133	1975	132	3	-2	132
222	189	2802	187	2	-3	187
222	229	3405	226	-1	-1	226
222	249	3704	246	1	-2	246
333	109	1604	107	-2	-1	107
333	135	2052	138	-3	4	138
333	164	2436	161	-3	-1	161
333	173	2589	171	-2	-1	171
333	183	2739	181	-2	-1	181
333	196	2946	199	-1	2	199
333	220	3331	223	-1	2	223
333	NULL	NULL	123	-2	NULL	123
333	NULL	NULL	151	-3	NULL	151
333	NULL	NULL	177	-3	NULL	177
333	NULL	NULL	237	-3	NULL	237
444	165	NULL	167	NULL	3	167
444	201	NULL	NULL	-1	2	NULL
444	212	3176	214	-3	1	214
444	230	3477	234	-1	2	234


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5,
       a,
       b-c,
       c-d,
       abs(a)
  FROM t1
 WHERE d>e
    OR (a>b-2 AND a<b+2)
    OR c>d
 ORDER BY 7,6,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,(b - c):int,(c - d):int,abs(a):int>
-- !query output
444	201	NULL	NULL	-1	2	NULL
333	109	1604	107	-2	-1	107
222	115	NULL	116	2	2	116
333	NULL	NULL	123	-2	NULL	123
222	126	1899	127	-1	3	127
222	133	1975	132	3	-2	132
333	135	2052	138	-3	4	138
333	NULL	NULL	151	-3	NULL	151
333	164	2436	161	-3	-1	161
444	165	NULL	167	NULL	3	167
333	173	2589	171	-2	-1	171
333	NULL	NULL	177	-3	NULL	177
333	183	2739	181	-2	-1	181
222	189	2802	187	2	-3	187
111	192	2880	190	1	1	190
333	196	2946	199	-1	2	199
444	212	3176	214	-3	1	214
333	220	3331	223	-1	2	223
222	229	3405	226	-1	-1	226
444	230	3477	234	-1	2	234
333	NULL	NULL	237	-3	NULL	237
222	249	3704	246	1	-2	246


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5,
       a,
       b-c,
       c-d,
       abs(a)
  FROM t1
 WHERE d>e
    OR c>d
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,(b - c):int,(c - d):int,abs(a):int>
-- !query output
111	192	2880	190	1	1	190
222	115	NULL	116	2	2	116
222	126	1899	127	-1	3	127
222	133	1975	132	3	-2	132
222	189	2802	187	2	-3	187
222	229	3405	226	-1	-1	226
222	249	3704	246	1	-2	246
333	109	1604	107	-2	-1	107
333	135	2052	138	-3	4	138
333	164	2436	161	-3	-1	161
333	173	2589	171	-2	-1	171
333	183	2739	181	-2	-1	181
333	196	2946	199	-1	2	199
333	220	3331	223	-1	2	223
333	NULL	NULL	123	-2	NULL	123
333	NULL	NULL	151	-3	NULL	151
333	NULL	NULL	177	-3	NULL	177
333	NULL	NULL	237	-3	NULL	237
444	165	NULL	167	NULL	3	167
444	201	NULL	NULL	-1	2	NULL
444	212	3176	214	-3	1	214
444	230	3477	234	-1	2	234


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5,
       a,
       b-c,
       c-d,
       abs(a)
  FROM t1
 WHERE d>e
    OR c>d
    OR (a>b-2 AND a<b+2)
 ORDER BY 4,3,5
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,(b - c):int,(c - d):int,abs(a):int>
-- !query output
444	201	NULL	NULL	-1	2	NULL
333	109	1604	107	-2	-1	107
222	115	NULL	116	2	2	116
333	NULL	NULL	123	-2	NULL	123
222	126	1899	127	-1	3	127
222	133	1975	132	3	-2	132
333	135	2052	138	-3	4	138
333	NULL	NULL	151	-3	NULL	151
333	164	2436	161	-3	-1	161
444	165	NULL	167	NULL	3	167
333	173	2589	171	-2	-1	171
333	NULL	NULL	177	-3	NULL	177
333	183	2739	181	-2	-1	181
222	189	2802	187	2	-3	187
111	192	2880	190	1	1	190
333	196	2946	199	-1	2	199
444	212	3176	214	-3	1	214
333	220	3331	223	-1	2	223
222	229	3405	226	-1	-1	226
444	230	3477	234	-1	2	234
333	NULL	NULL	237	-3	NULL	237
222	249	3704	246	1	-2	246


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5,
       a,
       b-c,
       c-d,
       abs(a)
  FROM t1
 WHERE c>d
    OR d>e
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,(b - c):int,(c - d):int,abs(a):int>
-- !query output
111	192	2880	190	1	1	190
222	115	NULL	116	2	2	116
222	126	1899	127	-1	3	127
222	133	1975	132	3	-2	132
222	189	2802	187	2	-3	187
222	229	3405	226	-1	-1	226
222	249	3704	246	1	-2	246
333	109	1604	107	-2	-1	107
333	135	2052	138	-3	4	138
333	164	2436	161	-3	-1	161
333	173	2589	171	-2	-1	171
333	183	2739	181	-2	-1	181
333	196	2946	199	-1	2	199
333	220	3331	223	-1	2	223
333	NULL	NULL	123	-2	NULL	123
333	NULL	NULL	151	-3	NULL	151
333	NULL	NULL	177	-3	NULL	177
333	NULL	NULL	237	-3	NULL	237
444	165	NULL	167	NULL	3	167
444	201	NULL	NULL	-1	2	NULL
444	212	3176	214	-3	1	214
444	230	3477	234	-1	2	234


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       a+b*2+c*3+d*4+e*5,
       a,
       b-c,
       c-d,
       abs(a)
  FROM t1
 WHERE c>d
    OR d>e
    OR (a>b-2 AND a<b+2)
 ORDER BY 7,1,3,2,6,5
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,(b - c):int,(c - d):int,abs(a):int>
-- !query output
444	201	NULL	NULL	-1	2	NULL
333	109	1604	107	-2	-1	107
222	115	NULL	116	2	2	116
333	NULL	NULL	123	-2	NULL	123
222	126	1899	127	-1	3	127
222	133	1975	132	3	-2	132
333	135	2052	138	-3	4	138
333	NULL	NULL	151	-3	NULL	151
333	164	2436	161	-3	-1	161
444	165	NULL	167	NULL	3	167
333	173	2589	171	-2	-1	171
333	NULL	NULL	177	-3	NULL	177
333	183	2739	181	-2	-1	181
222	189	2802	187	2	-3	187
111	192	2880	190	1	1	190
333	196	2946	199	-1	2	199
444	212	3176	214	-3	1	214
333	220	3331	223	-1	2	223
222	229	3405	226	-1	-1	226
444	230	3477	234	-1	2	234
333	NULL	NULL	237	-3	NULL	237
222	249	3704	246	1	-2	246


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       abs(a)
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,abs(a):int>
-- !query output
1027	2589	333	1700	170	171
1066	NULL	333	354	176	177
1087	2739	333	362	180	181
1121	2802	222	374	188	187
1157	2880	111	380	194	190
1187	2946	333	398	197	199
1273	3176	444	428	210	214
1296	3259	444	436	215	218
1331	3331	333	446	221	223
1364	3405	222	452	227	226
1392	3477	444	468	231	234
1426	NULL	333	474	236	237
1483	3704	222	492	248	246
643	1604	333	1060	106	107
674	NULL	111	1140	114	110
705	NULL	222	1190	119	116
739	NULL	333	1220	122	123
770	1899	222	1280	128	127
793	1975	222	1340	134	132
827	2052	333	1360	136	138
846	2129	444	1410	141	144
881	NULL	111	1490	149	145
910	NULL	333	1500	150	151
946	NULL	222	1570	157	155
970	2436	333	1600	160	161
NULL	NULL	444	1020	102	NULL
NULL	NULL	444	NULL	202	NULL
NULL	NULL	444	NULL	244	NULL
NULL	NULL	444	NULL	NULL	167
NULL	NULL	444	NULL	NULL	208


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       abs(a)
  FROM t1
 ORDER BY 1,2,5,4,3
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,abs(a):int>
-- !query output
NULL	NULL	444	NULL	NULL	167
NULL	NULL	444	NULL	NULL	208
NULL	NULL	444	1020	102	NULL
NULL	NULL	444	NULL	202	NULL
NULL	NULL	444	NULL	244	NULL
643	1604	333	1060	106	107
674	NULL	111	1140	114	110
705	NULL	222	1190	119	116
739	NULL	333	1220	122	123
770	1899	222	1280	128	127
793	1975	222	1340	134	132
827	2052	333	1360	136	138
846	2129	444	1410	141	144
881	NULL	111	1490	149	145
910	NULL	333	1500	150	151
946	NULL	222	1570	157	155
970	2436	333	1600	160	161
1027	2589	333	1700	170	171
1066	NULL	333	354	176	177
1087	2739	333	362	180	181
1121	2802	222	374	188	187
1157	2880	111	380	194	190
1187	2946	333	398	197	199
1273	3176	444	428	210	214
1296	3259	444	436	215	218
1331	3331	333	446	221	223
1364	3405	222	452	227	226
1392	3477	444	468	231	234
1426	NULL	333	474	236	237
1483	3704	222	492	248	246


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,d:int>
-- !query output
222	-1	126
222	-1	189
222	-1	229
333	1	109
333	1	164
333	1	173
333	1	183
333	1	NULL
333	1	NULL
333	1	NULL
333	1	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 3,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,d:int>
-- !query output
333	1	NULL
333	1	NULL
333	1	NULL
333	1	NULL
333	1	109
222	-1	126
333	1	164
333	1	173
333	1	183
222	-1	189
222	-1	229


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       b
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       b
  FROM t1
 WHERE c>d
 ORDER BY 2,4,5,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-1
-2
-2
-4
-4
-4
1
1
1
1
1
1
1
1
2
2
3
3
3
4
NULL


-- !query
SELECT a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
-4
-4
-4
-2
-2
-1
-1
-1
1
1
1
1
1
1
1
1
2
2
3
3
3
4


-- !query
SELECT a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-1
-2
-2
-4
-4
-4
1
1
1
1
1
1
1
1
2
2
3
3
3
4
NULL


-- !query
SELECT a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
-4
-4
-4
-2
-2
-1
-1
-1
1
1
1
1
1
1
1
1
2
2
3
3
3
4


-- !query
SELECT a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-1
-2
-2
-4
-4
-4
1
1
1
1
1
1
1
1
2
2
3
3
3
4
NULL


-- !query
SELECT a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
-4
-4
-4
-2
-2
-1
-1
-1
1
1
1
1
1
1
1
1
2
2
3
3
3
4


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 7,4,3,5,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
   AND c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
   AND c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,1,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND a>b
 ORDER BY 2,4,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
-- !query schema
struct<e:int>
-- !query output
105
121
137
143
162
174
175
184
195
211
219
224
233
238
NULL


-- !query
SELECT e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
NULL
105
121
137
143
162
174
175
184
195
211
219
224
233
238


-- !query
SELECT e
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<e:int>
-- !query output
105
121
137
143
162
174
175
184
195
211
219
224
233
238
NULL


-- !query
SELECT e
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
NULL
105
121
137
143
162
174
175
184
195
211
219
224
233
238


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR b>c
-- !query schema
struct<e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
105	333	-2	107.0	319
113	111	2	NULL	338
121	333	-2	NULL	367
125	222	-1	127.0	383
130	222	3	132.0	400
137	333	-3	137.0	410
143	444	1	142.0	426
147	111	3	NULL	443
158	222	-2	NULL	469
162	333	-3	162.0	481
174	333	-2	172.0	511
175	333	-3	NULL	529
184	333	-2	182.0	541
185	222	2	187.0	563
191	111	1	192.0	578
195	333	-1	197.0	593
204	444	-1	NULL	NULL
211	444	-3	212.0	634
219	444	-1	217.0	648
224	333	-1	222.0	665
225	222	-1	227.0	680
233	444	-1	232.0	696
238	333	-3	NULL	709
245	222	1	247.0	742
NULL	222	2	NULL	354
NULL	333	-3	NULL	451
NULL	444	4	NULL	NULL


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR b>c
 ORDER BY 4,1
-- !query schema
struct<e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
NULL	222	2	NULL	354
NULL	444	4	NULL	NULL
NULL	333	-3	NULL	451
113	111	2	NULL	338
121	333	-2	NULL	367
147	111	3	NULL	443
158	222	-2	NULL	469
175	333	-3	NULL	529
204	444	-1	NULL	NULL
238	333	-3	NULL	709
105	333	-2	107.0	319
125	222	-1	127.0	383
130	222	3	132.0	400
137	333	-3	137.0	410
143	444	1	142.0	426
162	333	-3	162.0	481
174	333	-2	172.0	511
184	333	-2	182.0	541
185	222	2	187.0	563
191	111	1	192.0	578
195	333	-1	197.0	593
211	444	-3	212.0	634
219	444	-1	217.0	648
224	333	-1	222.0	665
225	222	-1	227.0	680
233	444	-1	232.0	696
245	222	1	247.0	742


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
105	333	-2	107.0	319
113	111	2	NULL	338
121	333	-2	NULL	367
125	222	-1	127.0	383
130	222	3	132.0	400
137	333	-3	137.0	410
143	444	1	142.0	426
147	111	3	NULL	443
158	222	-2	NULL	469
162	333	-3	162.0	481
174	333	-2	172.0	511
175	333	-3	NULL	529
184	333	-2	182.0	541
185	222	2	187.0	563
191	111	1	192.0	578
195	333	-1	197.0	593
204	444	-1	NULL	NULL
211	444	-3	212.0	634
219	444	-1	217.0	648
224	333	-1	222.0	665
225	222	-1	227.0	680
233	444	-1	232.0	696
238	333	-3	NULL	709
245	222	1	247.0	742
NULL	222	2	NULL	354
NULL	333	-3	NULL	451
NULL	444	4	NULL	NULL


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 5,2,1,4,3
-- !query schema
struct<e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
NULL	444	4	NULL	NULL
204	444	-1	NULL	NULL
105	333	-2	107.0	319
113	111	2	NULL	338
NULL	222	2	NULL	354
121	333	-2	NULL	367
125	222	-1	127.0	383
130	222	3	132.0	400
137	333	-3	137.0	410
143	444	1	142.0	426
147	111	3	NULL	443
NULL	333	-3	NULL	451
158	222	-2	NULL	469
162	333	-3	162.0	481
174	333	-2	172.0	511
175	333	-3	NULL	529
184	333	-2	182.0	541
185	222	2	187.0	563
191	111	1	192.0	578
195	333	-1	197.0	593
211	444	-3	212.0	634
219	444	-1	217.0	648
224	333	-1	222.0	665
225	222	-1	227.0	680
233	444	-1	232.0	696
238	333	-3	NULL	709
245	222	1	247.0	742


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
105	333	-2	107.0	319
113	111	2	NULL	338
121	333	-2	NULL	367
125	222	-1	127.0	383
130	222	3	132.0	400
137	333	-3	137.0	410
143	444	1	142.0	426
147	111	3	NULL	443
158	222	-2	NULL	469
162	333	-3	162.0	481
174	333	-2	172.0	511
175	333	-3	NULL	529
184	333	-2	182.0	541
185	222	2	187.0	563
191	111	1	192.0	578
195	333	-1	197.0	593
204	444	-1	NULL	NULL
211	444	-3	212.0	634
219	444	-1	217.0	648
224	333	-1	222.0	665
225	222	-1	227.0	680
233	444	-1	232.0	696
238	333	-3	NULL	709
245	222	1	247.0	742
NULL	222	2	NULL	354
NULL	333	-3	NULL	451
NULL	444	4	NULL	NULL


-- !query
SELECT e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,5,3,4,2
-- !query schema
struct<e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
NULL	444	4	NULL	NULL
NULL	222	2	NULL	354
NULL	333	-3	NULL	451
105	333	-2	107.0	319
113	111	2	NULL	338
121	333	-2	NULL	367
125	222	-1	127.0	383
130	222	3	132.0	400
137	333	-3	137.0	410
143	444	1	142.0	426
147	111	3	NULL	443
158	222	-2	NULL	469
162	333	-3	162.0	481
174	333	-2	172.0	511
175	333	-3	NULL	529
184	333	-2	182.0	541
185	222	2	187.0	563
191	111	1	192.0	578
195	333	-1	197.0	593
204	444	-1	NULL	NULL
211	444	-3	212.0	634
219	444	-1	217.0	648
224	333	-1	222.0	665
225	222	-1	227.0	680
233	444	-1	232.0	696
238	333	-3	NULL	709
245	222	1	247.0	742


-- !query
SELECT d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
-- !query schema
struct<(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	222
-1	222
-1	555
-2	222
-2	444
-3	555
-3	555
-4	444
1	111
1	444
1	555
1	555
2	444
3	333
4	111
4	111
4	222
4	222
NULL	222
NULL	222
NULL	222
NULL	444
NULL	555
NULL	555
NULL	555
NULL	555
NULL	555


-- !query
SELECT d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
 ORDER BY 2,1
-- !query schema
struct<(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1	111
4	111
4	111
NULL	222
NULL	222
NULL	222
-2	222
-1	222
-1	222
4	222
4	222
3	333
NULL	444
-4	444
-2	444
1	444
2	444
NULL	555
NULL	555
NULL	555
NULL	555
NULL	555
-3	555
-3	555
-1	555
1	555
1	555


-- !query
SELECT d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
    OR (e>a AND e<b)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	222
-1	222
-1	555
-2	222
-2	444
-3	555
-3	555
-4	444
1	111
1	444
1	555
1	555
2	444
3	333
4	111
4	111
4	222
4	222
NULL	222
NULL	222
NULL	222
NULL	444
NULL	555
NULL	555
NULL	555
NULL	555
NULL	555


-- !query
SELECT d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
    OR (e>a AND e<b)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1	111
4	111
4	111
NULL	222
NULL	222
NULL	222
-2	222
-1	222
-1	222
4	222
4	222
3	333
NULL	444
-4	444
-2	444
1	444
2	444
NULL	555
NULL	555
NULL	555
NULL	555
NULL	555
-3	555
-3	555
-1	555
1	555
1	555


-- !query
SELECT d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
    OR (e>a AND e<b)
-- !query schema
struct<(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	222
-1	222
-1	555
-2	222
-2	444
-3	555
-3	555
-4	444
1	111
1	444
1	555
1	555
2	444
3	333
4	111
4	111
4	222
4	222
NULL	222
NULL	222
NULL	222
NULL	444
NULL	555
NULL	555
NULL	555
NULL	555
NULL	555


-- !query
SELECT d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
    OR (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	222
NULL	222
NULL	222
NULL	444
NULL	555
NULL	555
NULL	555
NULL	555
NULL	555
-4	444
-3	555
-3	555
-2	222
-2	444
-1	222
-1	222
-1	555
1	111
1	444
1	555
1	555
2	444
3	333
4	111
4	111
4	222
4	222


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR a>b
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR a>b
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       d,
       a+b*2+c*3+d*4+e*5,
       d-e,
       b-c,
       a+b*2
  FROM t1
-- !query schema
struct<c:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,(b - c):int,(a + (b * 2)):int>
-- !query output
108	109	1604	4	-2	319
112	NULL	NULL	NULL	2	338
117	115	NULL	NULL	2	354
124	NULL	NULL	NULL	-2	367
129	126	1899	1	-1	383
131	133	1975	3	3	400
139	135	2052	-2	-3	410
140	142	2129	-1	1	426
146	NULL	NULL	NULL	3	443
153	NULL	NULL	NULL	-3	451
159	NULL	NULL	NULL	-2	469
163	164	2436	2	-3	481
168	165	NULL	-1	NULL	NULL
172	173	2589	-1	-2	511
179	NULL	NULL	NULL	-3	529
182	183	2739	-1	-2	541
186	189	2802	4	2	563
193	192	2880	1	1	578
198	196	2946	1	-1	593
203	201	NULL	-3	-1	NULL
213	212	3176	1	-3	634
216	217	3259	-2	-1	648
222	220	3331	-4	-1	665
228	229	3405	4	-1	680
232	230	3477	-3	-1	696
239	NULL	NULL	NULL	-3	709
240	243	NULL	NULL	4	NULL
247	249	3704	4	1	742
NULL	101	NULL	-3	NULL	NULL
NULL	206	NULL	-1	NULL	NULL


-- !query
SELECT c,
       d,
       a+b*2+c*3+d*4+e*5,
       d-e,
       b-c,
       a+b*2
  FROM t1
 ORDER BY 5,4,3
-- !query schema
struct<c:int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,(b - c):int,(a + (b * 2)):int>
-- !query output
NULL	101	NULL	-3	NULL	NULL
168	165	NULL	-1	NULL	NULL
NULL	206	NULL	-1	NULL	NULL
239	NULL	NULL	NULL	-3	709
179	NULL	NULL	NULL	-3	529
153	NULL	NULL	NULL	-3	451
139	135	2052	-2	-3	410
213	212	3176	1	-3	634
163	164	2436	2	-3	481
159	NULL	NULL	NULL	-2	469
124	NULL	NULL	NULL	-2	367
172	173	2589	-1	-2	511
182	183	2739	-1	-2	541
108	109	1604	4	-2	319
222	220	3331	-4	-1	665
203	201	NULL	-3	-1	NULL
232	230	3477	-3	-1	696
216	217	3259	-2	-1	648
129	126	1899	1	-1	383
198	196	2946	1	-1	593
228	229	3405	4	-1	680
140	142	2129	-1	1	426
193	192	2880	1	1	578
247	249	3704	4	1	742
112	NULL	NULL	NULL	2	338
117	115	NULL	NULL	2	354
186	189	2802	4	2	563
146	NULL	NULL	NULL	3	443
131	133	1975	3	3	400
240	243	NULL	NULL	4	NULL


-- !query
SELECT b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       a+b*2+c*3+d*4+e*5,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
-- !query schema
struct<b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int>
-- !query output
102	444	NULL	NULL	NULL	1020	NULL
106	333	107	1604	-2	1060	-1
114	111	110	NULL	2	1140	NULL
119	222	116	NULL	2	1190	2
122	333	123	NULL	-2	1220	NULL
128	222	127	1899	-1	1280	3
134	222	132	1975	3	1340	-2
136	333	138	2052	-3	1360	4
141	444	144	2129	1	1410	-2
149	111	145	NULL	3	1490	NULL
150	333	151	NULL	-3	1500	NULL
157	222	155	NULL	-2	1570	NULL
160	333	161	2436	-3	1600	-1
170	333	171	2589	-2	1700	-1
176	333	177	NULL	-3	354	NULL
180	333	181	2739	-2	362	-1
188	222	187	2802	2	374	-3
194	111	190	2880	1	380	1
197	333	199	2946	-1	398	2
202	444	NULL	NULL	-1	NULL	2
210	444	214	3176	-3	428	1
215	444	218	3259	-1	436	-1
221	333	223	3331	-1	446	2
227	222	226	3405	-1	452	-1
231	444	234	3477	-1	468	2
236	333	237	NULL	-3	474	NULL
244	444	NULL	NULL	4	NULL	-3
248	222	246	3704	1	492	-2
NULL	444	167	NULL	NULL	NULL	3
NULL	444	208	NULL	NULL	NULL	NULL


-- !query
SELECT b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       a+b*2+c*3+d*4+e*5,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
 ORDER BY 1,6,5,4,7,2
-- !query schema
struct<b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int>
-- !query output
NULL	444	208	NULL	NULL	NULL	NULL
NULL	444	167	NULL	NULL	NULL	3
102	444	NULL	NULL	NULL	1020	NULL
106	333	107	1604	-2	1060	-1
114	111	110	NULL	2	1140	NULL
119	222	116	NULL	2	1190	2
122	333	123	NULL	-2	1220	NULL
128	222	127	1899	-1	1280	3
134	222	132	1975	3	1340	-2
136	333	138	2052	-3	1360	4
141	444	144	2129	1	1410	-2
149	111	145	NULL	3	1490	NULL
150	333	151	NULL	-3	1500	NULL
157	222	155	NULL	-2	1570	NULL
160	333	161	2436	-3	1600	-1
170	333	171	2589	-2	1700	-1
176	333	177	NULL	-3	354	NULL
180	333	181	2739	-2	362	-1
188	222	187	2802	2	374	-3
194	111	190	2880	1	380	1
197	333	199	2946	-1	398	2
202	444	NULL	NULL	-1	NULL	2
210	444	214	3176	-3	428	1
215	444	218	3259	-1	436	-1
221	333	223	3331	-1	446	2
227	222	226	3405	-1	452	-1
231	444	234	3477	-1	468	2
236	333	237	NULL	-3	474	NULL
244	444	NULL	NULL	4	NULL	-3
248	222	246	3704	1	492	-2


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       c,
       c-d
  FROM t1
 WHERE (e>a AND e<b)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int,(c - d):int>
-- !query output
1604	319	107.0	1079	108	-1
1899	383	127.0	1274	129	3
2436	481	162.0	1626	163	-1
2589	511	172.0	1719	172	-1
2739	541	182.0	1819	182	-1
2802	563	187.0	1877	186	-3
2880	578	192.0	1925	193	1
3405	680	227.0	2280	228	-1
NULL	338	NULL	NULL	112	NULL
NULL	367	NULL	NULL	124	NULL
NULL	443	NULL	NULL	146	NULL
NULL	451	NULL	NULL	153	NULL
NULL	529	NULL	NULL	179	NULL
NULL	709	NULL	NULL	239	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       c,
       c-d
  FROM t1
 WHERE (e>a AND e<b)
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,4,6,5,3
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int,(c - d):int>
-- !query output
1604	319	107.0	1079	108	-1
NULL	338	NULL	NULL	112	NULL
NULL	367	NULL	NULL	124	NULL
1899	383	127.0	1274	129	3
NULL	443	NULL	NULL	146	NULL
NULL	451	NULL	NULL	153	NULL
2436	481	162.0	1626	163	-1
2589	511	172.0	1719	172	-1
NULL	529	NULL	NULL	179	NULL
2739	541	182.0	1819	182	-1
2802	563	187.0	1877	186	-3
2880	578	192.0	1925	193	1
3405	680	227.0	2280	228	-1
NULL	709	NULL	NULL	239	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
222	1	1483
222	1	770
222	2	1121
222	2	705
222	3	793
333	1	1187
333	1	1331
333	2	1027
333	2	1087
333	2	643
333	2	739
333	3	1066
333	3	1426
333	3	827
333	3	910
333	3	970
444	1	1296
444	1	1392
444	1	846
444	1	NULL
444	3	1273
444	4	NULL
444	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,3
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
444	NULL	NULL
444	1	NULL
222	1	770
444	1	846
333	1	1187
444	1	1296
333	1	1331
444	1	1392
222	1	1483
333	2	643
222	2	705
333	2	739
333	2	1027
333	2	1087
222	2	1121
222	3	793
333	3	827
333	3	910
333	3	970
333	3	1066
444	3	1273
333	3	1426
444	4	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR a>b
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
222	1	1483
222	1	770
222	2	1121
222	2	705
222	3	793
333	1	1187
333	1	1331
333	2	1027
333	2	1087
333	2	643
333	2	739
333	3	1066
333	3	1426
333	3	827
333	3	910
333	3	970
444	1	1296
444	1	1392
444	1	846
444	1	NULL
444	3	1273
444	4	NULL
444	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR a>b
 ORDER BY 1,3,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
222	2	705
222	1	770
222	3	793
222	2	1121
222	1	1483
333	2	643
333	2	739
333	3	827
333	3	910
333	3	970
333	2	1027
333	3	1066
333	2	1087
333	1	1187
333	1	1331
333	3	1426
444	NULL	NULL
444	1	NULL
444	4	NULL
444	1	846
444	3	1273
444	1	1296
444	1	1392


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,6,4,3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 6,4,2,5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       abs(a),
       abs(b-c),
       a+b*2,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs(a):int,abs((b - c)):int,(a + (b * 2)):int,(a - b):int>
-- !query output
107.0	107	2	319	1
127.0	127	1	383	-1
162.0	161	3	481	1
172.0	171	2	511	1
182.0	181	2	541	1
187.0	187	2	563	-1
227.0	226	1	680	-1
NULL	123	2	367	1
NULL	151	3	451	1
NULL	177	3	529	1
NULL	237	3	709	1


-- !query
SELECT (a+b+c+d+e)/5,
       abs(a),
       abs(b-c),
       a+b*2,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 3,2,1,4,5
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs(a):int,abs((b - c)):int,(a + (b * 2)):int,(a - b):int>
-- !query output
127.0	127	1	383	-1
227.0	226	1	680	-1
107.0	107	2	319	1
NULL	123	2	367	1
172.0	171	2	511	1
182.0	181	2	541	1
187.0	187	2	563	-1
NULL	151	3	451	1
162.0	161	3	481	1
NULL	177	3	529	1
NULL	237	3	709	1


-- !query
SELECT e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT e
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT e
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT a+b*2,
       abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a + (b * 2)):int,abs(a):int>
-- !query output
319	107
481	161
511	171
541	181
563	187
578	190
593	199
634	214
648	218
665	223
680	226
696	234
742	246
NULL	167
NULL	208
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2,
       abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 1,2
-- !query schema
struct<(a + (b * 2)):int,abs(a):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	167
NULL	208
319	107
481	161
511	171
541	181
563	187
578	190
593	199
634	214
648	218
665	223
680	226
696	234
742	246


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3
  FROM t1
 WHERE (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3
  FROM t1
 WHERE (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       a+b*2+c*3+d*4,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       a+b*2+c*3+d*4,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 3,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       d,
       a+b*2,
       c-d,
       e,
       b-c
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,d:int,(a + (b * 2)):int,(c - d):int,e:int,(b - c):int>
-- !query output
1027	173	511	-1	174	-2
1066	NULL	529	NULL	175	-3
1087	183	541	-1	184	-2
1121	189	563	-3	185	2
1157	192	578	1	191	1
1187	196	593	2	195	-1
1273	212	634	1	211	-3
1296	217	648	-1	219	-1
1331	220	665	2	224	-1
1364	229	680	-1	225	-1
1392	230	696	2	233	-1
1426	NULL	709	NULL	238	-3
1483	249	742	-2	245	1
643	109	319	-1	105	-2
674	NULL	338	NULL	113	2
705	115	354	2	NULL	2
739	NULL	367	NULL	121	-2
770	126	383	3	125	-1
793	133	400	-2	130	3
827	135	410	4	137	-3
846	142	426	-2	143	1
881	NULL	443	NULL	147	3
910	NULL	451	NULL	NULL	-3
946	NULL	469	NULL	158	-2
970	164	481	-1	162	-3
NULL	101	NULL	NULL	104	NULL
NULL	165	NULL	3	166	NULL
NULL	201	NULL	2	204	-1
NULL	206	NULL	NULL	207	NULL
NULL	243	NULL	-3	NULL	4


-- !query
SELECT a+b*2+c*3,
       d,
       a+b*2,
       c-d,
       e,
       b-c
  FROM t1
 ORDER BY 4,2,5
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,d:int,(a + (b * 2)):int,(c - d):int,e:int,(b - c):int>
-- !query output
910	NULL	451	NULL	NULL	-3
674	NULL	338	NULL	113	2
739	NULL	367	NULL	121	-2
881	NULL	443	NULL	147	3
946	NULL	469	NULL	158	-2
1066	NULL	529	NULL	175	-3
1426	NULL	709	NULL	238	-3
NULL	101	NULL	NULL	104	NULL
NULL	206	NULL	NULL	207	NULL
1121	189	563	-3	185	2
NULL	243	NULL	-3	NULL	4
793	133	400	-2	130	3
846	142	426	-2	143	1
1483	249	742	-2	245	1
643	109	319	-1	105	-2
970	164	481	-1	162	-3
1027	173	511	-1	174	-2
1087	183	541	-1	184	-2
1296	217	648	-1	219	-1
1364	229	680	-1	225	-1
1157	192	578	1	191	1
1273	212	634	1	211	-3
705	115	354	2	NULL	2
1187	196	593	2	195	-1
NULL	201	NULL	2	204	-1
1331	220	665	2	224	-1
1392	230	696	2	233	-1
770	126	383	3	125	-1
NULL	165	NULL	3	166	NULL
827	135	410	4	137	-3


-- !query
SELECT a+b*2+c*3+d*4,
       abs(a),
       d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND (e>c OR e<d)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int,(d - e):int>
-- !query output
1925	190	1
NULL	110	NULL
NULL	145	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       abs(a),
       d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND (e>c OR e<d)
 ORDER BY 1,3
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int,(d - e):int>
-- !query output
NULL	110	NULL
NULL	145	NULL
1925	190	1


-- !query
SELECT a+b*2+c*3+d*4,
       abs(a),
       d-e
  FROM t1
 WHERE (e>c OR e<d)
   AND (e>a AND e<b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int,(d - e):int>
-- !query output
1925	190	1
NULL	110	NULL
NULL	145	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       abs(a),
       d-e
  FROM t1
 WHERE (e>c OR e<d)
   AND (e>a AND e<b)
 ORDER BY 2,1,3
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int,(d - e):int>
-- !query output
NULL	110	NULL
NULL	145	NULL
1925	190	1


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       d-e,
       c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       d-e,
       c
  FROM t1
 ORDER BY 3,2,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e
  FROM t1
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-1
-1
-2
-2
-3
-3
-3
-4
1
1
1
1
2
3
4
4
4
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
-4
-3
-3
-3
-2
-2
-1
-1
-1
-1
-1
1
1
1
1
2
3
4
4
4
4


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND b>c
 ORDER BY 1,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
 ORDER BY 3,1,5,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
 ORDER BY 3,4,5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<(d - e):int,e:int>
-- !query output
-1	174
-1	184
1	125
2	162
4	105
4	185
4	225
NULL	121
NULL	175
NULL	238
NULL	NULL


-- !query
SELECT d-e,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<(d - e):int,e:int>
-- !query output
NULL	NULL
4	105
NULL	121
1	125
2	162
-1	174
NULL	175
-1	184
4	185
4	225
NULL	238


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
   AND (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
   AND b>c
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444
444
444
444


-- !query
SELECT c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-3
1
1
2
2
2
2


-- !query
SELECT c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<(c - d):int>
-- !query output
-3
-2
-1
-1
-1
-1
-1
-1
1
1
2
2
2
2


-- !query
SELECT c-d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-3
1
1
2
2
2
2


-- !query
SELECT c-d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<(c - d):int>
-- !query output
-3
-2
-1
-1
-1
-1
-1
-1
1
1
2
2
2
2


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
    OR c>d
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
111	114
111	149
111	194
222	119
222	128
222	134
222	188
222	227
222	248
333	106
333	136
333	160
333	170
333	180
333	197
333	221
444	141
444	202
444	210
444	215
444	231
444	244
444	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
    OR c>d
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
111	114
111	149
111	194
222	119
222	128
222	134
222	188
222	227
222	248
333	106
333	136
333	160
333	170
333	180
333	197
333	221
444	NULL
444	141
444	202
444	210
444	215
444	231
444	244


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE b>c
    OR c>d
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
111	114
111	149
111	194
222	119
222	128
222	134
222	188
222	227
222	248
333	106
333	136
333	160
333	170
333	180
333	197
333	221
444	141
444	202
444	210
444	215
444	231
444	244
444	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE b>c
    OR c>d
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
111	114
111	149
111	194
222	119
222	128
222	134
222	188
222	227
222	248
333	106
333	136
333	160
333	170
333	180
333	197
333	221
444	NULL
444	141
444	202
444	210
444	215
444	231
444	244


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE c>d
    OR b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
111	114
111	149
111	194
222	119
222	128
222	134
222	188
222	227
222	248
333	106
333	136
333	160
333	170
333	180
333	197
333	221
444	141
444	202
444	210
444	215
444	231
444	244
444	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE c>d
    OR b>c
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int>
-- !query output
111	114
111	149
111	194
222	119
222	128
222	134
222	188
222	227
222	248
333	106
333	136
333	160
333	170
333	180
333	197
333	221
444	NULL
444	141
444	202
444	210
444	215
444	231
444	244


-- !query
SELECT d-e,
       a,
       e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(d - e):int,a:int,e:int>
-- !query output
-1	144	143
-1	167	166
-2	138	137
-3	234	233
-3	NULL	204
-4	223	224
1	127	125
1	199	195
3	132	130
4	187	185
4	246	245
NULL	116	NULL
NULL	NULL	NULL


-- !query
SELECT d-e,
       a,
       e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 3,2,1
-- !query schema
struct<(d - e):int,a:int,e:int>
-- !query output
NULL	NULL	NULL
NULL	116	NULL
1	127	125
3	132	130
-2	138	137
-1	144	143
-1	167	166
4	187	185
1	199	195
-3	NULL	204
-4	223	224
-3	234	233
4	246	245


-- !query
SELECT a+b*2
  FROM t1
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
338
354
367
383
400
410
426
443
451
469
481
511
529
541
563
578
593
634
648
665
680
696
709
742
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2
  FROM t1
 ORDER BY 1
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
319
338
354
367
383
400
410
426
443
451
469
481
511
529
541
563
578
593
634
648
665
680
696
709
742


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d>e
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int>
-- !query output
189	2802	2
196	2946	-1
249	3704	1


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d>e
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,3
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int>
-- !query output
189	2802	2
196	2946	-1
249	3704	1


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       b-c
  FROM t1
 WHERE d>e
   AND (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int>
-- !query output
189	2802	2
196	2946	-1
249	3704	1


-- !query
SELECT d,
       a+b*2+c*3+d*4+e*5,
       b-c
  FROM t1
 WHERE d>e
   AND (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,1
-- !query schema
struct<d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int>
-- !query output
189	2802	2
196	2946	-1
249	3704	1


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       a+b*2+c*3+d*4,
       a,
       a+b*2+c*3,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
-- !query schema
struct<(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	1410	143	1414	144	846	142.0
1	380	191	1925	190	1157	192.0
3	1340	130	1325	132	793	132.0
4	374	185	1877	187	1121	187.0
4	492	245	2479	246	1483	247.0
NULL	1140	113	NULL	110	674	NULL
NULL	1190	NULL	1165	116	705	NULL
NULL	1490	147	NULL	145	881	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       a+b*2+c*3+d*4,
       a,
       a+b*2+c*3,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
 ORDER BY 5,6,2,4
-- !query schema
struct<(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	1140	113	NULL	110	674	NULL
NULL	1190	NULL	1165	116	705	NULL
3	1340	130	1325	132	793	132.0
-1	1410	143	1414	144	846	142.0
NULL	1490	147	NULL	145	881	NULL
4	374	185	1877	187	1121	187.0
1	380	191	1925	190	1157	192.0
4	492	245	2479	246	1483	247.0


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3+d*4,
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3+d*4,
       a
  FROM t1
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       a-b,
       e,
       d-e
  FROM t1
 WHERE b>c
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(a - b):int,e:int,(d - e):int>
-- !query output
1121	-1	185	4
1157	-4	191	1
1483	-2	245	4
674	-4	113	NULL
705	-3	NULL	NULL
793	-2	130	3
846	3	143	-1
881	-4	147	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3,
       a-b,
       e,
       d-e
  FROM t1
 WHERE b>c
 ORDER BY 3,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(a - b):int,e:int,(d - e):int>
-- !query output
NULL	NULL	NULL	NULL
705	-3	NULL	NULL
674	-4	113	NULL
793	-2	130	3
846	3	143	-1
881	-4	147	NULL
1121	-1	185	4
1157	-4	191	1
1483	-2	245	4


-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       e,
       (a+b+c+d+e)/5,
       b,
       d,
       c-d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,e:int,(((((a + b) + c) + d) + e) / 5):double,b:int,d:int,(c - d):int>
-- !query output
1027	2	174	172.0	170	173	-1
1066	3	175	NULL	176	NULL	NULL
1087	2	184	182.0	180	183	-1
1121	2	185	187.0	188	189	-3
1187	1	195	197.0	197	196	2
1273	3	211	212.0	210	212	1
1296	1	219	217.0	215	217	-1
1331	1	224	222.0	221	220	2
1364	1	225	227.0	227	229	-1
1392	1	233	232.0	231	230	2
1426	3	238	NULL	236	NULL	NULL
643	2	105	107.0	106	109	-1
739	2	121	NULL	122	NULL	NULL
770	1	125	127.0	128	126	3
827	3	137	137.0	136	135	4
846	1	143	142.0	141	142	-2
910	3	NULL	NULL	150	NULL	NULL
970	3	162	162.0	160	164	-1


-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       e,
       (a+b+c+d+e)/5,
       b,
       d,
       c-d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
 ORDER BY 2,6,3,1,5,4,7
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,e:int,(((((a + b) + c) + d) + e) / 5):double,b:int,d:int,(c - d):int>
-- !query output
770	1	125	127.0	128	126	3
846	1	143	142.0	141	142	-2
1187	1	195	197.0	197	196	2
1296	1	219	217.0	215	217	-1
1331	1	224	222.0	221	220	2
1364	1	225	227.0	227	229	-1
1392	1	233	232.0	231	230	2
739	2	121	NULL	122	NULL	NULL
643	2	105	107.0	106	109	-1
1027	2	174	172.0	170	173	-1
1087	2	184	182.0	180	183	-1
1121	2	185	187.0	188	189	-3
910	3	NULL	NULL	150	NULL	NULL
1066	3	175	NULL	176	NULL	NULL
1426	3	238	NULL	236	NULL	NULL
827	3	137	137.0	136	135	4
970	3	162	162.0	160	164	-1
1273	3	211	212.0	210	212	1


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       a+b*2+c*3+d*4,
       a,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,d:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1060	109	1079	107	1604
1280	126	1274	127	1899


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       a+b*2+c*3+d*4,
       a,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,5,1,3,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,d:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1060	109	1079	107	1604
1280	126	1274	127	1899


-- !query
SELECT (a+b+c+d+e)/5,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       c-d,
       a+b*2
  FROM t1
 WHERE d>e
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       c-d,
       a+b*2
  FROM t1
 WHERE d>e
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       c-d,
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       c-d,
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
 ORDER BY 3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
 ORDER BY 1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       c-d,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<(b - c):int,(c - d):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	-1	216	444
-1	-1	228	111
-1	2	198	555
-1	2	203	555
-1	2	222	444
-1	2	232	555
-1	3	129	111
-2	-1	108	222
-2	-1	172	222
-2	-1	182	222
-2	NULL	124	222
-2	NULL	159	555
-3	-1	163	444
-3	1	213	555
-3	4	139	222
-3	NULL	153	555
-3	NULL	179	555
-3	NULL	239	444
1	-2	140	555
1	-2	247	222
1	1	193	444
2	-3	186	111
2	2	117	222
2	NULL	112	555
3	-2	131	333
3	NULL	146	222
4	-3	240	555
NULL	3	168	222
NULL	NULL	NULL	555
NULL	NULL	NULL	555


-- !query
SELECT b-c,
       c-d,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 ORDER BY 1,3,4
-- !query schema
struct<(b - c):int,(c - d):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	NULL	NULL	555
NULL	NULL	NULL	555
NULL	3	168	222
-3	4	139	222
-3	NULL	153	555
-3	-1	163	444
-3	NULL	179	555
-3	1	213	555
-3	NULL	239	444
-2	-1	108	222
-2	NULL	124	222
-2	NULL	159	555
-2	-1	172	222
-2	-1	182	222
-1	3	129	111
-1	2	198	555
-1	2	203	555
-1	-1	216	444
-1	2	222	444
-1	-1	228	111
-1	2	232	555
1	-2	140	555
1	1	193	444
1	-2	247	222
2	NULL	112	555
2	2	117	222
2	-3	186	111
3	-2	131	333
3	NULL	146	222
4	-3	240	555


-- !query
SELECT a-b,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 ORDER BY 4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<d:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
126	-1	127.0
133	3	132.0
189	2	187.0
196	-1	197.0
249	1	247.0


-- !query
SELECT d,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,3,1
-- !query schema
struct<d:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
126	-1	127.0
196	-1	197.0
249	1	247.0
189	2	187.0
133	3	132.0


-- !query
SELECT d,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
   AND (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
-- !query schema
struct<d:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
126	-1	127.0
133	3	132.0
189	2	187.0
196	-1	197.0
249	1	247.0


-- !query
SELECT d,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
   AND (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
 ORDER BY 1,3
-- !query schema
struct<d:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
126	-1	127.0
133	3	132.0
189	2	187.0
196	-1	197.0
249	1	247.0


-- !query
SELECT d,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
   AND d>e
-- !query schema
struct<d:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
126	-1	127.0
133	3	132.0
189	2	187.0
196	-1	197.0
249	1	247.0


-- !query
SELECT d,
       b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
   AND d>e
 ORDER BY 1,2
-- !query schema
struct<d:int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
126	-1	127.0
133	3	132.0
189	2	187.0
196	-1	197.0
249	1	247.0


-- !query
SELECT a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       a+b*2+c*3+d*4+e*5,
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       a+b*2+c*3+d*4+e*5,
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
 ORDER BY 1,5,3,6,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       a+b*2+c*3+d*4+e*5,
       abs(a)
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       a+b*2+c*3+d*4+e*5,
       abs(a)
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT e
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT e
  FROM t1
 WHERE d>e
   AND d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT e
  FROM t1
 WHERE d>e
   AND d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
   AND d>e
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
   AND d>e
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT e
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND d>e
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT e
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND d>e
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
105
162
185
191
195
211
225
245


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>a AND e<b)
 ORDER BY 1,5,4,3,6,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE (e>a AND e<b)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE (e>a AND e<b)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 6,1,5,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1060	107.0
1280	127.0


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1060	107.0
1280	127.0


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       abs(b-c),
       b
  FROM t1
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,b:int>
-- !query output
108	1604	107.0	2	106
112	NULL	NULL	2	114
117	NULL	NULL	2	119
124	NULL	NULL	2	122
129	1899	127.0	1	128
131	1975	132.0	3	134
139	2052	137.0	3	136
140	2129	142.0	1	141
146	NULL	NULL	3	149
153	NULL	NULL	3	150
159	NULL	NULL	2	157
163	2436	162.0	3	160
168	NULL	NULL	NULL	NULL
172	2589	172.0	2	170
179	NULL	NULL	3	176
182	2739	182.0	2	180
186	2802	187.0	2	188
193	2880	192.0	1	194
198	2946	197.0	1	197
203	NULL	NULL	1	202
213	3176	212.0	3	210
216	3259	217.0	1	215
222	3331	222.0	1	221
228	3405	227.0	1	227
232	3477	232.0	1	231
239	NULL	NULL	3	236
240	NULL	NULL	4	244
247	3704	247.0	1	248
NULL	NULL	NULL	NULL	102
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       abs(b-c),
       b
  FROM t1
 ORDER BY 2,4,1,3,5
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,b:int>
-- !query output
NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	102
168	NULL	NULL	NULL	NULL
203	NULL	NULL	1	202
112	NULL	NULL	2	114
117	NULL	NULL	2	119
124	NULL	NULL	2	122
159	NULL	NULL	2	157
146	NULL	NULL	3	149
153	NULL	NULL	3	150
179	NULL	NULL	3	176
239	NULL	NULL	3	236
240	NULL	NULL	4	244
108	1604	107.0	2	106
129	1899	127.0	1	128
131	1975	132.0	3	134
139	2052	137.0	3	136
140	2129	142.0	1	141
163	2436	162.0	3	160
172	2589	172.0	2	170
182	2739	182.0	2	180
186	2802	187.0	2	188
193	2880	192.0	1	194
198	2946	197.0	1	197
213	3176	212.0	3	210
216	3259	217.0	1	215
222	3331	222.0	1	221
228	3405	227.0	1	227
232	3477	232.0	1	231
247	3704	247.0	1	248


-- !query
SELECT a+b*2,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
319	-1	222	1060
338	NULL	555	1140
354	2	222	1190
367	NULL	222	1220
383	3	111	1280
400	-2	333	1340
410	4	222	1360
426	-2	555	1410
443	NULL	222	1490
451	NULL	555	1500
469	NULL	555	1570
481	-1	444	1600
511	-1	222	1700
529	NULL	555	354
541	-1	222	362
563	-3	111	374
578	1	444	380
593	2	555	398
634	1	555	428
648	-1	444	436
665	2	444	446
680	-1	111	452
696	2	555	468
709	NULL	444	474
742	-2	222	492
NULL	-3	555	NULL
NULL	2	555	NULL
NULL	3	222	NULL
NULL	NULL	555	1020
NULL	NULL	555	NULL


-- !query
SELECT a+b*2,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 2,3,4
-- !query schema
struct<(a + (b * 2)):int,(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
367	NULL	222	1220
443	NULL	222	1490
709	NULL	444	474
NULL	NULL	555	NULL
529	NULL	555	354
NULL	NULL	555	1020
338	NULL	555	1140
451	NULL	555	1500
469	NULL	555	1570
563	-3	111	374
NULL	-3	555	NULL
742	-2	222	492
400	-2	333	1340
426	-2	555	1410
680	-1	111	452
541	-1	222	362
319	-1	222	1060
511	-1	222	1700
648	-1	444	436
481	-1	444	1600
578	1	444	380
634	1	555	428
354	2	222	1190
665	2	444	446
NULL	2	555	NULL
593	2	555	398
696	2	555	468
383	3	111	1280
NULL	3	222	NULL
410	4	222	1360


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND a>b
 ORDER BY 3,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
 ORDER BY 3,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 ORDER BY 2,3,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       a+b*2+c*3+d*4+e*5,
       b
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       a+b*2+c*3+d*4+e*5,
       b
  FROM t1
 ORDER BY 3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a-b,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a - b):int,d:int>
-- !query output
1604	1	109
1899	-1	126


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a-b,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a - b):int,d:int>
-- !query output
1899	-1	126
1604	1	109


-- !query
SELECT a,
       abs(a),
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<a:int,abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
107	107	1604
110	110	NULL
116	116	NULL
123	123	NULL
127	127	1899
132	132	1975
138	138	2052
144	144	2129
145	145	NULL
151	151	NULL
155	155	NULL
161	161	2436
167	167	NULL
171	171	2589
177	177	NULL
181	181	2739
187	187	2802
190	190	2880
199	199	2946
208	208	NULL
214	214	3176
218	218	3259
223	223	3331
226	226	3405
234	234	3477
237	237	NULL
246	246	3704
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT a,
       abs(a),
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 1,3
-- !query schema
struct<a:int,abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL
107	107	1604
110	110	NULL
116	116	NULL
123	123	NULL
127	127	1899
132	132	1975
138	138	2052
144	144	2129
145	145	NULL
151	151	NULL
155	155	NULL
161	161	2436
167	167	NULL
171	171	2589
177	177	NULL
181	181	2739
187	187	2802
190	190	2880
199	199	2946
208	208	NULL
214	214	3176
218	218	3259
223	223	3331
226	226	3405
234	234	3477
237	237	NULL
246	246	3704


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       b-c,
       a,
       d-e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
    OR d>e
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int,(d - e):int>
-- !query output
108	1604	-2	107	4
117	NULL	2	116	NULL
124	NULL	-2	123	NULL
129	1899	-1	127	1
131	1975	3	132	3
140	2129	1	144	-1
153	NULL	-3	151	NULL
163	2436	-3	161	2
172	2589	-2	171	-1
179	NULL	-3	177	NULL
182	2739	-2	181	-1
186	2802	2	187	4
193	2880	1	190	1
198	2946	-1	199	1
203	NULL	-1	NULL	-3
213	3176	-3	214	1
216	3259	-1	218	-2
222	3331	-1	223	-4
228	3405	-1	226	4
232	3477	-1	234	-3
239	NULL	-3	237	NULL
247	3704	1	246	4


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       b-c,
       a,
       d-e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
    OR d>e
 ORDER BY 3,5,4,2
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int,(d - e):int>
-- !query output
153	NULL	-3	151	NULL
179	NULL	-3	177	NULL
239	NULL	-3	237	NULL
213	3176	-3	214	1
163	2436	-3	161	2
124	NULL	-2	123	NULL
172	2589	-2	171	-1
182	2739	-2	181	-1
108	1604	-2	107	4
222	3331	-1	223	-4
203	NULL	-1	NULL	-3
232	3477	-1	234	-3
216	3259	-1	218	-2
129	1899	-1	127	1
198	2946	-1	199	1
228	3405	-1	226	4
140	2129	1	144	-1
193	2880	1	190	1
247	3704	1	246	4
117	NULL	2	116	NULL
186	2802	2	187	4
131	1975	3	132	3


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       b-c,
       a,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
    OR d>e
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int,(d - e):int>
-- !query output
108	1604	-2	107	4
117	NULL	2	116	NULL
124	NULL	-2	123	NULL
129	1899	-1	127	1
131	1975	3	132	3
140	2129	1	144	-1
153	NULL	-3	151	NULL
163	2436	-3	161	2
172	2589	-2	171	-1
179	NULL	-3	177	NULL
182	2739	-2	181	-1
186	2802	2	187	4
193	2880	1	190	1
198	2946	-1	199	1
203	NULL	-1	NULL	-3
213	3176	-3	214	1
216	3259	-1	218	-2
222	3331	-1	223	-4
228	3405	-1	226	4
232	3477	-1	234	-3
239	NULL	-3	237	NULL
247	3704	1	246	4


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       b-c,
       a,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
    OR d>e
 ORDER BY 3,2,5,1,4
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int,(d - e):int>
-- !query output
153	NULL	-3	151	NULL
179	NULL	-3	177	NULL
239	NULL	-3	237	NULL
163	2436	-3	161	2
213	3176	-3	214	1
124	NULL	-2	123	NULL
108	1604	-2	107	4
172	2589	-2	171	-1
182	2739	-2	181	-1
203	NULL	-1	NULL	-3
129	1899	-1	127	1
198	2946	-1	199	1
216	3259	-1	218	-2
222	3331	-1	223	-4
228	3405	-1	226	4
232	3477	-1	234	-3
140	2129	1	144	-1
193	2880	1	190	1
247	3704	1	246	4
117	NULL	2	116	NULL
186	2802	2	187	4
131	1975	3	132	3


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       b-c,
       a,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d>e
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int,(d - e):int>
-- !query output
108	1604	-2	107	4
117	NULL	2	116	NULL
124	NULL	-2	123	NULL
129	1899	-1	127	1
131	1975	3	132	3
140	2129	1	144	-1
153	NULL	-3	151	NULL
163	2436	-3	161	2
172	2589	-2	171	-1
179	NULL	-3	177	NULL
182	2739	-2	181	-1
186	2802	2	187	4
193	2880	1	190	1
198	2946	-1	199	1
203	NULL	-1	NULL	-3
213	3176	-3	214	1
216	3259	-1	218	-2
222	3331	-1	223	-4
228	3405	-1	226	4
232	3477	-1	234	-3
239	NULL	-3	237	NULL
247	3704	1	246	4


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       b-c,
       a,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d>e
    OR c BETWEEN b-2 AND d+2
 ORDER BY 5,3
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int,(d - e):int>
-- !query output
239	NULL	-3	237	NULL
179	NULL	-3	177	NULL
153	NULL	-3	151	NULL
124	NULL	-2	123	NULL
117	NULL	2	116	NULL
222	3331	-1	223	-4
232	3477	-1	234	-3
203	NULL	-1	NULL	-3
216	3259	-1	218	-2
172	2589	-2	171	-1
182	2739	-2	181	-1
140	2129	1	144	-1
213	3176	-3	214	1
129	1899	-1	127	1
198	2946	-1	199	1
193	2880	1	190	1
163	2436	-3	161	2
131	1975	3	132	3
108	1604	-2	107	4
228	3405	-1	226	4
247	3704	1	246	4
186	2802	2	187	4


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       b-c,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
-- !query schema
struct<a:int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	107.0	-2	319	333
123	NULL	-2	367	333
138	137.0	-3	410	333
144	142.0	1	426	444
151	NULL	-3	451	333
161	162.0	-3	481	333
171	172.0	-2	511	333
177	NULL	-3	529	333
181	182.0	-2	541	333
199	197.0	-1	593	333
214	212.0	-3	634	444
218	217.0	-1	648	444
223	222.0	-1	665	333
234	232.0	-1	696	444
237	NULL	-3	709	333


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       b-c,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
 ORDER BY 1,2
-- !query schema
struct<a:int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	107.0	-2	319	333
123	NULL	-2	367	333
138	137.0	-3	410	333
144	142.0	1	426	444
151	NULL	-3	451	333
161	162.0	-3	481	333
171	172.0	-2	511	333
177	NULL	-3	529	333
181	182.0	-2	541	333
199	197.0	-1	593	333
214	212.0	-3	634	444
218	217.0	-1	648	444
223	222.0	-1	665	333
234	232.0	-1	696	444
237	NULL	-3	709	333


-- !query
SELECT a+b*2
  FROM t1
 WHERE b>c
    OR a>b
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
338
354
367
400
410
426
443
451
481
511
529
541
563
578
593
634
648
665
696
709
742
NULL


-- !query
SELECT a+b*2
  FROM t1
 WHERE b>c
    OR a>b
 ORDER BY 1
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
NULL
319
338
354
367
400
410
426
443
451
481
511
529
541
563
578
593
634
648
665
696
709
742


-- !query
SELECT a+b*2
  FROM t1
 WHERE a>b
    OR b>c
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
338
354
367
400
410
426
443
451
481
511
529
541
563
578
593
634
648
665
696
709
742
NULL


-- !query
SELECT a+b*2
  FROM t1
 WHERE a>b
    OR b>c
 ORDER BY 1
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
NULL
319
338
354
367
400
410
426
443
451
481
511
529
541
563
578
593
634
648
665
696
709
742


-- !query
SELECT b-c,
       a+b*2,
       a+b*2+c*3+d*4,
       d-e
  FROM t1
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int>
-- !query output
-1	383	1274	1
-1	593	1971	1
-1	648	2164	-2
-1	665	2211	-4
-1	680	2280	4
-1	696	2312	-3
-1	NULL	NULL	-3
-2	319	1079	4
-2	367	NULL	NULL
-2	469	NULL	NULL
-2	511	1719	-1
-2	541	1819	-1
-3	410	1367	-2
-3	451	NULL	NULL
-3	481	1626	2
-3	529	NULL	NULL
-3	634	2121	1
-3	709	NULL	NULL
1	426	1414	-1
1	578	1925	1
1	742	2479	4
2	338	NULL	NULL
2	354	1165	NULL
2	563	1877	4
3	400	1325	3
3	443	NULL	NULL
4	NULL	NULL	NULL
NULL	NULL	NULL	-1
NULL	NULL	NULL	-1
NULL	NULL	NULL	-3


-- !query
SELECT b-c,
       a+b*2,
       a+b*2+c*3+d*4,
       d-e
  FROM t1
 ORDER BY 4,3
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int>
-- !query output
2	338	NULL	NULL
-2	469	NULL	NULL
-3	709	NULL	NULL
-2	367	NULL	NULL
3	443	NULL	NULL
-3	529	NULL	NULL
4	NULL	NULL	NULL
-3	451	NULL	NULL
2	354	1165	NULL
-1	665	2211	-4
-1	NULL	NULL	-3
NULL	NULL	NULL	-3
-1	696	2312	-3
-3	410	1367	-2
-1	648	2164	-2
NULL	NULL	NULL	-1
NULL	NULL	NULL	-1
1	426	1414	-1
-2	511	1719	-1
-2	541	1819	-1
-1	383	1274	1
1	578	1925	1
-1	593	1971	1
-3	634	2121	1
-3	481	1626	2
3	400	1325	3
-2	319	1079	4
2	563	1877	4
-1	680	2280	4
1	742	2479	4


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
 ORDER BY 3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
   AND d>e
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1274
1971


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
   AND d>e
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1274
1971


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
   AND c>d
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1274
1971


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
   AND c>d
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1274
1971


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND d>e
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1274
1971


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND d>e
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1274
1971


-- !query
SELECT b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
-- !query schema
struct<(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
-1	222
-1	222
-1	333
-2	333
-3	333
-3	444
1	111
1	222
2	222
3	222


-- !query
SELECT b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
 ORDER BY 1,2
-- !query schema
struct<(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
-3	333
-3	444
-2	333
-1	222
-1	222
-1	333
1	111
1	222
2	222
3	222


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 5,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       abs(a)
  FROM t1
-- !query schema
struct<(a - b):int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int>
-- !query output
-1	127	222	127.0	127
-1	187	222	187.0	187
-1	226	222	227.0	226
-2	132	222	132.0	132
-2	155	222	NULL	155
-2	246	222	247.0	246
-3	116	222	NULL	116
-4	110	111	NULL	110
-4	145	111	NULL	145
-4	190	111	192.0	190
1	107	333	107.0	107
1	123	333	NULL	123
1	151	333	NULL	151
1	161	333	162.0	161
1	171	333	172.0	171
1	177	333	NULL	177
1	181	333	182.0	181
1	237	333	NULL	237
2	138	333	137.0	138
2	199	333	197.0	199
2	223	333	222.0	223
3	144	444	142.0	144
3	218	444	217.0	218
3	234	444	232.0	234
4	214	444	212.0	214
NULL	167	444	NULL	167
NULL	208	444	NULL	208
NULL	NULL	444	NULL	NULL
NULL	NULL	444	NULL	NULL
NULL	NULL	444	NULL	NULL


-- !query
SELECT a-b,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       abs(a)
  FROM t1
 ORDER BY 4,2
-- !query schema
struct<(a - b):int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int>
-- !query output
NULL	NULL	444	NULL	NULL
NULL	NULL	444	NULL	NULL
NULL	NULL	444	NULL	NULL
-4	110	111	NULL	110
-3	116	222	NULL	116
1	123	333	NULL	123
-4	145	111	NULL	145
1	151	333	NULL	151
-2	155	222	NULL	155
NULL	167	444	NULL	167
1	177	333	NULL	177
NULL	208	444	NULL	208
1	237	333	NULL	237
1	107	333	107.0	107
-1	127	222	127.0	127
-2	132	222	132.0	132
2	138	333	137.0	138
3	144	444	142.0	144
1	161	333	162.0	161
1	171	333	172.0	171
1	181	333	182.0	181
-1	187	222	187.0	187
-4	190	111	192.0	190
2	199	333	197.0	199
4	214	444	212.0	214
3	218	444	217.0	218
2	223	333	222.0	223
-1	226	222	227.0	226
3	234	444	232.0	234
-2	246	222	247.0	246


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a-b,
       e
  FROM t1
 WHERE (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a-b,
       e
  FROM t1
 WHERE (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
   AND c>d
 ORDER BY 5,3,1,4,2,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a-b,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a-b,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
   AND c>d
 ORDER BY 6,5,4,7,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a-b,
       e
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a-b,
       e
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2,3,6,7,4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(a - b):int,c:int>
-- !query output
-1	129
-1	186
-1	228
-2	131
-2	159
-2	247
-3	117
-4	112
-4	146
-4	193
1	108
1	124
1	153
1	163
1	172
1	179
1	182
1	239
2	139
2	198
2	222
3	140
3	216
3	232
4	213
NULL	203
NULL	240


-- !query
SELECT a-b,
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<(a - b):int,c:int>
-- !query output
NULL	203
NULL	240
-4	112
-4	146
-4	193
-3	117
-2	131
-2	159
-2	247
-1	129
-1	186
-1	228
1	108
1	124
1	153
1	163
1	172
1	179
1	182
1	239
2	139
2	198
2	222
3	140
3	216
3	232
4	213


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT (a+b+c+d+e)/5,
       b,
       abs(b-c),
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,b:int,abs((b - c)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
107.0	106	2	108	1060
127.0	128	1	129	1280
132.0	134	3	131	1340
137.0	136	3	139	1360
142.0	141	1	140	1410
162.0	160	3	163	1600
172.0	170	2	172	1700
182.0	180	2	182	362
187.0	188	2	186	374
192.0	194	1	193	380
197.0	197	1	198	398
212.0	210	3	213	428
217.0	215	1	216	436
222.0	221	1	222	446
227.0	227	1	228	452
232.0	231	1	232	468
247.0	248	1	247	492
NULL	114	2	112	1140
NULL	119	2	117	1190
NULL	122	2	124	1220
NULL	149	3	146	1490
NULL	150	3	153	1500
NULL	157	2	159	1570
NULL	176	3	179	354
NULL	202	1	203	NULL
NULL	236	3	239	474
NULL	244	4	240	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       b,
       abs(b-c),
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,4,5,1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,b:int,abs((b - c)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
127.0	128	1	129	1280
142.0	141	1	140	1410
192.0	194	1	193	380
197.0	197	1	198	398
NULL	202	1	203	NULL
217.0	215	1	216	436
222.0	221	1	222	446
227.0	227	1	228	452
232.0	231	1	232	468
247.0	248	1	247	492
107.0	106	2	108	1060
NULL	114	2	112	1140
NULL	119	2	117	1190
NULL	122	2	124	1220
NULL	157	2	159	1570
172.0	170	2	172	1700
182.0	180	2	182	362
187.0	188	2	186	374
132.0	134	3	131	1340
137.0	136	3	139	1360
NULL	149	3	146	1490
NULL	150	3	153	1500
162.0	160	3	163	1600
NULL	176	3	179	354
212.0	210	3	213	428
NULL	236	3	239	474
NULL	244	4	240	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       b,
       abs(b-c),
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,b:int,abs((b - c)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
107.0	106	2	108	1060
127.0	128	1	129	1280
132.0	134	3	131	1340
137.0	136	3	139	1360
142.0	141	1	140	1410
162.0	160	3	163	1600
172.0	170	2	172	1700
182.0	180	2	182	362
187.0	188	2	186	374
192.0	194	1	193	380
197.0	197	1	198	398
212.0	210	3	213	428
217.0	215	1	216	436
222.0	221	1	222	446
227.0	227	1	228	452
232.0	231	1	232	468
247.0	248	1	247	492
NULL	114	2	112	1140
NULL	119	2	117	1190
NULL	122	2	124	1220
NULL	149	3	146	1490
NULL	150	3	153	1500
NULL	157	2	159	1570
NULL	176	3	179	354
NULL	202	1	203	NULL
NULL	236	3	239	474
NULL	244	4	240	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       b,
       abs(b-c),
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 5,4,3
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,b:int,abs((b - c)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	202	1	203	NULL
NULL	244	4	240	NULL
NULL	176	3	179	354
182.0	180	2	182	362
187.0	188	2	186	374
192.0	194	1	193	380
197.0	197	1	198	398
212.0	210	3	213	428
217.0	215	1	216	436
222.0	221	1	222	446
227.0	227	1	228	452
232.0	231	1	232	468
NULL	236	3	239	474
247.0	248	1	247	492
107.0	106	2	108	1060
NULL	114	2	112	1140
NULL	119	2	117	1190
NULL	122	2	124	1220
127.0	128	1	129	1280
132.0	134	3	131	1340
137.0	136	3	139	1360
142.0	141	1	140	1410
NULL	149	3	146	1490
NULL	150	3	153	1500
NULL	157	2	159	1570
162.0	160	3	163	1600
172.0	170	2	172	1700


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       c
  FROM t1
 WHERE (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,c:int>
-- !query output
111	2880	190	193
111	NULL	110	112
111	NULL	145	146
222	1899	127	129
222	1975	132	131
222	2802	187	186
222	3405	226	228
222	3704	246	247
333	1604	107	108
333	2436	161	163
333	2589	171	172
333	2739	181	182
333	2946	199	198
333	3331	223	222
444	2129	144	140
444	3176	214	213
444	3259	218	216
444	3477	234	232
444	NULL	167	168
444	NULL	208	NULL
444	NULL	NULL	203
444	NULL	NULL	240
444	NULL	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       c
  FROM t1
 WHERE (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 2,4,3,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,c:int>
-- !query output
444	NULL	NULL	NULL
444	NULL	208	NULL
111	NULL	110	112
111	NULL	145	146
444	NULL	167	168
444	NULL	NULL	203
444	NULL	NULL	240
333	1604	107	108
222	1899	127	129
222	1975	132	131
444	2129	144	140
333	2436	161	163
333	2589	171	172
333	2739	181	182
222	2802	187	186
111	2880	190	193
333	2946	199	198
444	3176	214	213
444	3259	218	216
333	3331	223	222
222	3405	226	228
444	3477	234	232
222	3704	246	247


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,c:int>
-- !query output
111	2880	190	193
111	NULL	110	112
111	NULL	145	146
222	1899	127	129
222	1975	132	131
222	2802	187	186
222	3405	226	228
222	3704	246	247
333	1604	107	108
333	2436	161	163
333	2589	171	172
333	2739	181	182
333	2946	199	198
333	3331	223	222
444	2129	144	140
444	3176	214	213
444	3259	218	216
444	3477	234	232
444	NULL	167	168
444	NULL	208	NULL
444	NULL	NULL	203
444	NULL	NULL	240
444	NULL	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
 ORDER BY 1,4,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,c:int>
-- !query output
111	NULL	110	112
111	NULL	145	146
111	2880	190	193
222	1899	127	129
222	1975	132	131
222	2802	187	186
222	3405	226	228
222	3704	246	247
333	1604	107	108
333	2436	161	163
333	2589	171	172
333	2739	181	182
333	2946	199	198
333	3331	223	222
444	NULL	NULL	NULL
444	NULL	208	NULL
444	2129	144	140
444	NULL	167	168
444	NULL	NULL	203
444	3176	214	213
444	3259	218	216
444	3477	234	232
444	NULL	NULL	240


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
    OR a>b
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107.0	1060	333
137.0	1360	333
142.0	1410	444
162.0	1600	333
172.0	1700	333
182.0	362	333
192.0	380	111
197.0	398	333
212.0	428	444
217.0	436	444
222.0	446	333
232.0	468	444
NULL	1140	111
NULL	1220	333
NULL	1490	111
NULL	1500	333
NULL	354	333
NULL	474	333


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
    OR a>b
 ORDER BY 3,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	1140	111
NULL	1490	111
192.0	380	111
NULL	474	333
NULL	1220	333
NULL	354	333
NULL	1500	333
107.0	1060	333
137.0	1360	333
162.0	1600	333
172.0	1700	333
182.0	362	333
197.0	398	333
222.0	446	333
142.0	1410	444
212.0	428	444
217.0	436	444
232.0	468	444


-- !query
SELECT d,
       e,
       a+b*2+c*3+d*4+e*5,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<d:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
115	NULL	NULL	117	222	119
126	125	1899	129	111	128
133	130	1975	131	333	134
135	137	2052	139	222	136
142	143	2129	140	555	141
165	166	NULL	168	222	NULL
189	185	2802	186	111	188
192	191	2880	193	444	194
196	195	2946	198	555	197
201	204	NULL	203	555	202
220	224	3331	222	444	221
230	233	3477	232	555	231
243	NULL	NULL	240	555	244
249	245	3704	247	222	248
NULL	113	NULL	112	555	114
NULL	147	NULL	146	222	149


-- !query
SELECT d,
       e,
       a+b*2+c*3+d*4+e*5,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 5,6,4
-- !query schema
struct<d:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
126	125	1899	129	111	128
189	185	2802	186	111	188
165	166	NULL	168	222	NULL
115	NULL	NULL	117	222	119
135	137	2052	139	222	136
NULL	147	NULL	146	222	149
249	245	3704	247	222	248
133	130	1975	131	333	134
192	191	2880	193	444	194
220	224	3331	222	444	221
NULL	113	NULL	112	555	114
142	143	2129	140	555	141
196	195	2946	198	555	197
201	204	NULL	203	555	202
230	233	3477	232	555	231
243	NULL	NULL	240	555	244


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       c-d,
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR c>d
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,(c - d):int,abs((b - c)):int>
-- !query output
107.0	109	-1	2
127.0	126	3	1
137.0	135	4	3
192.0	192	1	1
197.0	196	2	1
212.0	212	1	3
222.0	220	2	1
232.0	230	2	1
NULL	115	2	2
NULL	165	3	NULL
NULL	201	2	1


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       c-d,
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR c>d
 ORDER BY 3,2,4,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,(c - d):int,abs((b - c)):int>
-- !query output
107.0	109	-1	2
192.0	192	1	1
212.0	212	1	3
NULL	115	2	2
197.0	196	2	1
NULL	201	2	1
222.0	220	2	1
232.0	230	2	1
127.0	126	3	1
NULL	165	3	NULL
137.0	135	4	3


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       c-d,
       abs(b-c)
  FROM t1
 WHERE c>d
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,(c - d):int,abs((b - c)):int>
-- !query output
107.0	109	-1	2
127.0	126	3	1
137.0	135	4	3
192.0	192	1	1
197.0	196	2	1
212.0	212	1	3
222.0	220	2	1
232.0	230	2	1
NULL	115	2	2
NULL	165	3	NULL
NULL	201	2	1


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       c-d,
       abs(b-c)
  FROM t1
 WHERE c>d
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,4,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,(c - d):int,abs((b - c)):int>
-- !query output
NULL	165	3	NULL
NULL	201	2	1
NULL	115	2	2
107.0	109	-1	2
127.0	126	3	1
137.0	135	4	3
192.0	192	1	1
197.0	196	2	1
212.0	212	1	3
222.0	220	2	1
232.0	230	2	1


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 5,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
   AND d>e
 ORDER BY 6,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111


-- !query
SELECT abs(a),
       abs(b-c)
  FROM t1
-- !query schema
struct<abs(a):int,abs((b - c)):int>
-- !query output
107	2
110	2
116	2
123	2
127	1
132	3
138	3
144	1
145	3
151	3
155	2
161	3
167	NULL
171	2
177	3
181	2
187	2
190	1
199	1
208	NULL
214	3
218	1
223	1
226	1
234	1
237	3
246	1
NULL	1
NULL	4
NULL	NULL


-- !query
SELECT abs(a),
       abs(b-c)
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,abs((b - c)):int>
-- !query output
NULL	NULL
NULL	1
NULL	4
107	2
110	2
116	2
123	2
127	1
132	3
138	3
144	1
145	3
151	3
155	2
161	3
167	NULL
171	2
177	3
181	2
187	2
190	1
199	1
208	NULL
214	3
218	1
223	1
226	1
234	1
237	3
246	1


-- !query
SELECT abs(b-c),
       d,
       d-e,
       c-d,
       e
  FROM t1
 WHERE a>b
-- !query schema
struct<abs((b - c)):int,d:int,(d - e):int,(c - d):int,e:int>
-- !query output
1	142	-1	-2	143
1	196	1	2	195
1	217	-2	-1	219
1	220	-4	2	224
1	230	-3	2	233
2	109	4	-1	105
2	173	-1	-1	174
2	183	-1	-1	184
2	NULL	NULL	NULL	121
3	135	-2	4	137
3	164	2	-1	162
3	212	1	1	211
3	NULL	NULL	NULL	175
3	NULL	NULL	NULL	238
3	NULL	NULL	NULL	NULL


-- !query
SELECT abs(b-c),
       d,
       d-e,
       c-d,
       e
  FROM t1
 WHERE a>b
 ORDER BY 4,1,5,2
-- !query schema
struct<abs((b - c)):int,d:int,(d - e):int,(c - d):int,e:int>
-- !query output
2	NULL	NULL	NULL	121
3	NULL	NULL	NULL	NULL
3	NULL	NULL	NULL	175
3	NULL	NULL	NULL	238
1	142	-1	-2	143
1	217	-2	-1	219
2	109	4	-1	105
2	173	-1	-1	174
2	183	-1	-1	184
3	164	2	-1	162
3	212	1	1	211
1	196	1	2	195
1	220	-4	2	224
1	230	-3	2	233
3	135	-2	4	137


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,1,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 4,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
107	1060	1079
110	1140	NULL
116	1190	1165
123	1220	NULL
127	1280	1274
132	1340	1325
138	1360	1367
144	1410	1414
145	1490	NULL
151	1500	NULL
155	1570	NULL
161	1600	1626
167	NULL	NULL
171	1700	1719
177	354	NULL
181	362	1819
187	374	1877
190	380	1925
199	398	1971
208	NULL	NULL
214	428	2121
218	436	2164
223	446	2211
226	452	2280
234	468	2312
237	474	NULL
246	492	2479
NULL	1020	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 ORDER BY 2,3,1
-- !query schema
struct<a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	NULL	NULL
NULL	NULL	NULL
167	NULL	NULL
208	NULL	NULL
177	354	NULL
181	362	1819
187	374	1877
190	380	1925
199	398	1971
214	428	2121
218	436	2164
223	446	2211
226	452	2280
234	468	2312
237	474	NULL
246	492	2479
NULL	1020	NULL
107	1060	1079
110	1140	NULL
116	1190	1165
123	1220	NULL
127	1280	1274
132	1340	1325
138	1360	1367
144	1410	1414
145	1490	NULL
151	1500	NULL
155	1570	NULL
161	1600	1626
171	1700	1719


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1165
1274
1325
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
1079
1165
1274
1325
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
    OR (e>c OR e<d)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1165
1274
1325
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
    OR (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
1079
1165
1274
1325
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
    OR b>c
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1165
1274
1325
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
    OR b>c
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
1079
1165
1274
1325
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479


-- !query
SELECT a,
       a+b*2,
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<a:int,(a + (b * 2)):int,abs((b - c)):int>
-- !query output
107	319	2
110	338	2
116	354	2
123	367	2
127	383	1
132	400	3
138	410	3
144	426	1
145	443	3
151	451	3
155	469	2
161	481	3
171	511	2
177	529	3
181	541	2
187	563	2
190	578	1
199	593	1
214	634	3
218	648	1
223	665	1
226	680	1
234	696	1
237	709	3
246	742	1
NULL	NULL	1
NULL	NULL	4


-- !query
SELECT a,
       a+b*2,
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<a:int,(a + (b * 2)):int,abs((b - c)):int>
-- !query output
NULL	NULL	1
NULL	NULL	4
107	319	2
110	338	2
116	354	2
123	367	2
127	383	1
132	400	3
138	410	3
144	426	1
145	443	3
151	451	3
155	469	2
161	481	3
171	511	2
177	529	3
181	541	2
187	563	2
190	578	1
199	593	1
214	634	3
218	648	1
223	665	1
226	680	1
234	696	1
237	709	3
246	742	1


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       d,
       a,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       d,
       a,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 ORDER BY 6,5,3,4,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
 ORDER BY 4,5,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       abs(a)
  FROM t1
 WHERE c>d
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       abs(a)
  FROM t1
 WHERE c>d
    OR d>e
 ORDER BY 1,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a+b*2,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
-1	593	197.0	199
-1	648	217.0	218
-1	665	222.0	223
-1	696	232.0	234
-2	319	107.0	107
-2	511	172.0	171
-2	541	182.0	181
-3	481	162.0	161
-3	634	212.0	214


-- !query
SELECT b-c,
       a+b*2,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,4,2
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
-3	481	162.0	161
-3	634	212.0	214
-2	319	107.0	107
-2	511	172.0	171
-2	541	182.0	181
-1	593	197.0	199
-1	648	217.0	218
-1	665	222.0	223
-1	696	232.0	234


-- !query
SELECT b-c,
       a+b*2,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
-1	593	197.0	199
-1	648	217.0	218
-1	665	222.0	223
-1	696	232.0	234
-2	319	107.0	107
-2	511	172.0	171
-2	541	182.0	181
-3	481	162.0	161
-3	634	212.0	214


-- !query
SELECT b-c,
       a+b*2,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,1,3,4
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
-2	319	107.0	107
-3	481	162.0	161
-2	511	172.0	171
-2	541	182.0	181
-1	593	197.0	199
-3	634	212.0	214
-1	648	217.0	218
-1	665	222.0	223
-1	696	232.0	234


-- !query
SELECT b-c,
       a+b*2,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
-1	593	197.0	199
-1	648	217.0	218
-1	665	222.0	223
-1	696	232.0	234
-2	319	107.0	107
-2	511	172.0	171
-2	541	182.0	181
-3	481	162.0	161
-3	634	212.0	214


-- !query
SELECT b-c,
       a+b*2,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 4,2,1,3
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
-2	319	107.0	107
-3	481	162.0	161
-2	511	172.0	171
-2	541	182.0	181
-1	593	197.0	199
-3	634	212.0	214
-1	648	217.0	218
-1	665	222.0	223
-1	696	232.0	234


-- !query
SELECT b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<b:int>
-- !query output
106
122
128
150
160
170
176
180
188
227
236


-- !query
SELECT b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<b:int>
-- !query output
106
122
128
150
160
170
176
180
188
227
236


-- !query
SELECT a+b*2,
       e
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,e:int>
-- !query output
319	105
338	113
354	NULL
367	121
383	125
400	130
410	137
426	143
443	147
451	NULL
469	158
481	162
511	174
529	175
541	184
563	185
578	191
593	195
634	211
648	219
665	224
680	225
696	233
709	238
742	245
NULL	104
NULL	166
NULL	204
NULL	207
NULL	NULL


-- !query
SELECT a+b*2,
       e
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<(a + (b * 2)):int,e:int>
-- !query output
NULL	NULL
354	NULL
451	NULL
NULL	104
319	105
338	113
367	121
383	125
400	130
410	137
426	143
443	147
469	158
481	162
NULL	166
511	174
529	175
541	184
563	185
578	191
593	195
NULL	204
NULL	207
634	211
648	219
665	224
680	225
696	233
709	238
742	245


-- !query
SELECT (a+b+c+d+e)/5,
       a,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
   AND c>d
 ORDER BY 3,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1060
1190
1410
1600
1700
362
374
380
398
428
436
446
452
468
492
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL
362
374
380
398
428
436
446
452
468
492
1060
1190
1410
1600
1700


-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE b>c
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output



-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE b>c
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 5,2,7,3,4
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output



-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE c>d
   AND b>c
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output



-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE c>d
   AND b>c
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 5,4
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output



-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND b>c
   AND c>d
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output



-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       abs(a)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND b>c
   AND c>d
 ORDER BY 4,6,3,1,7,2,5
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,abs(a):int>
-- !query output



-- !query
SELECT e,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<e:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
104	NULL
105	107.0
113	NULL
121	NULL
125	127.0
130	132.0
137	137.0
143	142.0
147	NULL
158	NULL
162	162.0
166	NULL
174	172.0
175	NULL
184	182.0
185	187.0
191	192.0
195	197.0
204	NULL
207	NULL
211	212.0
219	217.0
224	222.0
225	227.0
233	232.0
238	NULL
245	247.0
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT e,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<e:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
104	NULL
113	NULL
121	NULL
147	NULL
158	NULL
166	NULL
175	NULL
204	NULL
207	NULL
238	NULL
105	107.0
125	127.0
130	132.0
137	137.0
143	142.0
162	162.0
174	172.0
184	182.0
185	187.0
191	192.0
195	197.0
211	212.0
219	217.0
224	222.0
225	227.0
233	232.0
245	247.0


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       d-e,
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       a+b*2+c*3
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       d-e,
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       a+b*2+c*3
  FROM t1
 WHERE c>d
 ORDER BY 2,3,7,5,4,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       c,
       c-d,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       c,
       c-d,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3+d*4
  FROM t1
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 ORDER BY 1,4,5,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0


-- !query
SELECT a-b
  FROM t1
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-1
-2
-2
-2
-3
-4
-4
-4
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a-b
  FROM t1
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
-4
-4
-4
-3
-2
-2
-2
-1
-1
-1
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4


-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 3,2,1
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND a>b
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND a>b
 ORDER BY 2,3,1
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
 ORDER BY 1,3,2
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output



-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a),
       b,
       e,
       a+b*2,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int,b:int,e:int,(a + (b * 2)):int,(b - c):int>
-- !query output
1157	444	190	194	191	578	1
674	555	110	114	113	338	2
881	222	145	149	147	443	3


-- !query
SELECT a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a),
       b,
       e,
       a+b*2,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 7,3,5,2,4,1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int,b:int,e:int,(a + (b * 2)):int,(b - c):int>
-- !query output
1157	444	190	194	191	578	1
674	555	110	114	113	338	2
881	222	145	149	147	443	3


-- !query
SELECT e,
       d,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<e:int,d:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
105	109	643
113	NULL	674
121	NULL	739
125	126	770
130	133	793
137	135	827
143	142	846
147	NULL	881
158	NULL	946
162	164	970
174	173	1027
175	NULL	1066
184	183	1087
185	189	1121
191	192	1157
195	196	1187
204	201	NULL
211	212	1273
219	217	1296
224	220	1331
225	229	1364
233	230	1392
238	NULL	1426
245	249	1483
NULL	115	705
NULL	243	NULL
NULL	NULL	910


-- !query
SELECT e,
       d,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,3,2
-- !query schema
struct<e:int,d:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	243	NULL
NULL	115	705
NULL	NULL	910
105	109	643
113	NULL	674
121	NULL	739
125	126	770
130	133	793
137	135	827
143	142	846
147	NULL	881
158	NULL	946
162	164	970
174	173	1027
175	NULL	1066
184	183	1087
185	189	1121
191	192	1157
195	196	1187
204	201	NULL
211	212	1273
219	217	1296
224	220	1331
225	229	1364
233	230	1392
238	NULL	1426
245	249	1483


-- !query
SELECT e,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
    OR d>e
-- !query schema
struct<e:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
105	106	222	107.0	319
121	122	222	NULL	367
125	128	111	127.0	383
130	134	333	132.0	400
137	136	222	137.0	410
143	141	555	142.0	426
162	160	444	162.0	481
174	170	222	172.0	511
175	176	555	NULL	529
184	180	222	182.0	541
185	188	111	187.0	563
191	194	444	192.0	578
195	197	555	197.0	593
211	210	555	212.0	634
219	215	444	217.0	648
224	221	444	222.0	665
225	227	111	227.0	680
233	231	555	232.0	696
238	236	444	NULL	709
245	248	222	247.0	742
NULL	150	555	NULL	451


-- !query
SELECT e,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
    OR d>e
 ORDER BY 3,1
-- !query schema
struct<e:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
125	128	111	127.0	383
185	188	111	187.0	563
225	227	111	227.0	680
105	106	222	107.0	319
121	122	222	NULL	367
137	136	222	137.0	410
174	170	222	172.0	511
184	180	222	182.0	541
245	248	222	247.0	742
130	134	333	132.0	400
162	160	444	162.0	481
191	194	444	192.0	578
219	215	444	217.0	648
224	221	444	222.0	665
238	236	444	NULL	709
NULL	150	555	NULL	451
143	141	555	142.0	426
175	176	555	NULL	529
195	197	555	197.0	593
211	210	555	212.0	634
233	231	555	232.0	696


-- !query
SELECT e,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
    OR d>e
-- !query schema
struct<e:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
105	106	222	107.0	319
121	122	222	NULL	367
125	128	111	127.0	383
130	134	333	132.0	400
137	136	222	137.0	410
143	141	555	142.0	426
162	160	444	162.0	481
174	170	222	172.0	511
175	176	555	NULL	529
184	180	222	182.0	541
185	188	111	187.0	563
191	194	444	192.0	578
195	197	555	197.0	593
211	210	555	212.0	634
219	215	444	217.0	648
224	221	444	222.0	665
225	227	111	227.0	680
233	231	555	232.0	696
238	236	444	NULL	709
245	248	222	247.0	742
NULL	150	555	NULL	451


-- !query
SELECT e,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
    OR d>e
 ORDER BY 3,2,4,5,1
-- !query schema
struct<e:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
125	128	111	127.0	383
185	188	111	187.0	563
225	227	111	227.0	680
105	106	222	107.0	319
121	122	222	NULL	367
137	136	222	137.0	410
174	170	222	172.0	511
184	180	222	182.0	541
245	248	222	247.0	742
130	134	333	132.0	400
162	160	444	162.0	481
191	194	444	192.0	578
219	215	444	217.0	648
224	221	444	222.0	665
238	236	444	NULL	709
143	141	555	142.0	426
NULL	150	555	NULL	451
175	176	555	NULL	529
195	197	555	197.0	593
211	210	555	212.0	634
233	231	555	232.0	696


-- !query
SELECT e,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE d>e
    OR a>b
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<e:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
105	106	222	107.0	319
121	122	222	NULL	367
125	128	111	127.0	383
130	134	333	132.0	400
137	136	222	137.0	410
143	141	555	142.0	426
162	160	444	162.0	481
174	170	222	172.0	511
175	176	555	NULL	529
184	180	222	182.0	541
185	188	111	187.0	563
191	194	444	192.0	578
195	197	555	197.0	593
211	210	555	212.0	634
219	215	444	217.0	648
224	221	444	222.0	665
225	227	111	227.0	680
233	231	555	232.0	696
238	236	444	NULL	709
245	248	222	247.0	742
NULL	150	555	NULL	451


-- !query
SELECT e,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE d>e
    OR a>b
    OR (a>b-2 AND a<b+2)
 ORDER BY 4,2,3,1
-- !query schema
struct<e:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
121	122	222	NULL	367
NULL	150	555	NULL	451
175	176	555	NULL	529
238	236	444	NULL	709
105	106	222	107.0	319
125	128	111	127.0	383
130	134	333	132.0	400
137	136	222	137.0	410
143	141	555	142.0	426
162	160	444	162.0	481
174	170	222	172.0	511
184	180	222	182.0	541
185	188	111	187.0	563
191	194	444	192.0	578
195	197	555	197.0	593
211	210	555	212.0	634
219	215	444	217.0	648
224	221	444	222.0	665
225	227	111	227.0	680
233	231	555	232.0	696
245	248	222	247.0	742


-- !query
SELECT b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE b>c
   AND d NOT BETWEEN 110 AND 150
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE b>c
   AND d NOT BETWEEN 110 AND 150
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 4,1,2,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
   AND b>c
 ORDER BY 4,1,5,6,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE b>c
   AND (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE b>c
   AND (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,2,5,3,7,4,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<(c - d):int,b:int>
-- !query output
-1	106
-1	160
-1	170
-1	180
-1	215
-1	227
-2	141
-2	248
-3	188
1	194
1	210
2	119
2	197
2	202
2	221
2	231


-- !query
SELECT c-d,
       b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<(c - d):int,b:int>
-- !query output
-3	188
-2	141
-2	248
-1	106
-1	160
-1	170
-1	180
-1	215
-1	227
1	194
1	210
2	119
2	197
2	202
2	221
2	231


-- !query
SELECT a+b*2
  FROM t1
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
338
354
367
383
400
410
426
443
451
469
481
511
529
541
563
578
593
634
648
665
680
696
709
742
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2
  FROM t1
 ORDER BY 1
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
319
338
354
367
383
400
410
426
443
451
469
481
511
529
541
563
578
593
634
648
665
680
696
709
742


-- !query
SELECT e,
       b-c,
       a-b
  FROM t1
-- !query schema
struct<e:int,(b - c):int,(a - b):int>
-- !query output
104	NULL	NULL
105	-2	1
113	2	-4
121	-2	1
125	-1	-1
130	3	-2
137	-3	2
143	1	3
147	3	-4
158	-2	-2
162	-3	1
166	NULL	NULL
174	-2	1
175	-3	1
184	-2	1
185	2	-1
191	1	-4
195	-1	2
204	-1	NULL
207	NULL	NULL
211	-3	4
219	-1	3
224	-1	2
225	-1	-1
233	-1	3
238	-3	1
245	1	-2
NULL	-3	1
NULL	2	-3
NULL	4	NULL


-- !query
SELECT e,
       b-c,
       a-b
  FROM t1
 ORDER BY 3,2
-- !query schema
struct<e:int,(b - c):int,(a - b):int>
-- !query output
166	NULL	NULL
104	NULL	NULL
207	NULL	NULL
204	-1	NULL
NULL	4	NULL
191	1	-4
113	2	-4
147	3	-4
NULL	2	-3
158	-2	-2
245	1	-2
130	3	-2
225	-1	-1
125	-1	-1
185	2	-1
162	-3	1
238	-3	1
175	-3	1
NULL	-3	1
174	-2	1
184	-2	1
105	-2	1
121	-2	1
137	-3	2
224	-1	2
195	-1	2
219	-1	3
233	-1	3
143	1	3
211	-3	4


-- !query
SELECT c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR d>e
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR d>e
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,4,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
 ORDER BY 4,3,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d>e
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d>e
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>a AND e<b)
 ORDER BY 2,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
   AND c>d
 ORDER BY 3,2,1,4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
   AND a>b
 ORDER BY 3,5,1,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE c>d
   AND a>b
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE c>d
   AND a>b
   AND c BETWEEN b-2 AND d+2
 ORDER BY 5,1,2,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107	333	107.0
127	222	127.0
161	333	162.0
187	222	187.0
226	222	227.0


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
 ORDER BY 3,1
-- !query schema
struct<a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107	333	107.0
127	222	127.0
161	333	162.0
187	222	187.0
226	222	227.0


-- !query
SELECT a+b*2+c*3+d*4,
       a,
       e,
       a+b*2+c*3+d*4+e*5,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1165	116	NULL	NULL	115	222
1274	127	125	1899	126	111
1367	138	137	2052	135	222
1925	190	191	2880	192	444
1971	199	195	2946	196	555
2121	214	211	3176	212	555
2211	223	224	3331	220	444
2312	234	233	3477	230	555
NULL	167	166	NULL	165	222
NULL	NULL	204	NULL	201	555


-- !query
SELECT a+b*2+c*3+d*4,
       a,
       e,
       a+b*2+c*3+d*4+e*5,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
 ORDER BY 4,3,6
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1165	116	NULL	NULL	115	222
NULL	167	166	NULL	165	222
NULL	NULL	204	NULL	201	555
1274	127	125	1899	126	111
1367	138	137	2052	135	222
1925	190	191	2880	192	444
1971	199	195	2946	196	555
2121	214	211	3176	212	555
2211	223	224	3331	220	444
2312	234	233	3477	230	555


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
 WHERE a>b
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1079	643
1165	705
1274	770
1325	793
1367	827
1414	846
1626	970
1719	1027
1819	1087
1877	1121
1925	1157
1971	1187
2121	1273
2164	1296
2211	1331
2280	1364
2312	1392
2479	1483
NULL	1066
NULL	1426
NULL	674
NULL	739
NULL	881
NULL	910
NULL	946
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
 WHERE a>b
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL	NULL
NULL	NULL
1079	643
NULL	674
1165	705
NULL	739
1274	770
1325	793
1367	827
1414	846
NULL	881
NULL	910
NULL	946
1626	970
1719	1027
NULL	1066
1819	1087
1877	1121
1925	1157
1971	1187
2121	1273
2164	1296
2211	1331
2280	1364
2312	1392
NULL	1426
2479	1483


-- !query
SELECT d,
       abs(b-c),
       a+b*2
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<d:int,abs((b - c)):int,(a + (b * 2)):int>
-- !query output
109	2	319
126	1	383
133	3	400
142	1	426
164	3	481
173	2	511
183	2	541
189	2	563
192	1	578
196	1	593
201	1	NULL
212	3	634
217	1	648
220	1	665
229	1	680
230	1	696
249	1	742
NULL	2	338
NULL	3	443


-- !query
SELECT d,
       abs(b-c),
       a+b*2
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 3,1
-- !query schema
struct<d:int,abs((b - c)):int,(a + (b * 2)):int>
-- !query output
201	1	NULL
109	2	319
NULL	2	338
126	1	383
133	3	400
142	1	426
NULL	3	443
164	3	481
173	2	511
183	2	541
189	2	563
192	1	578
196	1	593
212	3	634
217	1	648
220	1	665
229	1	680
230	1	696
249	1	742


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a
  FROM t1
 ORDER BY 1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       (a+b+c+d+e)/5,
       e
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       (a+b+c+d+e)/5,
       e
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       (a+b+c+d+e)/5,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       (a+b+c+d+e)/5,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
 ORDER BY 1,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       abs(b-c),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE a>b
-- !query schema
struct<(b - c):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-1	1	1187	2946
-1	1	1296	3259
-1	1	1331	3331
-1	1	1392	3477
-2	2	1027	2589
-2	2	1087	2739
-2	2	643	1604
-2	2	739	NULL
-3	3	1066	NULL
-3	3	1273	3176
-3	3	1426	NULL
-3	3	827	2052
-3	3	910	NULL
-3	3	970	2436
1	1	846	2129


-- !query
SELECT b-c,
       abs(b-c),
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE a>b
 ORDER BY 3,2,1,4
-- !query schema
struct<(b - c):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-2	2	643	1604
-2	2	739	NULL
-3	3	827	2052
1	1	846	2129
-3	3	910	NULL
-3	3	970	2436
-2	2	1027	2589
-3	3	1066	NULL
-2	2	1087	2739
-1	1	1187	2946
-3	3	1273	3176
-1	1	1296	3259
-1	1	1331	3331
-1	1	1392	3477
-3	3	1426	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d>e
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d>e
   AND (e>c OR e<d)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-2
-2
-3
2
2
2
3
3
NULL
NULL
NULL


-- !query
SELECT a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
NULL
NULL
-3
-2
-2
-1
-1
2
2
2
3
3


-- !query
SELECT (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
107.0	108
127.0	129
132.0	131
162.0	163
187.0	186
192.0	193
197.0	198
212.0	213
227.0	228
247.0	247


-- !query
SELECT (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
 ORDER BY 1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
107.0	108
127.0	129
132.0	131
162.0	163
187.0	186
192.0	193
197.0	198
212.0	213
227.0	228
247.0	247


-- !query
SELECT (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
107.0	108
127.0	129
132.0	131
162.0	163
187.0	186
192.0	193
197.0	198
212.0	213
227.0	228
247.0	247


-- !query
SELECT (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
107.0	108
127.0	129
132.0	131
162.0	163
187.0	186
192.0	193
197.0	198
212.0	213
227.0	228
247.0	247


-- !query
SELECT abs(a),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 4,2,3,5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 4,2,3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
   AND b>c
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       c,
       c-d,
       (a+b+c+d+e)/5,
       e,
       d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<a:int,c:int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,e:int,d:int>
-- !query output
116	117	2	NULL	NULL	115
127	129	3	127.0	125	126
132	131	-2	132.0	130	133
138	139	4	137.0	137	135
144	140	-2	142.0	143	142
167	168	3	NULL	166	165
187	186	-3	187.0	185	189
199	198	2	197.0	195	196
223	222	2	222.0	224	220
234	232	2	232.0	233	230
246	247	-2	247.0	245	249
NULL	203	2	NULL	204	201
NULL	240	-3	NULL	NULL	243


-- !query
SELECT a,
       c,
       c-d,
       (a+b+c+d+e)/5,
       e,
       d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 3,6,1,5,2,4
-- !query schema
struct<a:int,c:int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,e:int,d:int>
-- !query output
187	186	-3	187.0	185	189
NULL	240	-3	NULL	NULL	243
132	131	-2	132.0	130	133
144	140	-2	142.0	143	142
246	247	-2	247.0	245	249
116	117	2	NULL	NULL	115
199	198	2	197.0	195	196
NULL	203	2	NULL	204	201
223	222	2	222.0	224	220
234	232	2	232.0	233	230
127	129	3	127.0	125	126
167	168	3	NULL	166	165
138	139	4	137.0	137	135


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       abs(a),
       b
  FROM t1
 WHERE d>e
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,abs(a):int,b:int>
-- !query output
111	-1	127	128
111	-1	187	188
111	-1	226	227
222	-2	246	248
222	1	107	106
333	-2	132	134
444	-4	190	194
444	1	161	160
555	2	199	197
555	4	214	210


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       abs(a),
       b
  FROM t1
 WHERE d>e
 ORDER BY 3,1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,abs(a):int,b:int>
-- !query output
222	1	107	106
111	-1	127	128
333	-2	132	134
444	1	161	160
111	-1	187	188
444	-4	190	194
555	2	199	197
555	4	214	210
111	-1	226	227
222	-2	246	248


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,4,7,6,5,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       b-c,
       d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 7,6,4,3,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 4,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       a+b*2,
       d
  FROM t1
 WHERE b>c
-- !query schema
struct<(b - c):int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,(a + (b * 2)):int,d:int>
-- !query output
1	-1	555	444	-2	426	142
1	1	444	111	1	578	192
1	4	222	222	-2	742	249
2	4	111	222	-3	563	189
2	NULL	222	222	2	354	115
2	NULL	555	111	NULL	338	NULL
3	3	333	222	-2	400	133
3	NULL	222	111	NULL	443	NULL
4	NULL	555	444	-3	NULL	243


-- !query
SELECT b-c,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       a+b*2,
       d
  FROM t1
 WHERE b>c
 ORDER BY 4,5,2
-- !query schema
struct<(b - c):int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,(a + (b * 2)):int,d:int>
-- !query output
2	NULL	555	111	NULL	338	NULL
3	NULL	222	111	NULL	443	NULL
1	1	444	111	1	578	192
2	4	111	222	-3	563	189
3	3	333	222	-2	400	133
1	4	222	222	-2	742	249
2	NULL	222	222	2	354	115
4	NULL	555	444	-3	NULL	243
1	-1	555	444	-2	426	142


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,5,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
 ORDER BY 4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       a,
       a+b*2+c*3+d*4+e*5,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       b
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       a,
       a+b*2+c*3+d*4+e*5,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       b
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 7,5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       d,
       a+b*2+c*3+d*4+e*5,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(a + (b * 2)):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,e:int>
-- !query output
319	109	1604	105
338	NULL	NULL	113
354	115	NULL	NULL
367	NULL	NULL	121
383	126	1899	125
400	133	1975	130
410	135	2052	137
426	142	2129	143
443	NULL	NULL	147
451	NULL	NULL	NULL
469	NULL	NULL	158
481	164	2436	162
511	173	2589	174
529	NULL	NULL	175
541	183	2739	184
563	189	2802	185
578	192	2880	191
593	196	2946	195
634	212	3176	211
648	217	3259	219
665	220	3331	224
680	229	3405	225
696	230	3477	233
709	NULL	NULL	238
742	249	3704	245
NULL	201	NULL	204
NULL	243	NULL	NULL


-- !query
SELECT a+b*2,
       d,
       a+b*2+c*3+d*4+e*5,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,2
-- !query schema
struct<(a + (b * 2)):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,e:int>
-- !query output
338	NULL	NULL	113
469	NULL	NULL	158
709	NULL	NULL	238
367	NULL	NULL	121
443	NULL	NULL	147
529	NULL	NULL	175
451	NULL	NULL	NULL
354	115	NULL	NULL
NULL	201	NULL	204
NULL	243	NULL	NULL
319	109	1604	105
383	126	1899	125
400	133	1975	130
410	135	2052	137
426	142	2129	143
481	164	2436	162
511	173	2589	174
541	183	2739	184
563	189	2802	185
578	192	2880	191
593	196	2946	195
634	212	3176	211
648	217	3259	219
665	220	3331	224
680	229	3405	225
696	230	3477	233
742	249	3704	245


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,e:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int>
-- !query output
1079	-2	105	222	109
1274	-1	125	111	126


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,4,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,e:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int>
-- !query output
1079	-2	105	222	109
1274	-1	125	111	126


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,e:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int>
-- !query output
1079	-2	105	222	109
1274	-1	125	111	126


-- !query
SELECT a+b*2+c*3+d*4,
       b-c,
       e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
 ORDER BY 5,1,2,4
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,e:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int>
-- !query output
1079	-2	105	222	109
1274	-1	125	111	126


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       d-e,
       e,
       d
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,e:int,d:int>
-- !query output
111	192.0	1	191	192
111	NULL	NULL	113	NULL
111	NULL	NULL	147	NULL
222	127.0	1	125	126
222	132.0	3	130	133
222	187.0	4	185	189
222	227.0	4	225	229
222	247.0	4	245	249
222	NULL	NULL	158	NULL
222	NULL	NULL	NULL	115
333	107.0	4	105	109
333	137.0	-2	137	135
333	162.0	2	162	164
333	172.0	-1	174	173
333	182.0	-1	184	183
333	197.0	1	195	196
333	222.0	-4	224	220
333	NULL	NULL	121	NULL
333	NULL	NULL	175	NULL
333	NULL	NULL	238	NULL
333	NULL	NULL	NULL	NULL
444	142.0	-1	143	142
444	212.0	1	211	212
444	217.0	-2	219	217
444	232.0	-3	233	230
444	NULL	-1	166	165
444	NULL	-1	207	206
444	NULL	-3	104	101
444	NULL	-3	204	201
444	NULL	NULL	NULL	243


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       d-e,
       e,
       d
  FROM t1
 ORDER BY 3,2,4
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,e:int,d:int>
-- !query output
222	NULL	NULL	NULL	115
444	NULL	NULL	NULL	243
333	NULL	NULL	NULL	NULL
111	NULL	NULL	113	NULL
333	NULL	NULL	121	NULL
111	NULL	NULL	147	NULL
222	NULL	NULL	158	NULL
333	NULL	NULL	175	NULL
333	NULL	NULL	238	NULL
333	222.0	-4	224	220
444	NULL	-3	104	101
444	NULL	-3	204	201
444	232.0	-3	233	230
333	137.0	-2	137	135
444	217.0	-2	219	217
444	NULL	-1	166	165
444	NULL	-1	207	206
444	142.0	-1	143	142
333	172.0	-1	174	173
333	182.0	-1	184	183
222	127.0	1	125	126
111	192.0	1	191	192
333	197.0	1	195	196
444	212.0	1	211	212
333	162.0	2	162	164
222	132.0	3	130	133
333	107.0	4	105	109
222	187.0	4	185	189
222	227.0	4	225	229
222	247.0	4	245	249


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
 ORDER BY 2,5,3,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 5,4,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 5,3,4,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       d,
       a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<c:int,d:int,a:int>
-- !query output
168	165	167
186	189	187
198	196	199
203	201	NULL
222	220	223
232	230	234
240	243	NULL
247	249	246


-- !query
SELECT c,
       d,
       a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,2,3
-- !query schema
struct<c:int,d:int,a:int>
-- !query output
168	165	167
186	189	187
198	196	199
203	201	NULL
222	220	223
232	230	234
240	243	NULL
247	249	246


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE (e>a AND e<b)
   AND (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE (e>a AND e<b)
   AND (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE (e>c OR e<d)
   AND (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
   AND (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b,
       abs(b-c),
       abs(a),
       a+b*2+c*3+d*4,
       a+b*2
  FROM t1
 WHERE b>c
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs((b - c)):int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int>
-- !query output
1975	134	3	132	1325	400
2129	141	1	144	1414	426
2802	188	2	187	1877	563
2880	194	1	190	1925	578
3704	248	1	246	2479	742
NULL	114	2	110	NULL	338
NULL	119	2	116	1165	354
NULL	149	3	145	NULL	443
NULL	244	4	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b,
       abs(b-c),
       abs(a),
       a+b*2+c*3+d*4,
       a+b*2
  FROM t1
 WHERE b>c
 ORDER BY 4,5,6,3,1,2
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs((b - c)):int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int>
-- !query output
NULL	244	4	NULL	NULL	NULL
NULL	114	2	110	NULL	338
NULL	119	2	116	1165	354
1975	134	3	132	1325	400
2129	141	1	144	1414	426
NULL	149	3	145	NULL	443
2802	188	2	187	1877	563
2880	194	1	190	1925	578
3704	248	1	246	2479	742


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	333	107.0


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	333	107.0


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	333	107.0


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 3,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	333	107.0


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	333	107.0


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	333	107.0


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	333	107.0


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,2,3
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1079	333	107.0


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5,
       b,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5,
       b,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a)
  FROM t1
 ORDER BY 5,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c
  FROM t1
-- !query schema
struct<c:int>
-- !query output
108
112
117
124
129
131
139
140
146
153
159
163
168
172
179
182
186
193
198
203
213
216
222
228
232
239
240
247
NULL
NULL


-- !query
SELECT c
  FROM t1
 ORDER BY 1
-- !query schema
struct<c:int>
-- !query output
NULL
NULL
108
112
117
124
129
131
139
140
146
153
159
163
168
172
179
182
186
193
198
203
213
216
222
228
232
239
240
247


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
643
770


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
643
770


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
    OR b>c
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
    OR d>e
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       a,
       d,
       a+b*2,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       a,
       d,
       a+b*2,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 1,5,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs((b - c)):int>
-- !query output
111	380	1
222	374	2
222	452	1
222	492	1
333	1060	2
333	1600	3
333	1700	2
333	362	2
333	398	1
333	446	1
444	1020	NULL
444	428	3
444	436	1
444	468	1
444	NULL	1
444	NULL	4
444	NULL	NULL
444	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 2,3
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs((b - c)):int>
-- !query output
444	NULL	NULL
444	NULL	NULL
444	NULL	1
444	NULL	4
333	362	2
222	374	2
111	380	1
333	398	1
444	428	3
444	436	1
333	446	1
222	452	1
444	468	1
222	492	1
444	1020	NULL
333	1060	2
333	1600	3
333	1700	2


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       abs(b-c),
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       abs(b-c),
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2
  FROM t1
 ORDER BY 7,4,6,2,3,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE c>d
    OR (e>c OR e<d)
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3
3
3
NULL


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE c>d
    OR (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
NULL
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3
3
3


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
    OR c>d
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3
3
3
NULL


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
    OR c>d
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
NULL
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3
3
3


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
222
222
333
444
444
444
444
444
555
555
555
555
555
555
555
555
555
555
555
555


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 ORDER BY 1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
222
222
333
444
444
444
444
444
555
555
555
555
555
555
555
555
555
555
555
555


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       b-c,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       b-c,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 5,1,4,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
444
444


-- !query
SELECT (a+b+c+d+e)/5,
       b,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,b:int,(b - c):int>
-- !query output
187.0	188	2


-- !query
SELECT (a+b+c+d+e)/5,
       b,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,1,3
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,b:int,(b - c):int>
-- !query output
187.0	188	2


-- !query
SELECT (a+b+c+d+e)/5,
       b,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,b:int,(b - c):int>
-- !query output
187.0	188	2


-- !query
SELECT (a+b+c+d+e)/5,
       b,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,3
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,b:int,(b - c):int>
-- !query output
187.0	188	2


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int>
-- !query output
102	NULL	NULL	1020	NULL
106	1604	107	1060	1
114	NULL	110	1140	-4
119	NULL	116	1190	-3
122	NULL	123	1220	1
128	1899	127	1280	-1
134	1975	132	1340	-2
136	2052	138	1360	2
141	2129	144	1410	3
149	NULL	145	1490	-4
150	NULL	151	1500	1
157	NULL	155	1570	-2
160	2436	161	1600	1
170	2589	171	1700	1
176	NULL	177	354	1
180	2739	181	362	1
188	2802	187	374	-1
194	2880	190	380	-4
197	2946	199	398	2
202	NULL	NULL	NULL	NULL
210	3176	214	428	4
215	3259	218	436	3
221	3331	223	446	2
227	3405	226	452	-1
231	3477	234	468	3
236	NULL	237	474	1
244	NULL	NULL	NULL	NULL
248	3704	246	492	-2
NULL	NULL	167	NULL	NULL
NULL	NULL	208	NULL	NULL


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 4,5,1
-- !query schema
struct<b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int>
-- !query output
NULL	NULL	167	NULL	NULL
NULL	NULL	208	NULL	NULL
202	NULL	NULL	NULL	NULL
244	NULL	NULL	NULL	NULL
176	NULL	177	354	1
180	2739	181	362	1
188	2802	187	374	-1
194	2880	190	380	-4
197	2946	199	398	2
210	3176	214	428	4
215	3259	218	436	3
221	3331	223	446	2
227	3405	226	452	-1
231	3477	234	468	3
236	NULL	237	474	1
248	3704	246	492	-2
102	NULL	NULL	1020	NULL
106	1604	107	1060	1
114	NULL	110	1140	-4
119	NULL	116	1190	-3
122	NULL	123	1220	1
128	1899	127	1280	-1
134	1975	132	1340	-2
136	2052	138	1360	2
141	2129	144	1410	3
149	NULL	145	1490	-4
150	NULL	151	1500	1
157	NULL	155	1570	-2
160	2436	161	1600	1
170	2589	171	1700	1


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       c-d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       c-d
  FROM t1
 ORDER BY 5,7,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       abs(a)
  FROM t1
-- !query schema
struct<(d - e):int,abs(a):int>
-- !query output
-1	144
-1	167
-1	171
-1	181
-1	208
-2	138
-2	218
-3	234
-3	NULL
-3	NULL
-4	223
1	127
1	190
1	199
1	214
2	161
3	132
4	107
4	187
4	226
4	246
NULL	110
NULL	116
NULL	123
NULL	145
NULL	151
NULL	155
NULL	177
NULL	237
NULL	NULL


-- !query
SELECT d-e,
       abs(a)
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<(d - e):int,abs(a):int>
-- !query output
NULL	NULL
-3	NULL
-3	NULL
4	107
NULL	110
NULL	116
NULL	123
1	127
3	132
-2	138
-1	144
NULL	145
NULL	151
NULL	155
2	161
-1	167
-1	171
NULL	177
-1	181
4	187
1	190
1	199
-1	208
1	214
-2	218
-4	223
4	226
-3	234
NULL	237
4	246


-- !query
SELECT b-c,
       abs(b-c),
       d-e,
       d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
-- !query schema
struct<(b - c):int,abs((b - c)):int,(d - e):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-1	1	-2	217	3259
-1	1	-3	230	3477
-1	1	-4	220	3331
-1	1	1	126	1899
-1	1	1	196	2946
-2	2	-1	173	2589
-2	2	-1	183	2739
-2	2	4	109	1604
-2	2	NULL	NULL	NULL
-3	3	-2	135	2052
-3	3	1	212	3176
-3	3	2	164	2436
-3	3	NULL	NULL	NULL
-3	3	NULL	NULL	NULL
-3	3	NULL	NULL	NULL
1	1	-1	142	2129


-- !query
SELECT b-c,
       abs(b-c),
       d-e,
       d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
 ORDER BY 2,3,4
-- !query schema
struct<(b - c):int,abs((b - c)):int,(d - e):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-1	1	-4	220	3331
-1	1	-3	230	3477
-1	1	-2	217	3259
1	1	-1	142	2129
-1	1	1	126	1899
-1	1	1	196	2946
-2	2	NULL	NULL	NULL
-2	2	-1	173	2589
-2	2	-1	183	2739
-2	2	4	109	1604
-3	3	NULL	NULL	NULL
-3	3	NULL	NULL	NULL
-3	3	NULL	NULL	NULL
-3	3	-2	135	2052
-3	3	1	212	3176
-3	3	2	164	2436


-- !query
SELECT b-c,
       abs(b-c),
       d-e,
       d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(b - c):int,abs((b - c)):int,(d - e):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-1	1	-2	217	3259
-1	1	-3	230	3477
-1	1	-4	220	3331
-1	1	1	126	1899
-1	1	1	196	2946
-2	2	-1	173	2589
-2	2	-1	183	2739
-2	2	4	109	1604
-2	2	NULL	NULL	NULL
-3	3	-2	135	2052
-3	3	1	212	3176
-3	3	2	164	2436
-3	3	NULL	NULL	NULL
-3	3	NULL	NULL	NULL
-3	3	NULL	NULL	NULL
1	1	-1	142	2129


-- !query
SELECT b-c,
       abs(b-c),
       d-e,
       d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,4
-- !query schema
struct<(b - c):int,abs((b - c)):int,(d - e):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-1	1	1	126	1899
1	1	-1	142	2129
-1	1	1	196	2946
-1	1	-2	217	3259
-1	1	-4	220	3331
-1	1	-3	230	3477
-2	2	NULL	NULL	NULL
-2	2	4	109	1604
-2	2	-1	173	2589
-2	2	-1	183	2739
-3	3	NULL	NULL	NULL
-3	3	NULL	NULL	NULL
-3	3	NULL	NULL	NULL
-3	3	-2	135	2052
-3	3	2	164	2436
-3	3	1	212	3176


-- !query
SELECT b-c,
       a+b*2+c*3,
       a+b*2,
       c-d,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d>e
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
-2	643	319	-1	107.0	1


-- !query
SELECT b-c,
       a+b*2+c*3,
       a+b*2,
       c-d,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d>e
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,1,5,3,6
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
-2	643	319	-1	107.0	1


-- !query
SELECT b-c,
       a+b*2+c*3,
       a+b*2,
       c-d,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
   AND d>e
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
-2	643	319	-1	107.0	1


-- !query
SELECT b-c,
       a+b*2+c*3,
       a+b*2,
       c-d,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
   AND d>e
 ORDER BY 1,4,3,5,6
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
-2	643	319	-1	107.0	1


-- !query
SELECT b-c,
       a+b*2+c*3,
       a+b*2,
       c-d,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE d>e
   AND e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
-2	643	319	-1	107.0	1


-- !query
SELECT b-c,
       a+b*2+c*3,
       a+b*2,
       c-d,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE d>e
   AND e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 3,6,5,2,4
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
-2	643	319	-1	107.0	1


-- !query
SELECT b-c,
       a+b*2+c*3,
       a+b*2,
       c-d,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND d>e
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
-2	643	319	-1	107.0	1


-- !query
SELECT b-c,
       a+b*2+c*3,
       a+b*2,
       c-d,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND d>e
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 6,4,5,2,3,1
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
-2	643	319	-1	107.0	1


-- !query
SELECT b,
       abs(a),
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<b:int,abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
102	NULL	NULL
106	107	1604
114	110	NULL
119	116	NULL
122	123	NULL
128	127	1899
134	132	1975
136	138	2052
141	144	2129
149	145	NULL
150	151	NULL
157	155	NULL
160	161	2436
170	171	2589
176	177	NULL
180	181	2739
188	187	2802
194	190	2880
197	199	2946
202	NULL	NULL
210	214	3176
215	218	3259
221	223	3331
227	226	3405
231	234	3477
236	237	NULL
244	NULL	NULL
248	246	3704
NULL	167	NULL
NULL	208	NULL


-- !query
SELECT b,
       abs(a),
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 2,3
-- !query schema
struct<b:int,abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
202	NULL	NULL
102	NULL	NULL
244	NULL	NULL
106	107	1604
114	110	NULL
119	116	NULL
122	123	NULL
128	127	1899
134	132	1975
136	138	2052
141	144	2129
149	145	NULL
150	151	NULL
157	155	NULL
160	161	2436
NULL	167	NULL
170	171	2589
176	177	NULL
180	181	2739
188	187	2802
194	190	2880
197	199	2946
NULL	208	NULL
210	214	3176
215	218	3259
221	223	3331
227	226	3405
231	234	3477
236	237	NULL
248	246	3704


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a-b
  FROM t1
 WHERE c>d
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a-b
  FROM t1
 WHERE c>d
   AND b>c
 ORDER BY 1,4,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a-b
  FROM t1
 WHERE b>c
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a-b
  FROM t1
 WHERE b>c
   AND c>d
 ORDER BY 1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
102	NULL
106	319
114	338
119	354
134	400
141	426
149	443
160	481
170	511
180	541
188	563
194	578
197	593
202	NULL
210	634
215	648
221	665
227	680
231	696
244	NULL
248	742
NULL	NULL
NULL	NULL


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
NULL	NULL
NULL	NULL
102	NULL
106	319
114	338
119	354
134	400
141	426
149	443
160	481
170	511
180	541
188	563
194	578
197	593
202	NULL
210	634
215	648
221	665
227	680
231	696
244	NULL
248	742


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
    OR b>c
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
102	NULL
106	319
114	338
119	354
134	400
141	426
149	443
160	481
170	511
180	541
188	563
194	578
197	593
202	NULL
210	634
215	648
221	665
227	680
231	696
244	NULL
248	742
NULL	NULL
NULL	NULL


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
    OR b>c
 ORDER BY 1,2
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
NULL	NULL
NULL	NULL
102	NULL
106	319
114	338
119	354
134	400
141	426
149	443
160	481
170	511
180	541
188	563
194	578
197	593
202	NULL
210	634
215	648
221	665
227	680
231	696
244	NULL
248	742


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
102	NULL
106	319
114	338
119	354
134	400
141	426
149	443
160	481
170	511
180	541
188	563
194	578
197	593
202	NULL
210	634
215	648
221	665
227	680
231	696
244	NULL
248	742
NULL	NULL
NULL	NULL


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 2,1
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
NULL	NULL
NULL	NULL
102	NULL
202	NULL
244	NULL
106	319
114	338
119	354
134	400
141	426
149	443
160	481
170	511
180	541
188	563
194	578
197	593
210	634
215	648
221	665
227	680
231	696
248	742


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
    OR b>c
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
102	NULL
106	319
114	338
119	354
134	400
141	426
149	443
160	481
170	511
180	541
188	563
194	578
197	593
202	NULL
210	634
215	648
221	665
227	680
231	696
244	NULL
248	742
NULL	NULL
NULL	NULL


-- !query
SELECT b,
       a+b*2
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
    OR b>c
 ORDER BY 1,2
-- !query schema
struct<b:int,(a + (b * 2)):int>
-- !query output
NULL	NULL
NULL	NULL
102	NULL
106	319
114	338
119	354
134	400
141	426
149	443
160	481
170	511
180	541
188	563
194	578
197	593
202	NULL
210	634
215	648
221	665
227	680
231	696
244	NULL
248	742


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       (a+b+c+d+e)/5,
       d
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,d:int>
-- !query output
1060	-1	107.0	109
1600	-1	162.0	164
1700	-1	172.0	173
362	-1	182.0	183
374	-3	187.0	189
380	1	192.0	192
398	2	197.0	196
428	1	212.0	212
436	-1	217.0	217
446	2	222.0	220
452	-1	227.0	229
468	2	232.0	230
492	-2	247.0	249
NULL	2	NULL	201


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       (a+b+c+d+e)/5,
       d
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 3,2,4,1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,d:int>
-- !query output
NULL	2	NULL	201
1060	-1	107.0	109
1600	-1	162.0	164
1700	-1	172.0	173
362	-1	182.0	183
374	-3	187.0	189
380	1	192.0	192
398	2	197.0	196
428	1	212.0	212
436	-1	217.0	217
446	2	222.0	220
452	-1	227.0	229
468	2	232.0	230
492	-2	247.0	249


-- !query
SELECT a-b
  FROM t1
 WHERE (e>c OR e<d)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a - b):int>
-- !query output
1
1
1
1
2
2
3
3
4


-- !query
SELECT a-b
  FROM t1
 WHERE (e>c OR e<d)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
1
1
1
1
2
2
3
3
4


-- !query
SELECT a-b
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND a>b
-- !query schema
struct<(a - b):int>
-- !query output
1
1
1
1
2
2
3
3
4


-- !query
SELECT a-b
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND a>b
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
1
1
1
1
2
2
3
3
4


-- !query
SELECT a-b
  FROM t1
 WHERE a>b
   AND (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a - b):int>
-- !query output
1
1
1
1
2
2
3
3
4


-- !query
SELECT a-b
  FROM t1
 WHERE a>b
   AND (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
1
1
1
1
2
2
3
3
4


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c,
       b,
       e,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int,b:int,e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
222	3	129	128	125	1274


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c,
       b,
       e,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,4,3,5,2,6
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int,b:int,e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
222	3	129	128	125	1274


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c,
       b,
       e,
       a+b*2+c*3+d*4
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int,b:int,e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
222	3	129	128	125	1274


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c,
       b,
       e,
       a+b*2+c*3+d*4
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,6
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int,b:int,e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
222	3	129	128	125	1274


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c,
       b,
       e,
       a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int,b:int,e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
222	3	129	128	125	1274


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       c,
       b,
       e,
       a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 4,2,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,c:int,b:int,e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
222	3	129	128	125	1274


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
   AND c>d
-- !query schema
struct<(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1	1280


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
   AND c>d
 ORDER BY 2,1
-- !query schema
struct<(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1	1280


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
   AND c>d
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1	1280


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
   AND c>d
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1	1280


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
 ORDER BY 3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       b
  FROM t1
-- !query schema
struct<(d - e):int,b:int>
-- !query output
-1	141
-1	170
-1	180
-1	NULL
-1	NULL
-2	136
-2	215
-3	102
-3	202
-3	231
-4	221
1	128
1	194
1	197
1	210
2	160
3	134
4	106
4	188
4	227
4	248
NULL	114
NULL	119
NULL	122
NULL	149
NULL	150
NULL	157
NULL	176
NULL	236
NULL	244


-- !query
SELECT d-e,
       b
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<(d - e):int,b:int>
-- !query output
-1	NULL
-1	NULL
-3	102
4	106
NULL	114
NULL	119
NULL	122
1	128
3	134
-2	136
-1	141
NULL	149
NULL	150
NULL	157
2	160
-1	170
NULL	176
-1	180
4	188
1	194
1	197
-3	202
1	210
-2	215
-4	221
4	227
-3	231
NULL	236
NULL	244
4	248


-- !query
SELECT abs(b-c),
       abs(a),
       d-e,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE a>b
   AND c>d
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<abs((b - c)):int,abs(a):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
1	199	1	197.0	199
1	223	-4	222.0	223
1	234	-3	232.0	234
3	214	1	212.0	214


-- !query
SELECT abs(b-c),
       abs(a),
       d-e,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE a>b
   AND c>d
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,1,5,2
-- !query schema
struct<abs((b - c)):int,abs(a):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
1	223	-4	222.0	223
1	234	-3	232.0	234
1	199	1	197.0	199
3	214	1	212.0	214


-- !query
SELECT abs(b-c),
       abs(a),
       d-e,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE a>b
   AND c BETWEEN b-2 AND d+2
   AND c>d
-- !query schema
struct<abs((b - c)):int,abs(a):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
1	199	1	197.0	199
1	223	-4	222.0	223
1	234	-3	232.0	234
3	214	1	212.0	214


-- !query
SELECT abs(b-c),
       abs(a),
       d-e,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE a>b
   AND c BETWEEN b-2 AND d+2
   AND c>d
 ORDER BY 3,1,5,2
-- !query schema
struct<abs((b - c)):int,abs(a):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
1	223	-4	222.0	223
1	234	-3	232.0	234
1	199	1	197.0	199
3	214	1	212.0	214


-- !query
SELECT abs(b-c),
       abs(a),
       d-e,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
   AND c>d
-- !query schema
struct<abs((b - c)):int,abs(a):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
1	199	1	197.0	199
1	223	-4	222.0	223
1	234	-3	232.0	234
3	214	1	212.0	214


-- !query
SELECT abs(b-c),
       abs(a),
       d-e,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
   AND c>d
 ORDER BY 5,1,4
-- !query schema
struct<abs((b - c)):int,abs(a):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
1	199	1	197.0	199
3	214	1	212.0	214
1	223	-4	222.0	223
1	234	-3	232.0	234


-- !query
SELECT abs(b-c),
       abs(a),
       d-e,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
   AND a>b
-- !query schema
struct<abs((b - c)):int,abs(a):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
1	199	1	197.0	199
1	223	-4	222.0	223
1	234	-3	232.0	234
3	214	1	212.0	214


-- !query
SELECT abs(b-c),
       abs(a),
       d-e,
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
   AND a>b
 ORDER BY 4,1,3
-- !query schema
struct<abs((b - c)):int,abs(a):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,a:int>
-- !query output
1	199	1	197.0	199
3	214	1	212.0	214
1	223	-4	222.0	223
1	234	-3	232.0	234


-- !query
SELECT d-e
  FROM t1
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-1
-1
-2
-2
-3
-3
-3
-4
1
1
1
1
2
3
4
4
4
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
-4
-3
-3
-3
-2
-2
-1
-1
-1
-1
-1
1
1
1
1
2
3
4
4
4
4


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       a+b*2+c*3+d*4,
       a,
       abs(b-c)
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,abs((b - c)):int>
-- !query output
111	1	1925	190	1
111	2	NULL	110	2
111	3	NULL	145	3
222	-1	1274	127	1
222	-1	2280	226	1
222	-2	NULL	155	2
222	1	2479	246	1
222	2	1165	116	2
222	2	1877	187	2
222	3	1325	132	3
333	-1	1971	199	1
333	-1	2211	223	1
333	-2	1079	107	2
333	-2	1719	171	2
333	-2	1819	181	2
333	-2	NULL	123	2
333	-3	1367	138	3
333	-3	1626	161	3
333	-3	NULL	151	3
333	-3	NULL	177	3
333	-3	NULL	237	3
444	-1	2164	218	1
444	-1	2312	234	1
444	-1	NULL	NULL	1
444	-3	2121	214	3
444	1	1414	144	1
444	4	NULL	NULL	4
444	NULL	NULL	167	NULL
444	NULL	NULL	208	NULL
444	NULL	NULL	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       a+b*2+c*3+d*4,
       a,
       abs(b-c)
  FROM t1
 ORDER BY 2,4,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,abs((b - c)):int>
-- !query output
444	NULL	NULL	NULL	NULL
444	NULL	NULL	167	NULL
444	NULL	NULL	208	NULL
333	-3	1367	138	3
333	-3	NULL	151	3
333	-3	1626	161	3
333	-3	NULL	177	3
444	-3	2121	214	3
333	-3	NULL	237	3
333	-2	1079	107	2
333	-2	NULL	123	2
222	-2	NULL	155	2
333	-2	1719	171	2
333	-2	1819	181	2
444	-1	NULL	NULL	1
222	-1	1274	127	1
333	-1	1971	199	1
444	-1	2164	218	1
333	-1	2211	223	1
222	-1	2280	226	1
444	-1	2312	234	1
444	1	1414	144	1
111	1	1925	190	1
222	1	2479	246	1
111	2	NULL	110	2
222	2	1165	116	2
222	2	1877	187	2
222	3	1325	132	3
111	3	NULL	145	3
444	4	NULL	NULL	4


-- !query
SELECT c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<c:int>
-- !query output



-- !query
SELECT c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<c:int>
-- !query output



-- !query
SELECT c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
-- !query schema
struct<c:int>
-- !query output



-- !query
SELECT c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
 ORDER BY 1
-- !query schema
struct<c:int>
-- !query output



-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR a>b
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
    OR (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d-e,
       a+b*2+c*3,
       abs(b-c),
       b
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
    OR c>d
-- !query schema
struct<abs(a):int,(d - e):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,b:int>
-- !query output
107	4	643	2	106
116	NULL	705	2	119
127	1	770	1	128
132	3	793	3	134
138	-2	827	3	136
161	2	970	3	160
167	-1	NULL	NULL	NULL
171	-1	1027	2	170
181	-1	1087	2	180
187	4	1121	2	188
190	1	1157	1	194
199	1	1187	1	197
208	-1	NULL	NULL	NULL
214	1	1273	3	210
218	-2	1296	1	215
223	-4	1331	1	221
226	4	1364	1	227
234	-3	1392	1	231
246	4	1483	1	248
NULL	-3	NULL	1	202
NULL	-3	NULL	NULL	102
NULL	NULL	NULL	4	244


-- !query
SELECT abs(a),
       d-e,
       a+b*2+c*3,
       abs(b-c),
       b
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
    OR c>d
 ORDER BY 4,1,5
-- !query schema
struct<abs(a):int,(d - e):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,b:int>
-- !query output
NULL	-3	NULL	NULL	102
167	-1	NULL	NULL	NULL
208	-1	NULL	NULL	NULL
NULL	-3	NULL	1	202
127	1	770	1	128
190	1	1157	1	194
199	1	1187	1	197
218	-2	1296	1	215
223	-4	1331	1	221
226	4	1364	1	227
234	-3	1392	1	231
246	4	1483	1	248
107	4	643	2	106
116	NULL	705	2	119
171	-1	1027	2	170
181	-1	1087	2	180
187	4	1121	2	188
132	3	793	3	134
138	-2	827	3	136
161	2	970	3	160
214	1	1273	3	210
NULL	NULL	NULL	4	244


-- !query
SELECT abs(a),
       d-e,
       a+b*2+c*3,
       abs(b-c),
       b
  FROM t1
 WHERE d>e
    OR c>d
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs(a):int,(d - e):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,b:int>
-- !query output
107	4	643	2	106
116	NULL	705	2	119
127	1	770	1	128
132	3	793	3	134
138	-2	827	3	136
161	2	970	3	160
167	-1	NULL	NULL	NULL
171	-1	1027	2	170
181	-1	1087	2	180
187	4	1121	2	188
190	1	1157	1	194
199	1	1187	1	197
208	-1	NULL	NULL	NULL
214	1	1273	3	210
218	-2	1296	1	215
223	-4	1331	1	221
226	4	1364	1	227
234	-3	1392	1	231
246	4	1483	1	248
NULL	-3	NULL	1	202
NULL	-3	NULL	NULL	102
NULL	NULL	NULL	4	244


-- !query
SELECT abs(a),
       d-e,
       a+b*2+c*3,
       abs(b-c),
       b
  FROM t1
 WHERE d>e
    OR c>d
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1,2,4
-- !query schema
struct<abs(a):int,(d - e):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,b:int>
-- !query output
NULL	NULL	NULL	4	244
NULL	-3	NULL	NULL	102
NULL	-3	NULL	1	202
107	4	643	2	106
116	NULL	705	2	119
127	1	770	1	128
132	3	793	3	134
138	-2	827	3	136
161	2	970	3	160
167	-1	NULL	NULL	NULL
171	-1	1027	2	170
181	-1	1087	2	180
187	4	1121	2	188
190	1	1157	1	194
199	1	1187	1	197
208	-1	NULL	NULL	NULL
214	1	1273	3	210
218	-2	1296	1	215
223	-4	1331	1	221
226	4	1364	1	227
234	-3	1392	1	231
246	4	1483	1	248


-- !query
SELECT abs(a),
       d-e,
       a+b*2+c*3,
       abs(b-c),
       b
  FROM t1
 WHERE c>d
    OR d NOT BETWEEN 110 AND 150
    OR d>e
-- !query schema
struct<abs(a):int,(d - e):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,b:int>
-- !query output
107	4	643	2	106
116	NULL	705	2	119
127	1	770	1	128
132	3	793	3	134
138	-2	827	3	136
161	2	970	3	160
167	-1	NULL	NULL	NULL
171	-1	1027	2	170
181	-1	1087	2	180
187	4	1121	2	188
190	1	1157	1	194
199	1	1187	1	197
208	-1	NULL	NULL	NULL
214	1	1273	3	210
218	-2	1296	1	215
223	-4	1331	1	221
226	4	1364	1	227
234	-3	1392	1	231
246	4	1483	1	248
NULL	-3	NULL	1	202
NULL	-3	NULL	NULL	102
NULL	NULL	NULL	4	244


-- !query
SELECT abs(a),
       d-e,
       a+b*2+c*3,
       abs(b-c),
       b
  FROM t1
 WHERE c>d
    OR d NOT BETWEEN 110 AND 150
    OR d>e
 ORDER BY 1,3
-- !query schema
struct<abs(a):int,(d - e):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,b:int>
-- !query output
NULL	-3	NULL	1	202
NULL	-3	NULL	NULL	102
NULL	NULL	NULL	4	244
107	4	643	2	106
116	NULL	705	2	119
127	1	770	1	128
132	3	793	3	134
138	-2	827	3	136
161	2	970	3	160
167	-1	NULL	NULL	NULL
171	-1	1027	2	170
181	-1	1087	2	180
187	4	1121	2	188
190	1	1157	1	194
199	1	1187	1	197
208	-1	NULL	NULL	NULL
214	1	1273	3	210
218	-2	1296	1	215
223	-4	1331	1	221
226	4	1364	1	227
234	-3	1392	1	231
246	4	1483	1	248


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 4,1,5,2,6,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 5,6,2,3,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
 ORDER BY 4,6,5,1,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c-d,
       a+b*2+c*3,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<d:int,(c - d):int,((a + (b * 2)) + (c * 3)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
101	NULL	NULL	NULL	1020	NULL
109	-1	643	108	1060	1604
115	2	705	117	1190	NULL
126	3	770	129	1280	1899
133	-2	793	131	1340	1975
135	4	827	139	1360	2052
142	-2	846	140	1410	2129
164	-1	970	163	1600	2436
165	3	NULL	168	NULL	NULL
173	-1	1027	172	1700	2589
183	-1	1087	182	362	2739
189	-3	1121	186	374	2802
192	1	1157	193	380	2880
196	2	1187	198	398	2946
201	2	NULL	203	NULL	NULL
206	NULL	NULL	NULL	NULL	NULL
212	1	1273	213	428	3176
217	-1	1296	216	436	3259
220	2	1331	222	446	3331
229	-1	1364	228	452	3405
230	2	1392	232	468	3477
243	-3	NULL	240	NULL	NULL
249	-2	1483	247	492	3704
NULL	NULL	1066	179	354	NULL
NULL	NULL	1426	239	474	NULL
NULL	NULL	674	112	1140	NULL
NULL	NULL	739	124	1220	NULL
NULL	NULL	881	146	1490	NULL
NULL	NULL	910	153	1500	NULL
NULL	NULL	946	159	1570	NULL


-- !query
SELECT d,
       c-d,
       a+b*2+c*3,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 2,5,6,3,1
-- !query schema
struct<d:int,(c - d):int,((a + (b * 2)) + (c * 3)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
206	NULL	NULL	NULL	NULL	NULL
NULL	NULL	1066	179	354	NULL
NULL	NULL	1426	239	474	NULL
101	NULL	NULL	NULL	1020	NULL
NULL	NULL	674	112	1140	NULL
NULL	NULL	739	124	1220	NULL
NULL	NULL	881	146	1490	NULL
NULL	NULL	910	153	1500	NULL
NULL	NULL	946	159	1570	NULL
243	-3	NULL	240	NULL	NULL
189	-3	1121	186	374	2802
249	-2	1483	247	492	3704
133	-2	793	131	1340	1975
142	-2	846	140	1410	2129
183	-1	1087	182	362	2739
217	-1	1296	216	436	3259
229	-1	1364	228	452	3405
109	-1	643	108	1060	1604
164	-1	970	163	1600	2436
173	-1	1027	172	1700	2589
192	1	1157	193	380	2880
212	1	1273	213	428	3176
201	2	NULL	203	NULL	NULL
196	2	1187	198	398	2946
220	2	1331	222	446	3331
230	2	1392	232	468	3477
115	2	705	117	1190	NULL
165	3	NULL	168	NULL	NULL
126	3	770	129	1280	1899
135	4	827	139	1360	2052


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       a,
       b,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c>d
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       a,
       b,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c>d
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       a,
       b,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       a,
       b,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c>d
 ORDER BY 7,4,3,5,2,6,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b-c,
       abs(a),
       d,
       abs(b-c),
       c,
       d-e
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,abs(a):int,d:int,abs((b - c)):int,c:int,(d - e):int>
-- !query output
1604	-2	107	109	2	108	4
1899	-1	127	126	1	129	1
1975	3	132	133	3	131	3
2052	-3	138	135	3	139	-2
2129	1	144	142	1	140	-1
2436	-3	161	164	3	163	2
2589	-2	171	173	2	172	-1
2739	-2	181	183	2	182	-1
2802	2	187	189	2	186	4
2880	1	190	192	1	193	1
2946	-1	199	196	1	198	1
3176	-3	214	212	3	213	1
3259	-1	218	217	1	216	-2
3331	-1	223	220	1	222	-4
3405	-1	226	229	1	228	4
3477	-1	234	230	1	232	-3
3704	1	246	249	1	247	4
NULL	-1	NULL	201	1	203	-3
NULL	-2	123	NULL	2	124	NULL
NULL	-2	155	NULL	2	159	NULL
NULL	-3	151	NULL	3	153	NULL
NULL	-3	177	NULL	3	179	NULL
NULL	-3	237	NULL	3	239	NULL
NULL	2	110	NULL	2	112	NULL
NULL	2	116	115	2	117	NULL
NULL	3	145	NULL	3	146	NULL
NULL	4	NULL	243	4	240	NULL
NULL	NULL	167	165	NULL	168	-1
NULL	NULL	208	206	NULL	NULL	-1
NULL	NULL	NULL	101	NULL	NULL	-3


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b-c,
       abs(a),
       d,
       abs(b-c),
       c,
       d-e
  FROM t1
 ORDER BY 4,3,5,2,6,7
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,abs(a):int,d:int,abs((b - c)):int,c:int,(d - e):int>
-- !query output
NULL	2	110	NULL	2	112	NULL
NULL	-2	123	NULL	2	124	NULL
NULL	3	145	NULL	3	146	NULL
NULL	-3	151	NULL	3	153	NULL
NULL	-2	155	NULL	2	159	NULL
NULL	-3	177	NULL	3	179	NULL
NULL	-3	237	NULL	3	239	NULL
NULL	NULL	NULL	101	NULL	NULL	-3
1604	-2	107	109	2	108	4
NULL	2	116	115	2	117	NULL
1899	-1	127	126	1	129	1
1975	3	132	133	3	131	3
2052	-3	138	135	3	139	-2
2129	1	144	142	1	140	-1
2436	-3	161	164	3	163	2
NULL	NULL	167	165	NULL	168	-1
2589	-2	171	173	2	172	-1
2739	-2	181	183	2	182	-1
2802	2	187	189	2	186	4
2880	1	190	192	1	193	1
2946	-1	199	196	1	198	1
NULL	-1	NULL	201	1	203	-3
NULL	NULL	208	206	NULL	NULL	-1
3176	-3	214	212	3	213	1
3259	-1	218	217	1	216	-2
3331	-1	223	220	1	222	-4
3405	-1	226	229	1	228	4
3477	-1	234	230	1	232	-3
NULL	4	NULL	243	4	240	NULL
3704	1	246	249	1	247	4


-- !query
SELECT a+b*2,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a + (b * 2)):int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(c - d):int>
-- !query output
319	107	1060	105	-1
354	116	1190	NULL	2
367	123	1220	121	NULL
383	127	1280	125	3
426	144	1410	143	-2
451	151	1500	NULL	NULL
481	161	1600	162	-1
511	171	1700	174	-1
529	177	354	175	NULL
541	181	362	184	-1
563	187	374	185	-3
578	190	380	191	1
593	199	398	195	2
634	214	428	211	1
648	218	436	219	-1
665	223	446	224	2
680	226	452	225	-1
696	234	468	233	2
709	237	474	238	NULL
742	246	492	245	-2
NULL	167	NULL	166	3
NULL	208	NULL	207	NULL
NULL	NULL	1020	104	NULL
NULL	NULL	NULL	204	2
NULL	NULL	NULL	NULL	-3


-- !query
SELECT a+b*2,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 4,5
-- !query schema
struct<(a + (b * 2)):int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(c - d):int>
-- !query output
451	151	1500	NULL	NULL
NULL	NULL	NULL	NULL	-3
354	116	1190	NULL	2
NULL	NULL	1020	104	NULL
319	107	1060	105	-1
367	123	1220	121	NULL
383	127	1280	125	3
426	144	1410	143	-2
481	161	1600	162	-1
NULL	167	NULL	166	3
511	171	1700	174	-1
529	177	354	175	NULL
541	181	362	184	-1
563	187	374	185	-3
578	190	380	191	1
593	199	398	195	2
NULL	NULL	NULL	204	2
NULL	208	NULL	207	NULL
634	214	428	211	1
648	218	436	219	-1
665	223	446	224	2
680	226	452	225	-1
696	234	468	233	2
709	237	474	238	NULL
742	246	492	245	-2


-- !query
SELECT a+b*2,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c-d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a + (b * 2)):int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(c - d):int>
-- !query output
319	107	1060	105	-1
354	116	1190	NULL	2
367	123	1220	121	NULL
383	127	1280	125	3
426	144	1410	143	-2
451	151	1500	NULL	NULL
481	161	1600	162	-1
511	171	1700	174	-1
529	177	354	175	NULL
541	181	362	184	-1
563	187	374	185	-3
578	190	380	191	1
593	199	398	195	2
634	214	428	211	1
648	218	436	219	-1
665	223	446	224	2
680	226	452	225	-1
696	234	468	233	2
709	237	474	238	NULL
742	246	492	245	-2
NULL	167	NULL	166	3
NULL	208	NULL	207	NULL
NULL	NULL	1020	104	NULL
NULL	NULL	NULL	204	2
NULL	NULL	NULL	NULL	-3


-- !query
SELECT a+b*2,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c-d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 5,2
-- !query schema
struct<(a + (b * 2)):int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(c - d):int>
-- !query output
NULL	NULL	1020	104	NULL
367	123	1220	121	NULL
451	151	1500	NULL	NULL
529	177	354	175	NULL
NULL	208	NULL	207	NULL
709	237	474	238	NULL
NULL	NULL	NULL	NULL	-3
563	187	374	185	-3
426	144	1410	143	-2
742	246	492	245	-2
319	107	1060	105	-1
481	161	1600	162	-1
511	171	1700	174	-1
541	181	362	184	-1
648	218	436	219	-1
680	226	452	225	-1
578	190	380	191	1
634	214	428	211	1
NULL	NULL	NULL	204	2
354	116	1190	NULL	2
593	199	398	195	2
665	223	446	224	2
696	234	468	233	2
383	127	1280	125	3
NULL	167	NULL	166	3


-- !query
SELECT a+b*2,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(a + (b * 2)):int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(c - d):int>
-- !query output
319	107	1060	105	-1
354	116	1190	NULL	2
367	123	1220	121	NULL
383	127	1280	125	3
426	144	1410	143	-2
451	151	1500	NULL	NULL
481	161	1600	162	-1
511	171	1700	174	-1
529	177	354	175	NULL
541	181	362	184	-1
563	187	374	185	-3
578	190	380	191	1
593	199	398	195	2
634	214	428	211	1
648	218	436	219	-1
665	223	446	224	2
680	226	452	225	-1
696	234	468	233	2
709	237	474	238	NULL
742	246	492	245	-2
NULL	167	NULL	166	3
NULL	208	NULL	207	NULL
NULL	NULL	1020	104	NULL
NULL	NULL	NULL	204	2
NULL	NULL	NULL	NULL	-3


-- !query
SELECT a+b*2,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
 ORDER BY 1,3,5,4
-- !query schema
struct<(a + (b * 2)):int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(c - d):int>
-- !query output
NULL	208	NULL	207	NULL
NULL	NULL	NULL	NULL	-3
NULL	NULL	NULL	204	2
NULL	167	NULL	166	3
NULL	NULL	1020	104	NULL
319	107	1060	105	-1
354	116	1190	NULL	2
367	123	1220	121	NULL
383	127	1280	125	3
426	144	1410	143	-2
451	151	1500	NULL	NULL
481	161	1600	162	-1
511	171	1700	174	-1
529	177	354	175	NULL
541	181	362	184	-1
563	187	374	185	-3
578	190	380	191	1
593	199	398	195	2
634	214	428	211	1
648	218	436	219	-1
665	223	446	224	2
680	226	452	225	-1
696	234	468	233	2
709	237	474	238	NULL
742	246	492	245	-2


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       c-d,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       c-d,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 1,5,2,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d>e
    OR b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d>e
    OR b>c
    OR c BETWEEN b-2 AND d+2
 ORDER BY 3,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
    OR d>e
 ORDER BY 1,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d>e
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d>e
    OR b>c
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       a+b*2,
       a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,(a - b):int>
-- !query output
106	1079	4	222	107.0	319	1
119	1165	NULL	222	NULL	354	-3
141	1414	-1	555	142.0	426	3
160	1626	2	444	162.0	481	1
170	1719	-1	222	172.0	511	1
180	1819	-1	222	182.0	541	1
188	1877	4	111	187.0	563	-1
194	1925	1	444	192.0	578	-4
197	1971	1	555	197.0	593	2
202	NULL	-3	555	NULL	NULL	NULL
210	2121	1	555	212.0	634	4
215	2164	-2	444	217.0	648	3
221	2211	-4	444	222.0	665	2
227	2280	4	111	227.0	680	-1
231	2312	-3	555	232.0	696	3
248	2479	4	222	247.0	742	-2


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       a+b*2,
       a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 5,6,1,3,7
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,(a - b):int>
-- !query output
202	NULL	-3	555	NULL	NULL	NULL
119	1165	NULL	222	NULL	354	-3
106	1079	4	222	107.0	319	1
141	1414	-1	555	142.0	426	3
160	1626	2	444	162.0	481	1
170	1719	-1	222	172.0	511	1
180	1819	-1	222	182.0	541	1
188	1877	4	111	187.0	563	-1
194	1925	1	444	192.0	578	-4
197	1971	1	555	197.0	593	2
210	2121	1	555	212.0	634	4
215	2164	-2	444	217.0	648	3
221	2211	-4	444	222.0	665	2
227	2280	4	111	227.0	680	-1
231	2312	-3	555	232.0	696	3
248	2479	4	222	247.0	742	-2


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1079	643	108	1060
1274	770	129	1280
1325	793	131	1340
1414	846	140	1410
1626	970	163	1600
1719	1027	172	1700
1819	1087	182	362
1877	1121	186	374
1925	1157	193	380
1971	1187	198	398
2121	1273	213	428
2164	1296	216	436
2211	1331	222	446
2280	1364	228	452
2312	1392	232	468
2479	1483	247	492
NULL	674	112	1140
NULL	881	146	1490
NULL	NULL	203	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 2,4
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL	203	NULL
1079	643	108	1060
NULL	674	112	1140
1274	770	129	1280
1325	793	131	1340
1414	846	140	1410
NULL	881	146	1490
1626	970	163	1600
1719	1027	172	1700
1819	1087	182	362
1877	1121	186	374
1925	1157	193	380
1971	1187	198	398
2121	1273	213	428
2164	1296	216	436
2211	1331	222	446
2280	1364	228	452
2312	1392	232	468
2479	1483	247	492


-- !query
SELECT abs(a),
       a+b*2,
       a+b*2+c*3,
       (a+b+c+d+e)/5,
       c,
       d,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double,c:int,d:int,(c - d):int>
-- !query output
107	319	643	107.0	108	109	-1
116	354	705	NULL	117	115	2
144	426	846	142.0	140	142	-2
161	481	970	162.0	163	164	-1
171	511	1027	172.0	172	173	-1
181	541	1087	182.0	182	183	-1
187	563	1121	187.0	186	189	-3
190	578	1157	192.0	193	192	1
199	593	1187	197.0	198	196	2
214	634	1273	212.0	213	212	1
218	648	1296	217.0	216	217	-1
223	665	1331	222.0	222	220	2
226	680	1364	227.0	228	229	-1
234	696	1392	232.0	232	230	2
246	742	1483	247.0	247	249	-2
NULL	NULL	NULL	NULL	203	201	2


-- !query
SELECT abs(a),
       a+b*2,
       a+b*2+c*3,
       (a+b+c+d+e)/5,
       c,
       d,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1,3,2,6,5,7,4
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double,c:int,d:int,(c - d):int>
-- !query output
NULL	NULL	NULL	NULL	203	201	2
107	319	643	107.0	108	109	-1
116	354	705	NULL	117	115	2
144	426	846	142.0	140	142	-2
161	481	970	162.0	163	164	-1
171	511	1027	172.0	172	173	-1
181	541	1087	182.0	182	183	-1
187	563	1121	187.0	186	189	-3
190	578	1157	192.0	193	192	1
199	593	1187	197.0	198	196	2
214	634	1273	212.0	213	212	1
218	648	1296	217.0	216	217	-1
223	665	1331	222.0	222	220	2
226	680	1364	227.0	228	229	-1
234	696	1392	232.0	232	230	2
246	742	1483	247.0	247	249	-2


-- !query
SELECT a
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<a:int>
-- !query output
110
145
190


-- !query
SELECT a
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 1
-- !query schema
struct<a:int>
-- !query output
110
145
190


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       b-c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       b-c
  FROM t1
 ORDER BY 3,1,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
   AND a>b
-- !query schema
struct<abs(a):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT abs(a),
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
   AND a>b
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT abs(a),
       a+b*2
  FROM t1
 WHERE a>b
   AND b>c
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs(a):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT abs(a),
       a+b*2
  FROM t1
 WHERE a>b
   AND b>c
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT abs(a),
       a+b*2
  FROM t1
 WHERE b>c
   AND a>b
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs(a):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT abs(a),
       a+b*2
  FROM t1
 WHERE b>c
   AND a>b
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<abs(a):int,(a + (b * 2)):int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int>
-- !query output
111	110
111	145
111	190
222	116
222	127
222	132
222	155
222	187
222	226
222	246
333	107
333	123
333	138
333	151
333	161
333	171
333	177
333	181
333	199
333	223
333	237
444	144
444	167
444	208
444	214
444	218
444	234
444	NULL
444	NULL
444	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int>
-- !query output
444	NULL
444	NULL
444	NULL
333	107
111	110
222	116
333	123
222	127
222	132
333	138
444	144
111	145
333	151
222	155
333	161
444	167
333	171
333	177
333	181
222	187
111	190
333	199
444	208
444	214
444	218
333	223
222	226
444	234
333	237
222	246


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4+e*5,
       b,
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d>e
-- !query schema
struct<abs((b - c)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,(d - e):int>
-- !query output
1	1899	128	1
1	2129	141	-1
1	2880	194	1
1	2946	197	1
1	3331	221	-4
1	3405	227	4
1	3477	231	-3
1	3704	248	4
1	NULL	202	-3
2	1604	106	4
2	2802	188	4
2	NULL	119	NULL
3	1975	134	3
3	2052	136	-2
3	2436	160	2
3	3176	210	1
4	NULL	244	NULL
NULL	NULL	NULL	-1


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4+e*5,
       b,
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d>e
 ORDER BY 4,2
-- !query schema
struct<abs((b - c)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,(d - e):int>
-- !query output
2	NULL	119	NULL
4	NULL	244	NULL
1	3331	221	-4
1	NULL	202	-3
1	3477	231	-3
3	2052	136	-2
NULL	NULL	NULL	-1
1	2129	141	-1
1	1899	128	1
1	2880	194	1
1	2946	197	1
3	3176	210	1
3	2436	160	2
3	1975	134	3
2	1604	106	4
2	2802	188	4
1	3405	227	4
1	3704	248	4


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4+e*5,
       b,
       d-e
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<abs((b - c)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,(d - e):int>
-- !query output
1	1899	128	1
1	2129	141	-1
1	2880	194	1
1	2946	197	1
1	3331	221	-4
1	3405	227	4
1	3477	231	-3
1	3704	248	4
1	NULL	202	-3
2	1604	106	4
2	2802	188	4
2	NULL	119	NULL
3	1975	134	3
3	2052	136	-2
3	2436	160	2
3	3176	210	1
4	NULL	244	NULL
NULL	NULL	NULL	-1


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4+e*5,
       b,
       d-e
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 4,1,3
-- !query schema
struct<abs((b - c)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,(d - e):int>
-- !query output
2	NULL	119	NULL
4	NULL	244	NULL
1	3331	221	-4
1	NULL	202	-3
1	3477	231	-3
3	2052	136	-2
NULL	NULL	NULL	-1
1	2129	141	-1
1	1899	128	1
1	2880	194	1
1	2946	197	1
3	3176	210	1
3	2436	160	2
3	1975	134	3
1	3405	227	4
1	3704	248	4
2	1604	106	4
2	2802	188	4


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 ORDER BY 3,5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       a
  FROM t1
-- !query schema
struct<e:int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int,a:int>
-- !query output
104	-3	444	102	NULL
105	4	333	106	107
113	NULL	111	114	110
121	NULL	333	122	123
125	1	222	128	127
130	3	222	134	132
137	-2	333	136	138
143	-1	444	141	144
147	NULL	111	149	145
158	NULL	222	157	155
162	2	333	160	161
166	-1	444	NULL	167
174	-1	333	170	171
175	NULL	333	176	177
184	-1	333	180	181
185	4	222	188	187
191	1	111	194	190
195	1	333	197	199
204	-3	444	202	NULL
207	-1	444	NULL	208
211	1	444	210	214
219	-2	444	215	218
224	-4	333	221	223
225	4	222	227	226
233	-3	444	231	234
238	NULL	333	236	237
245	4	222	248	246
NULL	NULL	222	119	116
NULL	NULL	333	150	151
NULL	NULL	444	244	NULL


-- !query
SELECT e,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       a
  FROM t1
 ORDER BY 4,2,3,5
-- !query schema
struct<e:int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int,a:int>
-- !query output
166	-1	444	NULL	167
207	-1	444	NULL	208
104	-3	444	102	NULL
105	4	333	106	107
113	NULL	111	114	110
NULL	NULL	222	119	116
121	NULL	333	122	123
125	1	222	128	127
130	3	222	134	132
137	-2	333	136	138
143	-1	444	141	144
147	NULL	111	149	145
NULL	NULL	333	150	151
158	NULL	222	157	155
162	2	333	160	161
174	-1	333	170	171
175	NULL	333	176	177
184	-1	333	180	181
185	4	222	188	187
191	1	111	194	190
195	1	333	197	199
204	-3	444	202	NULL
211	1	444	210	214
219	-2	444	215	218
224	-4	333	221	223
225	4	222	227	226
233	-3	444	231	234
238	NULL	333	236	237
NULL	NULL	444	244	NULL
245	4	222	248	246


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
 ORDER BY 1,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       d-e,
       abs(b-c),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       d-e,
       abs(b-c),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
 ORDER BY 3,4,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       d-e,
       abs(b-c),
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       d-e,
       abs(b-c),
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 6,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       a+b*2+c*3+d*4,
       abs(a)
  FROM t1
-- !query schema
struct<(d - e):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int>
-- !query output
-1	142.0	555	1410	3	1414	144
-1	172.0	222	1700	1	1719	171
-1	182.0	222	362	1	1819	181
-1	NULL	222	NULL	NULL	NULL	167
-1	NULL	555	NULL	NULL	NULL	208
-2	137.0	222	1360	2	1367	138
-2	217.0	444	436	3	2164	218
-3	232.0	555	468	3	2312	234
-3	NULL	555	1020	NULL	NULL	NULL
-3	NULL	555	NULL	NULL	NULL	NULL
-4	222.0	444	446	2	2211	223
1	127.0	111	1280	-1	1274	127
1	192.0	444	380	-4	1925	190
1	197.0	555	398	2	1971	199
1	212.0	555	428	4	2121	214
2	162.0	444	1600	1	1626	161
3	132.0	333	1340	-2	1325	132
4	107.0	222	1060	1	1079	107
4	187.0	111	374	-1	1877	187
4	227.0	111	452	-1	2280	226
4	247.0	222	492	-2	2479	246
NULL	NULL	222	1190	-3	1165	116
NULL	NULL	222	1220	1	NULL	123
NULL	NULL	222	1490	-4	NULL	145
NULL	NULL	444	474	1	NULL	237
NULL	NULL	555	1140	-4	NULL	110
NULL	NULL	555	1500	1	NULL	151
NULL	NULL	555	1570	-2	NULL	155
NULL	NULL	555	354	1	NULL	177
NULL	NULL	555	NULL	NULL	NULL	NULL


-- !query
SELECT d-e,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       a+b*2+c*3+d*4,
       abs(a)
  FROM t1
 ORDER BY 7,6,2,1,3,4
-- !query schema
struct<(d - e):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs(a):int>
-- !query output
NULL	NULL	555	NULL	NULL	NULL	NULL
-3	NULL	555	NULL	NULL	NULL	NULL
-3	NULL	555	1020	NULL	NULL	NULL
4	107.0	222	1060	1	1079	107
NULL	NULL	555	1140	-4	NULL	110
NULL	NULL	222	1190	-3	1165	116
NULL	NULL	222	1220	1	NULL	123
1	127.0	111	1280	-1	1274	127
3	132.0	333	1340	-2	1325	132
-2	137.0	222	1360	2	1367	138
-1	142.0	555	1410	3	1414	144
NULL	NULL	222	1490	-4	NULL	145
NULL	NULL	555	1500	1	NULL	151
NULL	NULL	555	1570	-2	NULL	155
2	162.0	444	1600	1	1626	161
-1	NULL	222	NULL	NULL	NULL	167
-1	172.0	222	1700	1	1719	171
NULL	NULL	555	354	1	NULL	177
-1	182.0	222	362	1	1819	181
4	187.0	111	374	-1	1877	187
1	192.0	444	380	-4	1925	190
1	197.0	555	398	2	1971	199
-1	NULL	555	NULL	NULL	NULL	208
1	212.0	555	428	4	2121	214
-2	217.0	444	436	3	2164	218
-4	222.0	444	446	2	2211	223
4	227.0	111	452	-1	2280	226
-3	232.0	555	468	3	2312	234
NULL	NULL	444	474	1	NULL	237
4	247.0	222	492	-2	2479	246


-- !query
SELECT c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       abs(a),
       d
  FROM t1
-- !query schema
struct<(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int,d:int>
-- !query output
-1	1060	107.0	107	109
-1	1600	162.0	161	164
-1	1700	172.0	171	173
-1	362	182.0	181	183
-1	436	217.0	218	217
-1	452	227.0	226	229
-2	1340	132.0	132	133
-2	1410	142.0	144	142
-2	492	247.0	246	249
-3	374	187.0	187	189
-3	NULL	NULL	NULL	243
1	380	192.0	190	192
1	428	212.0	214	212
2	1190	NULL	116	115
2	398	197.0	199	196
2	446	222.0	223	220
2	468	232.0	234	230
2	NULL	NULL	NULL	201
3	1280	127.0	127	126
3	NULL	NULL	167	165
4	1360	137.0	138	135
NULL	1020	NULL	NULL	101
NULL	1140	NULL	110	NULL
NULL	1220	NULL	123	NULL
NULL	1490	NULL	145	NULL
NULL	1500	NULL	151	NULL
NULL	1570	NULL	155	NULL
NULL	354	NULL	177	NULL
NULL	474	NULL	237	NULL
NULL	NULL	NULL	208	206


-- !query
SELECT c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       abs(a),
       d
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int,d:int>
-- !query output
NULL	NULL	NULL	208	206
NULL	354	NULL	177	NULL
NULL	474	NULL	237	NULL
NULL	1020	NULL	NULL	101
NULL	1140	NULL	110	NULL
NULL	1220	NULL	123	NULL
NULL	1490	NULL	145	NULL
NULL	1500	NULL	151	NULL
NULL	1570	NULL	155	NULL
-3	NULL	NULL	NULL	243
-3	374	187.0	187	189
-2	492	247.0	246	249
-2	1340	132.0	132	133
-2	1410	142.0	144	142
-1	362	182.0	181	183
-1	436	217.0	218	217
-1	452	227.0	226	229
-1	1060	107.0	107	109
-1	1600	162.0	161	164
-1	1700	172.0	171	173
1	380	192.0	190	192
1	428	212.0	214	212
2	NULL	NULL	NULL	201
2	398	197.0	199	196
2	446	222.0	223	220
2	468	232.0	234	230
2	1190	NULL	116	115
3	NULL	NULL	167	165
3	1280	127.0	127	126
4	1360	137.0	138	135


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       d-e,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<a:int,(d - e):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
107	4	108	1060
110	NULL	112	1140
116	NULL	117	1190
127	1	129	1280
132	3	131	1340
138	-2	139	1360
144	-1	140	1410
145	NULL	146	1490
161	2	163	1600
167	-1	168	NULL
171	-1	172	1700
181	-1	182	362
187	4	186	374
190	1	193	380
199	1	198	398
214	1	213	428
218	-2	216	436
223	-4	222	446
226	4	228	452
234	-3	232	468
246	4	247	492
NULL	-3	203	NULL
NULL	NULL	240	NULL


-- !query
SELECT a,
       d-e,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b>c
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<a:int,(d - e):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL	240	NULL
NULL	-3	203	NULL
107	4	108	1060
110	NULL	112	1140
116	NULL	117	1190
127	1	129	1280
132	3	131	1340
138	-2	139	1360
144	-1	140	1410
145	NULL	146	1490
161	2	163	1600
167	-1	168	NULL
171	-1	172	1700
181	-1	182	362
187	4	186	374
190	1	193	380
199	1	198	398
214	1	213	428
218	-2	216	436
223	-4	222	446
226	4	228	452
234	-3	232	468
246	4	247	492


-- !query
SELECT a,
       d-e,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<a:int,(d - e):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
107	4	108	1060
110	NULL	112	1140
116	NULL	117	1190
127	1	129	1280
132	3	131	1340
138	-2	139	1360
144	-1	140	1410
145	NULL	146	1490
161	2	163	1600
167	-1	168	NULL
171	-1	172	1700
181	-1	182	362
187	4	186	374
190	1	193	380
199	1	198	398
214	1	213	428
218	-2	216	436
223	-4	222	446
226	4	228	452
234	-3	232	468
246	4	247	492
NULL	-3	203	NULL
NULL	NULL	240	NULL


-- !query
SELECT a,
       d-e,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b>c
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,4
-- !query schema
struct<a:int,(d - e):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL	240	NULL
110	NULL	112	1140
116	NULL	117	1190
145	NULL	146	1490
223	-4	222	446
NULL	-3	203	NULL
234	-3	232	468
218	-2	216	436
138	-2	139	1360
167	-1	168	NULL
181	-1	182	362
144	-1	140	1410
171	-1	172	1700
190	1	193	380
199	1	198	398
214	1	213	428
127	1	129	1280
161	2	163	1600
132	3	131	1340
187	4	186	374
226	4	228	452
246	4	247	492
107	4	108	1060


-- !query
SELECT e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c)
  FROM t1
-- !query schema
struct<e:int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int>
-- !query output
104	NULL	444	NULL	555	NULL
105	319	333	1	222	2
113	338	111	-4	555	2
121	367	333	1	222	2
125	383	222	-1	111	1
130	400	222	-2	333	3
137	410	333	2	222	3
143	426	444	3	555	1
147	443	111	-4	222	3
158	469	222	-2	555	2
162	481	333	1	444	3
166	NULL	444	NULL	222	NULL
174	511	333	1	222	2
175	529	333	1	555	3
184	541	333	1	222	2
185	563	222	-1	111	2
191	578	111	-4	444	1
195	593	333	2	555	1
204	NULL	444	NULL	555	1
207	NULL	444	NULL	555	NULL
211	634	444	4	555	3
219	648	444	3	444	1
224	665	333	2	444	1
225	680	222	-1	111	1
233	696	444	3	555	1
238	709	333	1	444	3
245	742	222	-2	222	1
NULL	354	222	-3	222	2
NULL	451	333	1	555	3
NULL	NULL	444	NULL	555	4


-- !query
SELECT e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c)
  FROM t1
 ORDER BY 1,3,5,6,4,2
-- !query schema
struct<e:int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int>
-- !query output
NULL	354	222	-3	222	2
NULL	451	333	1	555	3
NULL	NULL	444	NULL	555	4
104	NULL	444	NULL	555	NULL
105	319	333	1	222	2
113	338	111	-4	555	2
121	367	333	1	222	2
125	383	222	-1	111	1
130	400	222	-2	333	3
137	410	333	2	222	3
143	426	444	3	555	1
147	443	111	-4	222	3
158	469	222	-2	555	2
162	481	333	1	444	3
166	NULL	444	NULL	222	NULL
174	511	333	1	222	2
175	529	333	1	555	3
184	541	333	1	222	2
185	563	222	-1	111	2
191	578	111	-4	444	1
195	593	333	2	555	1
204	NULL	444	NULL	555	1
207	NULL	444	NULL	555	NULL
211	634	444	4	555	3
219	648	444	3	444	1
224	665	333	2	444	1
225	680	222	-1	111	1
233	696	444	3	555	1
238	709	333	1	444	3
245	742	222	-2	222	1


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483
643
970
NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
643
970
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483
643
970
NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
643
970
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483
643
970
NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
643
970
1027
1087
1121
1157
1187
1273
1296
1331
1364
1392
1483


-- !query
SELECT a+b*2+c*3,
       a+b*2,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,(b - c):int>
-- !query output
1027	511	-2
1066	529	-3
1087	541	-2
1121	563	2
1364	680	-1
1426	709	-3
643	319	-2
739	367	-2
770	383	-1
910	451	-3
970	481	-3


-- !query
SELECT a+b*2+c*3,
       a+b*2,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 2,1,3
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,(b - c):int>
-- !query output
643	319	-2
739	367	-2
770	383	-1
910	451	-3
970	481	-3
1027	511	-2
1066	529	-3
1087	541	-2
1121	563	2
1364	680	-1
1426	709	-3


-- !query
SELECT d-e,
       d,
       a+b*2,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       e
  FROM t1
 WHERE a>b
-- !query schema
struct<(d - e):int,d:int,(a + (b * 2)):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int,e:int>
-- !query output
-1	142	426	846	444	141	143
-1	173	511	1027	333	170	174
-1	183	541	1087	333	180	184
-2	135	410	827	333	136	137
-2	217	648	1296	444	215	219
-3	230	696	1392	444	231	233
-4	220	665	1331	333	221	224
1	196	593	1187	333	197	195
1	212	634	1273	444	210	211
2	164	481	970	333	160	162
4	109	319	643	333	106	105
NULL	NULL	367	739	333	122	121
NULL	NULL	451	910	333	150	NULL
NULL	NULL	529	1066	333	176	175
NULL	NULL	709	1426	333	236	238


-- !query
SELECT d-e,
       d,
       a+b*2,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       e
  FROM t1
 WHERE a>b
 ORDER BY 1,5,7,6,4,3
-- !query schema
struct<(d - e):int,d:int,(a + (b * 2)):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int,e:int>
-- !query output
NULL	NULL	451	910	333	150	NULL
NULL	NULL	367	739	333	122	121
NULL	NULL	529	1066	333	176	175
NULL	NULL	709	1426	333	236	238
-4	220	665	1331	333	221	224
-3	230	696	1392	444	231	233
-2	135	410	827	333	136	137
-2	217	648	1296	444	215	219
-1	173	511	1027	333	170	174
-1	183	541	1087	333	180	184
-1	142	426	846	444	141	143
1	196	593	1187	333	197	195
1	212	634	1273	444	210	211
2	164	481	970	333	160	162
4	109	319	643	333	106	105


-- !query
SELECT a,
       d-e,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<a:int,(d - e):int,e:int>
-- !query output
107	4	105
161	2	162
167	-1	166
171	-1	174
181	-1	184
187	4	185
190	1	191
199	1	195
208	-1	207
214	1	211
218	-2	219
223	-4	224
226	4	225
234	-3	233
246	4	245
NULL	-3	104
NULL	-3	204
NULL	NULL	NULL


-- !query
SELECT a,
       d-e,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 2,1,3
-- !query schema
struct<a:int,(d - e):int,e:int>
-- !query output
NULL	NULL	NULL
223	-4	224
NULL	-3	104
NULL	-3	204
234	-3	233
218	-2	219
167	-1	166
171	-1	174
181	-1	184
208	-1	207
190	1	191
199	1	195
214	1	211
161	2	162
107	4	105
187	4	185
226	4	225
246	4	245


-- !query
SELECT e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
-- !query schema
struct<e:int>
-- !query output
105
113
121
125
130
143
147
162
174
175
184
185
191
225
238
245
NULL
NULL
NULL


-- !query
SELECT e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
NULL
NULL
NULL
105
113
121
125
130
143
147
162
174
175
184
185
191
225
238
245


-- !query
SELECT e
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<e:int>
-- !query output
105
113
121
125
130
143
147
162
174
175
184
185
191
225
238
245
NULL
NULL
NULL


-- !query
SELECT e
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
NULL
NULL
NULL
105
113
121
125
130
143
147
162
174
175
184
185
191
225
238
245


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       a-b
  FROM t1
 WHERE d>e
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       a-b
  FROM t1
 WHERE d>e
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2,
       abs(a),
       abs(b-c),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
    OR (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<d:int,(a + (b * 2)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
109	319	107	2	1	333
126	383	127	1	-1	222
133	400	132	3	-2	222
164	481	161	3	1	333
189	563	187	2	-1	222
192	578	190	1	-4	111
196	593	199	1	2	333
212	634	214	3	4	444
229	680	226	1	-1	222
249	742	246	1	-2	222
NULL	338	110	2	-4	111
NULL	443	145	3	-4	111


-- !query
SELECT d,
       a+b*2,
       abs(a),
       abs(b-c),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
    OR (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,5,3,1,4,6
-- !query schema
struct<d:int,(a + (b * 2)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
109	319	107	2	1	333
NULL	338	110	2	-4	111
126	383	127	1	-1	222
133	400	132	3	-2	222
NULL	443	145	3	-4	111
164	481	161	3	1	333
189	563	187	2	-1	222
192	578	190	1	-4	111
196	593	199	1	2	333
212	634	214	3	4	444
229	680	226	1	-1	222
249	742	246	1	-2	222


-- !query
SELECT d,
       a+b*2,
       abs(a),
       abs(b-c),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<d:int,(a + (b * 2)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
109	319	107	2	1	333
126	383	127	1	-1	222
133	400	132	3	-2	222
164	481	161	3	1	333
189	563	187	2	-1	222
192	578	190	1	-4	111
196	593	199	1	2	333
212	634	214	3	4	444
229	680	226	1	-1	222
249	742	246	1	-2	222
NULL	338	110	2	-4	111
NULL	443	145	3	-4	111


-- !query
SELECT d,
       a+b*2,
       abs(a),
       abs(b-c),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR d>e
 ORDER BY 5,1,6,2
-- !query schema
struct<d:int,(a + (b * 2)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	338	110	2	-4	111
NULL	443	145	3	-4	111
192	578	190	1	-4	111
133	400	132	3	-2	222
249	742	246	1	-2	222
126	383	127	1	-1	222
189	563	187	2	-1	222
229	680	226	1	-1	222
109	319	107	2	1	333
164	481	161	3	1	333
196	593	199	1	2	333
212	634	214	3	4	444


-- !query
SELECT d,
       a+b*2,
       abs(a),
       abs(b-c),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
    OR (e>a AND e<b)
-- !query schema
struct<d:int,(a + (b * 2)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
109	319	107	2	1	333
126	383	127	1	-1	222
133	400	132	3	-2	222
164	481	161	3	1	333
189	563	187	2	-1	222
192	578	190	1	-4	111
196	593	199	1	2	333
212	634	214	3	4	444
229	680	226	1	-1	222
249	742	246	1	-2	222
NULL	338	110	2	-4	111
NULL	443	145	3	-4	111


-- !query
SELECT d,
       a+b*2,
       abs(a),
       abs(b-c),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
    OR (e>a AND e<b)
 ORDER BY 2,3,4,1,5
-- !query schema
struct<d:int,(a + (b * 2)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
109	319	107	2	1	333
NULL	338	110	2	-4	111
126	383	127	1	-1	222
133	400	132	3	-2	222
NULL	443	145	3	-4	111
164	481	161	3	1	333
189	563	187	2	-1	222
192	578	190	1	-4	111
196	593	199	1	2	333
212	634	214	3	4	444
229	680	226	1	-1	222
249	742	246	1	-2	222


-- !query
SELECT d,
       a+b*2,
       abs(a),
       abs(b-c),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
    OR (e>a AND e<b)
-- !query schema
struct<d:int,(a + (b * 2)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
109	319	107	2	1	333
126	383	127	1	-1	222
133	400	132	3	-2	222
164	481	161	3	1	333
189	563	187	2	-1	222
192	578	190	1	-4	111
196	593	199	1	2	333
212	634	214	3	4	444
229	680	226	1	-1	222
249	742	246	1	-2	222
NULL	338	110	2	-4	111
NULL	443	145	3	-4	111


-- !query
SELECT d,
       a+b*2,
       abs(a),
       abs(b-c),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
    OR (e>a AND e<b)
 ORDER BY 3,4,1,5
-- !query schema
struct<d:int,(a + (b * 2)):int,abs(a):int,abs((b - c)):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
109	319	107	2	1	333
NULL	338	110	2	-4	111
126	383	127	1	-1	222
133	400	132	3	-2	222
NULL	443	145	3	-4	111
164	481	161	3	1	333
189	563	187	2	-1	222
192	578	190	1	-4	111
196	593	199	1	2	333
212	634	214	3	4	444
229	680	226	1	-1	222
249	742	246	1	-2	222


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       abs(b-c),
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       abs(b-c),
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 ORDER BY 6,4,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       a+b*2+c*3,
       abs(b-c),
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a>b
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1079	1060	107.0	643	2	109	222
1165	1190	NULL	705	2	115	222
1274	1280	127.0	770	1	126	111
1325	1340	132.0	793	3	133	333
1367	1360	137.0	827	3	135	222
1414	1410	142.0	846	1	142	555
1626	1600	162.0	970	3	164	444
1719	1700	172.0	1027	2	173	222
1819	362	182.0	1087	2	183	222
1877	374	187.0	1121	2	189	111
1971	398	197.0	1187	1	196	555
2121	428	212.0	1273	3	212	555
2164	436	217.0	1296	1	217	444
2211	446	222.0	1331	1	220	444
2312	468	232.0	1392	1	230	555
2479	492	247.0	1483	1	249	222
NULL	1220	NULL	739	2	NULL	222
NULL	1500	NULL	910	3	NULL	555
NULL	354	NULL	1066	3	NULL	555
NULL	474	NULL	1426	3	NULL	444
NULL	NULL	NULL	NULL	1	201	555
NULL	NULL	NULL	NULL	4	243	555
NULL	NULL	NULL	NULL	NULL	165	222


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       a+b*2+c*3,
       abs(b-c),
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a>b
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 4,6,5,3
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	NULL	NULL	NULL	NULL	165	222
NULL	NULL	NULL	NULL	1	201	555
NULL	NULL	NULL	NULL	4	243	555
1079	1060	107.0	643	2	109	222
1165	1190	NULL	705	2	115	222
NULL	1220	NULL	739	2	NULL	222
1274	1280	127.0	770	1	126	111
1325	1340	132.0	793	3	133	333
1367	1360	137.0	827	3	135	222
1414	1410	142.0	846	1	142	555
NULL	1500	NULL	910	3	NULL	555
1626	1600	162.0	970	3	164	444
1719	1700	172.0	1027	2	173	222
NULL	354	NULL	1066	3	NULL	555
1819	362	182.0	1087	2	183	222
1877	374	187.0	1121	2	189	111
1971	398	197.0	1187	1	196	555
2121	428	212.0	1273	3	212	555
2164	436	217.0	1296	1	217	444
2211	446	222.0	1331	1	220	444
2312	468	232.0	1392	1	230	555
NULL	474	NULL	1426	3	NULL	444
2479	492	247.0	1483	1	249	222


-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       d-e,
       a+b*2+c*3,
       a+b*2,
       e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,e:int>
-- !query output
1	2880	1	1157	578	191
2	NULL	NULL	674	338	113
3	NULL	NULL	881	443	147


-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       d-e,
       a+b*2+c*3,
       a+b*2,
       e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
 ORDER BY 1,5,4,6
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,e:int>
-- !query output
1	2880	1	1157	578	191
2	NULL	NULL	674	338	113
3	NULL	NULL	881	443	147


-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       d-e,
       a+b*2+c*3,
       a+b*2,
       e
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,e:int>
-- !query output
1	2880	1	1157	578	191
2	NULL	NULL	674	338	113
3	NULL	NULL	881	443	147


-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       d-e,
       a+b*2+c*3,
       a+b*2,
       e
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 6,1,2
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,e:int>
-- !query output
2	NULL	NULL	674	338	113
3	NULL	NULL	881	443	147
1	2880	1	1157	578	191


-- !query
SELECT b-c,
       e,
       d,
       abs(a),
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       e,
       d,
       abs(a),
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 1,6,5,2,3,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,5,1,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       b,
       a-b,
       c-d,
       d-e,
       e
  FROM t1
 WHERE b>c
-- !query schema
struct<(b - c):int,b:int,(a - b):int,(c - d):int,(d - e):int,e:int>
-- !query output
1	141	3	-2	-1	143
1	194	-4	1	1	191
1	248	-2	-2	4	245
2	114	-4	NULL	NULL	113
2	119	-3	2	NULL	NULL
2	188	-1	-3	4	185
3	134	-2	-2	3	130
3	149	-4	NULL	NULL	147
4	244	NULL	-3	NULL	NULL


-- !query
SELECT b-c,
       b,
       a-b,
       c-d,
       d-e,
       e
  FROM t1
 WHERE b>c
 ORDER BY 3,1,4,2,6,5
-- !query schema
struct<(b - c):int,b:int,(a - b):int,(c - d):int,(d - e):int,e:int>
-- !query output
4	244	NULL	-3	NULL	NULL
1	194	-4	1	1	191
2	114	-4	NULL	NULL	113
3	149	-4	NULL	NULL	147
2	119	-3	2	NULL	NULL
1	248	-2	-2	4	245
3	134	-2	-2	3	130
2	188	-1	-3	4	185
1	141	3	-2	-1	143


-- !query
SELECT abs(a),
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
-- !query schema
struct<abs(a):int,(d - e):int>
-- !query output
187	4


-- !query
SELECT abs(a),
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,(d - e):int>
-- !query output
187	4


-- !query
SELECT abs(a),
       d-e
  FROM t1
 WHERE b>c
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs(a):int,(d - e):int>
-- !query output
187	4


-- !query
SELECT abs(a),
       d-e
  FROM t1
 WHERE b>c
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,(d - e):int>
-- !query output
187	4


-- !query
SELECT a,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<a:int,(b - c):int>
-- !query output
110	2
145	3
190	1


-- !query
SELECT a,
       b-c
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<a:int,(b - c):int>
-- !query output
190	1
110	2
145	3


-- !query
SELECT a+b*2+c*3+d*4,
       abs(a),
       abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       abs(a),
       abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 ORDER BY 2,1,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       b-c
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int>
-- !query output
1079	-2
1165	2
1274	-1
1325	3
1367	-3
1414	1
1626	-3
1719	-2
1819	-2
1877	2
1925	1
1971	-1
2121	-3
2164	-1
2211	-1
2280	-1
2312	-1
2479	1
NULL	-1
NULL	-2
NULL	-2
NULL	-3
NULL	-3
NULL	-3
NULL	2
NULL	3
NULL	4
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       b-c
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	-3
NULL	-3
NULL	-3
1367	-3
1626	-3
2121	-3
NULL	-2
NULL	-2
1079	-2
1719	-2
1819	-2
NULL	-1
1274	-1
1971	-1
2164	-1
2211	-1
2280	-1
2312	-1
1414	1
1925	1
2479	1
NULL	2
1165	2
1877	2
NULL	3
1325	3
NULL	4


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       a+b*2+c*3+d*4+e*5,
       d-e,
       b-c,
       abs(a),
       a+b*2,
       b
  FROM t1
-- !query schema
struct<a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,(b - c):int,abs(a):int,(a + (b * 2)):int,b:int>
-- !query output
107	1604	4	-2	107	319	106
110	NULL	NULL	2	110	338	114
116	NULL	NULL	2	116	354	119
123	NULL	NULL	-2	123	367	122
127	1899	1	-1	127	383	128
132	1975	3	3	132	400	134
138	2052	-2	-3	138	410	136
144	2129	-1	1	144	426	141
145	NULL	NULL	3	145	443	149
151	NULL	NULL	-3	151	451	150
155	NULL	NULL	-2	155	469	157
161	2436	2	-3	161	481	160
167	NULL	-1	NULL	167	NULL	NULL
171	2589	-1	-2	171	511	170
177	NULL	NULL	-3	177	529	176
181	2739	-1	-2	181	541	180
187	2802	4	2	187	563	188
190	2880	1	1	190	578	194
199	2946	1	-1	199	593	197
208	NULL	-1	NULL	208	NULL	NULL
214	3176	1	-3	214	634	210
218	3259	-2	-1	218	648	215
223	3331	-4	-1	223	665	221
226	3405	4	-1	226	680	227
234	3477	-3	-1	234	696	231
237	NULL	NULL	-3	237	709	236
246	3704	4	1	246	742	248
NULL	NULL	-3	-1	NULL	NULL	202
NULL	NULL	-3	NULL	NULL	NULL	102
NULL	NULL	NULL	4	NULL	NULL	244


-- !query
SELECT a,
       a+b*2+c*3+d*4+e*5,
       d-e,
       b-c,
       abs(a),
       a+b*2,
       b
  FROM t1
 ORDER BY 4,2,3,6,1,5,7
-- !query schema
struct<a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,(b - c):int,abs(a):int,(a + (b * 2)):int,b:int>
-- !query output
NULL	NULL	-3	NULL	NULL	NULL	102
167	NULL	-1	NULL	167	NULL	NULL
208	NULL	-1	NULL	208	NULL	NULL
151	NULL	NULL	-3	151	451	150
177	NULL	NULL	-3	177	529	176
237	NULL	NULL	-3	237	709	236
138	2052	-2	-3	138	410	136
161	2436	2	-3	161	481	160
214	3176	1	-3	214	634	210
123	NULL	NULL	-2	123	367	122
155	NULL	NULL	-2	155	469	157
107	1604	4	-2	107	319	106
171	2589	-1	-2	171	511	170
181	2739	-1	-2	181	541	180
NULL	NULL	-3	-1	NULL	NULL	202
127	1899	1	-1	127	383	128
199	2946	1	-1	199	593	197
218	3259	-2	-1	218	648	215
223	3331	-4	-1	223	665	221
226	3405	4	-1	226	680	227
234	3477	-3	-1	234	696	231
144	2129	-1	1	144	426	141
190	2880	1	1	190	578	194
246	3704	4	1	246	742	248
110	NULL	NULL	2	110	338	114
116	NULL	NULL	2	116	354	119
187	2802	4	2	187	563	188
145	NULL	NULL	3	145	443	149
132	1975	3	3	132	400	134
NULL	NULL	NULL	4	NULL	NULL	244


-- !query
SELECT a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       e,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a - b):int,e:int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	125	129	1274
-1	185	186	1877
-1	225	228	2280
-2	130	131	1325
-2	245	247	2479
-3	NULL	117	1165
-4	191	193	1925
1	105	108	1079
1	162	163	1626
1	174	172	1719
1	184	182	1819
2	137	139	1367
2	195	198	1971
2	224	222	2211
3	143	140	1414
3	219	216	2164
3	233	232	2312
4	211	213	2121
NULL	104	NULL	NULL
NULL	166	168	NULL
NULL	204	203	NULL
NULL	207	NULL	NULL
NULL	NULL	240	NULL


-- !query
SELECT a-b,
       e,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 2,3
-- !query schema
struct<(a - b):int,e:int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-3	NULL	117	1165
NULL	NULL	240	NULL
NULL	104	NULL	NULL
1	105	108	1079
-1	125	129	1274
-2	130	131	1325
2	137	139	1367
3	143	140	1414
1	162	163	1626
NULL	166	168	NULL
1	174	172	1719
1	184	182	1819
-1	185	186	1877
-4	191	193	1925
2	195	198	1971
NULL	204	203	NULL
NULL	207	NULL	NULL
4	211	213	2121
3	219	216	2164
2	224	222	2211
-1	225	228	2280
3	233	232	2312
-2	245	247	2479


-- !query
SELECT a-b,
       e,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a - b):int,e:int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	125	129	1274
-1	185	186	1877
-1	225	228	2280
-2	130	131	1325
-2	245	247	2479
-3	NULL	117	1165
-4	191	193	1925
1	105	108	1079
1	162	163	1626
1	174	172	1719
1	184	182	1819
2	137	139	1367
2	195	198	1971
2	224	222	2211
3	143	140	1414
3	219	216	2164
3	233	232	2312
4	211	213	2121
NULL	104	NULL	NULL
NULL	166	168	NULL
NULL	204	203	NULL
NULL	207	NULL	NULL
NULL	NULL	240	NULL


-- !query
SELECT a-b,
       e,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,1
-- !query schema
struct<(a - b):int,e:int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	166	168	NULL
NULL	204	203	NULL
NULL	104	NULL	NULL
NULL	207	NULL	NULL
NULL	NULL	240	NULL
1	105	108	1079
-3	NULL	117	1165
-1	125	129	1274
-2	130	131	1325
2	137	139	1367
3	143	140	1414
1	162	163	1626
1	174	172	1719
1	184	182	1819
-1	185	186	1877
-4	191	193	1925
2	195	198	1971
4	211	213	2121
3	219	216	2164
2	224	222	2211
-1	225	228	2280
3	233	232	2312
-2	245	247	2479


-- !query
SELECT a-b,
       e,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a - b):int,e:int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	125	129	1274
-1	185	186	1877
-1	225	228	2280
-2	130	131	1325
-2	245	247	2479
-3	NULL	117	1165
-4	191	193	1925
1	105	108	1079
1	162	163	1626
1	174	172	1719
1	184	182	1819
2	137	139	1367
2	195	198	1971
2	224	222	2211
3	143	140	1414
3	219	216	2164
3	233	232	2312
4	211	213	2121
NULL	104	NULL	NULL
NULL	166	168	NULL
NULL	204	203	NULL
NULL	207	NULL	NULL
NULL	NULL	240	NULL


-- !query
SELECT a-b,
       e,
       c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 4,3,1,2
-- !query schema
struct<(a - b):int,e:int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	104	NULL	NULL
NULL	207	NULL	NULL
NULL	166	168	NULL
NULL	204	203	NULL
NULL	NULL	240	NULL
1	105	108	1079
-3	NULL	117	1165
-1	125	129	1274
-2	130	131	1325
2	137	139	1367
3	143	140	1414
1	162	163	1626
1	174	172	1719
1	184	182	1819
-1	185	186	1877
-4	191	193	1925
2	195	198	1971
4	211	213	2121
3	219	216	2164
2	224	222	2211
-1	225	228	2280
3	233	232	2312
-2	245	247	2479


-- !query
SELECT d,
       a+b*2+c*3+d*4,
       e,
       (a+b+c+d+e)/5,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3+d*4,
       e,
       (a+b+c+d+e)/5,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 ORDER BY 4,6,5,1,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       abs(a),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a
  FROM t1
 WHERE b>c
-- !query schema
struct<abs((b - c)):int,abs(a):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int>
-- !query output
1	144	-1	444	144
1	190	1	111	190
1	246	4	222	246
2	110	NULL	111	110
2	116	NULL	222	116
2	187	4	222	187
3	132	3	222	132
3	145	NULL	111	145
4	NULL	NULL	444	NULL


-- !query
SELECT abs(b-c),
       abs(a),
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a
  FROM t1
 WHERE b>c
 ORDER BY 4,1
-- !query schema
struct<abs((b - c)):int,abs(a):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int>
-- !query output
1	190	1	111	190
2	110	NULL	111	110
3	145	NULL	111	145
1	246	4	222	246
2	187	4	222	187
2	116	NULL	222	116
3	132	3	222	132
1	144	-1	444	144
4	NULL	NULL	444	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a),
       a-b,
       d,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int,(a - b):int,d:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1020	NULL	555	NULL	NULL	101	NULL
1060	107.0	222	107	1	109	643
1140	NULL	555	110	-4	NULL	674
1190	NULL	222	116	-3	115	705
1220	NULL	222	123	1	NULL	739
1280	127.0	111	127	-1	126	770
1340	132.0	333	132	-2	133	793
1360	137.0	222	138	2	135	827
1410	142.0	555	144	3	142	846
1490	NULL	222	145	-4	NULL	881
1500	NULL	555	151	1	NULL	910
1570	NULL	555	155	-2	NULL	946
1600	162.0	444	161	1	164	970
1700	172.0	222	171	1	173	1027
354	NULL	555	177	1	NULL	1066
362	182.0	222	181	1	183	1087
374	187.0	111	187	-1	189	1121
380	192.0	444	190	-4	192	1157
398	197.0	555	199	2	196	1187
428	212.0	555	214	4	212	1273
436	217.0	444	218	3	217	1296
446	222.0	444	223	2	220	1331
452	227.0	111	226	-1	229	1364
468	232.0	555	234	3	230	1392
474	NULL	444	237	1	NULL	1426
492	247.0	222	246	-2	249	1483
NULL	NULL	222	167	NULL	165	NULL
NULL	NULL	555	208	NULL	206	NULL
NULL	NULL	555	NULL	NULL	201	NULL
NULL	NULL	555	NULL	NULL	243	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a),
       a-b,
       d,
       a+b*2+c*3
  FROM t1
 ORDER BY 4,3,5,6,2,7,1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int,(a - b):int,d:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1020	NULL	555	NULL	NULL	101	NULL
NULL	NULL	555	NULL	NULL	201	NULL
NULL	NULL	555	NULL	NULL	243	NULL
1060	107.0	222	107	1	109	643
1140	NULL	555	110	-4	NULL	674
1190	NULL	222	116	-3	115	705
1220	NULL	222	123	1	NULL	739
1280	127.0	111	127	-1	126	770
1340	132.0	333	132	-2	133	793
1360	137.0	222	138	2	135	827
1410	142.0	555	144	3	142	846
1490	NULL	222	145	-4	NULL	881
1500	NULL	555	151	1	NULL	910
1570	NULL	555	155	-2	NULL	946
1600	162.0	444	161	1	164	970
NULL	NULL	222	167	NULL	165	NULL
1700	172.0	222	171	1	173	1027
354	NULL	555	177	1	NULL	1066
362	182.0	222	181	1	183	1087
374	187.0	111	187	-1	189	1121
380	192.0	444	190	-4	192	1157
398	197.0	555	199	2	196	1187
NULL	NULL	555	208	NULL	206	NULL
428	212.0	555	214	4	212	1273
436	217.0	444	218	3	217	1296
446	222.0	444	223	2	220	1331
452	227.0	111	226	-1	229	1364
468	232.0	555	234	3	230	1392
474	NULL	444	237	1	NULL	1426
492	247.0	222	246	-2	249	1483


-- !query
SELECT b-c,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
 ORDER BY 2,3,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1274


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1274


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1274


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1274


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 6,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
    OR d>e
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
    OR d>e
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
    OR d>e
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
    OR (e>a AND e<b)
 ORDER BY 3,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       d,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<b:int,d:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
102	101	NULL	555	1020
106	109	-2	222	1060
128	126	-1	111	1280
134	133	3	333	1340
160	164	-3	444	1600
170	173	-2	222	1700
180	183	-2	222	362
188	189	2	111	374
194	192	1	444	380
197	196	-1	555	398
202	201	-1	555	NULL
210	212	-3	555	428
215	217	-1	444	436
221	220	-1	444	446
227	229	-1	111	452
231	230	-1	555	468
244	243	4	555	NULL
248	249	1	222	492
NULL	165	NULL	222	NULL
NULL	206	NULL	555	NULL


-- !query
SELECT b,
       d,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 4,1,3,2,5
-- !query schema
struct<b:int,d:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
128	126	-1	111	1280
188	189	2	111	374
227	229	-1	111	452
NULL	165	NULL	222	NULL
106	109	-2	222	1060
170	173	-2	222	1700
180	183	-2	222	362
248	249	1	222	492
134	133	3	333	1340
160	164	-3	444	1600
194	192	1	444	380
215	217	-1	444	436
221	220	-1	444	446
NULL	206	NULL	555	NULL
102	101	NULL	555	1020
197	196	-1	555	398
202	201	-1	555	NULL
210	212	-3	555	428
231	230	-1	555	468
244	243	4	555	NULL


-- !query
SELECT b,
       d,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<b:int,d:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
102	101	NULL	555	1020
106	109	-2	222	1060
128	126	-1	111	1280
134	133	3	333	1340
160	164	-3	444	1600
170	173	-2	222	1700
180	183	-2	222	362
188	189	2	111	374
194	192	1	444	380
197	196	-1	555	398
202	201	-1	555	NULL
210	212	-3	555	428
215	217	-1	444	436
221	220	-1	444	446
227	229	-1	111	452
231	230	-1	555	468
244	243	4	555	NULL
248	249	1	222	492
NULL	165	NULL	222	NULL
NULL	206	NULL	555	NULL


-- !query
SELECT b,
       d,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
    OR d>e
 ORDER BY 4,3
-- !query schema
struct<b:int,d:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
227	229	-1	111	452
128	126	-1	111	1280
188	189	2	111	374
NULL	165	NULL	222	NULL
170	173	-2	222	1700
180	183	-2	222	362
106	109	-2	222	1060
248	249	1	222	492
134	133	3	333	1340
160	164	-3	444	1600
215	217	-1	444	436
221	220	-1	444	446
194	192	1	444	380
102	101	NULL	555	1020
NULL	206	NULL	555	NULL
210	212	-3	555	428
197	196	-1	555	398
231	230	-1	555	468
202	201	-1	555	NULL
244	243	4	555	NULL


-- !query
SELECT b,
       d,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<b:int,d:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
102	101	NULL	555	1020
106	109	-2	222	1060
128	126	-1	111	1280
134	133	3	333	1340
160	164	-3	444	1600
170	173	-2	222	1700
180	183	-2	222	362
188	189	2	111	374
194	192	1	444	380
197	196	-1	555	398
202	201	-1	555	NULL
210	212	-3	555	428
215	217	-1	444	436
221	220	-1	444	446
227	229	-1	111	452
231	230	-1	555	468
244	243	4	555	NULL
248	249	1	222	492
NULL	165	NULL	222	NULL
NULL	206	NULL	555	NULL


-- !query
SELECT b,
       d,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 4,3,1
-- !query schema
struct<b:int,d:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
128	126	-1	111	1280
227	229	-1	111	452
188	189	2	111	374
NULL	165	NULL	222	NULL
106	109	-2	222	1060
170	173	-2	222	1700
180	183	-2	222	362
248	249	1	222	492
134	133	3	333	1340
160	164	-3	444	1600
215	217	-1	444	436
221	220	-1	444	446
194	192	1	444	380
NULL	206	NULL	555	NULL
102	101	NULL	555	1020
210	212	-3	555	428
197	196	-1	555	398
202	201	-1	555	NULL
231	230	-1	555	468
244	243	4	555	NULL


-- !query
SELECT b,
       d,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR d>e
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<b:int,d:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
102	101	NULL	555	1020
106	109	-2	222	1060
128	126	-1	111	1280
134	133	3	333	1340
160	164	-3	444	1600
170	173	-2	222	1700
180	183	-2	222	362
188	189	2	111	374
194	192	1	444	380
197	196	-1	555	398
202	201	-1	555	NULL
210	212	-3	555	428
215	217	-1	444	436
221	220	-1	444	446
227	229	-1	111	452
231	230	-1	555	468
244	243	4	555	NULL
248	249	1	222	492
NULL	165	NULL	222	NULL
NULL	206	NULL	555	NULL


-- !query
SELECT b,
       d,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR d>e
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,4,5,1
-- !query schema
struct<b:int,d:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	165	NULL	222	NULL
NULL	206	NULL	555	NULL
102	101	NULL	555	1020
160	164	-3	444	1600
210	212	-3	555	428
180	183	-2	222	362
106	109	-2	222	1060
170	173	-2	222	1700
227	229	-1	111	452
128	126	-1	111	1280
215	217	-1	444	436
221	220	-1	444	446
202	201	-1	555	NULL
197	196	-1	555	398
231	230	-1	555	468
248	249	1	222	492
194	192	1	444	380
188	189	2	111	374
134	133	3	333	1340
244	243	4	555	NULL


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c>d
 ORDER BY 3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b-c,
       e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b-c,
       e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
 ORDER BY 1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b-c,
       e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b-c,
       e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
 ORDER BY 4,3,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b-c,
       e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b-c,
       e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
   AND d>e
 ORDER BY 5,3,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
    OR d>e
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d>e
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d>e
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,4,3,5,2,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 6,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
102	NULL
106	1079
160	1626
170	1719
180	1819
188	1877
194	1925
197	1971
202	NULL
210	2121
215	2164
221	2211
227	2280
231	2312
244	NULL
248	2479
NULL	NULL
NULL	NULL


-- !query
SELECT b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 2,1
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	NULL
NULL	NULL
102	NULL
202	NULL
244	NULL
106	1079
160	1626
170	1719
180	1819
188	1877
194	1925
197	1971
210	2121
215	2164
221	2211
227	2280
231	2312
248	2479


-- !query
SELECT abs(b-c),
       b-c,
       d,
       d-e
  FROM t1
-- !query schema
struct<abs((b - c)):int,(b - c):int,d:int,(d - e):int>
-- !query output
1	-1	126	1
1	-1	196	1
1	-1	201	-3
1	-1	217	-2
1	-1	220	-4
1	-1	229	4
1	-1	230	-3
1	1	142	-1
1	1	192	1
1	1	249	4
2	-2	109	4
2	-2	173	-1
2	-2	183	-1
2	-2	NULL	NULL
2	-2	NULL	NULL
2	2	115	NULL
2	2	189	4
2	2	NULL	NULL
3	-3	135	-2
3	-3	164	2
3	-3	212	1
3	-3	NULL	NULL
3	-3	NULL	NULL
3	-3	NULL	NULL
3	3	133	3
3	3	NULL	NULL
4	4	243	NULL
NULL	NULL	101	-3
NULL	NULL	165	-1
NULL	NULL	206	-1


-- !query
SELECT abs(b-c),
       b-c,
       d,
       d-e
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<abs((b - c)):int,(b - c):int,d:int,(d - e):int>
-- !query output
NULL	NULL	165	-1
NULL	NULL	101	-3
NULL	NULL	206	-1
3	-3	135	-2
3	-3	164	2
3	-3	212	1
3	-3	NULL	NULL
3	-3	NULL	NULL
3	-3	NULL	NULL
2	-2	173	-1
2	-2	183	-1
2	-2	109	4
2	-2	NULL	NULL
2	-2	NULL	NULL
1	-1	217	-2
1	-1	220	-4
1	-1	229	4
1	-1	126	1
1	-1	196	1
1	-1	230	-3
1	-1	201	-3
1	1	142	-1
1	1	192	1
1	1	249	4
2	2	189	4
2	2	NULL	NULL
2	2	115	NULL
3	3	133	3
3	3	NULL	NULL
4	4	243	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
   AND d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
132.0	1340
187.0	374
192.0	380
247.0	492


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
   AND d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
132.0	1340
187.0	374
192.0	380
247.0	492


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND d>e
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
132.0	1340
187.0	374
192.0	380
247.0	492


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND d>e
 ORDER BY 1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
132.0	1340
187.0	374
192.0	380
247.0	492


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
   AND b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
132.0	1340
187.0	374
192.0	380
247.0	492


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
   AND b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
132.0	1340
187.0	374
192.0	380
247.0	492


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
132.0	1340
187.0	374
192.0	380
247.0	492


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
 ORDER BY 2,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
187.0	374
192.0	380
247.0	492
132.0	1340


-- !query
SELECT a-b
  FROM t1
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-1
-2
-2
-2
-3
-4
-4
-4
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a-b
  FROM t1
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
-4
-4
-4
-3
-2
-2
-2
-1
-1
-1
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE c>d
    OR d>e
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int>
-- !query output
1060	105
1190	NULL
1280	125
1340	130
1360	137
1600	162
374	185
380	191
398	195
428	211
446	224
452	225
468	233
492	245
NULL	166
NULL	204


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE c>d
    OR d>e
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int>
-- !query output
NULL	166
NULL	204
374	185
380	191
398	195
428	211
446	224
452	225
468	233
492	245
1060	105
1190	NULL
1280	125
1340	130
1360	137
1600	162


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE d>e
    OR c>d
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int>
-- !query output
1060	105
1190	NULL
1280	125
1340	130
1360	137
1600	162
374	185
380	191
398	195
428	211
446	224
452	225
468	233
492	245
NULL	166
NULL	204


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE d>e
    OR c>d
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int>
-- !query output
1190	NULL
1060	105
1280	125
1340	130
1360	137
1600	162
NULL	166
374	185
380	191
398	195
NULL	204
428	211
446	224
452	225
468	233
492	245


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
    OR (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	333
110	111
116	222
123	333
127	222
132	222
138	333
144	444
145	111
151	333
155	222
161	333
167	444
171	333
177	333
181	333
187	222
190	111
199	333
208	444
214	444
218	444
223	333
226	222
234	444
237	333
246	222
NULL	444
NULL	444
NULL	444


-- !query
SELECT abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
110	111
145	111
190	111
116	222
127	222
132	222
155	222
187	222
226	222
246	222
107	333
123	333
138	333
151	333
161	333
171	333
177	333
181	333
199	333
223	333
237	333
NULL	444
NULL	444
NULL	444
144	444
167	444
208	444
214	444
218	444
234	444


-- !query
SELECT a-b
  FROM t1
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-1
-2
-2
-2
-3
-4
-4
-4
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a-b
  FROM t1
 ORDER BY 1
-- !query schema
struct<(a - b):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
-4
-4
-4
-3
-2
-2
-2
-1
-1
-1
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 7,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       abs(b-c)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       abs(b-c)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
 ORDER BY 3,4,2,7,1,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e
  FROM t1
 WHERE b>c
-- !query schema
struct<(d - e):int>
-- !query output
-1
1
3
4
4
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE b>c
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output
NULL
NULL
NULL
NULL
-1
1
3
4
4


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4+e*5,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4+e*5,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b
  FROM t1
 ORDER BY 1,3,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       d-e,
       b,
       e
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(c - d):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs(a):int,(d - e):int,b:int,e:int>
-- !query output
-1	109	1060	107	4	106	105
-1	164	1600	161	2	160	162
-1	173	1700	171	-1	170	174
-1	183	362	181	-1	180	184
-1	229	452	226	4	227	225
-3	189	374	187	4	188	185


-- !query
SELECT c-d,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       d-e,
       b,
       e
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,6,3
-- !query schema
struct<(c - d):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs(a):int,(d - e):int,b:int,e:int>
-- !query output
-3	189	374	187	4	188	185
-1	109	1060	107	4	106	105
-1	164	1600	161	2	160	162
-1	173	1700	171	-1	170	174
-1	183	362	181	-1	180	184
-1	229	452	226	4	227	225


-- !query
SELECT c-d,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       d-e,
       b,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
-- !query schema
struct<(c - d):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs(a):int,(d - e):int,b:int,e:int>
-- !query output
-1	109	1060	107	4	106	105
-1	164	1600	161	2	160	162
-1	173	1700	171	-1	170	174
-1	183	362	181	-1	180	184
-1	229	452	226	4	227	225
-3	189	374	187	4	188	185


-- !query
SELECT c-d,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       d-e,
       b,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
   AND (e>c OR e<d)
 ORDER BY 2,6,3,1
-- !query schema
struct<(c - d):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs(a):int,(d - e):int,b:int,e:int>
-- !query output
-1	109	1060	107	4	106	105
-1	164	1600	161	2	160	162
-1	173	1700	171	-1	170	174
-1	183	362	181	-1	180	184
-3	189	374	187	4	188	185
-1	229	452	226	4	227	225


-- !query
SELECT c-d,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       d-e,
       b,
       e
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(c - d):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs(a):int,(d - e):int,b:int,e:int>
-- !query output
-1	109	1060	107	4	106	105
-1	164	1600	161	2	160	162
-1	173	1700	171	-1	170	174
-1	183	362	181	-1	180	184
-1	229	452	226	4	227	225
-3	189	374	187	4	188	185


-- !query
SELECT c-d,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       d-e,
       b,
       e
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 7,6,4,1
-- !query schema
struct<(c - d):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs(a):int,(d - e):int,b:int,e:int>
-- !query output
-1	109	1060	107	4	106	105
-1	164	1600	161	2	160	162
-1	173	1700	171	-1	170	174
-1	183	362	181	-1	180	184
-3	189	374	187	4	188	185
-1	229	452	226	4	227	225


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE c>d
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE c>d
    OR d>e
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE d>e
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE d>e
    OR c>d
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       abs(b-c),
       a+b*2
  FROM t1
-- !query schema
struct<(b - c):int,abs((b - c)):int,(a + (b * 2)):int>
-- !query output
-1	1	383
-1	1	593
-1	1	648
-1	1	665
-1	1	680
-1	1	696
-1	1	NULL
-2	2	319
-2	2	367
-2	2	469
-2	2	511
-2	2	541
-3	3	410
-3	3	451
-3	3	481
-3	3	529
-3	3	634
-3	3	709
1	1	426
1	1	578
1	1	742
2	2	338
2	2	354
2	2	563
3	3	400
3	3	443
4	4	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT b-c,
       abs(b-c),
       a+b*2
  FROM t1
 ORDER BY 3,1
-- !query schema
struct<(b - c):int,abs((b - c)):int,(a + (b * 2)):int>
-- !query output
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL
-1	1	NULL
4	4	NULL
-2	2	319
2	2	338
2	2	354
-2	2	367
-1	1	383
3	3	400
-3	3	410
1	1	426
3	3	443
-3	3	451
-2	2	469
-3	3	481
-2	2	511
-3	3	529
-2	2	541
2	2	563
1	1	578
-1	1	593
-3	3	634
-1	1	648
-1	1	665
-1	1	680
-1	1	696
-3	3	709
1	1	742


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       b
  FROM t1
 WHERE d>e
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       b
  FROM t1
 WHERE d>e
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
    OR c>d
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
333
333
333
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
    OR c>d
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
333
333
333
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
    OR (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
333
333
333
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
    OR (e>a AND e<b)
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
333
333
333
444
444
444
444


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       abs(b-c),
       c-d,
       a+b*2
  FROM t1
 WHERE (e>c OR e<d)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,d:int,abs((b - c)):int,(c - d):int,(a + (b * 2)):int>
-- !query output
1079	1060	109	2	-1	319
1165	1190	115	2	2	354
1274	1280	126	1	3	383
1325	1340	133	3	-2	400
1367	1360	135	3	4	410
1414	1410	142	1	-2	426
1626	1600	164	3	-1	481
1719	1700	173	2	-1	511
1819	362	183	2	-1	541
1877	374	189	2	-3	563
1925	380	192	1	1	578
1971	398	196	1	2	593
2121	428	212	3	1	634
2164	436	217	1	-1	648
2211	446	220	1	2	665
2280	452	229	1	-1	680
2312	468	230	1	2	696
2479	492	249	1	-2	742
NULL	1140	NULL	2	NULL	338
NULL	1220	NULL	2	NULL	367
NULL	1490	NULL	3	NULL	443
NULL	1500	NULL	3	NULL	451
NULL	1570	NULL	2	NULL	469
NULL	354	NULL	3	NULL	529
NULL	474	NULL	3	NULL	709
NULL	NULL	201	1	2	NULL
NULL	NULL	243	4	-3	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       abs(b-c),
       c-d,
       a+b*2
  FROM t1
 WHERE (e>c OR e<d)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 3,4,2,6,5
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,d:int,abs((b - c)):int,(c - d):int,(a + (b * 2)):int>
-- !query output
NULL	1140	NULL	2	NULL	338
NULL	1220	NULL	2	NULL	367
NULL	1570	NULL	2	NULL	469
NULL	354	NULL	3	NULL	529
NULL	474	NULL	3	NULL	709
NULL	1490	NULL	3	NULL	443
NULL	1500	NULL	3	NULL	451
1079	1060	109	2	-1	319
1165	1190	115	2	2	354
1274	1280	126	1	3	383
1325	1340	133	3	-2	400
1367	1360	135	3	4	410
1414	1410	142	1	-2	426
1626	1600	164	3	-1	481
1719	1700	173	2	-1	511
1819	362	183	2	-1	541
1877	374	189	2	-3	563
1925	380	192	1	1	578
1971	398	196	1	2	593
NULL	NULL	201	1	2	NULL
2121	428	212	3	1	634
2164	436	217	1	-1	648
2211	446	220	1	2	665
2280	452	229	1	-1	680
2312	468	230	1	2	696
NULL	NULL	243	4	-3	NULL
2479	492	249	1	-2	742


-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       a+b*2,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND (e>a AND e<b)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,(a + (b * 2)):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,(a - b):int>
-- !query output



-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       a+b*2,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND (e>a AND e<b)
 ORDER BY 2,3,7,5,6,4
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,(a + (b * 2)):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,(a - b):int>
-- !query output



-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       a+b*2,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       a-b
  FROM t1
 WHERE c>d
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,(a + (b * 2)):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,(a - b):int>
-- !query output



-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       a+b*2,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       a-b
  FROM t1
 WHERE c>d
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 5,2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,(a + (b * 2)):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,(a - b):int>
-- !query output



-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       a+b*2,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND c>d
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,(a + (b * 2)):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,(a - b):int>
-- !query output



-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       a+b*2,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND c>d
 ORDER BY 4,5,1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,(a + (b * 2)):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,(a - b):int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND d>e
 ORDER BY 4,5,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE d>e
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE d>e
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 5,2,4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<abs(a):int,c:int>
-- !query output
107	108
161	163
171	172
181	182
187	186
190	193
199	198
214	213
218	216
223	222
226	228
234	232
246	247
NULL	203


-- !query
SELECT abs(a),
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,c:int>
-- !query output
NULL	203
107	108
161	163
171	172
181	182
187	186
190	193
199	198
214	213
218	216
223	222
226	228
234	232
246	247


-- !query
SELECT abs(a),
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs(a):int,c:int>
-- !query output
107	108
161	163
171	172
181	182
187	186
190	193
199	198
214	213
218	216
223	222
226	228
234	232
246	247
NULL	203


-- !query
SELECT abs(a),
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,c:int>
-- !query output
NULL	203
107	108
161	163
171	172
181	182
187	186
190	193
199	198
214	213
218	216
223	222
226	228
234	232
246	247


-- !query
SELECT e,
       a,
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<e:int,a:int,(a - b):int>
-- !query output
105	107	1
125	127	-1


-- !query
SELECT e,
       a,
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,2,1
-- !query schema
struct<e:int,a:int,(a - b):int>
-- !query output
125	127	-1
105	107	1


-- !query
SELECT a-b,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
-- !query schema
struct<(a - b):int,(a + (b * 2)):int>
-- !query output
-4	578


-- !query
SELECT a-b,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<(a - b):int,(a + (b * 2)):int>
-- !query output
-4	578


-- !query
SELECT a-b,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(a - b):int,(a + (b * 2)):int>
-- !query output
-4	578


-- !query
SELECT a-b,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 2,1
-- !query schema
struct<(a - b):int,(a + (b * 2)):int>
-- !query output
-4	578


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1020
1060
1140
1190
1220
1280
1340
1360
1410
1490
1500
1570
1600
1700
354
362
374
380
398
428
436
446
452
468
474
492
NULL
NULL
NULL
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL
NULL
NULL
NULL
354
362
374
380
398
428
436
446
452
468
474
492
1020
1060
1140
1190
1220
1280
1340
1360
1410
1490
1500
1570
1600
1700


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 ORDER BY 2,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<e:int>
-- !query output
105
113
121
125
130
137
143
147
158
162
174
175
184
185
191
195
204
211
219
224
225
233
238
245
NULL
NULL
NULL


-- !query
SELECT e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<e:int>
-- !query output
NULL
NULL
NULL
105
113
121
125
130
137
143
147
158
162
174
175
184
185
191
195
204
211
219
224
225
233
238
245


-- !query
SELECT d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       a
  FROM t1
 ORDER BY 2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR (a>b-2 AND a<b+2)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,4,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
 ORDER BY 4,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
 ORDER BY 1,4,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
    OR c>d
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c>d
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c>d
    OR (e>c OR e<d)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       d
  FROM t1
 WHERE c>d
    OR (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       d
  FROM t1
 WHERE c>d
    OR (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
 ORDER BY 3,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       d
  FROM t1
 WHERE (e>c OR e<d)
    OR c>d
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       d
  FROM t1
 WHERE (e>c OR e<d)
    OR c>d
    OR (a>b-2 AND a<b+2)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE d>e
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
111	444	1
222	111	1
222	111	4
222	111	4
222	222	4
222	333	3
333	222	4
333	444	2
333	555	1
444	555	1


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
 WHERE d>e
 ORDER BY 2,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
222	111	4
222	111	1
222	111	4
222	222	4
333	222	4
222	333	3
111	444	1
333	444	2
333	555	1
444	555	1


-- !query
SELECT a,
       abs(b-c),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
-- !query schema
struct<a:int,abs((b - c)):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
107	2	108	222	1604
127	1	129	111	1899
161	3	163	444	2436
171	2	172	222	2589
181	2	182	222	2739
187	2	186	111	2802
226	1	228	111	3405


-- !query
SELECT a,
       abs(b-c),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
 ORDER BY 4,3
-- !query schema
struct<a:int,abs((b - c)):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
127	1	129	111	1899
187	2	186	111	2802
226	1	228	111	3405
107	2	108	222	1604
171	2	172	222	2589
181	2	182	222	2739
161	3	163	444	2436


-- !query
SELECT a,
       abs(b-c),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<a:int,abs((b - c)):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
107	2	108	222	1604
127	1	129	111	1899
161	3	163	444	2436
171	2	172	222	2589
181	2	182	222	2739
187	2	186	111	2802
226	1	228	111	3405


-- !query
SELECT a,
       abs(b-c),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,4,5
-- !query schema
struct<a:int,abs((b - c)):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
107	2	108	222	1604
127	1	129	111	1899
161	3	163	444	2436
171	2	172	222	2589
181	2	182	222	2739
187	2	186	111	2802
226	1	228	111	3405


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       a,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       a,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,3,4,5,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       b-c,
       d,
       abs(b-c),
       e
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<(a - b):int,(b - c):int,d:int,abs((b - c)):int,e:int>
-- !query output
-4	1	192	1	191
-4	2	NULL	2	113
-4	3	NULL	3	147


-- !query
SELECT a-b,
       b-c,
       d,
       abs(b-c),
       e
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 5,1
-- !query schema
struct<(a - b):int,(b - c):int,d:int,abs((b - c)):int,e:int>
-- !query output
-4	2	NULL	2	113
-4	3	NULL	3	147
-4	1	192	1	191


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
111	-4	1157
111	-4	674
111	-4	881
222	-1	1121
222	-1	1364
222	-1	770
222	-2	1483
222	-2	793
222	-2	946
222	-3	705
333	1	1027
333	1	1066
333	1	1087
333	1	1426
333	1	643
333	1	739
333	1	910
333	1	970
333	2	1187
333	2	1331
333	2	827
444	3	1296
444	3	1392
444	3	846
444	4	1273
444	NULL	NULL
444	NULL	NULL
444	NULL	NULL
444	NULL	NULL
444	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       a+b*2+c*3
  FROM t1
 ORDER BY 1,3,2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
111	-4	674
111	-4	881
111	-4	1157
222	-3	705
222	-1	770
222	-2	793
222	-2	946
222	-1	1121
222	-1	1364
222	-2	1483
333	1	643
333	1	739
333	2	827
333	1	910
333	1	970
333	1	1027
333	1	1066
333	1	1087
333	2	1187
333	2	1331
333	1	1426
444	NULL	NULL
444	NULL	NULL
444	NULL	NULL
444	NULL	NULL
444	NULL	NULL
444	3	846
444	4	1273
444	3	1296
444	3	1392


-- !query
SELECT d,
       b-c,
       abs(a),
       c-d,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b-c,
       abs(a),
       c-d,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c
  FROM t1
 ORDER BY 2,7,5,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
 ORDER BY 2,7,4,3,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
222
222
333
333
333
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
222
222
333
333
333
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
   AND c>d
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
222
222
333
333
333
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
   AND c>d
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
222
222
333
333
333
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
222
222
333
333
333
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
222
222
333
333
333
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
222
222
333
333
333
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
222
222
333
333
333
444
444


-- !query
SELECT abs(b-c),
       c,
       e,
       c-d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs((b - c)):int,c:int,e:int,(c - d):int>
-- !query output
1	129	125	3
2	186	185	-3


-- !query
SELECT abs(b-c),
       c,
       e,
       c-d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
 ORDER BY 3,4,1,2
-- !query schema
struct<abs((b - c)):int,c:int,e:int,(c - d):int>
-- !query output
1	129	125	3
2	186	185	-3


-- !query
SELECT b-c,
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c)
  FROM t1
-- !query schema
struct<(b - c):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int>
-- !query output
-1	-1	222	1
-1	-1	222	1
-1	2	333	1
-1	2	333	1
-1	3	444	1
-1	3	444	1
-1	NULL	444	1
-2	-2	222	2
-2	1	333	2
-2	1	333	2
-2	1	333	2
-2	1	333	2
-3	1	333	3
-3	1	333	3
-3	1	333	3
-3	1	333	3
-3	2	333	3
-3	4	444	3
1	-2	222	1
1	-4	111	1
1	3	444	1
2	-1	222	2
2	-3	222	2
2	-4	111	2
3	-2	222	3
3	-4	111	3
4	NULL	444	4
NULL	NULL	444	NULL
NULL	NULL	444	NULL
NULL	NULL	444	NULL


-- !query
SELECT b-c,
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c)
  FROM t1
 ORDER BY 2,4,1,3
-- !query schema
struct<(b - c):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int>
-- !query output
NULL	NULL	444	NULL
NULL	NULL	444	NULL
NULL	NULL	444	NULL
-1	NULL	444	1
4	NULL	444	4
1	-4	111	1
2	-4	111	2
3	-4	111	3
2	-3	222	2
1	-2	222	1
-2	-2	222	2
3	-2	222	3
-1	-1	222	1
-1	-1	222	1
2	-1	222	2
-2	1	333	2
-2	1	333	2
-2	1	333	2
-2	1	333	2
-3	1	333	3
-3	1	333	3
-3	1	333	3
-3	1	333	3
-1	2	333	1
-1	2	333	1
-3	2	333	3
-1	3	444	1
-1	3	444	1
1	3	444	1
-3	4	444	3


-- !query
SELECT abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
2	111	1121	-1


-- !query
SELECT abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
 ORDER BY 3,2
-- !query schema
struct<abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
2	111	1121	-1


-- !query
SELECT abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
   AND b>c
-- !query schema
struct<abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
2	111	1121	-1


-- !query
SELECT abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
   AND b>c
 ORDER BY 1,3
-- !query schema
struct<abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
2	111	1121	-1


-- !query
SELECT abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND b>c
-- !query schema
struct<abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
2	111	1121	-1


-- !query
SELECT abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND b>c
 ORDER BY 2,4,1,3
-- !query schema
struct<abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
2	111	1121	-1


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 4,3,5,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
-- !query schema
struct<(d - e):int>
-- !query output



-- !query
SELECT d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output



-- !query
SELECT d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(d - e):int>
-- !query output



-- !query
SELECT d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<(d - e):int>
-- !query output



-- !query
SELECT a,
       abs(b-c),
       c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<a:int,abs((b - c)):int,c:int>
-- !query output
107	2	108
127	1	129


-- !query
SELECT a,
       abs(b-c),
       c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,3,1
-- !query schema
struct<a:int,abs((b - c)):int,c:int>
-- !query output
127	1	129
107	2	108


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
319	1079
354	1165
426	1414
481	1626
511	1719
541	1819
563	1877
578	1925
593	1971
634	2121
648	2164
665	2211
680	2280
696	2312
742	2479
NULL	NULL


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 1,2
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL	NULL
319	1079
354	1165
426	1414
481	1626
511	1719
541	1819
563	1877
578	1925
593	1971
634	2121
648	2164
665	2211
680	2280
696	2312
742	2479


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1165
1274
1325
1367
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 ORDER BY 1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
1079
1165
1274
1325
1367
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
    OR d NOT BETWEEN 110 AND 150
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
    OR d NOT BETWEEN 110 AND 150
    OR a>b
 ORDER BY 3,5,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
    OR d NOT BETWEEN 110 AND 150
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
    OR d NOT BETWEEN 110 AND 150
    OR c>d
 ORDER BY 4,3,2,5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
    OR c>d
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
    OR c>d
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
    OR a>b
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       d-e,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
    OR a>b
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 3,1,2,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       b-c,
       a-b,
       e,
       c-d,
       a+b*2,
       abs(b-c)
  FROM t1
 WHERE c>d
-- !query schema
struct<b:int,(b - c):int,(a - b):int,e:int,(c - d):int,(a + (b * 2)):int,abs((b - c)):int>
-- !query output
119	2	-3	NULL	2	354	2
128	-1	-1	125	3	383	1
136	-3	2	137	4	410	3
194	1	-4	191	1	578	1
197	-1	2	195	2	593	1
202	-1	NULL	204	2	NULL	1
210	-3	4	211	1	634	3
221	-1	2	224	2	665	1
231	-1	3	233	2	696	1
NULL	NULL	NULL	166	3	NULL	NULL


-- !query
SELECT b,
       b-c,
       a-b,
       e,
       c-d,
       a+b*2,
       abs(b-c)
  FROM t1
 WHERE c>d
 ORDER BY 3,1,2,7,5,6
-- !query schema
struct<b:int,(b - c):int,(a - b):int,e:int,(c - d):int,(a + (b * 2)):int,abs((b - c)):int>
-- !query output
NULL	NULL	NULL	166	3	NULL	NULL
202	-1	NULL	204	2	NULL	1
194	1	-4	191	1	578	1
119	2	-3	NULL	2	354	2
128	-1	-1	125	3	383	1
136	-3	2	137	4	410	3
197	-1	2	195	2	593	1
221	-1	2	224	2	665	1
231	-1	3	233	2	696	1
210	-3	4	211	1	634	3


-- !query
SELECT b-c,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a>b
   AND d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
-- !query schema
struct<(b - c):int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output



-- !query
SELECT b-c,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a>b
   AND d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
 ORDER BY 2,3
-- !query schema
struct<(b - c):int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output



-- !query
SELECT b-c,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(b - c):int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output



-- !query
SELECT b-c,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
   AND a>b
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 3,1
-- !query schema
struct<(b - c):int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output



-- !query
SELECT b-c,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
   AND a>b
-- !query schema
struct<(b - c):int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output



-- !query
SELECT b-c,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
   AND a>b
 ORDER BY 1,3,2
-- !query schema
struct<(b - c):int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output



-- !query
SELECT b-c,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
   AND (e>a AND e<b)
-- !query schema
struct<(b - c):int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output



-- !query
SELECT b-c,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
   AND (e>a AND e<b)
 ORDER BY 2,3
-- !query schema
struct<(b - c):int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output



-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       a+b*2,
       b,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,b:int,a:int>
-- !query output
-1	1274	383	128	127
-1	1877	563	188	187
-1	2280	680	227	226
-2	1325	400	134	132
-2	2479	742	248	246
-2	NULL	469	157	155
-3	1165	354	119	116
-4	1925	578	194	190
-4	NULL	338	114	110
-4	NULL	443	149	145
1	1079	319	106	107
1	1626	481	160	161
1	1719	511	170	171
1	1819	541	180	181
1	NULL	367	122	123
1	NULL	451	150	151
1	NULL	529	176	177
1	NULL	709	236	237
2	1367	410	136	138
2	1971	593	197	199
2	2211	665	221	223
3	1414	426	141	144
3	2164	648	215	218
3	2312	696	231	234
4	2121	634	210	214
NULL	NULL	NULL	202	NULL
NULL	NULL	NULL	244	NULL


-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       a+b*2,
       b,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 1,4,2,3
-- !query schema
struct<(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,b:int,a:int>
-- !query output
NULL	NULL	NULL	202	NULL
NULL	NULL	NULL	244	NULL
-4	NULL	338	114	110
-4	NULL	443	149	145
-4	1925	578	194	190
-3	1165	354	119	116
-2	1325	400	134	132
-2	NULL	469	157	155
-2	2479	742	248	246
-1	1274	383	128	127
-1	1877	563	188	187
-1	2280	680	227	226
1	1079	319	106	107
1	NULL	367	122	123
1	NULL	451	150	151
1	1626	481	160	161
1	1719	511	170	171
1	NULL	529	176	177
1	1819	541	180	181
1	NULL	709	236	237
2	1367	410	136	138
2	1971	593	197	199
2	2211	665	221	223
3	1414	426	141	144
3	2164	648	215	218
3	2312	696	231	234
4	2121	634	210	214


-- !query
SELECT c,
       abs(b-c),
       b,
       (a+b+c+d+e)/5,
       b-c
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<c:int,abs((b - c)):int,b:int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int>
-- !query output
108	2	106	107.0	-2
112	2	114	NULL	2
129	1	128	127.0	-1
131	3	134	132.0	3
140	1	141	142.0	1
146	3	149	NULL	3
163	3	160	162.0	-3
172	2	170	172.0	-2
182	2	180	182.0	-2
186	2	188	187.0	2
193	1	194	192.0	1
198	1	197	197.0	-1
203	1	202	NULL	-1
213	3	210	212.0	-3
216	1	215	217.0	-1
222	1	221	222.0	-1
228	1	227	227.0	-1
232	1	231	232.0	-1
247	1	248	247.0	1


-- !query
SELECT c,
       abs(b-c),
       b,
       (a+b+c+d+e)/5,
       b-c
  FROM t1
 WHERE (e>c OR e<d)
 ORDER BY 1,5
-- !query schema
struct<c:int,abs((b - c)):int,b:int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int>
-- !query output
108	2	106	107.0	-2
112	2	114	NULL	2
129	1	128	127.0	-1
131	3	134	132.0	3
140	1	141	142.0	1
146	3	149	NULL	3
163	3	160	162.0	-3
172	2	170	172.0	-2
182	2	180	182.0	-2
186	2	188	187.0	2
193	1	194	192.0	1
198	1	197	197.0	-1
203	1	202	NULL	-1
213	3	210	212.0	-3
216	1	215	217.0	-1
222	1	221	222.0	-1
228	1	227	227.0	-1
232	1	231	232.0	-1
247	1	248	247.0	1


-- !query
SELECT a+b*2,
       abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND c>d
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int>
-- !query output



-- !query
SELECT a+b*2,
       abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
   AND c>d
 ORDER BY 2,1
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int>
-- !query output



-- !query
SELECT a+b*2,
       abs(b-c)
  FROM t1
 WHERE c>d
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int>
-- !query output



-- !query
SELECT a+b*2,
       abs(b-c)
  FROM t1
 WHERE c>d
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int>
-- !query output



-- !query
SELECT a+b*2,
       abs(b-c)
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int>
-- !query output



-- !query
SELECT a+b*2,
       abs(b-c)
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
 ORDER BY 2,1
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int>
-- !query output



-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
 ORDER BY 1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
 ORDER BY 6,7,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1066
1087
1121
1157
1187
1273
1296
1331
1364
1392
1426
1483
643
674
705
739
770
793
827
846
881
910
946
970
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 ORDER BY 1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
NULL
NULL
NULL
NULL
643
674
705
739
770
793
827
846
881
910
946
970
1027
1066
1087
1121
1157
1187
1273
1296
1331
1364
1392
1426
1483


-- !query
SELECT a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR c>d
    OR d>e
-- !query schema
struct<(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
319	222
354	222
383	111
400	333
410	222
481	444
563	111
578	444
593	555
634	555
665	444
680	111
696	555
742	222
NULL	222
NULL	555


-- !query
SELECT a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR c>d
    OR d>e
 ORDER BY 1,2
-- !query schema
struct<(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	222
NULL	555
319	222
354	222
383	111
400	333
410	222
481	444
563	111
578	444
593	555
634	555
665	444
680	111
696	555
742	222


-- !query
SELECT a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
    OR c>d
-- !query schema
struct<(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
319	222
354	222
383	111
400	333
410	222
481	444
563	111
578	444
593	555
634	555
665	444
680	111
696	555
742	222
NULL	222
NULL	555


-- !query
SELECT a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
    OR c>d
 ORDER BY 2,1
-- !query schema
struct<(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
383	111
563	111
680	111
NULL	222
319	222
354	222
410	222
742	222
400	333
481	444
578	444
665	444
NULL	555
593	555
634	555
696	555


-- !query
SELECT a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
    OR d>e
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
319	222
354	222
383	111
400	333
410	222
481	444
563	111
578	444
593	555
634	555
665	444
680	111
696	555
742	222
NULL	222
NULL	555


-- !query
SELECT a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
    OR d>e
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,2
-- !query schema
struct<(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	222
NULL	555
319	222
354	222
383	111
400	333
410	222
481	444
563	111
578	444
593	555
634	555
665	444
680	111
696	555
742	222


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       d-e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int,(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
222	127	1	1899
333	107	4	1604


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       d-e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,3
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int,(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
222	127	1	1899
333	107	4	1604


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       c-d
  FROM t1
 WHERE c>d
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
1899	770	3


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       c-d
  FROM t1
 WHERE c>d
   AND (a>b-2 AND a<b+2)
 ORDER BY 3,1,2
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
1899	770	3


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       c-d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c>d
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
1899	770	3


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       c-d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c>d
 ORDER BY 3,1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
1899	770	3


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
   AND c>d
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
   AND c>d
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 3,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
   AND c>d
 ORDER BY 2,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND a>b
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND a>b
   AND c>d
 ORDER BY 4,2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c>d
   AND a>b
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c>d
   AND a>b
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,4,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       c,
       a+b*2
  FROM t1
 WHERE b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
-- !query schema
struct<(a - b):int,c:int,(a + (b * 2)):int>
-- !query output
-1	186	563
-2	131	400
-2	247	742
-4	112	338
-4	146	443
-4	193	578
3	140	426


-- !query
SELECT a-b,
       c,
       a+b*2
  FROM t1
 WHERE b>c
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>c OR e<d)
 ORDER BY 1,3,2
-- !query schema
struct<(a - b):int,c:int,(a + (b * 2)):int>
-- !query output
-4	112	338
-4	146	443
-4	193	578
-2	131	400
-2	247	742
-1	186	563
3	140	426


-- !query
SELECT a-b,
       c,
       a+b*2
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
-- !query schema
struct<(a - b):int,c:int,(a + (b * 2)):int>
-- !query output
-1	186	563
-2	131	400
-2	247	742
-4	112	338
-4	146	443
-4	193	578
3	140	426


-- !query
SELECT a-b,
       c,
       a+b*2
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
 ORDER BY 3,2
-- !query schema
struct<(a - b):int,c:int,(a + (b * 2)):int>
-- !query output
-4	112	338
-2	131	400
3	140	426
-4	146	443
-1	186	563
-4	193	578
-2	247	742


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       abs(b-c),
       abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1604	107.0	2	107	1060
1899	127.0	1	127	1280
1975	132.0	3	132	1340
2052	137.0	3	138	1360
2129	142.0	1	144	1410
2436	162.0	3	161	1600
2589	172.0	2	171	1700
2739	182.0	2	181	362
2802	187.0	2	187	374
2880	192.0	1	190	380
2946	197.0	1	199	398
3176	212.0	3	214	428
3259	217.0	1	218	436
3331	222.0	1	223	446
3405	227.0	1	226	452
3477	232.0	1	234	468
3704	247.0	1	246	492
NULL	NULL	1	NULL	NULL
NULL	NULL	2	110	1140
NULL	NULL	2	116	1190
NULL	NULL	2	123	1220
NULL	NULL	2	155	1570
NULL	NULL	3	145	1490
NULL	NULL	3	151	1500
NULL	NULL	3	177	354
NULL	NULL	3	237	474
NULL	NULL	4	NULL	NULL
NULL	NULL	NULL	167	NULL
NULL	NULL	NULL	208	NULL
NULL	NULL	NULL	NULL	1020


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       abs(b-c),
       abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 2,5,1,3,4
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL	NULL	167	NULL
NULL	NULL	NULL	208	NULL
NULL	NULL	1	NULL	NULL
NULL	NULL	4	NULL	NULL
NULL	NULL	3	177	354
NULL	NULL	3	237	474
NULL	NULL	NULL	NULL	1020
NULL	NULL	2	110	1140
NULL	NULL	2	116	1190
NULL	NULL	2	123	1220
NULL	NULL	3	145	1490
NULL	NULL	3	151	1500
NULL	NULL	2	155	1570
1604	107.0	2	107	1060
1899	127.0	1	127	1280
1975	132.0	3	132	1340
2052	137.0	3	138	1360
2129	142.0	1	144	1410
2436	162.0	3	161	1600
2589	172.0	2	171	1700
2739	182.0	2	181	362
2802	187.0	2	187	374
2880	192.0	1	190	380
2946	197.0	1	199	398
3176	212.0	3	214	428
3259	217.0	1	218	436
3331	222.0	1	223	446
3405	227.0	1	226	452
3477	232.0	1	234	468
3704	247.0	1	246	492


-- !query
SELECT (a+b+c+d+e)/5,
       e,
       c
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,e:int,c:int>
-- !query output
107.0	105	108
127.0	125	129
132.0	130	131
137.0	137	139
142.0	143	140
162.0	162	163
172.0	174	172
182.0	184	182
187.0	185	186
192.0	191	193
197.0	195	198
212.0	211	213
217.0	219	216
222.0	224	222
227.0	225	228
232.0	233	232
247.0	245	247
NULL	104	NULL
NULL	113	112
NULL	121	124
NULL	147	146
NULL	158	159
NULL	166	168
NULL	175	179
NULL	204	203
NULL	207	NULL
NULL	238	239
NULL	NULL	117
NULL	NULL	153
NULL	NULL	240


-- !query
SELECT (a+b+c+d+e)/5,
       e,
       c
  FROM t1
 ORDER BY 2,3
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,e:int,c:int>
-- !query output
NULL	NULL	117
NULL	NULL	153
NULL	NULL	240
NULL	104	NULL
107.0	105	108
NULL	113	112
NULL	121	124
127.0	125	129
132.0	130	131
137.0	137	139
142.0	143	140
NULL	147	146
NULL	158	159
162.0	162	163
NULL	166	168
172.0	174	172
NULL	175	179
182.0	184	182
187.0	185	186
192.0	191	193
197.0	195	198
NULL	204	203
NULL	207	NULL
212.0	211	213
217.0	219	216
222.0	224	222
227.0	225	228
232.0	233	232
NULL	238	239
247.0	245	247


-- !query
SELECT d,
       abs(b-c),
       b,
       b-c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<d:int,abs((b - c)):int,b:int,(b - c):int>
-- !query output
101	NULL	102	NULL
109	2	106	-2
164	3	160	-3
165	NULL	NULL	NULL
173	2	170	-2
183	2	180	-2
189	2	188	2
192	1	194	1
196	1	197	-1
201	1	202	-1
206	NULL	NULL	NULL
212	3	210	-3
217	1	215	-1
220	1	221	-1
229	1	227	-1
230	1	231	-1
243	4	244	4
249	1	248	1


-- !query
SELECT d,
       abs(b-c),
       b,
       b-c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
 ORDER BY 2,4
-- !query schema
struct<d:int,abs((b - c)):int,b:int,(b - c):int>
-- !query output
165	NULL	NULL	NULL
101	NULL	102	NULL
206	NULL	NULL	NULL
217	1	215	-1
220	1	221	-1
229	1	227	-1
196	1	197	-1
230	1	231	-1
201	1	202	-1
192	1	194	1
249	1	248	1
173	2	170	-2
183	2	180	-2
109	2	106	-2
189	2	188	2
164	3	160	-3
212	3	210	-3
243	4	244	4


-- !query
SELECT b,
       a+b*2,
       a+b*2+c*3,
       e,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2,
       a+b*2+c*3,
       e,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
 ORDER BY 5,6,3,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2,
       a+b*2+c*3,
       e,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2,
       a+b*2+c*3,
       e,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,6,1,2,4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       d,
       abs(b-c),
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,d:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
1079	1060	4	109	2	643	1
1274	1280	1	126	1	770	-1


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       d,
       abs(b-c),
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,2,5,3,7,1,6
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,d:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
1079	1060	4	109	2	643	1
1274	1280	1	126	1	770	-1


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       d,
       abs(b-c),
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,d:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
1079	1060	4	109	2	643	1
1274	1280	1	126	1	770	-1


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       d,
       abs(b-c),
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,2,7,6
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,d:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
1079	1060	4	109	2	643	1
1274	1280	1	126	1	770	-1


-- !query
SELECT abs(a),
       a+b*2,
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
   AND a>b
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,(a - b):int>
-- !query output
107	319	1
123	367	1
151	451	1
161	481	1
171	511	1
177	529	1
181	541	1
237	709	1


-- !query
SELECT abs(a),
       a+b*2,
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
   AND a>b
 ORDER BY 2,1
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,(a - b):int>
-- !query output
107	319	1
123	367	1
151	451	1
161	481	1
171	511	1
177	529	1
181	541	1
237	709	1


-- !query
SELECT abs(a),
       a+b*2,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,(a - b):int>
-- !query output
107	319	1
123	367	1
151	451	1
161	481	1
171	511	1
177	529	1
181	541	1
237	709	1


-- !query
SELECT abs(a),
       a+b*2,
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
 ORDER BY 2,1
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,(a - b):int>
-- !query output
107	319	1
123	367	1
151	451	1
161	481	1
171	511	1
177	529	1
181	541	1
237	709	1


-- !query
SELECT abs(a),
       a+b*2,
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,(a - b):int>
-- !query output
107	319	1
123	367	1
151	451	1
161	481	1
171	511	1
177	529	1
181	541	1
237	709	1


-- !query
SELECT abs(a),
       a+b*2,
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,(a - b):int>
-- !query output
107	319	1
123	367	1
151	451	1
161	481	1
171	511	1
177	529	1
181	541	1
237	709	1


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       a+b*2
  FROM t1
 WHERE c>d
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       a+b*2
  FROM t1
 WHERE c>d
    OR c BETWEEN b-2 AND d+2
 ORDER BY 4,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR c>d
 ORDER BY 4,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       a,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1140	NULL	555	112	110	NULL
1490	NULL	222	146	145	NULL
380	192.0	444	193	190	1925


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       a,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>a AND e<b)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 6,4,3
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1140	NULL	555	112	110	NULL
1490	NULL	222	146	145	NULL
380	192.0	444	193	190	1925


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       a,
       a+b*2+c*3+d*4
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1140	NULL	555	112	110	NULL
1490	NULL	222	146	145	NULL
380	192.0	444	193	190	1925


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       a,
       a+b*2+c*3+d*4
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
 ORDER BY 3,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1490	NULL	222	146	145	NULL
380	192.0	444	193	190	1925
1140	NULL	555	112	110	NULL


-- !query
SELECT b,
       d-e
  FROM t1
-- !query schema
struct<b:int,(d - e):int>
-- !query output
102	-3
106	4
114	NULL
119	NULL
122	NULL
128	1
134	3
136	-2
141	-1
149	NULL
150	NULL
157	NULL
160	2
170	-1
176	NULL
180	-1
188	4
194	1
197	1
202	-3
210	1
215	-2
221	-4
227	4
231	-3
236	NULL
244	NULL
248	4
NULL	-1
NULL	-1


-- !query
SELECT b,
       d-e
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<b:int,(d - e):int>
-- !query output
114	NULL
119	NULL
122	NULL
149	NULL
150	NULL
157	NULL
176	NULL
236	NULL
244	NULL
221	-4
102	-3
202	-3
231	-3
136	-2
215	-2
NULL	-1
NULL	-1
141	-1
170	-1
180	-1
128	1
194	1
197	1
210	1
160	2
134	3
106	4
188	4
227	4
248	4


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,(d - e):int>
-- !query output
111	193	1


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 3,2,1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,(d - e):int>
-- !query output
111	193	1


-- !query
SELECT (a+b+c+d+e)/5,
       e,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       e,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c
  FROM t1
 WHERE c>d
   AND (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 6,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       e,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       e,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND (e>c OR e<d)
 ORDER BY 6,4,3,5,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       e,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       e,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
   AND c>d
 ORDER BY 4,5,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d-e,
       (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       d-e,
       (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 3,5,6,4,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND a>b
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
139	1367
198	1971
213	2121
222	2211
232	2312


-- !query
SELECT c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND a>b
 ORDER BY 2,1
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
139	1367
198	1971
213	2121
222	2211
232	2312


-- !query
SELECT c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
   AND c>d
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
139	1367
198	1971
213	2121
222	2211
232	2312


-- !query
SELECT c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
   AND c>d
 ORDER BY 1,2
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
139	1367
198	1971
213	2121
222	2211
232	2312


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       c,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       c,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 4,2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       c,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       c,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
 ORDER BY 4,3,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c
  FROM t1
 WHERE a>b
-- !query schema
struct<(b - c):int>
-- !query output
-1
-1
-1
-1
-2
-2
-2
-2
-3
-3
-3
-3
-3
-3
1


-- !query
SELECT b-c
  FROM t1
 WHERE a>b
 ORDER BY 1
-- !query schema
struct<(b - c):int>
-- !query output
-3
-3
-3
-3
-3
-3
-2
-2
-2
-2
-1
-1
-1
-1
1


-- !query
SELECT abs(a),
       b,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a
  FROM t1
 WHERE d>e
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs(a):int,b:int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int>
-- !query output
107	106	108	222	1	333	107
161	160	163	444	1	333	161
187	188	186	111	-1	222	187
190	194	193	444	-4	111	190
199	197	198	555	2	333	199
214	210	213	555	4	444	214
226	227	228	111	-1	222	226
246	248	247	222	-2	222	246


-- !query
SELECT abs(a),
       b,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a
  FROM t1
 WHERE d>e
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 3,6,4,5,2,7
-- !query schema
struct<abs(a):int,b:int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int>
-- !query output
107	106	108	222	1	333	107
161	160	163	444	1	333	161
187	188	186	111	-1	222	187
190	194	193	444	-4	111	190
199	197	198	555	2	333	199
214	210	213	555	4	444	214
226	227	228	111	-1	222	226
246	248	247	222	-2	222	246


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a,
       a+b*2,
       c-d
  FROM t1
 WHERE c>d
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a,
       a+b*2,
       c-d
  FROM t1
 WHERE c>d
   AND b>c
 ORDER BY 1,4,5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a,
       a+b*2,
       c-d
  FROM t1
 WHERE b>c
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a,
       a+b*2,
       c-d
  FROM t1
 WHERE b>c
   AND c>d
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
   AND c>d
-- !query schema
struct<a:int>
-- !query output



-- !query
SELECT a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
   AND c>d
 ORDER BY 1
-- !query schema
struct<a:int>
-- !query output



-- !query
SELECT a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<a:int>
-- !query output



-- !query
SELECT a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<a:int>
-- !query output



-- !query
SELECT a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
   AND c>d
-- !query schema
struct<a:int>
-- !query output



-- !query
SELECT a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
   AND c>d
 ORDER BY 1
-- !query schema
struct<a:int>
-- !query output



-- !query
SELECT a+b*2+c*3+d*4,
       a
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int>
-- !query output
1079	107
1165	116
1274	127
1325	132
1367	138
1414	144
1626	161
1719	171
1819	181
1877	187
1925	190
1971	199
2121	214
2164	218
2211	223
2280	226
2312	234
2479	246
NULL	110
NULL	123
NULL	145
NULL	151
NULL	155
NULL	167
NULL	177
NULL	208
NULL	237
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       a
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	110
NULL	123
NULL	145
NULL	151
NULL	155
NULL	167
NULL	177
NULL	208
NULL	237
1079	107
1165	116
1274	127
1325	132
1367	138
1414	144
1626	161
1719	171
1819	181
1877	187
1925	190
1971	199
2121	214
2164	218
2211	223
2280	226
2312	234
2479	246


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b>c
   AND (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b>c
   AND (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b>c
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b>c
   AND (e>c OR e<d)
 ORDER BY 3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b>c
   AND (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b>c
   AND (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
 ORDER BY 2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>c OR e<d)
   AND (c<=d-2 OR c>=d+2)
   AND b>c
 ORDER BY 4,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE b>c
 ORDER BY 3,2,4,5,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2,
       b,
       d,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2,
       b,
       d,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a>b
 ORDER BY 1,4,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       e,
       abs(a),
       c
  FROM t1
 WHERE a>b
   AND c>d
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,e:int,abs(a):int,c:int>
-- !query output
1971	2	195	199	198
2121	4	211	214	213
2211	2	224	223	222
2312	3	233	234	232


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       e,
       abs(a),
       c
  FROM t1
 WHERE a>b
   AND c>d
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,3
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,e:int,abs(a):int,c:int>
-- !query output
1971	2	195	199	198
2211	2	224	223	222
2312	3	233	234	232
2121	4	211	214	213


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       e,
       abs(a),
       c
  FROM t1
 WHERE a>b
   AND d NOT BETWEEN 110 AND 150
   AND c>d
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,e:int,abs(a):int,c:int>
-- !query output
1971	2	195	199	198
2121	4	211	214	213
2211	2	224	223	222
2312	3	233	234	232


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       e,
       abs(a),
       c
  FROM t1
 WHERE a>b
   AND d NOT BETWEEN 110 AND 150
   AND c>d
 ORDER BY 2,4,3
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,e:int,abs(a):int,c:int>
-- !query output
1971	2	195	199	198
2211	2	224	223	222
2312	3	233	234	232
2121	4	211	214	213


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       e,
       abs(a),
       c
  FROM t1
 WHERE c>d
   AND d NOT BETWEEN 110 AND 150
   AND a>b
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,e:int,abs(a):int,c:int>
-- !query output
1971	2	195	199	198
2121	4	211	214	213
2211	2	224	223	222
2312	3	233	234	232


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       e,
       abs(a),
       c
  FROM t1
 WHERE c>d
   AND d NOT BETWEEN 110 AND 150
   AND a>b
 ORDER BY 4,3
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,e:int,abs(a):int,c:int>
-- !query output
1971	2	195	199	198
2121	4	211	214	213
2211	2	224	223	222
2312	3	233	234	232


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       a-b
  FROM t1
 WHERE b>c
    OR a>b
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int,(a - b):int>
-- !query output
109	333	107	1
115	222	116	-3
133	222	132	-2
135	333	138	2
142	444	144	3
164	333	161	1
173	333	171	1
183	333	181	1
189	222	187	-1
192	111	190	-4
196	333	199	2
212	444	214	4
217	444	218	3
220	333	223	2
230	444	234	3
243	444	NULL	NULL
249	222	246	-2
NULL	111	110	-4
NULL	111	145	-4
NULL	333	123	1
NULL	333	151	1
NULL	333	177	1
NULL	333	237	1


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       a-b
  FROM t1
 WHERE b>c
    OR a>b
 ORDER BY 1,3,2
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int,(a - b):int>
-- !query output
NULL	111	110	-4
NULL	333	123	1
NULL	111	145	-4
NULL	333	151	1
NULL	333	177	1
NULL	333	237	1
109	333	107	1
115	222	116	-3
133	222	132	-2
135	333	138	2
142	444	144	3
164	333	161	1
173	333	171	1
183	333	181	1
189	222	187	-1
192	111	190	-4
196	333	199	2
212	444	214	4
217	444	218	3
220	333	223	2
230	444	234	3
243	444	NULL	NULL
249	222	246	-2


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a,
       a-b
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int,(a - b):int>
-- !query output
111	338	2	1140	110	-4
111	443	3	1490	145	-4
111	578	1	380	190	-4
222	354	2	1190	116	-3
222	383	-1	1280	127	-1
222	400	3	1340	132	-2
222	469	-2	1570	155	-2
222	563	2	374	187	-1
222	680	-1	452	226	-1
222	742	1	492	246	-2
333	319	-2	1060	107	1
333	367	-2	1220	123	1
333	410	-3	1360	138	2
333	451	-3	1500	151	1
333	481	-3	1600	161	1
333	511	-2	1700	171	1
333	529	-3	354	177	1
333	541	-2	362	181	1
333	593	-1	398	199	2
333	665	-1	446	223	2
333	709	-3	474	237	1
444	426	1	1410	144	3
444	634	-3	428	214	4
444	648	-1	436	218	3
444	696	-1	468	234	3
444	NULL	-1	NULL	NULL	NULL
444	NULL	4	NULL	NULL	NULL
444	NULL	NULL	1020	NULL	NULL
444	NULL	NULL	NULL	167	NULL
444	NULL	NULL	NULL	208	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a,
       a-b
  FROM t1
 ORDER BY 4,1,2,5,6
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int,(a - b):int>
-- !query output
444	NULL	-1	NULL	NULL	NULL
444	NULL	4	NULL	NULL	NULL
444	NULL	NULL	NULL	167	NULL
444	NULL	NULL	NULL	208	NULL
333	529	-3	354	177	1
333	541	-2	362	181	1
222	563	2	374	187	-1
111	578	1	380	190	-4
333	593	-1	398	199	2
444	634	-3	428	214	4
444	648	-1	436	218	3
333	665	-1	446	223	2
222	680	-1	452	226	-1
444	696	-1	468	234	3
333	709	-3	474	237	1
222	742	1	492	246	-2
444	NULL	NULL	1020	NULL	NULL
333	319	-2	1060	107	1
111	338	2	1140	110	-4
222	354	2	1190	116	-3
333	367	-2	1220	123	1
222	383	-1	1280	127	-1
222	400	3	1340	132	-2
333	410	-3	1360	138	2
444	426	1	1410	144	3
111	443	3	1490	145	-4
333	451	-3	1500	151	1
222	469	-2	1570	155	-2
333	481	-3	1600	161	1
333	511	-2	1700	171	1


-- !query
SELECT a,
       d
  FROM t1
 WHERE d>e
    OR b>c
-- !query schema
struct<a:int,d:int>
-- !query output
107	109
110	NULL
116	115
127	126
132	133
144	142
145	NULL
161	164
187	189
190	192
199	196
214	212
226	229
246	249
NULL	243


-- !query
SELECT a,
       d
  FROM t1
 WHERE d>e
    OR b>c
 ORDER BY 2,1
-- !query schema
struct<a:int,d:int>
-- !query output
110	NULL
145	NULL
107	109
116	115
127	126
132	133
144	142
161	164
187	189
190	192
199	196
214	212
226	229
NULL	243
246	249


-- !query
SELECT a,
       d
  FROM t1
 WHERE b>c
    OR d>e
-- !query schema
struct<a:int,d:int>
-- !query output
107	109
110	NULL
116	115
127	126
132	133
144	142
145	NULL
161	164
187	189
190	192
199	196
214	212
226	229
246	249
NULL	243


-- !query
SELECT a,
       d
  FROM t1
 WHERE b>c
    OR d>e
 ORDER BY 2,1
-- !query schema
struct<a:int,d:int>
-- !query output
110	NULL
145	NULL
107	109
116	115
127	126
132	133
144	142
161	164
187	189
190	192
199	196
214	212
226	229
NULL	243
246	249


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
222
222
333
333
333
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
 ORDER BY 1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
222
222
333
333
333
444
444
444
444


-- !query
SELECT b,
       a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
   AND c>d
-- !query schema
struct<b:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
119	354	1165
194	578	1925


-- !query
SELECT b,
       a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
   AND c BETWEEN b-2 AND d+2
   AND c>d
 ORDER BY 3,1
-- !query schema
struct<b:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
119	354	1165
194	578	1925


-- !query
SELECT b,
       a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<b:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
119	354	1165
194	578	1925


-- !query
SELECT b,
       a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
   AND b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,3
-- !query schema
struct<b:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
119	354	1165
194	578	1925


-- !query
SELECT a-b,
       a,
       b-c,
       b,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c>d
-- !query schema
struct<(a - b):int,a:int,(b - c):int,b:int,e:int>
-- !query output
-1	127	-1	128	125
-1	187	2	188	185
-1	226	-1	227	225
-2	246	1	248	245
-3	116	2	119	NULL
-4	190	1	194	191
1	107	-2	106	105
1	161	-3	160	162
1	171	-2	170	174
1	181	-2	180	184
2	138	-3	136	137
2	199	-1	197	195
2	223	-1	221	224
3	218	-1	215	219
3	234	-1	231	233
4	214	-3	210	211
NULL	167	NULL	NULL	166
NULL	208	NULL	NULL	207
NULL	NULL	-1	202	204
NULL	NULL	4	244	NULL
NULL	NULL	NULL	102	104


-- !query
SELECT a-b,
       a,
       b-c,
       b,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c>d
 ORDER BY 2,1,5,4
-- !query schema
struct<(a - b):int,a:int,(b - c):int,b:int,e:int>
-- !query output
NULL	NULL	4	244	NULL
NULL	NULL	NULL	102	104
NULL	NULL	-1	202	204
1	107	-2	106	105
-3	116	2	119	NULL
-1	127	-1	128	125
2	138	-3	136	137
1	161	-3	160	162
NULL	167	NULL	NULL	166
1	171	-2	170	174
1	181	-2	180	184
-1	187	2	188	185
-4	190	1	194	191
2	199	-1	197	195
NULL	208	NULL	NULL	207
4	214	-3	210	211
3	218	-1	215	219
2	223	-1	221	224
-1	226	-1	227	225
3	234	-1	231	233
-2	246	1	248	245


-- !query
SELECT a-b,
       a,
       b-c,
       b,
       e
  FROM t1
 WHERE c>d
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a - b):int,a:int,(b - c):int,b:int,e:int>
-- !query output
-1	127	-1	128	125
-1	187	2	188	185
-1	226	-1	227	225
-2	246	1	248	245
-3	116	2	119	NULL
-4	190	1	194	191
1	107	-2	106	105
1	161	-3	160	162
1	171	-2	170	174
1	181	-2	180	184
2	138	-3	136	137
2	199	-1	197	195
2	223	-1	221	224
3	218	-1	215	219
3	234	-1	231	233
4	214	-3	210	211
NULL	167	NULL	NULL	166
NULL	208	NULL	NULL	207
NULL	NULL	-1	202	204
NULL	NULL	4	244	NULL
NULL	NULL	NULL	102	104


-- !query
SELECT a-b,
       a,
       b-c,
       b,
       e
  FROM t1
 WHERE c>d
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1,2
-- !query schema
struct<(a - b):int,a:int,(b - c):int,b:int,e:int>
-- !query output
NULL	NULL	-1	202	204
NULL	NULL	NULL	102	104
NULL	NULL	4	244	NULL
NULL	167	NULL	NULL	166
NULL	208	NULL	NULL	207
-4	190	1	194	191
-3	116	2	119	NULL
-2	246	1	248	245
-1	127	-1	128	125
-1	187	2	188	185
-1	226	-1	227	225
1	107	-2	106	105
1	161	-3	160	162
1	171	-2	170	174
1	181	-2	180	184
2	138	-3	136	137
2	199	-1	197	195
2	223	-1	221	224
3	218	-1	215	219
3	234	-1	231	233
4	214	-3	210	211


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>c OR e<d)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3,
       abs(a),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3,
       abs(a),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (e>a AND e<b)
 ORDER BY 1,7,5,4,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3,
       abs(a),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3,
       abs(a),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,3,7,4,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3,
       abs(a),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3,
       abs(a),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 5,7,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 2,5,3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
 ORDER BY 3,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
 ORDER BY 5,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
 ORDER BY 1,4,3,5
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND a>b
   AND (e>a AND e<b)
 ORDER BY 5,4
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
   AND (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a>b
   AND (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
 ORDER BY 3,2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT abs(a),
       a-b,
       d-e,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a-b,
       d-e,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
   AND c>d
 ORDER BY 4,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a-b,
       d-e,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a-b,
       d-e,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
   AND (e>a AND e<b)
 ORDER BY 2,3,6,1,5,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
   AND d>e
 ORDER BY 2,1,3,4,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b,
       b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
   AND d>e
 ORDER BY 5,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b,
       b-c
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b,
       b-c
  FROM t1
 WHERE d>e
   AND (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
 ORDER BY 2,1,3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b,
       b-c
  FROM t1
 WHERE d>e
   AND (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b,
       b-c
  FROM t1
 WHERE d>e
   AND (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
 ORDER BY 4,5,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3,
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND a>b
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3,
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND a>b
   AND c>d
 ORDER BY 2,1,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3,
       abs(b-c)
  FROM t1
 WHERE a>b
   AND e+d BETWEEN a+b-10 AND c+130
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3,
       abs(b-c)
  FROM t1
 WHERE a>b
   AND e+d BETWEEN a+b-10 AND c+130
   AND c>d
 ORDER BY 1,4,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       d,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       d,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 ORDER BY 5,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b,
       abs(a),
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b,
       abs(a),
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
 ORDER BY 4,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       abs(b-c)
  FROM t1
-- !query schema
struct<b:int,abs((b - c)):int>
-- !query output
102	NULL
106	2
114	2
119	2
122	2
128	1
134	3
136	3
141	1
149	3
150	3
157	2
160	3
170	2
176	3
180	2
188	2
194	1
197	1
202	1
210	3
215	1
221	1
227	1
231	1
236	3
244	4
248	1
NULL	NULL
NULL	NULL


-- !query
SELECT b,
       abs(b-c)
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<b:int,abs((b - c)):int>
-- !query output
NULL	NULL
NULL	NULL
102	NULL
128	1
141	1
194	1
197	1
202	1
215	1
221	1
227	1
231	1
248	1
106	2
114	2
119	2
122	2
157	2
170	2
180	2
188	2
134	3
136	3
149	3
150	3
160	3
176	3
210	3
236	3
244	4


-- !query
SELECT e,
       abs(a)
  FROM t1
-- !query schema
struct<e:int,abs(a):int>
-- !query output
104	NULL
105	107
113	110
121	123
125	127
130	132
137	138
143	144
147	145
158	155
162	161
166	167
174	171
175	177
184	181
185	187
191	190
195	199
204	NULL
207	208
211	214
219	218
224	223
225	226
233	234
238	237
245	246
NULL	116
NULL	151
NULL	NULL


-- !query
SELECT e,
       abs(a)
  FROM t1
 ORDER BY 2,1
-- !query schema
struct<e:int,abs(a):int>
-- !query output
NULL	NULL
104	NULL
204	NULL
105	107
113	110
NULL	116
121	123
125	127
130	132
137	138
143	144
147	145
NULL	151
158	155
162	161
166	167
174	171
175	177
184	181
185	187
191	190
195	199
207	208
211	214
219	218
224	223
225	226
233	234
238	237
245	246


-- !query
SELECT c-d,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       a+b*2+c*3,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       a+b*2+c*3,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
 ORDER BY 5,1,7,4,6,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       a+b*2+c*3,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR (e>a AND e<b)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       a+b*2+c*3,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR (e>a AND e<b)
    OR (a>b-2 AND a<b+2)
 ORDER BY 6,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       a+b*2+c*3,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       a+b*2+c*3,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
    OR b>c
 ORDER BY 5,3,7,2,4
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 7,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       a,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       a,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a)
  FROM t1
 ORDER BY 2,7
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       b
  FROM t1
-- !query schema
struct<abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,b:int>
-- !query output
107	222	643	106
110	555	674	114
116	222	705	119
123	222	739	122
127	111	770	128
132	333	793	134
138	222	827	136
144	555	846	141
145	222	881	149
151	555	910	150
155	555	946	157
161	444	970	160
167	222	NULL	NULL
171	222	1027	170
177	555	1066	176
181	222	1087	180
187	111	1121	188
190	444	1157	194
199	555	1187	197
208	555	NULL	NULL
214	555	1273	210
218	444	1296	215
223	444	1331	221
226	111	1364	227
234	555	1392	231
237	444	1426	236
246	222	1483	248
NULL	555	NULL	102
NULL	555	NULL	202
NULL	555	NULL	244


-- !query
SELECT abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       b
  FROM t1
 ORDER BY 4,1,2,3
-- !query schema
struct<abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,b:int>
-- !query output
167	222	NULL	NULL
208	555	NULL	NULL
NULL	555	NULL	102
107	222	643	106
110	555	674	114
116	222	705	119
123	222	739	122
127	111	770	128
132	333	793	134
138	222	827	136
144	555	846	141
145	222	881	149
151	555	910	150
155	555	946	157
161	444	970	160
171	222	1027	170
177	555	1066	176
181	222	1087	180
187	111	1121	188
190	444	1157	194
199	555	1187	197
NULL	555	NULL	202
214	555	1273	210
218	444	1296	215
223	444	1331	221
226	111	1364	227
234	555	1392	231
237	444	1426	236
NULL	555	NULL	244
246	222	1483	248


-- !query
SELECT abs(b-c),
       c,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       c,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 4,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1604	1060	-2	222
1899	1280	-1	111
1975	1340	3	333
2052	1360	-3	222
2129	1410	1	555
2436	1600	-3	444
2589	1700	-2	222
2739	362	-2	222
2802	374	2	111
2880	380	1	444
2946	398	-1	555
3176	428	-3	555
3259	436	-1	444
3331	446	-1	444
3405	452	-1	111
3477	468	-1	555
3704	492	1	222
NULL	1020	NULL	555
NULL	1140	2	555
NULL	1190	2	222
NULL	1220	-2	222
NULL	1490	3	222
NULL	1500	-3	555
NULL	1570	-2	555
NULL	354	-3	555
NULL	474	-3	444
NULL	NULL	-1	555
NULL	NULL	4	555
NULL	NULL	NULL	222
NULL	NULL	NULL	555


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 ORDER BY 4,1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1899	1280	-1	111
2802	374	2	111
3405	452	-1	111
NULL	NULL	NULL	222
NULL	1190	2	222
NULL	1220	-2	222
NULL	1490	3	222
1604	1060	-2	222
2052	1360	-3	222
2589	1700	-2	222
2739	362	-2	222
3704	492	1	222
1975	1340	3	333
NULL	474	-3	444
2436	1600	-3	444
2880	380	1	444
3259	436	-1	444
3331	446	-1	444
NULL	NULL	-1	555
NULL	1140	2	555
NULL	1570	-2	555
NULL	354	-3	555
NULL	1020	NULL	555
NULL	NULL	NULL	555
NULL	NULL	4	555
NULL	1500	-3	555
2129	1410	1	555
2946	398	-1	555
3176	428	-3	555
3477	468	-1	555


-- !query
SELECT a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
643	333	108	107.0	1604
770	222	129	127.0	1899


-- !query
SELECT a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,1,5
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
643	333	108	107.0	1604
770	222	129	127.0	1899


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c>d
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
3
3
3
3
4
NULL


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c>d
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
NULL
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
3
3
3
3
4


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
    OR c>d
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
3
3
3
3
4
NULL


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
    OR c>d
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
NULL
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
3
3
3
3
4


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
    OR c>d
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
3
3
3
3
4
NULL


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
    OR c>d
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
NULL
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
3
3
3
3
4


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE c>d
    OR (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
3
3
3
3
4
NULL


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE c>d
    OR (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
NULL
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
3
3
3
3
4


-- !query
SELECT c-d,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(c - d):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	109	333	107.0	-2	222
-1	164	333	162.0	-3	444
-1	173	333	172.0	-2	222
-1	183	333	182.0	-2	222
-1	217	444	217.0	-1	444
-1	229	222	227.0	-1	111
-2	133	222	132.0	3	333
-2	142	444	142.0	1	555
-2	249	222	247.0	1	222
-3	189	222	187.0	2	111
-3	243	444	NULL	4	555
1	192	111	192.0	1	444
1	212	444	212.0	-3	555
2	115	222	NULL	2	222
2	196	333	197.0	-1	555
2	201	444	NULL	-1	555
2	220	333	222.0	-1	444
2	230	444	232.0	-1	555
3	126	222	127.0	-1	111
3	165	444	NULL	NULL	222
4	135	333	137.0	-3	222
NULL	101	444	NULL	NULL	555
NULL	206	444	NULL	NULL	555
NULL	NULL	111	NULL	2	555
NULL	NULL	111	NULL	3	222
NULL	NULL	222	NULL	-2	555
NULL	NULL	333	NULL	-2	222
NULL	NULL	333	NULL	-3	444
NULL	NULL	333	NULL	-3	555
NULL	NULL	333	NULL	-3	555


-- !query
SELECT c-d,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,5,4
-- !query schema
struct<(c - d):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	NULL	333	NULL	-3	444
NULL	NULL	333	NULL	-3	555
NULL	NULL	333	NULL	-3	555
NULL	NULL	222	NULL	-2	555
NULL	NULL	333	NULL	-2	222
NULL	NULL	111	NULL	2	555
NULL	NULL	111	NULL	3	222
NULL	101	444	NULL	NULL	555
-1	109	333	107.0	-2	222
2	115	222	NULL	2	222
3	126	222	127.0	-1	111
-2	133	222	132.0	3	333
4	135	333	137.0	-3	222
-2	142	444	142.0	1	555
-1	164	333	162.0	-3	444
3	165	444	NULL	NULL	222
-1	173	333	172.0	-2	222
-1	183	333	182.0	-2	222
-3	189	222	187.0	2	111
1	192	111	192.0	1	444
2	196	333	197.0	-1	555
2	201	444	NULL	-1	555
NULL	206	444	NULL	NULL	555
1	212	444	212.0	-3	555
-1	217	444	217.0	-1	444
2	220	333	222.0	-1	444
-1	229	222	227.0	-1	111
2	230	444	232.0	-1	555
-3	243	444	NULL	4	555
-2	249	222	247.0	1	222


-- !query
SELECT c-d,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(c - d):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	109	333	107.0	-2	222
-1	164	333	162.0	-3	444
-1	173	333	172.0	-2	222
-1	183	333	182.0	-2	222
-1	217	444	217.0	-1	444
-1	229	222	227.0	-1	111
-2	133	222	132.0	3	333
-2	142	444	142.0	1	555
-2	249	222	247.0	1	222
-3	189	222	187.0	2	111
-3	243	444	NULL	4	555
1	192	111	192.0	1	444
1	212	444	212.0	-3	555
2	115	222	NULL	2	222
2	196	333	197.0	-1	555
2	201	444	NULL	-1	555
2	220	333	222.0	-1	444
2	230	444	232.0	-1	555
3	126	222	127.0	-1	111
3	165	444	NULL	NULL	222
4	135	333	137.0	-3	222
NULL	101	444	NULL	NULL	555
NULL	206	444	NULL	NULL	555
NULL	NULL	111	NULL	2	555
NULL	NULL	111	NULL	3	222
NULL	NULL	222	NULL	-2	555
NULL	NULL	333	NULL	-2	222
NULL	NULL	333	NULL	-3	444
NULL	NULL	333	NULL	-3	555
NULL	NULL	333	NULL	-3	555


-- !query
SELECT c-d,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 6,2,5,4
-- !query schema
struct<(c - d):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
3	126	222	127.0	-1	111
-3	189	222	187.0	2	111
-1	229	222	227.0	-1	111
NULL	NULL	333	NULL	-2	222
NULL	NULL	111	NULL	3	222
-1	109	333	107.0	-2	222
2	115	222	NULL	2	222
4	135	333	137.0	-3	222
3	165	444	NULL	NULL	222
-1	173	333	172.0	-2	222
-1	183	333	182.0	-2	222
-2	249	222	247.0	1	222
-2	133	222	132.0	3	333
NULL	NULL	333	NULL	-3	444
-1	164	333	162.0	-3	444
1	192	111	192.0	1	444
-1	217	444	217.0	-1	444
2	220	333	222.0	-1	444
NULL	NULL	333	NULL	-3	555
NULL	NULL	333	NULL	-3	555
NULL	NULL	222	NULL	-2	555
NULL	NULL	111	NULL	2	555
NULL	101	444	NULL	NULL	555
-2	142	444	142.0	1	555
2	196	333	197.0	-1	555
2	201	444	NULL	-1	555
NULL	206	444	NULL	NULL	555
1	212	444	212.0	-3	555
2	230	444	232.0	-1	555
-3	243	444	NULL	4	555


-- !query
SELECT a,
       a+b*2+c*3+d*4+e*5,
       c,
       a+b*2+c*3+d*4,
       c-d,
       a-b
  FROM t1
 WHERE a>b
-- !query schema
struct<a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int,(a - b):int>
-- !query output
107	1604	108	1079	-1	1
123	NULL	124	NULL	NULL	1
138	2052	139	1367	4	2
144	2129	140	1414	-2	3
151	NULL	153	NULL	NULL	1
161	2436	163	1626	-1	1
171	2589	172	1719	-1	1
177	NULL	179	NULL	NULL	1
181	2739	182	1819	-1	1
199	2946	198	1971	2	2
214	3176	213	2121	1	4
218	3259	216	2164	-1	3
223	3331	222	2211	2	2
234	3477	232	2312	2	3
237	NULL	239	NULL	NULL	1


-- !query
SELECT a,
       a+b*2+c*3+d*4+e*5,
       c,
       a+b*2+c*3+d*4,
       c-d,
       a-b
  FROM t1
 WHERE a>b
 ORDER BY 5,1,6,4,3
-- !query schema
struct<a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int,(a - b):int>
-- !query output
123	NULL	124	NULL	NULL	1
151	NULL	153	NULL	NULL	1
177	NULL	179	NULL	NULL	1
237	NULL	239	NULL	NULL	1
144	2129	140	1414	-2	3
107	1604	108	1079	-1	1
161	2436	163	1626	-1	1
171	2589	172	1719	-1	1
181	2739	182	1819	-1	1
218	3259	216	2164	-1	3
214	3176	213	2121	1	4
199	2946	198	1971	2	2
223	3331	222	2211	2	2
234	3477	232	2312	2	3
138	2052	139	1367	4	2


-- !query
SELECT abs(a),
       b-c,
       a+b*2+c*3,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<abs(a):int,(b - c):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int>
-- !query output
110	2	674	338
145	3	881	443
190	1	1157	578


-- !query
SELECT abs(a),
       b-c,
       a+b*2+c*3,
       a+b*2
  FROM t1
 WHERE (e>a AND e<b)
 ORDER BY 2,3
-- !query schema
struct<abs(a):int,(b - c):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int>
-- !query output
190	1	1157	578
110	2	674	338
145	3	881	443


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c,
       a+b*2+c*3
  FROM t1
 WHERE c>d
    OR d>e
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c,
       a+b*2+c*3
  FROM t1
 WHERE c>d
    OR d>e
    OR (e>a AND e<b)
 ORDER BY 5,3,4,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c,
       a+b*2+c*3
  FROM t1
 WHERE (e>a AND e<b)
    OR c>d
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c,
       a+b*2+c*3
  FROM t1
 WHERE (e>a AND e<b)
    OR c>d
    OR d>e
 ORDER BY 1,5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int>
-- !query output
111	127
111	187
222	116
222	138
222	167
222	246
333	132
444	223
555	144
555	199
555	234
555	NULL
555	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 1,2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int>
-- !query output
111	127
111	187
222	116
222	138
222	167
222	246
333	132
444	223
555	NULL
555	NULL
555	144
555	199
555	234


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 ORDER BY 3,2,1,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int>
-- !query output
-1	127.0	1
-1	187.0	4
-1	227.0	4
1	107.0	4
1	162.0	2
1	172.0	-1
1	182.0	-1
1	NULL	NULL
1	NULL	NULL
1	NULL	NULL
1	NULL	NULL


-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
 ORDER BY 1,2
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int>
-- !query output
-1	127.0	1
-1	187.0	4
-1	227.0	4
1	NULL	NULL
1	NULL	NULL
1	NULL	NULL
1	NULL	NULL
1	107.0	4
1	162.0	2
1	172.0	-1
1	182.0	-1


-- !query
SELECT a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-1	1280
-1	374
-1	452
-2	1340
-2	1570
-2	492
-3	1190
-4	1140
-4	1490
-4	380
1	1060
1	1220
1	1500
1	1600
1	1700
1	354
1	362
1	474
2	1360
2	398
2	446
3	1410
3	436
3	468
4	428
NULL	1020
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 ORDER BY 1,2
-- !query schema
struct<(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	1020
-4	380
-4	1140
-4	1490
-3	1190
-2	492
-2	1340
-2	1570
-1	374
-1	452
-1	1280
1	354
1	362
1	474
1	1060
1	1220
1	1500
1	1600
1	1700
2	398
2	446
2	1360
3	436
3	468
3	1410
4	428


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b
  FROM t1
 WHERE b>c
 ORDER BY 5,2,1,4,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       a+b*2+c*3+d*4,
       d,
       b-c,
       a-b,
       b
  FROM t1
 WHERE b>c
    OR c>d
    OR (e>c OR e<d)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,(b - c):int,(a - b):int,b:int>
-- !query output
111	1	1274	126	-1	-1	128
111	1	2280	229	-1	-1	227
111	2	1877	189	2	-1	188
222	1	2479	249	1	-2	248
222	2	1079	109	-2	1	106
222	2	1165	115	2	-3	119
222	2	1719	173	-2	1	170
222	2	1819	183	-2	1	180
222	3	1367	135	-3	2	136
222	3	NULL	NULL	3	-4	149
222	NULL	NULL	165	NULL	NULL	NULL
333	3	1325	133	3	-2	134
444	1	1925	192	1	-4	194
444	1	2164	217	-1	3	215
444	1	2211	220	-1	2	221
444	3	1626	164	-3	1	160
555	1	1414	142	1	3	141
555	1	1971	196	-1	2	197
555	1	2312	230	-1	3	231
555	1	NULL	201	-1	NULL	202
555	2	NULL	NULL	2	-4	114
555	3	2121	212	-3	4	210
555	4	NULL	243	4	NULL	244


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       a+b*2+c*3+d*4,
       d,
       b-c,
       a-b,
       b
  FROM t1
 WHERE b>c
    OR c>d
    OR (e>c OR e<d)
 ORDER BY 2,1,5,6,3,4,7
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,(b - c):int,(a - b):int,b:int>
-- !query output
222	NULL	NULL	165	NULL	NULL	NULL
111	1	1274	126	-1	-1	128
111	1	2280	229	-1	-1	227
222	1	2479	249	1	-2	248
444	1	2211	220	-1	2	221
444	1	2164	217	-1	3	215
444	1	1925	192	1	-4	194
555	1	NULL	201	-1	NULL	202
555	1	1971	196	-1	2	197
555	1	2312	230	-1	3	231
555	1	1414	142	1	3	141
111	2	1877	189	2	-1	188
222	2	1079	109	-2	1	106
222	2	1719	173	-2	1	170
222	2	1819	183	-2	1	180
222	2	1165	115	2	-3	119
555	2	NULL	NULL	2	-4	114
222	3	1367	135	-3	2	136
222	3	NULL	NULL	3	-4	149
333	3	1325	133	3	-2	134
444	3	1626	164	-3	1	160
555	3	2121	212	-3	4	210
555	4	NULL	243	4	NULL	244


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       a+b*2+c*3+d*4,
       d,
       b-c,
       a-b,
       b
  FROM t1
 WHERE c>d
    OR b>c
    OR (e>c OR e<d)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,(b - c):int,(a - b):int,b:int>
-- !query output
111	1	1274	126	-1	-1	128
111	1	2280	229	-1	-1	227
111	2	1877	189	2	-1	188
222	1	2479	249	1	-2	248
222	2	1079	109	-2	1	106
222	2	1165	115	2	-3	119
222	2	1719	173	-2	1	170
222	2	1819	183	-2	1	180
222	3	1367	135	-3	2	136
222	3	NULL	NULL	3	-4	149
222	NULL	NULL	165	NULL	NULL	NULL
333	3	1325	133	3	-2	134
444	1	1925	192	1	-4	194
444	1	2164	217	-1	3	215
444	1	2211	220	-1	2	221
444	3	1626	164	-3	1	160
555	1	1414	142	1	3	141
555	1	1971	196	-1	2	197
555	1	2312	230	-1	3	231
555	1	NULL	201	-1	NULL	202
555	2	NULL	NULL	2	-4	114
555	3	2121	212	-3	4	210
555	4	NULL	243	4	NULL	244


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       a+b*2+c*3+d*4,
       d,
       b-c,
       a-b,
       b
  FROM t1
 WHERE c>d
    OR b>c
    OR (e>c OR e<d)
 ORDER BY 7,1,4,5,3,6
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,(b - c):int,(a - b):int,b:int>
-- !query output
222	NULL	NULL	165	NULL	NULL	NULL
222	2	1079	109	-2	1	106
555	2	NULL	NULL	2	-4	114
222	2	1165	115	2	-3	119
111	1	1274	126	-1	-1	128
333	3	1325	133	3	-2	134
222	3	1367	135	-3	2	136
555	1	1414	142	1	3	141
222	3	NULL	NULL	3	-4	149
444	3	1626	164	-3	1	160
222	2	1719	173	-2	1	170
222	2	1819	183	-2	1	180
111	2	1877	189	2	-1	188
444	1	1925	192	1	-4	194
555	1	1971	196	-1	2	197
555	1	NULL	201	-1	NULL	202
555	3	2121	212	-3	4	210
444	1	2164	217	-1	3	215
444	1	2211	220	-1	2	221
111	1	2280	229	-1	-1	227
555	1	2312	230	-1	3	231
555	4	NULL	243	4	NULL	244
222	1	2479	249	1	-2	248


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       e
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       e
  FROM t1
 WHERE (e>a AND e<b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 2,3,5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
 ORDER BY 5,3,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       b-c,
       (a+b+c+d+e)/5,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(a - b):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	-1	127.0	1	222	1	1274
-1	-1	227.0	4	222	1	2280
-1	2	187.0	4	222	2	1877
-2	-2	NULL	NULL	222	2	NULL
-2	1	247.0	4	222	1	2479
-2	3	132.0	3	222	3	1325
-3	2	NULL	NULL	222	2	1165
-4	1	192.0	1	111	1	1925
-4	2	NULL	NULL	111	2	NULL
-4	3	NULL	NULL	111	3	NULL
1	-2	107.0	4	333	2	1079
1	-2	172.0	-1	333	2	1719
1	-2	182.0	-1	333	2	1819
1	-2	NULL	NULL	333	2	NULL
1	-3	162.0	2	333	3	1626
1	-3	NULL	NULL	333	3	NULL
1	-3	NULL	NULL	333	3	NULL
1	-3	NULL	NULL	333	3	NULL
2	-1	197.0	1	333	1	1971
2	-1	222.0	-4	333	1	2211
2	-3	137.0	-2	333	3	1367
3	-1	217.0	-2	444	1	2164
3	-1	232.0	-3	444	1	2312
3	1	142.0	-1	444	1	1414
4	-3	212.0	1	444	3	2121
NULL	-1	NULL	-3	444	1	NULL
NULL	4	NULL	NULL	444	4	NULL
NULL	NULL	NULL	-1	444	NULL	NULL
NULL	NULL	NULL	-1	444	NULL	NULL
NULL	NULL	NULL	-3	444	NULL	NULL


-- !query
SELECT a-b,
       b-c,
       (a+b+c+d+e)/5,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 ORDER BY 3,4,5,1,2
-- !query schema
struct<(a - b):int,(b - c):int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-4	2	NULL	NULL	111	2	NULL
-4	3	NULL	NULL	111	3	NULL
-3	2	NULL	NULL	222	2	1165
-2	-2	NULL	NULL	222	2	NULL
1	-3	NULL	NULL	333	3	NULL
1	-3	NULL	NULL	333	3	NULL
1	-3	NULL	NULL	333	3	NULL
1	-2	NULL	NULL	333	2	NULL
NULL	4	NULL	NULL	444	4	NULL
NULL	NULL	NULL	-3	444	NULL	NULL
NULL	-1	NULL	-3	444	1	NULL
NULL	NULL	NULL	-1	444	NULL	NULL
NULL	NULL	NULL	-1	444	NULL	NULL
1	-2	107.0	4	333	2	1079
-1	-1	127.0	1	222	1	1274
-2	3	132.0	3	222	3	1325
2	-3	137.0	-2	333	3	1367
3	1	142.0	-1	444	1	1414
1	-3	162.0	2	333	3	1626
1	-2	172.0	-1	333	2	1719
1	-2	182.0	-1	333	2	1819
-1	2	187.0	4	222	2	1877
-4	1	192.0	1	111	1	1925
2	-1	197.0	1	333	1	1971
4	-3	212.0	1	444	3	2121
3	-1	217.0	-2	444	1	2164
2	-1	222.0	-4	333	1	2211
-1	-1	227.0	4	222	1	2280
3	-1	232.0	-3	444	1	2312
-2	1	247.0	4	222	1	2479


-- !query
SELECT c-d,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 ORDER BY 2,4,5,3,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,4,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c BETWEEN b-2 AND d+2
 ORDER BY 4,2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c
  FROM t1
-- !query schema
struct<b:int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,c:int>
-- !query output
102	NULL	1020	NULL
106	107.0	1060	108
114	NULL	1140	112
119	NULL	1190	117
122	NULL	1220	124
128	127.0	1280	129
134	132.0	1340	131
136	137.0	1360	139
141	142.0	1410	140
149	NULL	1490	146
150	NULL	1500	153
157	NULL	1570	159
160	162.0	1600	163
170	172.0	1700	172
176	NULL	354	179
180	182.0	362	182
188	187.0	374	186
194	192.0	380	193
197	197.0	398	198
202	NULL	NULL	203
210	212.0	428	213
215	217.0	436	216
221	222.0	446	222
227	227.0	452	228
231	232.0	468	232
236	NULL	474	239
244	NULL	NULL	240
248	247.0	492	247
NULL	NULL	NULL	168
NULL	NULL	NULL	NULL


-- !query
SELECT b,
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c
  FROM t1
 ORDER BY 4,3,2,1
-- !query schema
struct<b:int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,c:int>
-- !query output
NULL	NULL	NULL	NULL
102	NULL	1020	NULL
106	107.0	1060	108
114	NULL	1140	112
119	NULL	1190	117
122	NULL	1220	124
128	127.0	1280	129
134	132.0	1340	131
136	137.0	1360	139
141	142.0	1410	140
149	NULL	1490	146
150	NULL	1500	153
157	NULL	1570	159
160	162.0	1600	163
NULL	NULL	NULL	168
170	172.0	1700	172
176	NULL	354	179
180	182.0	362	182
188	187.0	374	186
194	192.0	380	193
197	197.0	398	198
202	NULL	NULL	203
210	212.0	428	213
215	217.0	436	216
221	222.0	446	222
227	227.0	452	228
231	232.0	468	232
236	NULL	474	239
244	NULL	NULL	240
248	247.0	492	247


-- !query
SELECT c,
       a+b*2,
       b-c
  FROM t1
-- !query schema
struct<c:int,(a + (b * 2)):int,(b - c):int>
-- !query output
108	319	-2
112	338	2
117	354	2
124	367	-2
129	383	-1
131	400	3
139	410	-3
140	426	1
146	443	3
153	451	-3
159	469	-2
163	481	-3
168	NULL	NULL
172	511	-2
179	529	-3
182	541	-2
186	563	2
193	578	1
198	593	-1
203	NULL	-1
213	634	-3
216	648	-1
222	665	-1
228	680	-1
232	696	-1
239	709	-3
240	NULL	4
247	742	1
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT c,
       a+b*2,
       b-c
  FROM t1
 ORDER BY 3,1
-- !query schema
struct<c:int,(a + (b * 2)):int,(b - c):int>
-- !query output
NULL	NULL	NULL
NULL	NULL	NULL
168	NULL	NULL
139	410	-3
153	451	-3
163	481	-3
179	529	-3
213	634	-3
239	709	-3
108	319	-2
124	367	-2
159	469	-2
172	511	-2
182	541	-2
129	383	-1
198	593	-1
203	NULL	-1
216	648	-1
222	665	-1
228	680	-1
232	696	-1
140	426	1
193	578	1
247	742	1
112	338	2
117	354	2
186	563	2
131	400	3
146	443	3
240	NULL	4


-- !query
SELECT a+b*2+c*3+d*4,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int>
-- !query output
1079	107
1165	116
1414	144
1626	161
1719	171
1819	181
1877	187
1925	190
1971	199
2121	214
2164	218
2211	223
2280	226
2312	234
2479	246
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
 ORDER BY 2,1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int>
-- !query output
NULL	NULL
1079	107
1165	116
1414	144
1626	161
1719	171
1819	181
1877	187
1925	190
1971	199
2121	214
2164	218
2211	223
2280	226
2312	234
2479	246


-- !query
SELECT c-d,
       b-c,
       a,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(c - d):int,(b - c):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
3	-1	127	770


-- !query
SELECT c-d,
       b-c,
       a,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,2
-- !query schema
struct<(c - d):int,(b - c):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
3	-1	127	770


-- !query
SELECT c-d,
       b-c,
       a,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND c>d
-- !query schema
struct<(c - d):int,(b - c):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
3	-1	127	770


-- !query
SELECT c-d,
       b-c,
       a,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
   AND c>d
 ORDER BY 4,3,1,2
-- !query schema
struct<(c - d):int,(b - c):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
3	-1	127	770


-- !query
SELECT c-d,
       b-c,
       a,
       a+b*2+c*3
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(c - d):int,(b - c):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
3	-1	127	770


-- !query
SELECT c-d,
       b-c,
       a,
       a+b*2+c*3
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND e+d BETWEEN a+b-10 AND c+130
 ORDER BY 3,4
-- !query schema
struct<(c - d):int,(b - c):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
3	-1	127	770


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c>d
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1190
1280
1340
1360
1410
374
380
398
428
446
468
492
NULL
NULL
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c>d
    OR (c<=d-2 OR c>=d+2)
 ORDER BY 1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL
NULL
NULL
374
380
398
428
446
468
492
1190
1280
1340
1360
1410


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c>d
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1190
1280
1340
1360
1410
374
380
398
428
446
468
492
NULL
NULL
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c>d
 ORDER BY 1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
NULL
NULL
NULL
374
380
398
428
446
468
492
1190
1280
1340
1360
1410


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       e
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR a>b
-- !query schema
struct<abs(a):int,abs((b - c)):int,(d - e):int,e:int>
-- !query output
107	2	4	105
110	2	NULL	113
116	2	NULL	NULL
123	2	NULL	121
127	1	1	125
132	3	3	130
138	3	-2	137
144	1	-1	143
145	3	NULL	147
151	3	NULL	NULL
161	3	2	162
171	2	-1	174
177	3	NULL	175
181	2	-1	184
187	2	4	185
190	1	1	191
199	1	1	195
214	3	1	211
218	1	-2	219
223	1	-4	224
226	1	4	225
234	1	-3	233
237	3	NULL	238
246	1	4	245
NULL	1	-3	204
NULL	4	NULL	NULL


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       e
  FROM t1
 WHERE b>c
    OR (e>c OR e<d)
    OR a>b
 ORDER BY 2,4
-- !query schema
struct<abs(a):int,abs((b - c)):int,(d - e):int,e:int>
-- !query output
127	1	1	125
144	1	-1	143
190	1	1	191
199	1	1	195
NULL	1	-3	204
218	1	-2	219
223	1	-4	224
226	1	4	225
234	1	-3	233
246	1	4	245
116	2	NULL	NULL
107	2	4	105
110	2	NULL	113
123	2	NULL	121
171	2	-1	174
181	2	-1	184
187	2	4	185
151	3	NULL	NULL
132	3	3	130
138	3	-2	137
145	3	NULL	147
161	3	2	162
177	3	NULL	175
214	3	1	211
237	3	NULL	238
NULL	4	NULL	NULL


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       e
  FROM t1
 WHERE a>b
    OR (e>c OR e<d)
    OR b>c
-- !query schema
struct<abs(a):int,abs((b - c)):int,(d - e):int,e:int>
-- !query output
107	2	4	105
110	2	NULL	113
116	2	NULL	NULL
123	2	NULL	121
127	1	1	125
132	3	3	130
138	3	-2	137
144	1	-1	143
145	3	NULL	147
151	3	NULL	NULL
161	3	2	162
171	2	-1	174
177	3	NULL	175
181	2	-1	184
187	2	4	185
190	1	1	191
199	1	1	195
214	3	1	211
218	1	-2	219
223	1	-4	224
226	1	4	225
234	1	-3	233
237	3	NULL	238
246	1	4	245
NULL	1	-3	204
NULL	4	NULL	NULL


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       e
  FROM t1
 WHERE a>b
    OR (e>c OR e<d)
    OR b>c
 ORDER BY 2,3
-- !query schema
struct<abs(a):int,abs((b - c)):int,(d - e):int,e:int>
-- !query output
223	1	-4	224
234	1	-3	233
NULL	1	-3	204
218	1	-2	219
144	1	-1	143
190	1	1	191
127	1	1	125
199	1	1	195
226	1	4	225
246	1	4	245
110	2	NULL	113
116	2	NULL	NULL
123	2	NULL	121
171	2	-1	174
181	2	-1	184
107	2	4	105
187	2	4	185
237	3	NULL	238
145	3	NULL	147
177	3	NULL	175
151	3	NULL	NULL
138	3	-2	137
214	3	1	211
161	3	2	162
132	3	3	130
NULL	4	NULL	NULL


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       e
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR a>b
-- !query schema
struct<abs(a):int,abs((b - c)):int,(d - e):int,e:int>
-- !query output
107	2	4	105
110	2	NULL	113
116	2	NULL	NULL
123	2	NULL	121
127	1	1	125
132	3	3	130
138	3	-2	137
144	1	-1	143
145	3	NULL	147
151	3	NULL	NULL
161	3	2	162
171	2	-1	174
177	3	NULL	175
181	2	-1	184
187	2	4	185
190	1	1	191
199	1	1	195
214	3	1	211
218	1	-2	219
223	1	-4	224
226	1	4	225
234	1	-3	233
237	3	NULL	238
246	1	4	245
NULL	1	-3	204
NULL	4	NULL	NULL


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       e
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR a>b
 ORDER BY 2,3,1,4
-- !query schema
struct<abs(a):int,abs((b - c)):int,(d - e):int,e:int>
-- !query output
223	1	-4	224
NULL	1	-3	204
234	1	-3	233
218	1	-2	219
144	1	-1	143
127	1	1	125
190	1	1	191
199	1	1	195
226	1	4	225
246	1	4	245
110	2	NULL	113
116	2	NULL	NULL
123	2	NULL	121
171	2	-1	174
181	2	-1	184
107	2	4	105
187	2	4	185
145	3	NULL	147
151	3	NULL	NULL
177	3	NULL	175
237	3	NULL	238
138	3	-2	137
214	3	1	211
161	3	2	162
132	3	3	130
NULL	4	NULL	NULL


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       e
  FROM t1
 WHERE a>b
    OR b>c
    OR (e>c OR e<d)
-- !query schema
struct<abs(a):int,abs((b - c)):int,(d - e):int,e:int>
-- !query output
107	2	4	105
110	2	NULL	113
116	2	NULL	NULL
123	2	NULL	121
127	1	1	125
132	3	3	130
138	3	-2	137
144	1	-1	143
145	3	NULL	147
151	3	NULL	NULL
161	3	2	162
171	2	-1	174
177	3	NULL	175
181	2	-1	184
187	2	4	185
190	1	1	191
199	1	1	195
214	3	1	211
218	1	-2	219
223	1	-4	224
226	1	4	225
234	1	-3	233
237	3	NULL	238
246	1	4	245
NULL	1	-3	204
NULL	4	NULL	NULL


-- !query
SELECT abs(a),
       abs(b-c),
       d-e,
       e
  FROM t1
 WHERE a>b
    OR b>c
    OR (e>c OR e<d)
 ORDER BY 2,1,4,3
-- !query schema
struct<abs(a):int,abs((b - c)):int,(d - e):int,e:int>
-- !query output
NULL	1	-3	204
127	1	1	125
144	1	-1	143
190	1	1	191
199	1	1	195
218	1	-2	219
223	1	-4	224
226	1	4	225
234	1	-3	233
246	1	4	245
107	2	4	105
110	2	NULL	113
116	2	NULL	NULL
123	2	NULL	121
171	2	-1	174
181	2	-1	184
187	2	4	185
132	3	3	130
138	3	-2	137
145	3	NULL	147
151	3	NULL	NULL
161	3	2	162
177	3	NULL	175
214	3	1	211
237	3	NULL	238
NULL	4	NULL	NULL


-- !query
SELECT c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
108	1079
112	NULL
117	1165
124	NULL
129	1274
131	1325
139	1367
140	1414
146	NULL
153	NULL
159	NULL
163	1626
172	1719
179	NULL
182	1819
186	1877
193	1925
198	1971
203	NULL
213	2121
216	2164
222	2211
228	2280
232	2312
239	NULL
240	NULL
247	2479


-- !query
SELECT c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
 ORDER BY 2,1
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
112	NULL
124	NULL
146	NULL
153	NULL
159	NULL
179	NULL
203	NULL
239	NULL
240	NULL
108	1079
117	1165
129	1274
131	1325
139	1367
140	1414
163	1626
172	1719
182	1819
186	1877
193	1925
198	1971
213	2121
216	2164
222	2211
228	2280
232	2312
247	2479


-- !query
SELECT c-d,
       a-b,
       b,
       d-e,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a-b,
       b,
       d-e,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
 ORDER BY 2,7,6
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       abs(b-c),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
-- !query schema
struct<b:int,abs((b - c)):int,d:int>
-- !query output
194	1	192


-- !query
SELECT b,
       abs(b-c),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
 ORDER BY 1,2,3
-- !query schema
struct<b:int,abs((b - c)):int,d:int>
-- !query output
194	1	192


-- !query
SELECT b,
       abs(b-c),
       d
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<b:int,abs((b - c)):int,d:int>
-- !query output
194	1	192


-- !query
SELECT b,
       abs(b-c),
       d
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
 ORDER BY 2,3,1
-- !query schema
struct<b:int,abs((b - c)):int,d:int>
-- !query output
194	1	192


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
   AND b>c
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       e
  FROM t1
 WHERE b>c
   AND c>d
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       e
  FROM t1
 WHERE b>c
   AND c>d
   AND c BETWEEN b-2 AND d+2
 ORDER BY 3,1,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       e
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       e
  FROM t1
 WHERE c>d
   AND c BETWEEN b-2 AND d+2
   AND b>c
 ORDER BY 2,1,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       e
  FROM t1
 WHERE c>d
   AND b>c
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d,
       e
  FROM t1
 WHERE c>d
   AND b>c
   AND c BETWEEN b-2 AND d+2
 ORDER BY 1,2,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       a+b*2+c*3+d*4+e*5,
       c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       a+b*2+c*3+d*4+e*5,
       c
  FROM t1
 ORDER BY 5,3
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
    OR a>b
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3
3
3
3
3
3
4
NULL
NULL
NULL


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
    OR a>b
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
NULL
NULL
NULL
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3
3
3
3
3
3
4


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE a>b
    OR (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3
3
3
3
3
3
4
NULL
NULL
NULL


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE a>b
    OR (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
NULL
NULL
NULL
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3
3
3
3
3
3
4


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE a>b
    OR d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3
3
3
3
3
3
4
NULL
NULL
NULL


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE a>b
    OR d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
 ORDER BY 1
-- !query schema
struct<abs((b - c)):int>
-- !query output
NULL
NULL
NULL
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
3
3
3
3
3
3
3
3
4


-- !query
SELECT d,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
 ORDER BY 4,1,3,5,2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
   AND (e>c OR e<d)
 ORDER BY 2,1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet
