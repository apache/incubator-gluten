-- Automatically generated by GlutenSqlLogicTestSuite
-- Number of queries: 1036


-- !query
DROP DATABASE IF EXISTS mydb1 CASCADE
-- !query schema
struct<>
-- !query output



-- !query
CREATE DATABASE mydb1
-- !query schema
struct<>
-- !query output



-- !query
USE mydb1
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t1
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t2
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t1(a int, b int, c int, d int, e int) USING PARQUET
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(NULL,102,NULL,101,104)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(107,106,108,109,105)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(110,114,112,NULL,113)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(116,119,117,115,NULL)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(123,122,124,NULL,121)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(127,128,129,126,125)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(132,134,131,133,130)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(138,136,139,135,137)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(144,141,140,142,143)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(145,149,146,NULL,147)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(151,150,153,NULL,NULL)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(155,157,159,NULL,158)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(161,160,163,164,162)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(167,NULL,168,165,166)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(171,170,172,173,174)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(177,176,179,NULL,175)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(181,180,182,183,184)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(187,188,186,189,185)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(190,194,193,192,191)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(199,197,198,196,195)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(NULL,202,203,201,204)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(208,NULL,NULL,206,207)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(214,210,213,212,211)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(218,215,216,217,219)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(223,221,222,220,224)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(226,227,228,229,225)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(234,231,232,230,233)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(237,236,239,NULL,238)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(NULL,244,240,243,NULL)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES(246,248,247,249,245)
-- !query schema
struct<>
-- !query output



-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1020
1060
1140
1190
1220
1280
1340
1360
1410
1490
1500
1570
1600
1700
354
362
374
380
398
428
436
446
452
468
474
492
NULL
NULL
NULL
NULL


-- !query
SELECT e,
       abs(a),
       b,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
-- !query schema
struct<e:int,abs(a):int,b:int,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
105	107	106	2	333	319	1079
121	123	122	2	333	367	NULL
137	138	136	3	333	410	1367
143	144	141	1	444	426	1414
162	161	160	3	333	481	1626
174	171	170	2	333	511	1719
175	177	176	3	333	529	NULL
184	181	180	2	333	541	1819
195	199	197	1	333	593	1971
211	214	210	3	444	634	2121
219	218	215	1	444	648	2164
224	223	221	1	333	665	2211
233	234	231	1	444	696	2312
238	237	236	3	333	709	NULL
NULL	151	150	3	333	451	NULL


-- !query
SELECT abs(b-c),
       b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs((b - c)):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1	128	1274
1	227	2280
2	106	1079
2	122	NULL
2	170	1719
2	180	1819
2	188	1877
3	150	NULL
3	160	1626
3	176	NULL
3	236	NULL


-- !query
SELECT a,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       d
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c)
  FROM t1
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
2
2
3
3
3
3
3
3
3
3
4
NULL
NULL
NULL


-- !query
SELECT a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b IS NOT NULL
   AND a>b
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
367
451
481
511
529
541
709


-- !query
SELECT c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND coalesce(a,b,c,d,e)<>0
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       b-c
  FROM t1
 WHERE b>c
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       b,
       a,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b IS NOT NULL
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a-b,
       d-e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c>d
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1604	107	109	333
1899	127	126	222


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR b>c
    OR b IS NOT NULL
-- !query schema
struct<(d - e):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	-1	172.0
-1	-1	182.0
-1	-2	142.0
-1	3	NULL
-1	NULL	NULL
-2	-1	217.0
-2	4	137.0
-3	2	232.0
-3	2	NULL
-3	NULL	NULL
-4	2	222.0
1	1	192.0
1	1	212.0
1	2	197.0
1	3	127.0
2	-1	162.0
3	-2	132.0
4	-1	107.0
4	-1	227.0
4	-2	247.0
4	-3	187.0
NULL	-3	NULL
NULL	2	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int>
-- !query output
1020	102	NULL	444	-3	555	NULL
1060	106	1079	333	4	222	1
1140	114	NULL	111	NULL	555	-4
1190	119	1165	222	NULL	222	-3
1220	122	NULL	333	NULL	222	1
1280	128	1274	222	1	111	-1
1340	134	1325	222	3	333	-2
1360	136	1367	333	-2	222	2
1410	141	1414	444	-1	555	3
1490	149	NULL	111	NULL	222	-4
1500	150	NULL	333	NULL	555	1
1570	157	NULL	222	NULL	555	-2
1600	160	1626	333	2	444	1
1700	170	1719	333	-1	222	1
354	176	NULL	333	NULL	555	1
362	180	1819	333	-1	222	1
374	188	1877	222	4	111	-1
380	194	1925	111	1	444	-4
398	197	1971	333	1	555	2
428	210	2121	444	1	555	4
436	215	2164	444	-2	444	3
446	221	2211	333	-4	444	2
452	227	2280	222	4	111	-1
468	231	2312	444	-3	555	3
474	236	NULL	333	NULL	444	1
492	248	2479	222	4	222	-2
NULL	202	NULL	444	-3	555	NULL
NULL	244	NULL	444	NULL	555	NULL
NULL	NULL	NULL	444	-1	222	NULL
NULL	NULL	NULL	444	-1	555	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR b>c
    OR a>b
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int>
-- !query output
1604	222	105
1899	111	125
1975	333	130
2052	222	137
2129	555	143
2436	444	162
2589	222	174
2739	222	184
2802	111	185
2880	444	191
2946	555	195
3176	555	211
3259	444	219
3331	444	224
3405	111	225
3477	555	233
3704	222	245
NULL	222	121
NULL	222	147
NULL	222	166
NULL	222	NULL
NULL	444	238
NULL	555	104
NULL	555	113
NULL	555	158
NULL	555	175
NULL	555	204
NULL	555	207
NULL	555	NULL
NULL	555	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       e,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c>d
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,e:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1157	2880	191	-4	380
1187	2946	195	2	398
1273	3176	211	4	428
1331	3331	224	2	446
1392	3477	233	3	468
705	NULL	NULL	-3	1190
770	1899	125	-1	1280
827	2052	137	2	1360
NULL	NULL	166	NULL	NULL
NULL	NULL	204	NULL	NULL


-- !query
SELECT e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       d,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,d:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
104	1020	-3	101	NULL
105	1060	4	109	1079
113	1140	NULL	NULL	NULL
121	1220	NULL	NULL	NULL
125	1280	1	126	1274
130	1340	3	133	1325
137	1360	-2	135	1367
143	1410	-1	142	1414
147	1490	NULL	NULL	NULL
158	1570	NULL	NULL	NULL
162	1600	2	164	1626
166	NULL	-1	165	NULL
174	1700	-1	173	1719
175	354	NULL	NULL	NULL
184	362	-1	183	1819
185	374	4	189	1877
191	380	1	192	1925
195	398	1	196	1971
204	NULL	-3	201	NULL
207	NULL	-1	206	NULL
211	428	1	212	2121
219	436	-2	217	2164
224	446	-4	220	2211
225	452	4	229	2280
233	468	-3	230	2312
238	474	NULL	NULL	NULL
245	492	4	249	2479
NULL	1190	NULL	115	1165
NULL	1500	NULL	NULL	NULL
NULL	NULL	NULL	243	NULL


-- !query
SELECT e,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       abs(b-c),
       c,
       d-e,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>c OR e<d)
    OR (e>a AND e<b)
    OR a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a IS NULL
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       c-d,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b IS NOT NULL
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       b,
       abs(a),
       a
  FROM t1
 WHERE b>c
   AND coalesce(a,b,c,d,e)<>0
   AND (e>a AND e<b)
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs(a):int,a:int>
-- !query output
-4	2880	194	190	190
-4	NULL	114	110	110
-4	NULL	149	145	145


-- !query
SELECT abs(b-c),
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       b-c,
       abs(a),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       d-e
  FROM t1
 WHERE b IS NOT NULL
   AND e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(a - b):int,(b - c):int,abs(a):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,(d - e):int>
-- !query output
1	-2	107	2	222	106	4


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1079	1060
1274	1280


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
111	1274
111	1877
111	2280
222	1079
222	1165
222	1367
222	1719
222	1819
222	2479
222	NULL
222	NULL
222	NULL
333	1325
444	1626
444	1925
444	2164
444	2211
444	NULL
555	1414
555	1971
555	2121
555	2312
555	NULL
555	NULL
555	NULL
555	NULL
555	NULL
555	NULL
555	NULL
555	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       a,
       d-e,
       d
  FROM t1
 WHERE a IS NULL
   AND d>e
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int,a:int,(d - e):int,d:int>
-- !query output



-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       e,
       a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,e:int,a:int>
-- !query output
107.0	-1	105	107
127.0	3	125	127
162.0	-1	162	161
172.0	-1	174	171
182.0	-1	184	181
187.0	-3	185	187
192.0	1	191	190
197.0	2	195	199
212.0	1	211	214
217.0	-1	219	218
222.0	2	224	223
227.0	-1	225	226
232.0	2	233	234
247.0	-2	245	246
NULL	-3	NULL	NULL
NULL	2	204	NULL
NULL	3	166	167
NULL	NULL	104	NULL
NULL	NULL	121	123
NULL	NULL	175	177
NULL	NULL	207	208
NULL	NULL	238	237
NULL	NULL	NULL	151


-- !query
SELECT (a+b+c+d+e)/5,
       d
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int>
-- !query output
107.0	109
127.0	126
132.0	133
137.0	135
142.0	142
162.0	164
172.0	173
182.0	183
187.0	189
192.0	192
197.0	196
212.0	212
217.0	217
222.0	220
227.0	229
232.0	230
247.0	249
NULL	101
NULL	115
NULL	201
NULL	243
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3,
       c-d
  FROM t1
 WHERE b IS NOT NULL
    OR coalesce(a,b,c,d,e)<>0
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
1027	-1
1066	NULL
1087	-1
1121	-3
1157	1
1187	2
1273	1
1296	-1
1331	2
1364	-1
1392	2
1426	NULL
1483	-2
643	-1
674	NULL
705	2
739	NULL
770	3
793	-2
827	4
846	-2
881	NULL
910	NULL
946	NULL
970	-1
NULL	-3
NULL	2
NULL	3
NULL	NULL
NULL	NULL


-- !query
SELECT e,
       a+b*2,
       c,
       b-c
  FROM t1
 WHERE a>b
-- !query schema
struct<e:int,(a + (b * 2)):int,c:int,(b - c):int>
-- !query output
105	319	108	-2
121	367	124	-2
137	410	139	-3
143	426	140	1
162	481	163	-3
174	511	172	-2
175	529	179	-3
184	541	182	-2
195	593	198	-1
211	634	213	-3
219	648	216	-1
224	665	222	-1
233	696	232	-1
238	709	239	-3
NULL	451	153	-3


-- !query
SELECT c,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(a),
       d-e,
       b-c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       a+b*2+c*3+d*4+e*5,
       a-b,
       a+b*2,
       c
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a - b):int,(a + (b * 2)):int,c:int>
-- !query output
1020	NULL	NULL	NULL	NULL	NULL
1060	107	1604	1	319	108
1140	110	NULL	-4	338	112
1190	116	NULL	-3	354	117
1220	123	NULL	1	367	124
1280	127	1899	-1	383	129
1340	132	1975	-2	400	131
1360	138	2052	2	410	139
1410	144	2129	3	426	140
1490	145	NULL	-4	443	146
1500	151	NULL	1	451	153
1570	155	NULL	-2	469	159
1600	161	2436	1	481	163
1700	171	2589	1	511	172
354	177	NULL	1	529	179
362	181	2739	1	541	182
374	187	2802	-1	563	186
380	190	2880	-4	578	193
398	199	2946	2	593	198
428	214	3176	4	634	213
436	218	3259	3	648	216
446	223	3331	2	665	222
452	226	3405	-1	680	228
468	234	3477	3	696	232
474	237	NULL	1	709	239
492	246	3704	-2	742	247
NULL	167	NULL	NULL	NULL	168
NULL	208	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	203
NULL	NULL	NULL	NULL	NULL	240


-- !query
SELECT c-d,
       b-c,
       a+b*2+c*3,
       abs(a),
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(c - d):int,(b - c):int,((a + (b * 2)) + (c * 3)):int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	-1	1296	218	2164
-1	-1	1364	226	2280
-1	-2	1027	171	1719
-1	-2	1087	181	1819
-1	-2	643	107	1079
-1	-3	970	161	1626
-2	1	1483	246	2479
-2	1	846	144	1414
-2	3	793	132	1325
-3	2	1121	187	1877
-3	4	NULL	NULL	NULL
1	-3	1273	214	2121
1	1	1157	190	1925
2	-1	1187	199	1971
2	-1	1331	223	2211
2	-1	1392	234	2312
2	-1	NULL	NULL	NULL
2	2	705	116	1165
3	-1	770	127	1274
3	NULL	NULL	167	NULL
4	-3	827	138	1367
NULL	-2	739	123	NULL
NULL	-2	946	155	NULL
NULL	-3	1066	177	NULL
NULL	-3	1426	237	NULL
NULL	-3	910	151	NULL
NULL	2	674	110	NULL
NULL	3	881	145	NULL
NULL	NULL	NULL	208	NULL
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT d
  FROM t1
 WHERE c>d
   AND (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
-- !query schema
struct<d:int>
-- !query output
126
196
201
220
230


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
111
222
222
222
333
444
555
555
555


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
222
222
333
444
444
444
444
444
555
555
555
555
555
555
555
555
555
555
555
555


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	NULL	NULL	NULL	555
4	NULL	NULL	NULL	555
NULL	NULL	1020	NULL	555


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       c-d
  FROM t1
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(c - d):int>
-- !query output
108	1604	-1
112	NULL	NULL
117	NULL	2
124	NULL	NULL
129	1899	3
131	1975	-2
139	2052	4
140	2129	-2
146	NULL	NULL
153	NULL	NULL
159	NULL	NULL
163	2436	-1
168	NULL	3
172	2589	-1
179	NULL	NULL
182	2739	-1
186	2802	-3
193	2880	1
198	2946	2
203	NULL	2
213	3176	1
216	3259	-1
222	3331	2
228	3405	-1
232	3477	2
239	NULL	NULL
240	NULL	-3
247	3704	-2
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT a+b*2,
       d,
       abs(b-c),
       e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d>e
-- !query schema
struct<(a + (b * 2)):int,d:int,abs((b - c)):int,e:int>
-- !query output
383	126	1	125
400	133	3	130
563	189	2	185
593	196	1	195
742	249	1	245


-- !query
SELECT c-d
  FROM t1
 WHERE c>d
-- !query schema
struct<(c - d):int>
-- !query output
1
1
2
2
2
2
2
3
3
4


-- !query
SELECT a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c>d
    OR (e>c OR e<d)
-- !query schema
struct<(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-1	1280
-1	374
-1	452
-2	1340
-2	492
-3	1190
-4	1140
-4	1490
-4	380
1	1060
1	1600
1	1700
1	362
2	1360
2	398
2	446
3	1410
3	436
3	468
4	428
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
555
555
555


-- !query
SELECT a+b*2,
       d-e,
       a-b,
       abs(a),
       (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(a + (b * 2)):int,(d - e):int,(a - b):int,abs(a):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
354	NULL	-3	116	NULL	117
426	-1	3	144	142.0	140
563	4	-1	187	187.0	186
593	1	2	199	197.0	198
665	-4	2	223	222.0	222
696	-3	3	234	232.0	232
742	4	-2	246	247.0	247
NULL	-3	NULL	NULL	NULL	203


-- !query
SELECT a+b*2+c*3,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
111
111
111
222
222
222
222
222
333
444
444
444
444
555
555
555
555
555
555


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       c
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<(b - c):int,c:int>
-- !query output
1	193
2	112
3	146


-- !query
SELECT d-e,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       a,
       b-c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,a:int,(b - c):int>
-- !query output
-1	2129	426	144	1
-1	2589	511	171	-2
-1	2739	541	181	-2
-2	3259	648	218	-1
-3	3477	696	234	-1
-3	NULL	NULL	NULL	-1
-4	3331	665	223	-1
1	2880	578	190	1
1	2946	593	199	-1
1	3176	634	214	-3
2	2436	481	161	-3
4	1604	319	107	-2
4	2802	563	187	2
4	3405	680	226	-1
4	3704	742	246	1
NULL	NULL	354	116	2


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       a+b*2+c*3,
       (a+b+c+d+e)/5,
       d-e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int,((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int>
-- !query output
111	383	770	127.0	1
111	563	1121	187.0	4
111	680	1364	227.0	4
222	319	643	107.0	4
222	354	705	NULL	NULL
222	367	739	NULL	NULL
222	443	881	NULL	NULL
222	511	1027	172.0	-1
222	541	1087	182.0	-1
222	742	1483	247.0	4
333	400	793	132.0	3
444	481	970	162.0	2
444	578	1157	192.0	1
444	709	1426	NULL	NULL
555	338	674	NULL	NULL
555	426	846	142.0	-1
555	451	910	NULL	NULL
555	529	1066	NULL	NULL
555	NULL	NULL	NULL	NULL


-- !query
SELECT c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-2
-2
-3
-3
1
1
2
2
2
2
2
3
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
 WHERE d>e
    OR a>b
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e
  FROM t1
-- !query schema
struct<e:int>
-- !query output
104
105
113
121
125
130
137
143
147
158
162
166
174
175
184
185
191
195
204
207
211
219
224
225
233
238
245
NULL
NULL
NULL


-- !query
SELECT a+b*2
  FROM t1
 WHERE c>d
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
354
383
410
578
593
634
665
696
NULL
NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a+b*2,
       d-e,
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
   AND b IS NOT NULL
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(c - d):int,(a + (b * 2)):int,(d - e):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-3	563	4	1877


-- !query
SELECT a-b,
       abs(b-c),
       abs(a)
  FROM t1
 WHERE a>b
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
-- !query schema
struct<(a - b):int,abs((b - c)):int,abs(a):int>
-- !query output
-1	1	127
-1	1	226
-1	2	187
-2	1	246
-2	2	155
-2	3	132
-3	2	116
-4	1	190
-4	2	110
-4	3	145
1	2	107
1	2	123
1	2	171
1	2	181
1	3	151
1	3	161
1	3	177
1	3	237
2	1	199
2	1	223
2	3	138
3	1	144
3	1	218
3	1	234
4	3	214
NULL	1	NULL
NULL	4	NULL


-- !query
SELECT d-e,
       abs(a)
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(d - e):int,abs(a):int>
-- !query output
-1	144
-1	171
-1	181
-2	218
-3	234
-3	NULL
-4	223
1	127
1	190
1	199
1	214
2	161
3	132
4	107
4	187
4	226
4	246
NULL	110
NULL	145


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       b-c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b
  FROM t1
 WHERE a>b
   AND b>c
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       a+b*2+c*3,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,(a + (b * 2)):int>
-- !query output
222	-2	319
222	-2	511
222	-2	541
444	-1	648
444	-1	665
444	-3	481
555	-1	593
555	-1	696
555	-3	634
555	1	426


-- !query
SELECT a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       d-e
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1060
1220
1360
1410
1500
1600
1700
354
362
398
428
436
446
468
474


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(b-c),
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs((b - c)):int,(a + (b * 2)):int>
-- !query output
1604	2	319
1899	1	383
2436	3	481
2589	2	511
2739	2	541
2802	2	563
3405	1	680
NULL	2	367
NULL	3	451
NULL	3	529
NULL	3	709


-- !query
SELECT d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c)
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int>
-- !query output
-3	555	-1	204	444	1
-3	555	NULL	104	444	NULL
NULL	555	4	NULL	444	4


-- !query
SELECT d,
       c-d,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>a AND e<b)
    OR a IS NULL
-- !query schema
struct<d:int,(c - d):int,e:int>
-- !query output
101	NULL	104
109	-1	105
164	-1	162
165	3	166
173	-1	174
183	-1	184
189	-3	185
192	1	191
196	2	195
201	2	204
206	NULL	207
212	1	211
217	-1	219
220	2	224
229	-1	225
230	2	233
243	-3	NULL
249	-2	245
NULL	NULL	113
NULL	NULL	147


-- !query
SELECT a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int>
-- !query output
1079	222	-2
1165	222	2
1274	111	-1
1325	333	3
1367	222	-3
1414	555	1
1626	444	-3
1719	222	-2
1819	222	-2
1877	111	2
1925	444	1
1971	555	-1
2121	555	-3
2164	444	-1
2211	444	-1
2280	111	-1
2312	555	-1
2479	222	1
NULL	222	-2
NULL	222	3
NULL	222	NULL
NULL	444	-3
NULL	555	-1
NULL	555	-2
NULL	555	-3
NULL	555	-3
NULL	555	2
NULL	555	4
NULL	555	NULL
NULL	555	NULL


-- !query
SELECT b,
       d,
       abs(a),
       abs(b-c),
       d-e
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
    OR b IS NOT NULL
-- !query schema
struct<b:int,d:int,abs(a):int,abs((b - c)):int,(d - e):int>
-- !query output
102	101	NULL	NULL	-3
106	109	107	2	4
114	NULL	110	2	NULL
119	115	116	2	NULL
122	NULL	123	2	NULL
128	126	127	1	1
134	133	132	3	3
136	135	138	3	-2
141	142	144	1	-1
149	NULL	145	3	NULL
150	NULL	151	3	NULL
157	NULL	155	2	NULL
160	164	161	3	2
170	173	171	2	-1
176	NULL	177	3	NULL
180	183	181	2	-1
188	189	187	2	4
194	192	190	1	1
197	196	199	1	1
202	201	NULL	1	-3
210	212	214	3	1
215	217	218	1	-2
221	220	223	1	-4
227	229	226	1	4
231	230	234	1	-3
236	NULL	237	3	NULL
244	243	NULL	4	NULL
248	249	246	1	4


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       c
  FROM t1
 WHERE b>c
   AND a>b
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,c:int>
-- !query output



-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       abs(b-c)
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<(d - e):int,abs((b - c)):int>
-- !query output
-1	1
-1	2
-1	2
-2	1
-2	3
-3	1
-3	1
-3	NULL
-4	1
1	1
1	1
1	1
1	3
2	3
3	3
4	1
4	1
4	2
4	2
NULL	2
NULL	2
NULL	2
NULL	2
NULL	3
NULL	3
NULL	3
NULL	3
NULL	4


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	127	1280
111	187	374
111	226	452
222	107	1060
222	145	1490
222	171	1700
222	181	362
222	246	492
333	132	1340
444	161	1600
444	190	380
444	218	436
444	223	446
555	110	1140
555	144	1410
555	199	398
555	214	428
555	234	468
555	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       d,
       b-c,
       b,
       a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int,d:int,(b - c):int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
111	127	126	-1	128	1274	770
111	187	189	2	188	1877	1121
111	226	229	-1	227	2280	1364
222	107	109	-2	106	1079	643
222	116	115	2	119	1165	705
222	123	NULL	-2	122	NULL	739
222	138	135	-3	136	1367	827
222	145	NULL	3	149	NULL	881
222	167	165	NULL	NULL	NULL	NULL
222	171	173	-2	170	1719	1027
222	181	183	-2	180	1819	1087
222	246	249	1	248	2479	1483
333	132	133	3	134	1325	793
444	161	164	-3	160	1626	970
444	190	192	1	194	1925	1157
444	218	217	-1	215	2164	1296
444	223	220	-1	221	2211	1331
444	237	NULL	-3	236	NULL	1426
555	110	NULL	2	114	NULL	674
555	144	142	1	141	1414	846
555	151	NULL	-3	150	NULL	910
555	155	NULL	-2	157	NULL	946
555	177	NULL	-3	176	NULL	1066
555	199	196	-1	197	1971	1187
555	208	206	NULL	NULL	NULL	NULL
555	214	212	-3	210	2121	1273
555	234	230	-1	231	2312	1392
555	NULL	101	NULL	102	NULL	NULL
555	NULL	201	-1	202	NULL	NULL
555	NULL	243	4	244	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
333
333
333
333
333
333
333
333


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs((b - c)):int>
-- !query output
1604	1060	2
2129	1410	1
2436	1600	3
2589	1700	2
2739	362	2
2802	374	2
2880	380	1
2946	398	1
3176	428	3
3259	436	1
3331	446	1
3405	452	1
3477	468	1
3704	492	1
NULL	1020	NULL
NULL	1190	2
NULL	NULL	1
NULL	NULL	4
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a>b
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
108	1060
124	1220
129	1280
139	1360
140	1410
153	1500
163	1600
172	1700
179	354
182	362
198	398
213	428
216	436
222	446
232	468
239	474


-- !query
SELECT b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	222	1274
-1	222	2280
-2	333	1079
-2	333	1719
-2	333	1819
-2	333	NULL
-3	333	1626
-3	333	NULL
-3	333	NULL
-3	333	NULL
2	222	1877


-- !query
SELECT abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       d,
       e,
       c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
   AND (c<=d-2 OR c>=d+2)
   AND a>b
-- !query schema
struct<abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int,d:int,e:int,c:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1	333	197	196	195	198	197.0


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       d-e,
       (a+b+c+d+e)/5,
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b IS NOT NULL
   AND c>d
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int>
-- !query output
111	125	1	127.0	-1
222	137	-2	137.0	2
222	NULL	NULL	NULL	-3
444	191	1	192.0	-4
444	224	-4	222.0	2
555	195	1	197.0	2
555	204	-3	NULL	NULL
555	211	1	212.0	4
555	233	-3	232.0	3


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       d,
       c-d,
       a
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,d:int,(c - d):int,a:int>
-- !query output
111	1121	374	185	189	-3	187
111	1364	452	225	229	-1	226
111	770	1280	125	126	3	127
222	1027	1700	174	173	-1	171
222	1087	362	184	183	-1	181
222	1483	492	245	249	-2	246
222	643	1060	105	109	-1	107
222	705	1190	NULL	115	2	116
222	739	1220	121	NULL	NULL	123
222	827	1360	137	135	4	138
222	881	1490	147	NULL	NULL	145
333	793	1340	130	133	-2	132
444	1157	380	191	192	1	190
444	1296	436	219	217	-1	218
444	1331	446	224	220	2	223
444	1426	474	238	NULL	NULL	237
444	970	1600	162	164	-1	161
555	1066	354	175	NULL	NULL	177
555	1187	398	195	196	2	199
555	1273	428	211	212	1	214
555	1392	468	233	230	2	234
555	674	1140	113	NULL	NULL	110
555	846	1410	143	142	-2	144
555	910	1500	NULL	NULL	NULL	151
555	946	1570	158	NULL	NULL	155
555	NULL	NULL	204	201	2	NULL
555	NULL	NULL	NULL	243	-3	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND coalesce(a,b,c,d,e)<>0
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-2
-3
-3
-4
1
1
1
2
4
4
4
4
NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       b-c,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       abs(b-c)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>a AND e<b)
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       d-e,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,(d - e):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
111	128	1	1274
111	188	4	1877
111	227	4	2280
222	106	4	1079
222	119	NULL	1165
222	122	NULL	NULL
222	136	-2	1367
222	149	NULL	NULL
222	170	-1	1719
222	180	-1	1819
222	248	4	2479
222	NULL	-1	NULL
333	134	3	1325
444	160	2	1626
444	194	1	1925
444	215	-2	2164
444	221	-4	2211
444	236	NULL	NULL
555	102	-3	NULL
555	114	NULL	NULL
555	141	-1	1414
555	150	NULL	NULL
555	157	NULL	NULL
555	176	NULL	NULL
555	197	1	1971
555	202	-3	NULL
555	210	1	2121
555	231	-3	2312
555	244	NULL	NULL
555	NULL	-1	NULL


-- !query
SELECT d,
       b-c,
       abs(b-c),
       b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<d:int,(b - c):int,abs((b - c)):int,b:int>
-- !query output
109	-2	2	106
115	2	2	119
142	1	1	141
164	-3	3	160
173	-2	2	170
183	-2	2	180
189	2	2	188
192	1	1	194
196	-1	1	197
201	-1	1	202
212	-3	3	210
217	-1	1	215
220	-1	1	221
229	-1	1	227
230	-1	1	231
249	1	1	248


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c
  FROM t1
 WHERE a IS NULL
   AND (e>c OR e<d)
-- !query schema
struct<(b - c):int>
-- !query output
-1


-- !query
SELECT abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       c-d,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<d:int>
-- !query output
109
126
133
142
164
173
183
189
192
196
201
212
217
220
229
230
249
NULL
NULL


-- !query
SELECT c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND e+d BETWEEN a+b-10 AND c+130
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       d,
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR a>b
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,d:int,c:int>
-- !query output
1027	1700	511	173	172
1066	354	529	NULL	179
1087	362	541	183	182
1121	374	563	189	186
1157	380	578	192	193
1187	398	593	196	198
1273	428	634	212	213
1296	436	648	217	216
1331	446	665	220	222
1364	452	680	229	228
1392	468	696	230	232
1426	474	709	NULL	239
1483	492	742	249	247
643	1060	319	109	108
705	1190	354	115	117
739	1220	367	NULL	124
770	1280	383	126	129
827	1360	410	135	139
846	1410	426	142	140
910	1500	451	NULL	153
970	1600	481	164	163
NULL	NULL	NULL	201	203


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       d,
       a-b,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       abs(a)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       a-b,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       c,
       e,
       d
  FROM t1
 WHERE a>b
    OR (e>c OR e<d)
    OR b IS NOT NULL
-- !query schema
struct<abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,c:int,e:int,d:int>
-- !query output
1	1274	222	770	129	125	126
1	1414	444	846	140	143	142
1	1925	111	1157	193	191	192
1	1971	333	1187	198	195	196
1	2164	444	1296	216	219	217
1	2211	333	1331	222	224	220
1	2280	222	1364	228	225	229
1	2312	444	1392	232	233	230
1	2479	222	1483	247	245	249
1	NULL	444	NULL	203	204	201
2	1079	333	643	108	105	109
2	1165	222	705	117	NULL	115
2	1719	333	1027	172	174	173
2	1819	333	1087	182	184	183
2	1877	222	1121	186	185	189
2	NULL	111	674	112	113	NULL
2	NULL	222	946	159	158	NULL
2	NULL	333	739	124	121	NULL
3	1325	222	793	131	130	133
3	1367	333	827	139	137	135
3	1626	333	970	163	162	164
3	2121	444	1273	213	211	212
3	NULL	111	881	146	147	NULL
3	NULL	333	1066	179	175	NULL
3	NULL	333	1426	239	238	NULL
3	NULL	333	910	153	NULL	NULL
4	NULL	444	NULL	240	NULL	243
NULL	NULL	444	NULL	NULL	104	101


-- !query
SELECT a+b*2,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
319	1079
338	NULL
354	1165
367	NULL
383	1274
400	1325
426	1414
443	NULL
451	NULL
481	1626
511	1719
529	NULL
541	1819
563	1877
578	1925
593	1971
634	2121
648	2164
665	2211
680	2280
696	2312
709	NULL
742	2479
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       a+b*2,
       abs(a),
       c-d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,(a + (b * 2)):int,abs(a):int,(c - d):int>
-- !query output
111	191	578	190	1
222	185	563	187	-3
222	225	680	226	-1
222	245	742	246	-2
222	NULL	354	116	2
333	105	319	107	-1
333	162	481	161	-1
333	174	511	171	-1
333	184	541	181	-1
333	195	593	199	2
333	224	665	223	2
444	143	426	144	-2
444	204	NULL	NULL	2
444	211	634	214	1
444	219	648	218	-1
444	233	696	234	2


-- !query
SELECT b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c>d
   AND a>b
-- !query schema
struct<(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int>
-- !query output
-1	398	1
-1	446	-4
-1	468	-3
-3	1360	-2
-3	428	1


-- !query
SELECT d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<a:int>
-- !query output
107
110
127
132
144
145
161
171
181
187
190
199
214
218
223
226
234
246
NULL


-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int>
-- !query output
1027	2	222	1700	171
1066	3	555	354	177
1087	2	222	362	181
1121	2	111	374	187
1157	1	444	380	190
1187	1	555	398	199
1273	3	555	428	214
1296	1	444	436	218
1331	1	444	446	223
1364	1	111	452	226
1392	1	555	468	234
1426	3	444	474	237
1483	1	222	492	246
643	2	222	1060	107
674	2	555	1140	110
705	2	222	1190	116
739	2	222	1220	123
770	1	111	1280	127
793	3	333	1340	132
827	3	222	1360	138
846	1	555	1410	144
881	3	222	1490	145
910	3	555	1500	151
946	2	555	1570	155
970	3	444	1600	161
NULL	1	555	NULL	NULL
NULL	4	555	NULL	NULL
NULL	NULL	555	1020	NULL


-- !query
SELECT a+b*2+c*3,
       d-e,
       (a+b+c+d+e)/5
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND (e>c OR e<d)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
643	4	107.0
770	1	127.0


-- !query
SELECT abs(a),
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR a>b
    OR b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE b IS NOT NULL
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
2


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2,
       d,
       a+b*2+c*3+d*4,
       a-b,
       b-c,
       a
  FROM t1
 WHERE b>c
    OR a IS NULL
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,d:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,(b - c):int,a:int>
-- !query output
1975	400	133	1325	-2	3	132
2129	426	142	1414	3	1	144
2802	563	189	1877	-1	2	187
2880	578	192	1925	-4	1	190
3704	742	249	2479	-2	1	246
NULL	338	NULL	NULL	-4	2	110
NULL	354	115	1165	-3	2	116
NULL	443	NULL	NULL	-4	3	145
NULL	NULL	101	NULL	NULL	NULL	NULL
NULL	NULL	201	NULL	NULL	-1	NULL
NULL	NULL	243	NULL	NULL	4	NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE a>b
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1066
1087
1187
1273
1296
1331
1392
1426
643
739
827
846
910
970


-- !query
SELECT a+b*2,
       a,
       b,
       c,
       abs(b-c),
       abs(a),
       d
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,a:int,b:int,c:int,abs((b - c)):int,abs(a):int,d:int>
-- !query output
319	107	106	108	2	107	109
338	110	114	112	2	110	NULL
354	116	119	117	2	116	115
367	123	122	124	2	123	NULL
383	127	128	129	1	127	126
400	132	134	131	3	132	133
410	138	136	139	3	138	135
426	144	141	140	1	144	142
443	145	149	146	3	145	NULL
451	151	150	153	3	151	NULL
469	155	157	159	2	155	NULL
481	161	160	163	3	161	164
511	171	170	172	2	171	173
529	177	176	179	3	177	NULL
541	181	180	182	2	181	183
563	187	188	186	2	187	189
578	190	194	193	1	190	192
593	199	197	198	1	199	196
634	214	210	213	3	214	212
648	218	215	216	1	218	217
665	223	221	222	1	223	220
680	226	227	228	1	226	229
696	234	231	232	1	234	230
709	237	236	239	3	237	NULL
742	246	248	247	1	246	249
NULL	167	NULL	168	NULL	167	165
NULL	208	NULL	NULL	NULL	208	206
NULL	NULL	102	NULL	NULL	NULL	101
NULL	NULL	202	203	1	NULL	201
NULL	NULL	244	240	4	NULL	243


-- !query
SELECT b-c,
       abs(a)
  FROM t1
 WHERE b IS NOT NULL
    OR e+d BETWEEN a+b-10 AND c+130
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(b - c):int,abs(a):int>
-- !query output
-1	127
-1	199
-1	218
-1	223
-1	226
-1	234
-1	NULL
-2	107
-2	123
-2	155
-2	171
-2	181
-3	138
-3	151
-3	161
-3	177
-3	214
-3	237
1	144
1	190
1	246
2	110
2	116
2	187
3	132
3	145
4	NULL
NULL	NULL


-- !query
SELECT c-d,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
   AND a>b
-- !query schema
struct<(c - d):int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int>
-- !query output
-1	-2	222	108
-1	-2	222	172
-1	-2	222	182
-1	-3	444	163


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       abs(b-c),
       d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       e,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<abs(a):int,d:int,e:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,a:int>
-- !query output
107	109	105	1079	222	-2	107
116	115	NULL	1165	222	2	116
144	142	143	1414	555	1	144
161	164	162	1626	444	-3	161
171	173	174	1719	222	-2	171
181	183	184	1819	222	-2	181
187	189	185	1877	111	2	187
190	192	191	1925	444	1	190
199	196	195	1971	555	-1	199
214	212	211	2121	555	-3	214
218	217	219	2164	444	-1	218
223	220	224	2211	444	-1	223
226	229	225	2280	111	-1	226
234	230	233	2312	555	-1	234
246	249	245	2479	222	1	246
NULL	201	204	NULL	555	-1	NULL


-- !query
SELECT d-e,
       abs(b-c),
       a+b*2+c*3,
       a+b*2,
       a-b
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(d - e):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,(a - b):int>
-- !query output
-1	1	846	426	3
-1	2	1027	511	1
-1	2	1087	541	1
-1	NULL	NULL	NULL	NULL
-1	NULL	NULL	NULL	NULL
-2	1	1296	648	3
-2	3	827	410	2
-3	1	1392	696	3
-3	1	NULL	NULL	NULL
-3	NULL	NULL	NULL	NULL
-4	1	1331	665	2
1	1	1157	578	-4
1	1	1187	593	2
1	1	770	383	-1
1	3	1273	634	4
2	3	970	481	1
3	3	793	400	-2
4	1	1364	680	-1
4	1	1483	742	-2
4	2	1121	563	-1
4	2	643	319	1
NULL	2	674	338	-4
NULL	2	705	354	-3
NULL	2	739	367	1
NULL	2	946	469	-2
NULL	3	1066	529	1
NULL	3	1426	709	1
NULL	3	881	443	-4
NULL	3	910	451	1
NULL	4	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       d-e
  FROM t1
 WHERE a>b
   AND (e>c OR e<d)
   AND a IS NULL
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(d - e):int>
-- !query output



-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a IS NULL
   AND d>e
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs((b - c)):int>
-- !query output



-- !query
SELECT d,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       c,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       b-c,
       e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR d>e
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       c-d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(c - d):int>
-- !query output
1274	222	-1	3
1877	222	-1	-3


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE c>d
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
127.0	111	128
137.0	222	136
192.0	444	194
197.0	555	197
212.0	555	210
222.0	444	221
232.0	555	231
NULL	222	119
NULL	222	NULL
NULL	555	202


-- !query
SELECT abs(b-c),
       (a+b+c+d+e)/5,
       d
  FROM t1
 WHERE (e>a AND e<b)
   AND a IS NULL
-- !query schema
struct<abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,d:int>
-- !query output



-- !query
SELECT b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<b:int>
-- !query output
106
119
128
134
136
141
188
197
202
221
231
244
248
NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5,
       c-d,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       (a+b+c+d+e)/5,
       a+b*2,
       c,
       b,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<abs(a):int,(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,c:int,b:int,d:int>
-- !query output
127	127.0	383	129	128	126


-- !query
SELECT d-e,
       a
  FROM t1
 WHERE b>c
   AND (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(d - e):int,a:int>
-- !query output
4	187


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND d>e
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int>
-- !query output
1604	1079	643	4	222	1
2436	1626	970	2	444	1
2802	1877	1121	4	111	-1
2880	1925	1157	1	444	-4
2946	1971	1187	1	555	2
3176	2121	1273	1	555	4
3405	2280	1364	4	111	-1
3704	2479	1483	4	222	-2


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444
444
444
444


-- !query
SELECT a+b*2+c*3+d*4,
       d,
       d-e,
       a-b
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,(d - e):int,(a - b):int>
-- !query output
1079	109	4	1
1165	115	NULL	-3
1274	126	1	-1
1325	133	3	-2
1367	135	-2	2
1414	142	-1	3
1626	164	2	1
1719	173	-1	1
1819	183	-1	1
1877	189	4	-1
1925	192	1	-4
1971	196	1	2
2121	212	1	4
2164	217	-2	3
2211	220	-4	2
2280	229	4	-1
2312	230	-3	3
2479	249	4	-2
NULL	101	-3	NULL
NULL	165	-1	NULL
NULL	201	-3	NULL
NULL	206	-1	NULL
NULL	243	NULL	NULL
NULL	NULL	NULL	-2
NULL	NULL	NULL	-4
NULL	NULL	NULL	-4
NULL	NULL	NULL	1
NULL	NULL	NULL	1
NULL	NULL	NULL	1
NULL	NULL	NULL	1


-- !query
SELECT d-e,
       a-b
  FROM t1
-- !query schema
struct<(d - e):int,(a - b):int>
-- !query output
-1	1
-1	1
-1	3
-1	NULL
-1	NULL
-2	2
-2	3
-3	3
-3	NULL
-3	NULL
-4	2
1	-1
1	-4
1	2
1	4
2	1
3	-2
4	-1
4	-1
4	-2
4	1
NULL	-2
NULL	-3
NULL	-4
NULL	-4
NULL	1
NULL	1
NULL	1
NULL	1
NULL	NULL


-- !query
SELECT abs(a),
       a+b*2+c*3,
       c-d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b IS NOT NULL
   AND c>d
-- !query schema
struct<abs(a):int,((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
116	705	2
127	770	3
138	827	4
199	1187	2
223	1331	2
234	1392	2
NULL	NULL	2


-- !query
SELECT a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e
  FROM t1
 WHERE a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       d-e,
       a-b,
       (a+b+c+d+e)/5,
       b,
       a,
       abs(b-c)
  FROM t1
 WHERE d>e
   AND b IS NOT NULL
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(c - d):int,(d - e):int,(a - b):int,(((((a + b) + c) + d) + e) / 5):double,b:int,a:int,abs((b - c)):int>
-- !query output
-1	2	1	162.0	160	161	3
-1	4	-1	227.0	227	226	1
-1	4	1	107.0	106	107	2
-2	3	-2	132.0	134	132	3
-2	4	-2	247.0	248	246	1
-3	4	-1	187.0	188	187	2
1	1	-4	192.0	194	190	1
1	1	4	212.0	210	214	3
2	1	2	197.0	197	199	1
3	1	-1	127.0	128	127	1


-- !query
SELECT a,
       d,
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<a:int,d:int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	109	1	333
110	NULL	-4	111
116	115	-3	222
123	NULL	1	333
127	126	-1	222
132	133	-2	222
138	135	2	333
144	142	3	444
145	NULL	-4	111
151	NULL	1	333
155	NULL	-2	222
161	164	1	333
167	165	NULL	444
171	173	1	333
177	NULL	1	333
181	183	1	333
187	189	-1	222
190	192	-4	111
199	196	2	333
208	206	NULL	444
214	212	4	444
218	217	3	444
223	220	2	333
226	229	-1	222
234	230	3	444
237	NULL	1	333
246	249	-2	222
NULL	101	NULL	444
NULL	201	NULL	444
NULL	243	NULL	444


-- !query
SELECT d,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<d:int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
101	NULL	1020	NULL
109	108	1060	1604
115	117	1190	NULL
126	129	1280	1899
133	131	1340	1975
135	139	1360	2052
142	140	1410	2129
164	163	1600	2436
165	168	NULL	NULL
173	172	1700	2589
183	182	362	2739
189	186	374	2802
192	193	380	2880
196	198	398	2946
201	203	NULL	NULL
206	NULL	NULL	NULL
212	213	428	3176
217	216	436	3259
220	222	446	3331
229	228	452	3405
230	232	468	3477
243	240	NULL	NULL
249	247	492	3704
NULL	112	1140	NULL
NULL	124	1220	NULL
NULL	146	1490	NULL
NULL	153	1500	NULL
NULL	159	1570	NULL
NULL	179	354	NULL
NULL	239	474	NULL


-- !query
SELECT b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
 WHERE a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE a>b
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
107.0	222	106
137.0	222	136
142.0	555	141
162.0	444	160
172.0	222	170
182.0	222	180
197.0	555	197
212.0	555	210
217.0	444	215
222.0	444	221
232.0	555	231
NULL	222	122
NULL	444	236
NULL	555	150
NULL	555	176


-- !query
SELECT abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
107	1060
161	1600
167	NULL
171	1700
181	362
187	374
190	380
199	398
208	NULL
214	428
218	436
223	446
226	452
234	468
246	492
NULL	1020
NULL	NULL
NULL	NULL


-- !query
SELECT a-b,
       b-c,
       abs(b-c)
  FROM t1
-- !query schema
struct<(a - b):int,(b - c):int,abs((b - c)):int>
-- !query output
-1	-1	1
-1	-1	1
-1	2	2
-2	-2	2
-2	1	1
-2	3	3
-3	2	2
-4	1	1
-4	2	2
-4	3	3
1	-2	2
1	-2	2
1	-2	2
1	-2	2
1	-3	3
1	-3	3
1	-3	3
1	-3	3
2	-1	1
2	-1	1
2	-3	3
3	-1	1
3	-1	1
3	1	1
4	-3	3
NULL	-1	1
NULL	4	4
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT c
  FROM t1
 WHERE (e>c OR e<d)
    OR a>b
-- !query schema
struct<c:int>
-- !query output
108
112
124
129
131
139
140
146
153
163
172
179
182
186
193
198
203
213
216
222
228
232
239
247


-- !query
SELECT (a+b+c+d+e)/5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a,
       c
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int,c:int>
-- !query output
107.0	-1	333	1060	107	108
127.0	3	222	1280	127	129
132.0	-2	222	1340	132	131
142.0	-2	444	1410	144	140
162.0	-1	333	1600	161	163
172.0	-1	333	1700	171	172
182.0	-1	333	362	181	182
187.0	-3	222	374	187	186
192.0	1	111	380	190	193
197.0	2	333	398	199	198
212.0	1	444	428	214	213
217.0	-1	444	436	218	216
222.0	2	333	446	223	222
227.0	-1	222	452	226	228
232.0	2	444	468	234	232
247.0	-2	222	492	246	247
NULL	2	444	NULL	NULL	203
NULL	NULL	111	1140	110	112
NULL	NULL	111	1490	145	146


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d>e
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
338
383
400
426
443
481
511
541
563
578
593
634
648
665
680
696
742
NULL


-- !query
SELECT a+b*2+c*3,
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2
  FROM t1
 WHERE d>e
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int>
-- !query output
1121	186	222	563
1157	193	111	578
1187	198	333	593
1273	213	444	634
1364	228	222	680
1483	247	222	742
643	108	333	319
770	129	222	383
793	131	222	400
970	163	333	481


-- !query
SELECT d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR b>c
    OR c>d
-- !query schema
struct<d:int>
-- !query output
109
115
126
133
135
142
165
189
192
196
201
212
220
230
243
249
NULL
NULL


-- !query
SELECT c,
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a>b
-- !query schema
struct<c:int,e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
108	105	333	4	222
124	121	333	NULL	222
139	137	333	-2	222
140	143	444	-1	555
153	NULL	333	NULL	555
163	162	333	2	444
172	174	333	-1	222
179	175	333	NULL	555
182	184	333	-1	222
198	195	333	1	555
213	211	444	1	555
216	219	444	-2	444
222	224	333	-4	444
232	233	444	-3	555
239	238	333	NULL	444


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR a>b
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,e:int>
-- !query output
111	-1	225
111	2	185
222	-2	105
222	-2	121
222	-2	174
222	-2	184
222	-3	137
222	1	245
222	NULL	166
444	-1	219
444	-1	224
444	-3	162
444	-3	238
444	1	191
555	-1	195
555	-1	204
555	-1	233
555	-3	175
555	-3	211
555	-3	NULL
555	1	143
555	4	NULL
555	NULL	104
555	NULL	207


-- !query
SELECT b,
       d,
       a,
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       abs(a)
  FROM t1
 WHERE d>e
    OR a IS NULL
-- !query schema
struct<b:int,d:int,a:int,c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int>
-- !query output
102	101	NULL	NULL	444	NULL	NULL
106	109	107	108	333	1604	107
128	126	127	129	222	1899	127
134	133	132	131	222	1975	132
160	164	161	163	333	2436	161
188	189	187	186	222	2802	187
194	192	190	193	111	2880	190
197	196	199	198	333	2946	199
202	201	NULL	203	444	NULL	NULL
210	212	214	213	444	3176	214
227	229	226	228	222	3405	226
244	243	NULL	240	444	NULL	NULL
248	249	246	247	222	3704	246


-- !query
SELECT a+b*2+c*3+d*4,
       c,
       c-d,
       b-c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR a>b
    OR b IS NOT NULL
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int,(c - d):int,(b - c):int>
-- !query output
1079	108	-1	-2
1165	117	2	2
1274	129	3	-1
1325	131	-2	3
1367	139	4	-3
1414	140	-2	1
1626	163	-1	-3
1719	172	-1	-2
1819	182	-1	-2
1877	186	-3	2
1925	193	1	1
1971	198	2	-1
2121	213	1	-3
2164	216	-1	-1
2211	222	2	-1
2280	228	-1	-1
2312	232	2	-1
2479	247	-2	1
NULL	112	NULL	2
NULL	124	NULL	-2
NULL	146	NULL	3
NULL	153	NULL	-3
NULL	159	NULL	-2
NULL	179	NULL	-3
NULL	203	2	-1
NULL	239	NULL	-3
NULL	240	-3	4
NULL	NULL	NULL	NULL


-- !query
SELECT abs(b-c),
       b-c,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       b,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<abs((b - c)):int,b:int,e:int>
-- !query output
1	128	125
1	227	225
2	106	105
2	122	121
2	170	174
2	180	184
2	188	185
3	150	NULL
3	160	162
3	176	175
3	236	238


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
   AND c>d
-- !query schema
struct<abs((b - c)):int>
-- !query output
1


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       c-d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE (e>c OR e<d)
    OR coalesce(a,b,c,d,e)<>0
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       a+b*2
  FROM t1
-- !query schema
struct<(a - b):int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,(a + (b * 2)):int>
-- !query output
-1	128	222	127	383
-1	188	222	187	563
-1	227	222	226	680
-2	134	222	132	400
-2	157	222	155	469
-2	248	222	246	742
-3	119	222	116	354
-4	114	111	110	338
-4	149	111	145	443
-4	194	111	190	578
1	106	333	107	319
1	122	333	123	367
1	150	333	151	451
1	160	333	161	481
1	170	333	171	511
1	176	333	177	529
1	180	333	181	541
1	236	333	237	709
2	136	333	138	410
2	197	333	199	593
2	221	333	223	665
3	141	444	144	426
3	215	444	218	648
3	231	444	234	696
4	210	444	214	634
NULL	102	444	NULL	NULL
NULL	202	444	NULL	NULL
NULL	244	444	NULL	NULL
NULL	NULL	444	167	NULL
NULL	NULL	444	208	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
    OR b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c
  FROM t1
 WHERE b>c
    OR b IS NOT NULL
    OR (e>c OR e<d)
-- !query schema
struct<c:int>
-- !query output
108
112
117
124
129
131
139
140
146
153
159
163
172
179
182
186
193
198
203
213
216
222
228
232
239
240
247
NULL


-- !query
SELECT d-e,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2
  FROM t1
-- !query schema
struct<(d - e):int,(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int>
-- !query output
-1	-1	222	511
-1	-1	222	541
-1	-2	555	426
-1	3	222	NULL
-1	NULL	555	NULL
-2	-1	444	648
-2	4	222	410
-3	2	555	696
-3	2	555	NULL
-3	NULL	555	NULL
-4	2	444	665
1	1	444	578
1	1	555	634
1	2	555	593
1	3	111	383
2	-1	444	481
3	-2	333	400
4	-1	111	680
4	-1	222	319
4	-2	222	742
4	-3	111	563
NULL	-3	555	NULL
NULL	2	222	354
NULL	NULL	222	367
NULL	NULL	222	443
NULL	NULL	444	709
NULL	NULL	555	338
NULL	NULL	555	451
NULL	NULL	555	469
NULL	NULL	555	529


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1020
1060
1140
1190
1220
1280
1340
1360
1410
1490
1500
1570
1600
1700
354
362
374
380
398
428
436
446
452
468
474
492
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-1
-1
-2
-2
-3
-3
-3
-4
1
1
1
1
2
3
4
4
4
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       e,
       b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR a IS NULL
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,e:int,b:int>
-- !query output
-1	1280	222	3	125	128
-1	398	333	2	195	197
-1	436	444	-1	219	215
-1	446	333	2	224	221
-1	452	222	-1	225	227
-1	468	444	2	233	231
-1	NULL	444	2	204	202
-2	1060	333	-1	105	106
-2	1700	333	-1	174	170
-2	362	333	-1	184	180
-3	1600	333	-1	162	160
-3	428	444	1	211	210
1	1410	444	-2	143	141
1	380	111	1	191	194
1	492	222	-2	245	248
2	1190	222	2	NULL	119
2	374	222	-3	185	188
4	NULL	444	-3	NULL	244
NULL	1020	444	NULL	104	102


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       a+b*2,
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
133	222	3	1325
142	444	1	1414
189	222	2	1877
192	111	1	1925
249	222	1	2479
NULL	111	2	NULL
NULL	111	3	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND d>e
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1121
1157
1187
1273
1364
1483
643
770
793
970


-- !query
SELECT d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs((b - c)):int>
-- !query output
-1	333	1027	1	1700	2
-1	333	1087	1	362	2
-1	444	846	3	1410	1
-1	444	NULL	NULL	NULL	NULL
-1	444	NULL	NULL	NULL	NULL
-2	333	827	2	1360	3
-2	444	1296	3	436	1
-3	444	1392	3	468	1
-3	444	NULL	NULL	1020	NULL
-3	444	NULL	NULL	NULL	1
-4	333	1331	2	446	1
1	111	1157	-4	380	1
1	222	770	-1	1280	1
1	333	1187	2	398	1
1	444	1273	4	428	3
2	333	970	1	1600	3
3	222	793	-2	1340	3
4	222	1121	-1	374	2
4	222	1364	-1	452	1
4	222	1483	-2	492	1
4	333	643	1	1060	2
NULL	111	674	-4	1140	2
NULL	111	881	-4	1490	3
NULL	222	705	-3	1190	2
NULL	222	946	-2	1570	2
NULL	333	1066	1	354	3
NULL	333	1426	1	474	3
NULL	333	739	1	1220	2
NULL	333	910	1	1500	3
NULL	444	NULL	NULL	NULL	4


-- !query
SELECT abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       (a+b+c+d+e)/5,
       b,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<(c - d):int,(a - b):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	-1	111
-1	1	222
-1	1	222
-1	1	222
-1	1	444
-1	3	444
-2	-2	222
-2	-2	333
-2	3	555
-3	-1	111
-3	NULL	555
1	-4	444
1	4	555
2	-3	222
2	2	444
2	2	555
2	3	555
2	NULL	555
3	-1	111
3	NULL	222
4	2	222
NULL	-2	555
NULL	-4	222
NULL	-4	555
NULL	1	222
NULL	1	444
NULL	1	555
NULL	1	555
NULL	NULL	555
NULL	NULL	555


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       c-d,
       a,
       b-c,
       a+b*2,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
    OR b IS NOT NULL
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int,a:int,(b - c):int,(a + (b * 2)):int,(d - e):int>
-- !query output
102	NULL	NULL	NULL	NULL	NULL	-3
106	1079	-1	107	-2	319	4
114	NULL	NULL	110	2	338	NULL
119	1165	2	116	2	354	NULL
122	NULL	NULL	123	-2	367	NULL
128	1274	3	127	-1	383	1
134	1325	-2	132	3	400	3
136	1367	4	138	-3	410	-2
141	1414	-2	144	1	426	-1
149	NULL	NULL	145	3	443	NULL
150	NULL	NULL	151	-3	451	NULL
157	NULL	NULL	155	-2	469	NULL
160	1626	-1	161	-3	481	2
170	1719	-1	171	-2	511	-1
176	NULL	NULL	177	-3	529	NULL
180	1819	-1	181	-2	541	-1
188	1877	-3	187	2	563	4
194	1925	1	190	1	578	1
197	1971	2	199	-1	593	1
202	NULL	2	NULL	-1	NULL	-3
210	2121	1	214	-3	634	1
215	2164	-1	218	-1	648	-2
221	2211	2	223	-1	665	-4
227	2280	-1	226	-1	680	4
231	2312	2	234	-1	696	-3
236	NULL	NULL	237	-3	709	NULL
244	NULL	-3	NULL	4	NULL	NULL
248	2479	-2	246	1	742	4


-- !query
SELECT a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       c-d,
       c,
       d-e,
       abs(a),
       b-c
  FROM t1
 WHERE b IS NOT NULL
    OR (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs((b - c)):int,(c - d):int,c:int,(d - e):int,abs(a):int,(b - c):int>
-- !query output
1	-1	216	-2	218	-1
1	-1	228	4	226	-1
1	-2	140	-1	144	1
1	-2	247	4	246	1
1	1	193	1	190	1
1	2	198	1	199	-1
1	2	203	-3	NULL	-1
1	2	222	-4	223	-1
1	2	232	-3	234	-1
1	3	129	1	127	-1
2	-1	108	4	107	-2
2	-1	172	-1	171	-2
2	-1	182	-1	181	-2
2	-3	186	4	187	2
2	2	117	NULL	116	2
2	NULL	112	NULL	110	2
2	NULL	124	NULL	123	-2
2	NULL	159	NULL	155	-2
3	-1	163	2	161	-3
3	-2	131	3	132	3
3	1	213	1	214	-3
3	4	139	-2	138	-3
3	NULL	146	NULL	145	3
3	NULL	153	NULL	151	-3
3	NULL	179	NULL	177	-3
3	NULL	239	NULL	237	-3
4	-3	240	NULL	NULL	4
NULL	3	168	-1	167	NULL
NULL	NULL	NULL	-1	208	NULL
NULL	NULL	NULL	-3	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1165
1274
1325
1367
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT c-d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-2
-2
-3
-3
1
1
2
2
2
2
2
3
3
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4,
       b,
       a-b,
       e,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
    OR b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
    OR a>b
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1020	101	555	NULL	104	NULL
1060	109	222	319	105	1604
1220	NULL	222	367	121	NULL
1280	126	111	383	125	1899
1360	135	222	410	137	2052
1410	142	555	426	143	2129
1500	NULL	555	451	NULL	NULL
1600	164	444	481	162	2436
1700	173	222	511	174	2589
354	NULL	555	529	175	NULL
362	183	222	541	184	2739
374	189	111	563	185	2802
380	192	444	578	191	2880
398	196	555	593	195	2946
428	212	555	634	211	3176
436	217	444	648	219	3259
446	220	444	665	224	3331
452	229	111	680	225	3405
468	230	555	696	233	3477
474	NULL	444	709	238	NULL
492	249	222	742	245	3704
NULL	165	222	NULL	166	NULL
NULL	201	555	NULL	204	NULL
NULL	206	555	NULL	207	NULL
NULL	243	555	NULL	NULL	NULL


-- !query
SELECT d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE b>c
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
109	222
115	222
126	111
133	333
135	222
142	555
164	444
173	222
183	222
189	111
192	444
196	555
201	555
212	555
217	444
220	444
229	111
230	555
243	555
249	222
NULL	222
NULL	222
NULL	444
NULL	555
NULL	555
NULL	555
NULL	555


-- !query
SELECT abs(b-c),
       e,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111	125	-1	222
111	185	2	222
111	225	-1	222
222	105	-2	333
222	147	3	111
222	174	-2	333
222	184	-2	333
222	245	1	222
333	130	3	222
444	162	-3	333
444	191	1	111
444	219	-1	444
444	224	-1	333
555	113	2	111
555	143	1	444
555	195	-1	333
555	204	-1	444
555	211	-3	444
555	233	-1	444


-- !query
SELECT c-d,
       d,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c>d
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>a AND e<b)
-- !query schema
struct<(c - d):int,d:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-1	109	1	1060
-1	164	1	1600
-1	173	1	1700
-1	183	1	362
-1	217	3	436
-1	229	-1	452
-2	133	-2	1340
-2	142	3	1410
-2	249	-2	492
-3	189	-1	374
-3	243	NULL	NULL
1	192	-4	380
1	212	4	428
2	115	-3	1190
2	196	2	398
2	201	NULL	NULL
2	220	2	446
2	230	3	468
3	126	-1	1280
3	165	NULL	NULL
4	135	2	1360
NULL	NULL	-2	1570
NULL	NULL	-4	1140
NULL	NULL	-4	1490
NULL	NULL	1	1220
NULL	NULL	1	1500
NULL	NULL	1	354
NULL	NULL	1	474


-- !query
SELECT a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-2
-3
-4
1
1
1
1
2
2
3
3
3
4
NULL


-- !query
SELECT d,
       a-b,
       c-d,
       a+b*2+c*3,
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
    OR a IS NULL
-- !query schema
struct<d:int,(a - b):int,(c - d):int,((a + (b * 2)) + (c * 3)):int,e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
101	NULL	NULL	NULL	104	444
192	-4	1	1157	191	111
201	NULL	2	NULL	204	444
243	NULL	-3	NULL	NULL	444
NULL	-4	NULL	674	113	111
NULL	-4	NULL	881	147	111


-- !query
SELECT a
  FROM t1
-- !query schema
struct<a:int>
-- !query output
107
110
116
123
127
132
138
144
145
151
155
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246
NULL
NULL
NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       abs(a),
       a+b*2+c*3+d*4+e*5,
       d-e
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int>
-- !query output
111	338	110	NULL	NULL
111	443	145	NULL	NULL
111	578	190	2880	1
222	354	116	NULL	NULL
222	383	127	1899	1
222	400	132	1975	3
222	469	155	NULL	NULL
222	563	187	2802	4
222	680	226	3405	4
222	742	246	3704	4
333	319	107	1604	4
333	367	123	NULL	NULL
333	410	138	2052	-2
333	451	151	NULL	NULL
333	481	161	2436	2
333	511	171	2589	-1
333	529	177	NULL	NULL
333	541	181	2739	-1
333	593	199	2946	1
333	665	223	3331	-4
333	709	237	NULL	NULL
444	426	144	2129	-1
444	634	214	3176	1
444	648	218	3259	-2
444	696	234	3477	-3
444	NULL	167	NULL	-1
444	NULL	208	NULL	-1
444	NULL	NULL	NULL	-3
444	NULL	NULL	NULL	-3
444	NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       abs(b-c),
       abs(a),
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       c-d
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(d - e):int,(c - d):int>
-- !query output
1020	-3	NULL
1060	4	-1
1140	NULL	NULL
1190	NULL	2
1220	NULL	NULL
1280	1	3
1340	3	-2
1360	-2	4
1410	-1	-2
1490	NULL	NULL
1500	NULL	NULL
1570	NULL	NULL
1600	2	-1
1700	-1	-1
354	NULL	NULL
362	-1	-1
374	4	-3
380	1	1
398	1	2
428	1	1
436	-2	-1
446	-4	2
452	4	-1
468	-3	2
474	NULL	NULL
492	4	-2
NULL	-1	3
NULL	-1	NULL
NULL	-3	2
NULL	NULL	-3


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       c-d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d
  FROM t1
 WHERE b>c
    OR c>d
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       e,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a IS NULL
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       b-c,
       abs(a),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(b - c):int,abs(a):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111	1121	2	187	-1	222
111	1364	-1	226	-1	222
111	770	-1	127	-1	222
222	1027	-2	171	1	333
222	1087	-2	181	1	333
222	1483	1	246	-2	222
222	643	-2	107	1	333
222	705	2	116	-3	222
222	739	-2	123	1	333
222	827	-3	138	2	333
222	881	3	145	-4	111
222	NULL	NULL	167	NULL	444
333	793	3	132	-2	222
444	1157	1	190	-4	111
444	1296	-1	218	3	444
444	1331	-1	223	2	333
444	1426	-3	237	1	333
444	970	-3	161	1	333
555	1066	-3	177	1	333
555	1187	-1	199	2	333
555	1273	-3	214	4	444
555	1392	-1	234	3	444
555	674	2	110	-4	111
555	846	1	144	3	444
555	910	-3	151	1	333
555	946	-2	155	-2	222
555	NULL	-1	NULL	NULL	444
555	NULL	4	NULL	NULL	444
555	NULL	NULL	208	NULL	444
555	NULL	NULL	NULL	NULL	444


-- !query
SELECT e,
       a+b*2+c*3+d*4+e*5,
       d
  FROM t1
-- !query schema
struct<e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,d:int>
-- !query output
104	NULL	101
105	1604	109
113	NULL	NULL
121	NULL	NULL
125	1899	126
130	1975	133
137	2052	135
143	2129	142
147	NULL	NULL
158	NULL	NULL
162	2436	164
166	NULL	165
174	2589	173
175	NULL	NULL
184	2739	183
185	2802	189
191	2880	192
195	2946	196
204	NULL	201
207	NULL	206
211	3176	212
219	3259	217
224	3331	220
225	3405	229
233	3477	230
238	NULL	NULL
245	3704	249
NULL	NULL	115
NULL	NULL	243
NULL	NULL	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       b-c,
       d-e,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a IS NULL
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       c-d,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b
  FROM t1
 WHERE b IS NOT NULL
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND a IS NULL
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,abs((b - c)):int>
-- !query output
NULL	444	NULL	202	1


-- !query
SELECT a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       c,
       e,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       abs(b-c),
       b,
       abs(a),
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       c-d,
       abs(a)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,(c - d):int,abs(a):int>
-- !query output
1079	105	222	1	-1	107
1274	125	111	-1	3	127


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2,
       c-d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>a AND e<b)
    OR (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c-d
  FROM t1
-- !query schema
struct<d:int,(c - d):int>
-- !query output
101	NULL
109	-1
115	2
126	3
133	-2
135	4
142	-2
164	-1
165	3
173	-1
183	-1
189	-3
192	1
196	2
201	2
206	NULL
212	1
217	-1
220	2
229	-1
230	2
243	-3
249	-2
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a
  FROM t1
 WHERE b>c
   AND a>b
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int>
-- !query output
555	144


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       e,
       a+b*2,
       c-d,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       d-e,
       a+b*2+c*3+d*4,
       c,
       d,
       a-b,
       abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<e:int,(d - e):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int,d:int,(a - b):int,abs((b - c)):int>
-- !query output
105	4	1079	108	109	1	2
125	1	1274	129	126	-1	1


-- !query
SELECT abs(b-c),
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e
  FROM t1
 WHERE c>d
    OR a IS NULL
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       (a+b+c+d+e)/5,
       b-c,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int,(a + (b * 2)):int>
-- !query output
2	107.0	-2	319


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2+c*3,
       b-c,
       a-b
  FROM t1
-- !query schema
struct<c:int,((a + (b * 2)) + (c * 3)):int,(b - c):int,(a - b):int>
-- !query output
108	643	-2	1
112	674	2	-4
117	705	2	-3
124	739	-2	1
129	770	-1	-1
131	793	3	-2
139	827	-3	2
140	846	1	3
146	881	3	-4
153	910	-3	1
159	946	-2	-2
163	970	-3	1
168	NULL	NULL	NULL
172	1027	-2	1
179	1066	-3	1
182	1087	-2	1
186	1121	2	-1
193	1157	1	-4
198	1187	-1	2
203	NULL	-1	NULL
213	1273	-3	4
216	1296	-1	3
222	1331	-1	2
228	1364	-1	-1
232	1392	-1	3
239	1426	-3	1
240	NULL	4	NULL
247	1483	1	-2
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT abs(a)
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
-- !query schema
struct<abs(a):int>
-- !query output
107
127
132
161
187
190
199
214
226
246


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       a-b,
       c-d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       abs(b-c),
       d-e,
       abs(a),
       a,
       e,
       c-d
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,(d - e):int,abs(a):int,a:int,e:int,(c - d):int>
-- !query output
1079	2	4	107	107	105	-1
1165	2	NULL	116	116	NULL	2
1274	1	1	127	127	125	3
1325	3	3	132	132	130	-2
1367	3	-2	138	138	137	4
1414	1	-1	144	144	143	-2
1626	3	2	161	161	162	-1
1719	2	-1	171	171	174	-1
1819	2	-1	181	181	184	-1
1877	2	4	187	187	185	-3
1925	1	1	190	190	191	1
1971	1	1	199	199	195	2
2121	3	1	214	214	211	1
2164	1	-2	218	218	219	-1
2211	1	-4	223	223	224	2
2280	1	4	226	226	225	-1
2312	1	-3	234	234	233	2
2479	1	4	246	246	245	-2
NULL	1	-3	NULL	NULL	204	2
NULL	2	NULL	110	110	113	NULL
NULL	2	NULL	123	123	121	NULL
NULL	2	NULL	155	155	158	NULL
NULL	3	NULL	145	145	147	NULL
NULL	3	NULL	151	151	NULL	NULL
NULL	3	NULL	177	177	175	NULL
NULL	3	NULL	237	237	238	NULL
NULL	4	NULL	NULL	NULL	NULL	-3
NULL	NULL	-1	167	167	166	3
NULL	NULL	-1	208	208	207	NULL
NULL	NULL	-3	NULL	NULL	104	NULL


-- !query
SELECT c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
   AND (e>c OR e<d)
-- !query schema
struct<c:int>
-- !query output
129
131
140
186
198
203
222
232
247


-- !query
SELECT a+b*2,
       (a+b+c+d+e)/5,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       e
  FROM t1
 WHERE a>b
    OR a IS NULL
    OR b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       d-e,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1027	-1	172.0	2589
1066	NULL	NULL	NULL
1087	-1	182.0	2739
1121	4	187.0	2802
1157	1	192.0	2880
1187	1	197.0	2946
1273	1	212.0	3176
1296	-2	217.0	3259
1331	-4	222.0	3331
1364	4	227.0	3405
1392	-3	232.0	3477
1426	NULL	NULL	NULL
1483	4	247.0	3704
643	4	107.0	1604
674	NULL	NULL	NULL
705	NULL	NULL	NULL
739	NULL	NULL	NULL
770	1	127.0	1899
793	3	132.0	1975
827	-2	137.0	2052
846	-1	142.0	2129
881	NULL	NULL	NULL
910	NULL	NULL	NULL
946	NULL	NULL	NULL
970	2	162.0	2436
NULL	-1	NULL	NULL
NULL	-1	NULL	NULL
NULL	-3	NULL	NULL
NULL	-3	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       abs(b-c),
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<(d - e):int>
-- !query output
1
NULL
NULL


-- !query
SELECT b,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<b:int,(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
102	NULL	1020
106	-1	1060
160	-1	1600
170	-1	1700
180	-1	362
188	-3	374
194	1	380
197	2	398
202	2	NULL
210	1	428
215	-1	436
221	2	446
227	-1	452
231	2	468
244	-3	NULL
248	-2	492
NULL	3	NULL
NULL	NULL	NULL


-- !query
SELECT d-e,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (e>a AND e<b)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(d - e):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT d-e,
       abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
   AND d>e
-- !query schema
struct<(d - e):int,abs((b - c)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int>
-- !query output
1	1	398	555	199
4	1	492	222	246
4	2	374	111	187


-- !query
SELECT b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       a+b*2+c*3
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND (e>a AND e<b)
-- !query schema
struct<b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int>
-- !query output
114	555	1140	NULL	674
149	222	1490	NULL	881
194	444	380	192.0	1157


-- !query
SELECT d,
       d-e,
       a,
       b-c,
       e
  FROM t1
 WHERE (e>c OR e<d)
    OR a IS NULL
-- !query schema
struct<d:int,(d - e):int,a:int,(b - c):int,e:int>
-- !query output
101	-3	NULL	NULL	104
109	4	107	-2	105
126	1	127	-1	125
133	3	132	3	130
142	-1	144	1	143
164	2	161	-3	162
173	-1	171	-2	174
183	-1	181	-2	184
189	4	187	2	185
192	1	190	1	191
196	1	199	-1	195
201	-3	NULL	-1	204
212	1	214	-3	211
217	-2	218	-1	219
220	-4	223	-1	224
229	4	226	-1	225
230	-3	234	-1	233
243	NULL	NULL	4	NULL
249	4	246	1	245
NULL	NULL	110	2	113
NULL	NULL	145	3	147


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1079	1060	1604
1165	1190	NULL
1274	1280	1899
1325	1340	1975
1367	1360	2052
1414	1410	2129
1626	1600	2436
1719	1700	2589
1819	362	2739
1877	374	2802
1925	380	2880
1971	398	2946
2121	428	3176
2164	436	3259
2211	446	3331
2280	452	3405
2312	468	3477
2479	492	3704
NULL	1020	NULL
NULL	1140	NULL
NULL	1220	NULL
NULL	1490	NULL
NULL	1500	NULL
NULL	1570	NULL
NULL	354	NULL
NULL	474	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT d-e,
       d,
       c,
       b-c
  FROM t1
 WHERE a IS NULL
   AND b>c
-- !query schema
struct<(d - e):int,d:int,c:int,(b - c):int>
-- !query output
NULL	243	240	4


-- !query
SELECT abs(a),
       a+b*2,
       a+b*2+c*3,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<abs(a):int,(a + (b * 2)):int,((a + (b * 2)) + (c * 3)):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	319	643	-1	333
116	354	705	2	222
144	426	846	-2	444
161	481	970	-1	333
171	511	1027	-1	333
181	541	1087	-1	333
187	563	1121	-3	222
190	578	1157	1	111
199	593	1187	2	333
214	634	1273	1	444
218	648	1296	-1	444
223	665	1331	2	333
226	680	1364	-1	222
234	696	1392	2	444
246	742	1483	-2	222
NULL	NULL	NULL	2	444


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int>
-- !query output
1604	1079	2
1899	1274	1
1975	1325	3
2052	1367	3
2129	1414	1
2436	1626	3
2589	1719	2
2739	1819	2
2802	1877	2
2880	1925	1
2946	1971	1
3176	2121	3
3259	2164	1
3331	2211	1
3405	2280	1
3477	2312	1
3704	2479	1
NULL	1165	2
NULL	NULL	1
NULL	NULL	2
NULL	NULL	2
NULL	NULL	2
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	NULL	4
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT c-d
  FROM t1
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-2
-2
-3
-3
1
1
2
2
2
2
2
3
3
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT abs(a),
       a+b*2+c*3,
       a+b*2,
       c,
       d,
       a-b,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<abs(a):int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,c:int,d:int,(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
107	643	319	108	109	1	1604
110	674	338	112	NULL	-4	NULL
116	705	354	117	115	-3	NULL
123	739	367	124	NULL	1	NULL
127	770	383	129	126	-1	1899
132	793	400	131	133	-2	1975
138	827	410	139	135	2	2052
144	846	426	140	142	3	2129
145	881	443	146	NULL	-4	NULL
151	910	451	153	NULL	1	NULL
155	946	469	159	NULL	-2	NULL
161	970	481	163	164	1	2436
171	1027	511	172	173	1	2589
177	1066	529	179	NULL	1	NULL
181	1087	541	182	183	1	2739
187	1121	563	186	189	-1	2802
190	1157	578	193	192	-4	2880
199	1187	593	198	196	2	2946
214	1273	634	213	212	4	3176
218	1296	648	216	217	3	3259
223	1331	665	222	220	2	3331
226	1364	680	228	229	-1	3405
234	1392	696	232	230	3	3477
237	1426	709	239	NULL	1	NULL
246	1483	742	247	249	-2	3704
NULL	NULL	NULL	203	201	NULL	NULL
NULL	NULL	NULL	240	243	NULL	NULL
NULL	NULL	NULL	NULL	101	NULL	NULL


-- !query
SELECT a,
       a-b,
       a+b*2,
       a+b*2+c*3,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<a:int,(a - b):int,(a + (b * 2)):int,((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107	1	319	643	107.0
110	-4	338	674	NULL
116	-3	354	705	NULL
123	1	367	739	NULL
127	-1	383	770	127.0
132	-2	400	793	132.0
138	2	410	827	137.0
144	3	426	846	142.0
145	-4	443	881	NULL
151	1	451	910	NULL
155	-2	469	946	NULL
161	1	481	970	162.0
167	NULL	NULL	NULL	NULL
171	1	511	1027	172.0
177	1	529	1066	NULL
181	1	541	1087	182.0
187	-1	563	1121	187.0
190	-4	578	1157	192.0
199	2	593	1187	197.0
208	NULL	NULL	NULL	NULL
214	4	634	1273	212.0
218	3	648	1296	217.0
223	2	665	1331	222.0
226	-1	680	1364	227.0
234	3	696	1392	232.0
237	1	709	1426	NULL
246	-2	742	1483	247.0
NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       a+b*2+c*3,
       d-e
  FROM t1
 WHERE d>e
   AND b IS NOT NULL
-- !query schema
struct<a:int,((a + (b * 2)) + (c * 3)):int,(d - e):int>
-- !query output
107	643	4
127	770	1
132	793	3
161	970	2
187	1121	4
190	1157	1
199	1187	1
214	1273	1
226	1364	4
246	1483	4


-- !query
SELECT b,
       d-e,
       (a+b+c+d+e)/5,
       d,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<b:int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,d:int,a:int>
-- !query output
106	4	107.0	109	107
128	1	127.0	126	127


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e
  FROM t1
 WHERE a>b
    OR b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b-c,
       a+b*2+c*3,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE (e>a AND e<b)
    OR d>e
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<d:int,(b - c):int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
109	-2	643	107	222	106
115	2	705	116	222	119
126	-1	770	127	111	128
133	3	793	132	333	134
135	-3	827	138	222	136
142	1	846	144	555	141
164	-3	970	161	444	160
165	NULL	NULL	167	222	NULL
189	2	1121	187	111	188
192	1	1157	190	444	194
196	-1	1187	199	555	197
201	-1	NULL	NULL	555	202
212	-3	1273	214	555	210
220	-1	1331	223	444	221
229	-1	1364	226	111	227
230	-1	1392	234	555	231
243	4	NULL	NULL	555	244
249	1	1483	246	222	248
NULL	2	674	110	555	114
NULL	3	881	145	222	149


-- !query
SELECT a+b*2
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
383


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a-b,
       b-c,
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a>b
-- !query schema
struct<d:int,(a - b):int,(b - c):int,c:int>
-- !query output
109	1	-2	108
142	3	1	140
164	1	-3	163
173	1	-2	172
183	1	-2	182
196	2	-1	198
212	4	-3	213
217	3	-1	216
220	2	-1	222
230	3	-1	232


-- !query
SELECT a+b*2+c*3+d*4,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       abs(a),
       abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE c>d
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int>
-- !query output
1165	2
1274	3
1367	4
1925	1
1971	2
2121	1
2211	2
2312	2
NULL	2
NULL	3


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int>
-- !query output
111	222	185
111	222	225
222	222	245
222	222	NULL
222	333	105
222	333	174
222	333	184
444	111	191
444	333	162
444	333	224
444	444	219
555	333	195
555	444	143
555	444	204
555	444	211
555	444	233


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE b IS NOT NULL
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE c>d
   AND b>c
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output
-3	NULL	354


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       a-b
  FROM t1
 WHERE d>e
   AND a>b
   AND b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output



-- !query
SELECT abs(b-c)
  FROM t1
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
2
2
3
3
3
3
3
3
3
3
4
NULL
NULL
NULL


-- !query
SELECT abs(a),
       d-e,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
-- !query schema
struct<abs(a):int,(d - e):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
107	4	643
127	1	770
161	2	970
171	-1	1027
181	-1	1087
187	4	1121
226	4	1364


-- !query
SELECT b,
       a+b*2,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a)
  FROM t1
 WHERE b>c
    OR (c<=d-2 OR c>=d+2)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
    OR b>c
-- !query schema
struct<e:int,b:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
113	114	NULL
130	134	132.0
143	141	142.0
147	149	NULL
185	188	187.0
191	194	192.0
245	248	247.0
NULL	119	NULL
NULL	244	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a-b,
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       b-c,
       d
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(d - e):int,(a - b):int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,(b - c):int,d:int>
-- !query output
-1	1	170	333	511	-2	173
-1	1	180	333	541	-2	183
-1	3	141	444	426	1	142
-2	2	136	333	410	-3	135
-2	3	215	444	648	-1	217
-3	3	231	444	696	-1	230
-4	2	221	333	665	-1	220
1	-1	128	222	383	-1	126
1	2	197	333	593	-1	196
1	4	210	444	634	-3	212
2	1	160	333	481	-3	164
4	-1	188	222	563	2	189
4	-1	227	222	680	-1	229
4	1	106	333	319	-2	109
NULL	1	122	333	367	-2	NULL
NULL	1	150	333	451	-3	NULL
NULL	1	176	333	529	-3	NULL
NULL	1	236	333	709	-3	NULL


-- !query
SELECT abs(a),
       abs(b-c),
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c>d
   AND (a>b-2 AND a<b+2)
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c>d
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,(a - b):int>
-- !query output
2880	444	1	111	578	-4
2946	555	1	333	593	2
3176	555	3	444	634	4
3331	444	1	333	665	2
3477	555	1	444	696	3
NULL	222	NULL	444	NULL	NULL
NULL	555	1	444	NULL	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a IS NULL
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<a:int,c:int>
-- !query output



-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       b-c,
       b,
       a,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,b:int,a:int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1604	-2	106	107	108	1060	107.0
1899	-1	128	127	129	1280	127.0
1975	3	134	132	131	1340	132.0
2052	-3	136	138	139	1360	137.0
2129	1	141	144	140	1410	142.0
2436	-3	160	161	163	1600	162.0
2589	-2	170	171	172	1700	172.0
2739	-2	180	181	182	362	182.0
2802	2	188	187	186	374	187.0
2880	1	194	190	193	380	192.0
2946	-1	197	199	198	398	197.0
3176	-3	210	214	213	428	212.0
3259	-1	215	218	216	436	217.0
3331	-1	221	223	222	446	222.0
3405	-1	227	226	228	452	227.0
3477	-1	231	234	232	468	232.0
3704	1	248	246	247	492	247.0
NULL	-1	202	NULL	203	NULL	NULL
NULL	-2	122	123	124	1220	NULL
NULL	-2	157	155	159	1570	NULL
NULL	-3	150	151	153	1500	NULL
NULL	-3	176	177	179	354	NULL
NULL	-3	236	237	239	474	NULL
NULL	2	114	110	112	1140	NULL
NULL	2	119	116	117	1190	NULL
NULL	3	149	145	146	1490	NULL
NULL	4	244	NULL	240	NULL	NULL
NULL	NULL	102	NULL	NULL	1020	NULL
NULL	NULL	NULL	167	168	NULL	NULL
NULL	NULL	NULL	208	NULL	NULL	NULL


-- !query
SELECT abs(b-c),
       d,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c>d
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       c-d,
       d-e,
       (a+b+c+d+e)/5,
       d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(b - c):int,(c - d):int,(d - e):int,(((((a + b) + c) + d) + e) / 5):double,d:int>
-- !query output
-1	-1	-2	217.0	217
-1	-1	4	227.0	229
-1	2	-3	232.0	230
-1	2	-3	NULL	201
-1	2	-4	222.0	220
-1	2	1	197.0	196
-1	3	1	127.0	126
-2	-1	-1	172.0	173
-2	-1	-1	182.0	183
-2	-1	4	107.0	109
-2	NULL	NULL	NULL	NULL
-2	NULL	NULL	NULL	NULL
-3	-1	2	162.0	164
-3	1	1	212.0	212
-3	4	-2	137.0	135
-3	NULL	NULL	NULL	NULL
-3	NULL	NULL	NULL	NULL
-3	NULL	NULL	NULL	NULL
1	-2	-1	142.0	142
1	-2	4	247.0	249
1	1	1	192.0	192
2	-3	4	187.0	189
2	2	NULL	NULL	115
2	NULL	NULL	NULL	NULL
3	-2	3	132.0	133
3	NULL	NULL	NULL	NULL
4	-3	NULL	NULL	243
NULL	3	-1	NULL	165
NULL	NULL	-1	NULL	206
NULL	NULL	-3	NULL	101


-- !query
SELECT b,
       e,
       a+b*2+c*3+d*4+e*5,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       c,
       c-d,
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND d>e
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,c:int,(c - d):int,(a - b):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int>
-- !query output
1604	108	-1	1	222	107.0	643
2436	163	-1	1	444	162.0	970
2802	186	-3	-1	111	187.0	1121
2880	193	1	-4	444	192.0	1157
2946	198	2	2	555	197.0	1187
3176	213	1	4	555	212.0	1273
3405	228	-1	-1	111	227.0	1364
3704	247	-2	-2	222	247.0	1483


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       a+b*2,
       abs(b-c),
       abs(a),
       b-c,
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,(a + (b * 2)):int,abs((b - c)):int,abs(a):int,(b - c):int,d:int>
-- !query output
444	194	578	1	190	1	192


-- !query
SELECT a
  FROM t1
 WHERE b IS NOT NULL
   AND d>e
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<a:int>
-- !query output
107
127


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       b-c,
       a,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b IS NOT NULL
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE d>e
    OR (e>c OR e<d)
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<(a - b):int>
-- !query output
-4
-4
-4


-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       a,
       a+b*2,
       e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,a:int,(a + (b * 2)):int,e:int>
-- !query output
-1	127.0	127	383	125
-1	187.0	187	563	185
-1	227.0	226	680	225
-2	132.0	132	400	130
-2	247.0	246	742	245
-2	NULL	155	469	158
-3	NULL	116	354	NULL
-4	192.0	190	578	191
-4	NULL	110	338	113
-4	NULL	145	443	147
1	107.0	107	319	105
1	162.0	161	481	162
1	172.0	171	511	174
1	182.0	181	541	184
1	NULL	123	367	121
1	NULL	151	451	NULL
1	NULL	177	529	175
1	NULL	237	709	238
2	137.0	138	410	137
2	197.0	199	593	195
2	222.0	223	665	224
3	142.0	144	426	143
3	217.0	218	648	219
3	232.0	234	696	233
4	212.0	214	634	211
NULL	NULL	NULL	NULL	204
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT c,
       c-d,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<c:int,(c - d):int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
108	-1	107	333
112	NULL	110	111
117	2	116	222
124	NULL	123	333
129	3	127	222
131	-2	132	222
139	4	138	333
140	-2	144	444
146	NULL	145	111
153	NULL	151	333
159	NULL	155	222
163	-1	161	333
168	3	167	444
172	-1	171	333
179	NULL	177	333
182	-1	181	333
186	-3	187	222
193	1	190	111
198	2	199	333
203	2	NULL	444
213	1	214	444
216	-1	218	444
222	2	223	333
228	-1	226	222
232	2	234	444
239	NULL	237	333
240	-3	NULL	444
247	-2	246	222
NULL	NULL	208	444
NULL	NULL	NULL	444


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<e:int,b:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
104	102	555	NULL	444
105	106	222	-1	333
113	114	555	NULL	111
121	122	222	NULL	333
125	128	111	3	222
130	134	333	-2	222
137	136	222	4	333
143	141	555	-2	444
147	149	222	NULL	111
158	157	555	NULL	222
162	160	444	-1	333
166	NULL	222	3	444
174	170	222	-1	333
175	176	555	NULL	333
184	180	222	-1	333
185	188	111	-3	222
191	194	444	1	111
195	197	555	2	333
204	202	555	2	444
207	NULL	555	NULL	444
211	210	555	1	444
219	215	444	-1	444
224	221	444	2	333
225	227	111	-1	222
233	231	555	2	444
238	236	444	NULL	333
245	248	222	-2	222
NULL	119	222	2	222
NULL	150	555	NULL	333
NULL	244	555	-3	444


-- !query
SELECT (a+b+c+d+e)/5,
       a,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
   AND a>b
   AND a IS NULL
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output



-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       d
  FROM t1
 WHERE (e>a AND e<b)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR a>b
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,d:int>
-- !query output
107.0	1060	643	109
127.0	1280	770	126
132.0	1340	793	133
137.0	1360	827	135
142.0	1410	846	142
162.0	1600	970	164
172.0	1700	1027	173
182.0	362	1087	183
187.0	374	1121	189
192.0	380	1157	192
197.0	398	1187	196
212.0	428	1273	212
217.0	436	1296	217
222.0	446	1331	220
227.0	452	1364	229
232.0	468	1392	230
247.0	492	1483	249
NULL	1140	674	NULL
NULL	1190	705	115
NULL	1220	739	NULL
NULL	1490	881	NULL
NULL	1500	910	NULL
NULL	1570	946	NULL
NULL	354	1066	NULL
NULL	474	1426	NULL
NULL	NULL	NULL	201
NULL	NULL	NULL	243


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       b-c,
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       b-c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND coalesce(a,b,c,d,e)<>0
   AND (e>c OR e<d)
-- !query schema
struct<abs((b - c)):int,(b - c):int>
-- !query output
1	-1
1	-1
1	-1
1	-1
1	-1
1	-1
1	1
1	1
1	1
2	-2
2	-2
2	-2
2	2
3	-3
3	-3


-- !query
SELECT b-c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<(b - c):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
-1	197.0
-1	217.0
-1	222.0
-1	227.0
-1	232.0
-1	NULL
-2	107.0
-2	172.0
-2	182.0
-3	162.0
-3	212.0
1	142.0
1	192.0
1	247.0
2	187.0
2	NULL


-- !query
SELECT a-b,
       d-e,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       d,
       abs(b-c),
       e,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,d:int,abs((b - c)):int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	-1	126	1	125	1899
111	-1	229	1	225	3405
111	2	189	2	185	2802
222	-2	109	2	105	1604
222	-2	173	2	174	2589
222	-2	183	2	184	2739
222	-2	NULL	2	121	NULL
222	-3	135	3	137	2052
222	1	249	1	245	3704
222	2	115	2	NULL	NULL
222	3	NULL	3	147	NULL
222	NULL	165	NULL	166	NULL
333	3	133	3	130	1975
444	-1	217	1	219	3259
444	-1	220	1	224	3331
444	-3	164	3	162	2436
444	-3	NULL	3	238	NULL
444	1	192	1	191	2880
555	-1	196	1	195	2946
555	-1	201	1	204	NULL
555	-1	230	1	233	3477
555	-2	NULL	2	158	NULL
555	-3	212	3	211	3176
555	-3	NULL	3	175	NULL
555	-3	NULL	3	NULL	NULL
555	1	142	1	143	2129
555	2	NULL	2	113	NULL
555	4	243	4	NULL	NULL
555	NULL	101	NULL	104	NULL
555	NULL	206	NULL	207	NULL


-- !query
SELECT a+b*2
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
338
443
578


-- !query
SELECT a+b*2+c*3,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c BETWEEN b-2 AND d+2
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c),
       c-d
  FROM t1
 WHERE a>b
-- !query schema
struct<a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs((b - c)):int,(c - d):int>
-- !query output
107	1060	2	-1
123	1220	2	NULL
138	1360	3	4
144	1410	1	-2
151	1500	3	NULL
161	1600	3	-1
171	1700	2	-1
177	354	3	NULL
181	362	2	-1
199	398	1	2
214	428	3	1
218	436	1	-1
223	446	1	2
234	468	1	2
237	474	3	NULL


-- !query
SELECT c-d,
       a+b*2+c*3,
       d-e,
       a+b*2+c*3+d*4,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b IS NOT NULL
    OR (e>a AND e<b)
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a,
       a+b*2+c*3,
       a-b
  FROM t1
-- !query schema
struct<(c - d):int,a:int,((a + (b * 2)) + (c * 3)):int,(a - b):int>
-- !query output
-1	107	643	1
-1	161	970	1
-1	171	1027	1
-1	181	1087	1
-1	218	1296	3
-1	226	1364	-1
-2	132	793	-2
-2	144	846	3
-2	246	1483	-2
-3	187	1121	-1
-3	NULL	NULL	NULL
1	190	1157	-4
1	214	1273	4
2	116	705	-3
2	199	1187	2
2	223	1331	2
2	234	1392	3
2	NULL	NULL	NULL
3	127	770	-1
3	167	NULL	NULL
4	138	827	2
NULL	110	674	-4
NULL	123	739	1
NULL	145	881	-4
NULL	151	910	1
NULL	155	946	-2
NULL	177	1066	1
NULL	208	NULL	NULL
NULL	237	1426	1
NULL	NULL	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       a+b*2+c*3,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a IS NULL
    OR c BETWEEN b-2 AND d+2
    OR a>b
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	1877	1121	185	374
111	2280	1364	225	452
222	1079	643	105	1060
222	1165	705	NULL	1190
222	1367	827	137	1360
222	1719	1027	174	1700
222	1819	1087	184	362
222	2479	1483	245	492
222	NULL	739	121	1220
444	1626	970	162	1600
444	1925	1157	191	380
444	2164	1296	219	436
444	2211	1331	224	446
444	NULL	1426	238	474
555	1414	846	143	1410
555	1971	1187	195	398
555	2121	1273	211	428
555	2312	1392	233	468
555	NULL	1066	175	354
555	NULL	910	NULL	1500
555	NULL	NULL	104	1020
555	NULL	NULL	204	NULL
555	NULL	NULL	NULL	NULL


-- !query
SELECT e
  FROM t1
 WHERE c>d
   AND coalesce(a,b,c,d,e)<>0
   AND a>b
-- !query schema
struct<e:int>
-- !query output
137
195
211
224
233


-- !query
SELECT d-e,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       a+b*2+c*3,
       c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<abs(a):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int>
-- !query output
107	109	333	105
110	NULL	111	113
116	115	222	NULL
123	NULL	333	121
127	126	222	125
132	133	222	130
138	135	333	137
144	142	444	143
145	NULL	111	147
151	NULL	333	NULL
155	NULL	222	158
161	164	333	162
167	165	444	166
171	173	333	174
177	NULL	333	175
181	183	333	184
187	189	222	185
190	192	111	191
199	196	333	195
208	206	444	207
214	212	444	211
218	217	444	219
223	220	333	224
226	229	222	225
234	230	444	233
237	NULL	333	238
246	249	222	245
NULL	101	444	104
NULL	201	444	204
NULL	243	444	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       c,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       c-d,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<b:int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
102	NULL	NULL
106	-1	1604
114	NULL	NULL
119	2	NULL
122	NULL	NULL
128	3	1899
134	-2	1975
136	4	2052
141	-2	2129
149	NULL	NULL
150	NULL	NULL
157	NULL	NULL
160	-1	2436
170	-1	2589
176	NULL	NULL
180	-1	2739
188	-3	2802
194	1	2880
197	2	2946
202	2	NULL
210	1	3176
215	-1	3259
221	2	3331
227	-1	3405
231	2	3477
236	NULL	NULL
244	-3	NULL
248	-2	3704
NULL	3	NULL
NULL	NULL	NULL


-- !query
SELECT a,
       a+b*2,
       a-b
  FROM t1
-- !query schema
struct<a:int,(a + (b * 2)):int,(a - b):int>
-- !query output
107	319	1
110	338	-4
116	354	-3
123	367	1
127	383	-1
132	400	-2
138	410	2
144	426	3
145	443	-4
151	451	1
155	469	-2
161	481	1
167	NULL	NULL
171	511	1
177	529	1
181	541	1
187	563	-1
190	578	-4
199	593	2
208	NULL	NULL
214	634	4
218	648	3
223	665	2
226	680	-1
234	696	3
237	709	1
246	742	-2
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c>d
    OR e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a-b,
       (a+b+c+d+e)/5,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<(c - d):int,(a - b):int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
-1	-1	227.0	-1	222
-1	1	107.0	-2	333
-1	1	162.0	-3	333
-1	1	172.0	-2	333
-1	1	182.0	-2	333
-1	3	217.0	-1	444
-2	-2	132.0	3	222
-2	-2	247.0	1	222
-2	3	142.0	1	444
-3	-1	187.0	2	222
-3	NULL	NULL	4	444
1	-4	192.0	1	111
1	4	212.0	-3	444
2	-3	NULL	2	222
2	2	197.0	-1	333
2	2	222.0	-1	333
2	3	232.0	-1	444
2	NULL	NULL	-1	444
3	-1	127.0	-1	222
3	NULL	NULL	NULL	444
4	2	137.0	-3	333
NULL	-2	NULL	-2	222
NULL	-4	NULL	2	111
NULL	-4	NULL	3	111
NULL	1	NULL	-2	333
NULL	1	NULL	-3	333
NULL	1	NULL	-3	333
NULL	1	NULL	-3	333
NULL	NULL	NULL	NULL	444
NULL	NULL	NULL	NULL	444


-- !query
SELECT d-e,
       b-c,
       c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND a>b
   AND a IS NULL
-- !query schema
struct<(d - e):int,(b - c):int,c:int>
-- !query output



-- !query
SELECT a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1604
1899
1975
2052
2129
2436
2589
2739
2802
2880
2946
3176
3259
3331
3405
3477
3704
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int>
-- !query output
107.0	319
127.0	383


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND a IS NULL
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
NULL


-- !query
SELECT b-c,
       e,
       c-d,
       a-b
  FROM t1
 WHERE b>c
    OR a IS NULL
    OR b IS NOT NULL
-- !query schema
struct<(b - c):int,e:int,(c - d):int,(a - b):int>
-- !query output
-1	125	3	-1
-1	195	2	2
-1	204	2	NULL
-1	219	-1	3
-1	224	2	2
-1	225	-1	-1
-1	233	2	3
-2	105	-1	1
-2	121	NULL	1
-2	158	NULL	-2
-2	174	-1	1
-2	184	-1	1
-3	137	4	2
-3	162	-1	1
-3	175	NULL	1
-3	211	1	4
-3	238	NULL	1
-3	NULL	NULL	1
1	143	-2	3
1	191	1	-4
1	245	-2	-2
2	113	NULL	-4
2	185	-3	-1
2	NULL	2	-3
3	130	-2	-2
3	147	NULL	-4
4	NULL	-3	NULL
NULL	104	NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c),
       d
  FROM t1
 WHERE a>b
    OR a IS NULL
    OR b>c
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,d:int>
-- !query output
107.0	2	109
132.0	3	133
137.0	3	135
142.0	1	142
162.0	3	164
172.0	2	173
182.0	2	183
187.0	2	189
192.0	1	192
197.0	1	196
212.0	3	212
217.0	1	217
222.0	1	220
232.0	1	230
247.0	1	249
NULL	1	201
NULL	2	115
NULL	2	NULL
NULL	2	NULL
NULL	3	NULL
NULL	3	NULL
NULL	3	NULL
NULL	3	NULL
NULL	4	243
NULL	NULL	101


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       a-b,
       abs(b-c),
       (a+b+c+d+e)/5
  FROM t1
 WHERE b IS NOT NULL
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,(a - b):int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
111	126	-1	1	127.0
111	189	-1	2	187.0
111	229	-1	1	227.0
222	109	1	2	107.0
222	115	-3	2	NULL
222	135	2	3	137.0
222	165	NULL	NULL	NULL
222	173	1	2	172.0
222	183	1	2	182.0
222	249	-2	1	247.0
222	NULL	-4	3	NULL
222	NULL	1	2	NULL
333	133	-2	3	132.0
444	164	1	3	162.0
444	192	-4	1	192.0
444	217	3	1	217.0
444	220	2	1	222.0
444	NULL	1	3	NULL
555	101	NULL	NULL	NULL
555	142	3	1	142.0
555	196	2	1	197.0
555	201	NULL	1	NULL
555	206	NULL	NULL	NULL
555	212	4	3	212.0
555	230	3	1	232.0
555	243	NULL	4	NULL
555	NULL	-2	2	NULL
555	NULL	-4	2	NULL
555	NULL	1	3	NULL
555	NULL	1	3	NULL


-- !query
SELECT d,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       c,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       abs(b-c)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c)
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs((b - c)):int>
-- !query output
555	1
555	4
555	NULL


-- !query
SELECT a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       a+b*2+c*3,
       b-c,
       a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int,(b - c):int,a:int>
-- !query output
319	333	107.0	643	-2	107
481	333	162.0	970	-3	161
511	333	172.0	1027	-2	171
541	333	182.0	1087	-2	181
563	222	187.0	1121	2	187
578	111	192.0	1157	1	190
593	333	197.0	1187	-1	199
634	444	212.0	1273	-3	214
648	444	217.0	1296	-1	218
665	333	222.0	1331	-1	223
680	222	227.0	1364	-1	226
696	444	232.0	1392	-1	234
742	222	247.0	1483	1	246
NULL	444	NULL	NULL	-1	NULL
NULL	444	NULL	NULL	4	NULL
NULL	444	NULL	NULL	NULL	167
NULL	444	NULL	NULL	NULL	208
NULL	444	NULL	NULL	NULL	NULL


-- !query
SELECT abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       abs(b-c),
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>c OR e<d)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       b,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND coalesce(a,b,c,d,e)<>0
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a-b,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       d,
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
   AND b IS NOT NULL
-- !query schema
struct<(c - d):int,(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,d:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-3	-1	2802	222	2	189	1121


-- !query
SELECT a-b,
       b,
       a+b*2,
       a+b*2+c*3+d*4+e*5,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<(a - b):int,b:int,(a + (b * 2)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-1	128	383	1899	1	1280
-1	188	563	2802	4	374
-1	227	680	3405	4	452
-2	134	400	1975	3	1340
-2	248	742	3704	4	492
-4	194	578	2880	1	380
1	106	319	1604	4	1060
1	160	481	2436	2	1600
2	197	593	2946	1	398
4	210	634	3176	1	428


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
127.0	222
137.0	333
192.0	111
197.0	333
212.0	444
222.0	333
232.0	444
NULL	222
NULL	444
NULL	444


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d>e
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       d,
       a+b*2+c*3,
       c,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       a
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs(a):int,a:int>
-- !query output
1079	319	4	1060	107	107
1165	354	NULL	1190	116	116
1274	383	1	1280	127	127
1325	400	3	1340	132	132
1367	410	-2	1360	138	138
1414	426	-1	1410	144	144
1626	481	2	1600	161	161
1719	511	-1	1700	171	171
1819	541	-1	362	181	181
1877	563	4	374	187	187
1925	578	1	380	190	190
1971	593	1	398	199	199
2121	634	1	428	214	214
2164	648	-2	436	218	218
2211	665	-4	446	223	223
2280	680	4	452	226	226
2312	696	-3	468	234	234
2479	742	4	492	246	246
NULL	338	NULL	1140	110	110
NULL	367	NULL	1220	123	123
NULL	443	NULL	1490	145	145
NULL	451	NULL	1500	151	151
NULL	469	NULL	1570	155	155
NULL	529	NULL	354	177	177
NULL	709	NULL	474	237	237
NULL	NULL	-1	NULL	167	167
NULL	NULL	-1	NULL	208	208
NULL	NULL	-3	1020	NULL	NULL
NULL	NULL	-3	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1027	172.0
1087	182.0
1121	187.0
1157	192.0
1187	197.0
1273	212.0
1296	217.0
1331	222.0
1364	227.0
1392	232.0
1483	247.0
643	107.0
674	NULL
770	127.0
793	132.0
846	142.0
881	NULL
970	162.0
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1604	107	2	1079
1899	127	1	1274
1975	132	3	1325
2129	144	1	1414
2436	161	3	1626
2589	171	2	1719
2739	181	2	1819
2802	187	2	1877
2880	190	1	1925
2946	199	1	1971
3176	214	3	2121
3259	218	1	2164
3331	223	1	2211
3405	226	1	2280
3477	234	1	2312
3704	246	1	2479
NULL	110	2	NULL
NULL	145	3	NULL
NULL	NULL	1	NULL


-- !query
SELECT abs(b-c),
       abs(a),
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<abs((b - c)):int,abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,(c - d):int>
-- !query output
1	127	1899	770	3
1	144	2129	846	-2
1	190	2880	1157	1
1	199	2946	1187	2
1	218	3259	1296	-1
1	223	3331	1331	2
1	226	3405	1364	-1
1	234	3477	1392	2
1	246	3704	1483	-2
1	NULL	NULL	NULL	2
2	107	1604	643	-1
2	110	NULL	674	NULL
2	116	NULL	705	2
2	123	NULL	739	NULL
2	155	NULL	946	NULL
2	171	2589	1027	-1
2	181	2739	1087	-1
2	187	2802	1121	-3
3	132	1975	793	-2
3	138	2052	827	4
3	145	NULL	881	NULL
3	151	NULL	910	NULL
3	161	2436	970	-1
3	177	NULL	1066	NULL
3	214	3176	1273	1
3	237	NULL	1426	NULL
4	NULL	NULL	NULL	-3
NULL	167	NULL	NULL	3
NULL	208	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d,
       b-c,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b IS NOT NULL
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>a AND e<b)
    OR a IS NULL
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
338	2	111	-4	1140
443	3	111	-4	1490
578	1	111	-4	380
NULL	1	444	NULL	NULL
NULL	4	444	NULL	NULL
NULL	NULL	444	NULL	1020


-- !query
SELECT a,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d
  FROM t1
 WHERE c>d
    OR b>c
-- !query schema
struct<d:int>
-- !query output
115
126
133
135
142
165
189
192
196
201
212
220
230
243
249
NULL
NULL


-- !query
SELECT d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       c,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int,c:int,a:int>
-- !query output
-1	444	426	555	-2	140	144
-1	444	NULL	222	3	168	167
-2	333	410	222	4	139	138
-3	444	696	555	2	232	234
-3	444	NULL	555	2	203	NULL
-4	333	665	444	2	222	223
1	222	383	111	3	129	127
1	333	593	555	2	198	199
3	222	400	333	-2	131	132
4	222	563	111	-3	186	187
4	222	742	222	-2	247	246
NULL	222	354	222	2	117	116
NULL	444	NULL	555	-3	240	NULL


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       d-e,
       abs(a),
       a+b*2+c*3
  FROM t1
 WHERE b>c
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (a+b+c+d+e)/5,
       b-c,
       e,
       abs(b-c),
       c-d,
       b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (e>c OR e<d)
   AND b>c
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int,e:int,abs((b - c)):int,(c - d):int,b:int>
-- !query output



-- !query
SELECT a+b*2+c*3+d*4+e*5,
       c,
       abs(a),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,c:int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
2129	140	144	1414	555
2802	186	187	1877	111
2880	193	190	1925	444
3704	247	246	2479	222
NULL	117	116	1165	222


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1121	2802	111
1157	2880	444
1187	2946	555
1273	3176	555
1364	3405	111
1483	3704	222
643	1604	222
770	1899	111
793	1975	333
970	2436	444


-- !query
SELECT e,
       d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
    OR c BETWEEN b-2 AND d+2
    OR (e>a AND e<b)
-- !query schema
struct<e:int,(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
105	4	333	1	-2	1060
113	NULL	111	-4	2	1140
125	1	222	-1	-1	1280
130	3	222	-2	3	1340
143	-1	444	3	1	1410
147	NULL	111	-4	3	1490
162	2	333	1	-3	1600
174	-1	333	1	-2	1700
184	-1	333	1	-2	362
185	4	222	-1	2	374
191	1	111	-4	1	380
195	1	333	2	-1	398
204	-3	444	NULL	-1	NULL
211	1	444	4	-3	428
219	-2	444	3	-1	436
224	-4	333	2	-1	446
225	4	222	-1	-1	452
233	-3	444	3	-1	468
245	4	222	-2	1	492
NULL	NULL	222	-3	2	1190


-- !query
SELECT a+b*2+c*3,
       a-b,
       d-e
  FROM t1
 WHERE a IS NULL
    OR b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(a - b):int,(d - e):int>
-- !query output
1027	1	-1
1087	1	-1
1121	-1	4
1157	-4	1
1187	2	1
1273	4	1
1296	3	-2
1331	2	-4
1364	-1	4
1392	3	-3
1483	-2	4
643	1	4
674	-4	NULL
705	-3	NULL
793	-2	3
846	3	-1
881	-4	NULL
970	1	2
NULL	NULL	-3
NULL	NULL	-3
NULL	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
333
333
333
333
333
333
444
444
444
444
444


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	113	NULL
111	147	NULL
111	191	2880
222	125	1899
222	130	1975
222	158	NULL
222	185	2802
222	225	3405
222	245	3704
222	NULL	NULL
333	105	1604
333	121	NULL
333	137	2052
333	162	2436
333	174	2589
333	175	NULL
333	184	2739
333	195	2946
333	224	3331
333	238	NULL
333	NULL	NULL
444	104	NULL
444	143	2129
444	166	NULL
444	204	NULL
444	207	NULL
444	211	3176
444	219	3259
444	233	3477
444	NULL	NULL


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       a-b
  FROM t1
-- !query schema
struct<(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,(a - b):int>
-- !query output
-1	111	229	-1
-1	222	109	1
-1	222	173	1
-1	222	183	1
-1	444	164	1
-1	444	217	3
-2	222	249	-2
-2	333	133	-2
-2	555	142	3
-3	111	189	-1
-3	555	243	NULL
1	444	192	-4
1	555	212	4
2	222	115	-3
2	444	220	2
2	555	196	2
2	555	201	NULL
2	555	230	3
3	111	126	-1
3	222	165	NULL
4	222	135	2
NULL	222	NULL	-4
NULL	222	NULL	1
NULL	444	NULL	1
NULL	555	101	NULL
NULL	555	206	NULL
NULL	555	NULL	-2
NULL	555	NULL	-4
NULL	555	NULL	1
NULL	555	NULL	1


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       d-e,
       c,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,(d - e):int,c:int,(a + (b * 2)):int>
-- !query output
1060	1	4	108	319
1220	1	NULL	124	367
1280	-1	1	129	383
1500	1	NULL	153	451
1600	1	2	163	481
1700	1	-1	172	511
354	1	NULL	179	529
362	1	-1	182	541
374	-1	4	186	563
452	-1	4	228	680
474	1	NULL	239	709


-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       c-d,
       b-c,
       abs(a),
       e
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int,(b - c):int,abs(a):int,e:int>
-- !query output
NULL	NULL	-3	4	NULL	NULL
NULL	NULL	2	-1	NULL	204
NULL	NULL	NULL	NULL	NULL	104


-- !query
SELECT d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<d:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
109	222
126	111
133	333
164	444
189	111
192	444
196	555
212	555
229	111
249	222


-- !query
SELECT b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2
  FROM t1
-- !query schema
struct<b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int>
-- !query output
102	444	NULL
106	333	319
114	111	338
119	222	354
122	333	367
128	222	383
134	222	400
136	333	410
141	444	426
149	111	443
150	333	451
157	222	469
160	333	481
170	333	511
176	333	529
180	333	541
188	222	563
194	111	578
197	333	593
202	444	NULL
210	444	634
215	444	648
221	333	665
227	222	680
231	444	696
236	333	709
244	444	NULL
248	222	742
NULL	444	NULL
NULL	444	NULL


-- !query
SELECT b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a IS NULL
-- !query schema
struct<b:int>
-- !query output
202
244


-- !query
SELECT c-d,
       abs(a),
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<(c - d):int,abs(a):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-1	107	643	333	1060
-1	161	970	333	1600
-1	171	1027	333	1700
-1	181	1087	333	362
-1	218	1296	444	436
-1	226	1364	222	452
-2	132	793	222	1340
-2	144	846	444	1410
-2	246	1483	222	492
-3	187	1121	222	374
-3	NULL	NULL	444	NULL
1	190	1157	111	380
1	214	1273	444	428
2	116	705	222	1190
2	199	1187	333	398
2	223	1331	333	446
2	234	1392	444	468
2	NULL	NULL	444	NULL
3	127	770	222	1280
3	167	NULL	444	NULL
4	138	827	333	1360
NULL	110	674	111	1140
NULL	123	739	333	1220
NULL	145	881	111	1490
NULL	151	910	333	1500
NULL	155	946	222	1570
NULL	177	1066	333	354
NULL	208	NULL	444	NULL
NULL	237	1426	333	474
NULL	NULL	NULL	444	1020


-- !query
SELECT abs(b-c),
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       b-c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<d:int,c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
101	NULL	444
109	108	333
115	117	222
126	129	222
133	131	222
135	139	333
142	140	444
164	163	333
165	168	444
173	172	333
183	182	333
189	186	222
192	193	111
196	198	333
201	203	444
206	NULL	444
212	213	444
217	216	444
220	222	333
229	228	222
230	232	444
243	240	444
249	247	222
NULL	112	111
NULL	124	333
NULL	146	111
NULL	153	333
NULL	159	222
NULL	179	333
NULL	239	333


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1140
1490
380


-- !query
SELECT a+b*2+c*3,
       abs(b-c),
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,(a + (b * 2)):int>
-- !query output
1027	2	511
1087	2	541
1121	2	563
1157	1	578
1187	1	593
1273	3	634
1296	1	648
1331	1	665
1364	1	680
1392	1	696
1483	1	742
643	2	319
705	2	354
846	1	426
970	3	481
NULL	1	NULL


-- !query
SELECT d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<d:int>
-- !query output
109
126
164
173
183
189
229
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4,
       c-d,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1079	-1	643
1165	2	705
1274	3	770
1325	-2	793
1367	4	827
1414	-2	846
1626	-1	970
1719	-1	1027
1819	-1	1087
1877	-3	1121
1925	1	1157
1971	2	1187
2121	1	1273
2164	-1	1296
2211	2	1331
2280	-1	1364
2312	2	1392
2479	-2	1483
NULL	-3	NULL
NULL	2	NULL
NULL	3	NULL
NULL	NULL	1066
NULL	NULL	1426
NULL	NULL	674
NULL	NULL	739
NULL	NULL	881
NULL	NULL	910
NULL	NULL	946
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c),
       a+b*2,
       d-e,
       a+b*2+c*3+d*4
  FROM t1
 WHERE c>d
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,(a + (b * 2)):int,(d - e):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
127.0	1	383	1	1274
137.0	3	410	-2	1367
192.0	1	578	1	1925
197.0	1	593	1	1971
212.0	3	634	1	2121
222.0	1	665	-4	2211
232.0	1	696	-3	2312
NULL	1	NULL	-3	NULL
NULL	2	354	NULL	1165
NULL	NULL	NULL	-1	NULL


-- !query
SELECT a-b,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107.0
127.0
132.0
137.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       a
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR d>e
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444
444
444
444


-- !query
SELECT a+b*2+c*3,
       abs(a),
       c,
       a+b*2+c*3+d*4,
       e,
       a,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE a IS NULL
   AND coalesce(a,b,c,d,e)<>0
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs(a):int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
NULL	NULL	203	NULL	204	NULL	NULL
NULL	NULL	240	NULL	NULL	NULL	NULL


-- !query
SELECT c-d,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND (a>b-2 AND a<b+2)
   AND d>e
-- !query schema
struct<(c - d):int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-1	-1	222	228	3405	452
-1	-2	333	108	1604	1060
-1	-3	333	163	2436	1600
-3	2	222	186	2802	374


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       a-b,
       a+b*2,
       b,
       c-d
  FROM t1
 WHERE a>b
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,(a - b):int,(a + (b * 2)):int,b:int,(c - d):int>
-- !query output
1604	107	1	319	106	-1
2129	144	3	426	141	-2
2436	161	1	481	160	-1
2589	171	1	511	170	-1
2739	181	1	541	180	-1
2946	199	2	593	197	2
3176	214	4	634	210	1
3259	218	3	648	215	-1
3331	223	2	665	221	2
3477	234	3	696	231	2


-- !query
SELECT c-d,
       e,
       a+b*2+c*3+d*4,
       c,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       d-e,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       b
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR b>c
    OR a>b
-- !query schema
struct<d:int,(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,b:int>
-- !query output
101	-3	NULL	NULL	444	NULL	102
109	4	1604	107	333	319	106
115	NULL	NULL	116	222	354	119
126	1	1899	127	222	383	128
133	3	1975	132	222	400	134
135	-2	2052	138	333	410	136
142	-1	2129	144	444	426	141
164	2	2436	161	333	481	160
165	-1	NULL	167	444	NULL	NULL
173	-1	2589	171	333	511	170
183	-1	2739	181	333	541	180
189	4	2802	187	222	563	188
192	1	2880	190	111	578	194
196	1	2946	199	333	593	197
201	-3	NULL	NULL	444	NULL	202
206	-1	NULL	208	444	NULL	NULL
212	1	3176	214	444	634	210
217	-2	3259	218	444	648	215
220	-4	3331	223	333	665	221
229	4	3405	226	222	680	227
230	-3	3477	234	444	696	231
243	NULL	NULL	NULL	444	NULL	244
249	4	3704	246	222	742	248
NULL	NULL	NULL	110	111	338	114
NULL	NULL	NULL	123	333	367	122
NULL	NULL	NULL	145	111	443	149
NULL	NULL	NULL	151	333	451	150
NULL	NULL	NULL	155	222	469	157
NULL	NULL	NULL	177	333	529	176
NULL	NULL	NULL	237	333	709	236


-- !query
SELECT d,
       c,
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a),
       e
  FROM t1
-- !query schema
struct<d:int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int,e:int>
-- !query output
101	NULL	NULL	555	NULL	104
109	108	1079	222	107	105
115	117	1165	222	116	NULL
126	129	1274	111	127	125
133	131	1325	333	132	130
135	139	1367	222	138	137
142	140	1414	555	144	143
164	163	1626	444	161	162
165	168	NULL	222	167	166
173	172	1719	222	171	174
183	182	1819	222	181	184
189	186	1877	111	187	185
192	193	1925	444	190	191
196	198	1971	555	199	195
201	203	NULL	555	NULL	204
206	NULL	NULL	555	208	207
212	213	2121	555	214	211
217	216	2164	444	218	219
220	222	2211	444	223	224
229	228	2280	111	226	225
230	232	2312	555	234	233
243	240	NULL	555	NULL	NULL
249	247	2479	222	246	245
NULL	112	NULL	555	110	113
NULL	124	NULL	222	123	121
NULL	146	NULL	222	145	147
NULL	153	NULL	555	151	NULL
NULL	159	NULL	555	155	158
NULL	179	NULL	555	177	175
NULL	239	NULL	444	237	238


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>a AND e<b)
    OR b IS NOT NULL
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,d:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1604	1060	105	109	1079
1899	1280	125	126	1274
1975	1340	130	133	1325
2052	1360	137	135	1367
2129	1410	143	142	1414
2436	1600	162	164	1626
2589	1700	174	173	1719
2739	362	184	183	1819
2802	374	185	189	1877
2880	380	191	192	1925
2946	398	195	196	1971
3176	428	211	212	2121
3259	436	219	217	2164
3331	446	224	220	2211
3405	452	225	229	2280
3477	468	233	230	2312
3704	492	245	249	2479
NULL	1020	104	101	NULL
NULL	1140	113	NULL	NULL
NULL	1190	NULL	115	1165
NULL	1220	121	NULL	NULL
NULL	1490	147	NULL	NULL
NULL	1500	NULL	NULL	NULL
NULL	1570	158	NULL	NULL
NULL	354	175	NULL	NULL
NULL	474	238	NULL	NULL
NULL	NULL	166	165	NULL
NULL	NULL	204	201	NULL
NULL	NULL	NULL	243	NULL


-- !query
SELECT d,
       e,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       c-d
  FROM t1
-- !query schema
struct<d:int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,(c - d):int>
-- !query output
101	104	NULL	NULL	NULL
109	105	1604	107	-1
115	NULL	NULL	116	2
126	125	1899	127	3
133	130	1975	132	-2
135	137	2052	138	4
142	143	2129	144	-2
164	162	2436	161	-1
165	166	NULL	167	3
173	174	2589	171	-1
183	184	2739	181	-1
189	185	2802	187	-3
192	191	2880	190	1
196	195	2946	199	2
201	204	NULL	NULL	2
206	207	NULL	208	NULL
212	211	3176	214	1
217	219	3259	218	-1
220	224	3331	223	2
229	225	3405	226	-1
230	233	3477	234	2
243	NULL	NULL	NULL	-3
249	245	3704	246	-2
NULL	113	NULL	110	NULL
NULL	121	NULL	123	NULL
NULL	147	NULL	145	NULL
NULL	158	NULL	155	NULL
NULL	175	NULL	177	NULL
NULL	238	NULL	237	NULL
NULL	NULL	NULL	151	NULL


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       a-b,
       abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<e:int,(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int,abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
104	NULL	1020	NULL	NULL	NULL	555
105	319	1060	107.0	1	107	222
113	338	1140	NULL	-4	110	555
121	367	1220	NULL	1	123	222
125	383	1280	127.0	-1	127	111
130	400	1340	132.0	-2	132	333
137	410	1360	137.0	2	138	222
143	426	1410	142.0	3	144	555
147	443	1490	NULL	-4	145	222
158	469	1570	NULL	-2	155	555
162	481	1600	162.0	1	161	444
166	NULL	NULL	NULL	NULL	167	222
174	511	1700	172.0	1	171	222
175	529	354	NULL	1	177	555
184	541	362	182.0	1	181	222
185	563	374	187.0	-1	187	111
191	578	380	192.0	-4	190	444
195	593	398	197.0	2	199	555
204	NULL	NULL	NULL	NULL	NULL	555
207	NULL	NULL	NULL	NULL	208	555
211	634	428	212.0	4	214	555
219	648	436	217.0	3	218	444
224	665	446	222.0	2	223	444
225	680	452	227.0	-1	226	111
233	696	468	232.0	3	234	555
238	709	474	NULL	1	237	444
245	742	492	247.0	-2	246	222
NULL	354	1190	NULL	-3	116	222
NULL	451	1500	NULL	1	151	555
NULL	NULL	NULL	NULL	NULL	NULL	555


-- !query
SELECT c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
    OR a IS NULL
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	1079
-1	1626
-1	1719
-1	1819
-1	2164
-1	2280
-2	1325
-2	1414
-2	2479
-3	1877
-3	NULL
1	1925
1	2121
2	1165
2	1971
2	2211
2	2312
2	NULL
3	1274
4	1367
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT e,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE b>c
   AND d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1066
1087
1121
1157
1187
1273
1296
1331
1364
1392
1426
1483
643
674
705
739
770
793
827
846
881
910
946
970
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       abs(a),
       d-e,
       b-c,
       a
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int,(d - e):int,(b - c):int,a:int>
-- !query output
222	111	127.0	127	1	-1	127
222	111	187.0	187	4	2	187
222	111	227.0	226	4	-1	226
333	222	107.0	107	4	-2	107
333	222	172.0	171	-1	-2	171
333	222	182.0	181	-1	-2	181
333	222	NULL	123	NULL	-2	123
333	444	162.0	161	2	-3	161
333	444	NULL	237	NULL	-3	237
333	555	NULL	151	NULL	-3	151
333	555	NULL	177	NULL	-3	177


-- !query
SELECT b-c,
       abs(b-c),
       a-b
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(b - c):int,abs((b - c)):int,(a - b):int>
-- !query output
-1	1	-1
-1	1	-1
-1	1	2
-1	1	2
-1	1	3
-1	1	3
-1	1	NULL
-2	2	-2
-2	2	1
-2	2	1
-2	2	1
-2	2	1
-3	3	1
-3	3	1
-3	3	1
-3	3	1
-3	3	2
-3	3	4
1	1	-2
1	1	-4
1	1	3
2	2	-1
2	2	-3
2	2	-4
3	3	-2
3	3	-4
4	4	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       c,
       b,
       a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       a+b*2+c*3+d*4,
       e,
       b-c
  FROM t1
 WHERE a IS NULL
    OR coalesce(a,b,c,d,e)<>0
    OR b>c
-- !query schema
struct<abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,(b - c):int>
-- !query output
1	1274	125	-1
1	1414	143	1
1	1925	191	1
1	1971	195	-1
1	2164	219	-1
1	2211	224	-1
1	2280	225	-1
1	2312	233	-1
1	2479	245	1
1	NULL	204	-1
2	1079	105	-2
2	1165	NULL	2
2	1719	174	-2
2	1819	184	-2
2	1877	185	2
2	NULL	113	2
2	NULL	121	-2
2	NULL	158	-2
3	1325	130	3
3	1367	137	-3
3	1626	162	-3
3	2121	211	-3
3	NULL	147	3
3	NULL	175	-3
3	NULL	238	-3
3	NULL	NULL	-3
4	NULL	NULL	4
NULL	NULL	104	NULL
NULL	NULL	166	NULL
NULL	NULL	207	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a-b
  FROM t1
 WHERE d>e
-- !query schema
struct<(c - d):int,(a - b):int>
-- !query output
-1	-1
-1	1
-1	1
-2	-2
-2	-2
-3	-1
1	-4
1	4
2	2
3	-1


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3,
       c-d,
       d-e,
       a+b*2
  FROM t1
 WHERE d>e
    OR (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int,(c - d):int,(d - e):int,(a + (b * 2)):int>
-- !query output
1020	NULL	NULL	-3	NULL
1060	643	-1	4	319
1140	674	NULL	NULL	338
1280	770	3	1	383
1340	793	-2	3	400
1410	846	-2	-1	426
1490	881	NULL	NULL	443
1600	970	-1	2	481
1700	1027	-1	-1	511
362	1087	-1	-1	541
374	1121	-3	4	563
380	1157	1	1	578
398	1187	2	1	593
428	1273	1	1	634
436	1296	-1	-2	648
446	1331	2	-4	665
452	1364	-1	4	680
468	1392	2	-3	696
492	1483	-2	4	742
NULL	NULL	-3	NULL	NULL
NULL	NULL	2	-3	NULL
NULL	NULL	3	-1	NULL
NULL	NULL	NULL	-1	NULL


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       a+b*2,
       d-e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d
  FROM t1
 WHERE c>d
    OR (c<=d-2 OR c>=d+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       a
  FROM t1
 WHERE (e>c OR e<d)
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1020	NULL
1060	1079
1140	NULL
1190	1165
1220	NULL
1280	1274
1340	1325
1360	1367
1410	1414
1490	NULL
1500	NULL
1570	NULL
1600	1626
1700	1719
354	NULL
362	1819
374	1877
380	1925
398	1971
428	2121
436	2164
446	2211
452	2280
468	2312
474	NULL
492	2479
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT e,
       c-d
  FROM t1
-- !query schema
struct<e:int,(c - d):int>
-- !query output
104	NULL
105	-1
113	NULL
121	NULL
125	3
130	-2
137	4
143	-2
147	NULL
158	NULL
162	-1
166	3
174	-1
175	NULL
184	-1
185	-3
191	1
195	2
204	2
207	NULL
211	1
219	-1
224	2
225	-1
233	2
238	NULL
245	-2
NULL	-3
NULL	2
NULL	NULL


-- !query
SELECT d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR c>d
-- !query schema
struct<d:int>
-- !query output
109
115
126
135
142
164
165
173
183
189
192
196
201
212
217
220
229
230
249


-- !query
SELECT abs(a)
  FROM t1
-- !query schema
struct<abs(a):int>
-- !query output
107
110
116
123
127
132
138
144
145
151
155
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<a:int,(a - b):int>
-- !query output
107	1
110	-4
116	-3
123	1
127	-1
132	-2
138	2
144	3
145	-4
151	1
155	-2
161	1
171	1
177	1
181	1
187	-1
190	-4
199	2
214	4
218	3
223	2
226	-1
234	3
237	1
246	-2
NULL	NULL
NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       abs(a)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<(d - e):int,(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,e:int>
-- !query output
-1	-2	1700	333	171	174
-1	-2	362	333	181	184
-1	NULL	NULL	444	167	166
-1	NULL	NULL	444	208	207
-2	-1	436	444	218	219
-3	-1	468	444	234	233
-3	-1	NULL	444	NULL	204
-3	NULL	1020	444	NULL	104
-4	-1	446	333	223	224
1	-1	398	333	199	195
1	-3	428	444	214	211
1	1	380	111	190	191
2	-3	1600	333	161	162
4	-1	452	222	226	225
4	-2	1060	333	107	105
4	1	492	222	246	245
4	2	374	222	187	185
NULL	4	NULL	444	NULL	NULL


-- !query
SELECT abs(a),
       b,
       abs(b-c),
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<abs(a):int,b:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int>
-- !query output
107	106	2	643	222	319
123	122	2	739	222	367
127	128	1	770	111	383
151	150	3	910	555	451
161	160	3	970	444	481
171	170	2	1027	222	511
177	176	3	1066	555	529
181	180	2	1087	222	541
187	188	2	1121	111	563
226	227	1	1364	111	680
237	236	3	1426	444	709


-- !query
SELECT c-d,
       a+b*2+c*3+d*4,
       a,
       b-c
  FROM t1
-- !query schema
struct<(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,(b - c):int>
-- !query output
-1	1079	107	-2
-1	1626	161	-3
-1	1719	171	-2
-1	1819	181	-2
-1	2164	218	-1
-1	2280	226	-1
-2	1325	132	3
-2	1414	144	1
-2	2479	246	1
-3	1877	187	2
-3	NULL	NULL	4
1	1925	190	1
1	2121	214	-3
2	1165	116	2
2	1971	199	-1
2	2211	223	-1
2	2312	234	-1
2	NULL	NULL	-1
3	1274	127	-1
3	NULL	167	NULL
4	1367	138	-3
NULL	NULL	110	2
NULL	NULL	123	-2
NULL	NULL	145	3
NULL	NULL	151	-3
NULL	NULL	155	-2
NULL	NULL	177	-3
NULL	NULL	208	NULL
NULL	NULL	237	-3
NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2,
       abs(a),
       b,
       c,
       d,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c BETWEEN b-2 AND d+2
   AND b IS NOT NULL
-- !query schema
struct<(a + (b * 2)):int,abs(a):int,b:int,c:int,d:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
354	116	119	117	115	705
426	144	141	140	142	846
563	187	188	186	189	1121
593	199	197	198	196	1187
665	223	221	222	220	1331
696	234	231	232	230	1392
742	246	248	247	249	1483
NULL	NULL	202	203	201	NULL


-- !query
SELECT d-e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(d - e):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	333	1719
-1	333	1819
-1	444	1414
-1	444	NULL
-1	444	NULL
-2	333	1367
-2	444	2164
-3	444	2312
-3	444	NULL
-3	444	NULL
-4	333	2211
1	111	1925
1	222	1274
1	333	1971
1	444	2121
2	333	1626
3	222	1325
4	222	1877
4	222	2280
4	222	2479
4	333	1079
NULL	111	NULL
NULL	111	NULL
NULL	222	1165
NULL	222	NULL
NULL	333	NULL
NULL	333	NULL
NULL	333	NULL
NULL	333	NULL
NULL	444	NULL


-- !query
SELECT e,
       a-b,
       b-c,
       b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE a>b
-- !query schema
struct<e:int,(a - b):int,(b - c):int,b:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
105	1	-2	106	107.0
121	1	-2	122	NULL
137	2	-3	136	137.0
143	3	1	141	142.0
162	1	-3	160	162.0
174	1	-2	170	172.0
175	1	-3	176	NULL
184	1	-2	180	182.0
195	2	-1	197	197.0
211	4	-3	210	212.0
219	3	-1	215	217.0
224	2	-1	221	222.0
233	3	-1	231	232.0
238	1	-3	236	NULL
NULL	1	-3	150	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       c-d,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a + (b * 2)):int,abs(a):int>
-- !query output
319	107
481	161
511	171
541	181
563	187
578	190
593	199
634	214
648	218
665	223
680	226
696	234
742	246
NULL	167
NULL	208
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a)
  FROM t1
 WHERE a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5,
       d-e,
       a,
       a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double,(d - e):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
111	192.0	1	190	1157
111	NULL	NULL	110	674
111	NULL	NULL	145	881
222	127.0	1	127	770
222	132.0	3	132	793
222	187.0	4	187	1121
222	227.0	4	226	1364
222	247.0	4	246	1483
222	NULL	NULL	116	705
222	NULL	NULL	155	946
333	107.0	4	107	643
333	137.0	-2	138	827
333	162.0	2	161	970
333	172.0	-1	171	1027
333	182.0	-1	181	1087
333	197.0	1	199	1187
333	222.0	-4	223	1331
333	NULL	NULL	123	739
333	NULL	NULL	151	910
333	NULL	NULL	177	1066
333	NULL	NULL	237	1426
444	142.0	-1	144	846
444	212.0	1	214	1273
444	217.0	-2	218	1296
444	232.0	-3	234	1392
444	NULL	-3	NULL	NULL
444	NULL	NULL	NULL	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       a,
       d-e,
       e,
       c
  FROM t1
 WHERE c>d
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int,a:int,(d - e):int,e:int,c:int>
-- !query output
111	194	190	1	191	193
222	119	116	NULL	NULL	117
222	128	127	1	125	129
333	136	138	-2	137	139
333	197	199	1	195	198
333	221	223	-4	224	222
444	202	NULL	-3	204	203
444	210	214	1	211	213
444	231	234	-3	233	232
444	NULL	167	-1	166	168


-- !query
SELECT b,
       c,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR b>c
-- !query schema
struct<b:int,c:int,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
106	108	2	333	1	105	1604
114	112	2	111	-4	113	NULL
119	117	2	222	-3	NULL	NULL
122	124	2	333	1	121	NULL
128	129	1	222	-1	125	1899
134	131	3	222	-2	130	1975
141	140	1	444	3	143	2129
149	146	3	111	-4	147	NULL
150	153	3	333	1	NULL	NULL
160	163	3	333	1	162	2436
170	172	2	333	1	174	2589
176	179	3	333	1	175	NULL
180	182	2	333	1	184	2739
188	186	2	222	-1	185	2802
194	193	1	111	-4	191	2880
227	228	1	222	-1	225	3405
236	239	3	333	1	238	NULL
244	240	4	444	NULL	NULL	NULL
248	247	1	222	-2	245	3704


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       abs(a),
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a IS NULL
   AND (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       c-d,
       b,
       a+b*2,
       b-c,
       a-b
  FROM t1
 WHERE b IS NOT NULL
   AND b>c
-- !query schema
struct<a:int,(c - d):int,b:int,(a + (b * 2)):int,(b - c):int,(a - b):int>
-- !query output
110	NULL	114	338	2	-4
116	2	119	354	2	-3
132	-2	134	400	3	-2
144	-2	141	426	1	3
145	NULL	149	443	3	-4
187	-3	188	563	2	-1
190	1	194	578	1	-4
246	-2	248	742	1	-2
NULL	-3	244	NULL	4	NULL


-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       a,
       abs(b-c)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a + (b * 2)):int,e:int>
-- !query output
319	105
354	NULL
383	125
400	130
410	137
426	143
481	162
511	174
541	184
563	185
578	191
593	195
634	211
648	219
665	224
680	225
696	233
742	245
NULL	104
NULL	166
NULL	204
NULL	207
NULL	NULL


-- !query
SELECT abs(a),
       a+b*2+c*3+d*4,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	1079	109	333
110	NULL	NULL	111
116	1165	115	222
123	NULL	NULL	333
127	1274	126	222
132	1325	133	222
138	1367	135	333
144	1414	142	444
145	NULL	NULL	111
151	NULL	NULL	333
155	NULL	NULL	222
161	1626	164	333
167	NULL	165	444
171	1719	173	333
177	NULL	NULL	333
181	1819	183	333
187	1877	189	222
190	1925	192	111
199	1971	196	333
208	NULL	206	444
214	2121	212	444
218	2164	217	444
223	2211	220	333
226	2280	229	222
234	2312	230	444
237	NULL	NULL	333
246	2479	249	222
NULL	NULL	101	444
NULL	NULL	201	444
NULL	NULL	243	444


-- !query
SELECT e,
       abs(b-c)
  FROM t1
-- !query schema
struct<e:int,abs((b - c)):int>
-- !query output
104	NULL
105	2
113	2
121	2
125	1
130	3
137	3
143	1
147	3
158	2
162	3
166	NULL
174	2
175	3
184	2
185	2
191	1
195	1
204	1
207	NULL
211	3
219	1
224	1
225	1
233	1
238	3
245	1
NULL	2
NULL	3
NULL	4


-- !query
SELECT d-e,
       a+b*2,
       c-d,
       e
  FROM t1
-- !query schema
struct<(d - e):int,(a + (b * 2)):int,(c - d):int,e:int>
-- !query output
-1	426	-2	143
-1	511	-1	174
-1	541	-1	184
-1	NULL	3	166
-1	NULL	NULL	207
-2	410	4	137
-2	648	-1	219
-3	696	2	233
-3	NULL	2	204
-3	NULL	NULL	104
-4	665	2	224
1	383	3	125
1	578	1	191
1	593	2	195
1	634	1	211
2	481	-1	162
3	400	-2	130
4	319	-1	105
4	563	-3	185
4	680	-1	225
4	742	-2	245
NULL	338	NULL	113
NULL	354	2	NULL
NULL	367	NULL	121
NULL	443	NULL	147
NULL	451	NULL	NULL
NULL	469	NULL	158
NULL	529	NULL	175
NULL	709	NULL	238
NULL	NULL	-3	NULL


-- !query
SELECT c-d,
       abs(b-c),
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d
  FROM t1
 WHERE b>c
    OR c>d
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1157	192.0
643	107.0
674	NULL
770	127.0
881	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       d-e,
       d,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       c,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d,
       abs(a)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       c-d,
       abs(b-c)
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(c - d):int,abs((b - c)):int>
-- !query output
1604	-1	2
1899	3	1
1975	-2	3
2052	4	3
2129	-2	1
2436	-1	3
2589	-1	2
2739	-1	2
2802	-3	2
2880	1	1
2946	2	1
3176	1	3
3259	-1	1
3331	2	1
3405	-1	1
3477	2	1
3704	-2	1
NULL	-3	4
NULL	2	1
NULL	2	2
NULL	3	NULL
NULL	NULL	2
NULL	NULL	2
NULL	NULL	2
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT a,
       c-d,
       b,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE a>b
   AND (c<=d-2 OR c>=d+2)
   AND b>c
-- !query schema
struct<a:int,(c - d):int,b:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
144	-2	141	2129


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       abs(a),
       abs(b-c),
       c-d
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int,abs((b - c)):int,(c - d):int>
-- !query output
1020	NULL	555	NULL	NULL	NULL	NULL
1060	319	222	107.0	107	2	-1
1140	338	555	NULL	110	2	NULL
1190	354	222	NULL	116	2	2
1220	367	222	NULL	123	2	NULL
1280	383	111	127.0	127	1	3
1340	400	333	132.0	132	3	-2
1360	410	222	137.0	138	3	4
1410	426	555	142.0	144	1	-2
1490	443	222	NULL	145	3	NULL
1500	451	555	NULL	151	3	NULL
1570	469	555	NULL	155	2	NULL
1600	481	444	162.0	161	3	-1
1700	511	222	172.0	171	2	-1
354	529	555	NULL	177	3	NULL
362	541	222	182.0	181	2	-1
374	563	111	187.0	187	2	-3
380	578	444	192.0	190	1	1
398	593	555	197.0	199	1	2
428	634	555	212.0	214	3	1
436	648	444	217.0	218	1	-1
446	665	444	222.0	223	1	2
452	680	111	227.0	226	1	-1
468	696	555	232.0	234	1	2
474	709	444	NULL	237	3	NULL
492	742	222	247.0	246	1	-2
NULL	NULL	222	NULL	167	NULL	3
NULL	NULL	555	NULL	208	NULL	NULL
NULL	NULL	555	NULL	NULL	1	2
NULL	NULL	555	NULL	NULL	4	-3


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND a>b
-- !query schema
struct<b:int>
-- !query output
106


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int>
-- !query output
111	126	1280	-1
111	189	374	2
111	229	452	-1
222	109	1060	-2
222	115	1190	2
222	135	1360	-3
222	165	NULL	NULL
222	173	1700	-2
222	183	362	-2
222	249	492	1
222	NULL	1220	-2
222	NULL	1490	3
333	133	1340	3
444	164	1600	-3
444	192	380	1
444	217	436	-1
444	220	446	-1
444	NULL	474	-3
555	101	1020	NULL
555	142	1410	1
555	196	398	-1
555	201	NULL	-1
555	206	NULL	NULL
555	212	428	-3
555	230	468	-1
555	243	NULL	4
555	NULL	1140	2
555	NULL	1500	-3
555	NULL	1570	-2
555	NULL	354	-3


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
 WHERE d>e
    OR a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE b IS NOT NULL
    OR (c<=d-2 OR c>=d+2)
    OR d>e
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
2
2
3
3
3
3
3
3
3
3
4
NULL
NULL


-- !query
SELECT a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int>
-- !query output
1604	107
1899	127
1975	132
2052	138
2129	144
2436	161
2589	171
2739	181
2802	187
2880	190
2946	199
3176	214
3259	218
3331	223
3405	226
3477	234
3704	246
NULL	110
NULL	116
NULL	123
NULL	145
NULL	151
NULL	155
NULL	167
NULL	177
NULL	208
NULL	237
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c,
       a-b
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<d:int,c:int,(a - b):int>
-- !query output
101	NULL	NULL
201	203	NULL
243	240	NULL


-- !query
SELECT a,
       c,
       d-e,
       d
  FROM t1
-- !query schema
struct<a:int,c:int,(d - e):int,d:int>
-- !query output
107	108	4	109
110	112	NULL	NULL
116	117	NULL	115
123	124	NULL	NULL
127	129	1	126
132	131	3	133
138	139	-2	135
144	140	-1	142
145	146	NULL	NULL
151	153	NULL	NULL
155	159	NULL	NULL
161	163	2	164
167	168	-1	165
171	172	-1	173
177	179	NULL	NULL
181	182	-1	183
187	186	4	189
190	193	1	192
199	198	1	196
208	NULL	-1	206
214	213	1	212
218	216	-2	217
223	222	-4	220
226	228	4	229
234	232	-3	230
237	239	NULL	NULL
246	247	4	249
NULL	203	-3	201
NULL	240	NULL	243
NULL	NULL	-3	101


-- !query
SELECT b,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a IS NULL
   AND (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1	111
1	111
1	222
1	444
1	444
1	444
1	555
1	555
1	555
1	555
2	111
2	222
2	222
2	222
2	222
2	222
2	555
2	555
3	222
3	222
3	333
3	444
3	444
3	555
3	555
3	555
4	555
NULL	222
NULL	555
NULL	555


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND b IS NOT NULL
   AND (e>a AND e<b)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output



-- !query
SELECT b-c,
       a-b,
       d-e
  FROM t1
 WHERE b IS NOT NULL
   AND (e>a AND e<b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(b - c):int,(a - b):int,(d - e):int>
-- !query output



-- !query
SELECT a,
       b-c,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e
  FROM t1
 WHERE d>e
   AND c BETWEEN b-2 AND d+2
   AND a>b
-- !query schema
struct<a:int,(b - c):int,(c - d):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int>
-- !query output
107	-2	-1	333	105
161	-3	-1	333	162
199	-1	2	333	195
214	-3	1	444	211


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       a+b*2,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,c:int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
111	112	338	NULL
111	146	443	NULL
111	193	578	1925
222	117	354	1165
222	129	383	1274
222	131	400	1325
222	159	469	NULL
222	186	563	1877
222	228	680	2280
222	247	742	2479
333	108	319	1079
333	124	367	NULL
333	139	410	1367
333	153	451	NULL
333	163	481	1626
333	172	511	1719
333	179	529	NULL
333	182	541	1819
333	198	593	1971
333	222	665	2211
333	239	709	NULL
444	140	426	1414
444	168	NULL	NULL
444	203	NULL	NULL
444	213	634	2121
444	216	648	2164
444	232	696	2312
444	240	NULL	NULL
444	NULL	NULL	NULL
444	NULL	NULL	NULL


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
3
3
3
3


-- !query
SELECT a+b*2,
       c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE a>b
    OR b>c
-- !query schema
struct<(a + (b * 2)):int,c:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
319	108	107.0
338	112	NULL
354	117	NULL
367	124	NULL
400	131	132.0
410	139	137.0
426	140	142.0
443	146	NULL
451	153	NULL
481	163	162.0
511	172	172.0
529	179	NULL
541	182	182.0
563	186	187.0
578	193	192.0
593	198	197.0
634	213	212.0
648	216	217.0
665	222	222.0
696	232	232.0
709	239	NULL
742	247	247.0
NULL	240	NULL


-- !query
SELECT a-b,
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a - b):int,b:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
-1	128	1280	222
-1	188	374	222
-2	134	1340	222
-2	248	492	222
-3	119	1190	222
2	136	1360	333
2	197	398	333
2	221	446	333
3	141	1410	444
3	231	468	444
NULL	202	NULL	444
NULL	244	NULL	444
NULL	NULL	NULL	444


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE a IS NULL
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<abs((b - c)):int>
-- !query output



-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       b
  FROM t1
 WHERE c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       b-c,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>c OR e<d)
   AND coalesce(a,b,c,d,e)<>0
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       a+b*2+c*3,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
105	643	2	1079
121	739	2	NULL
125	770	1	1274
162	970	3	1626
174	1027	2	1719
175	1066	3	NULL
184	1087	2	1819
185	1121	2	1877
225	1364	1	2280
238	1426	3	NULL
NULL	910	3	NULL


-- !query
SELECT b-c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR (e>c OR e<d)
    OR a IS NULL
-- !query schema
struct<(b - c):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	1274
-1	1971
-1	2164
-1	2211
-1	2280
-1	2312
-1	NULL
-2	1079
-2	1719
-2	1819
-2	NULL
-2	NULL
-3	1367
-3	1626
-3	2121
-3	NULL
-3	NULL
-3	NULL
1	1414
1	1925
1	2479
2	1165
2	1877
2	NULL
3	1325
3	NULL
4	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
107.0	1060
127.0	1280
132.0	1340
137.0	1360
142.0	1410
162.0	1600
172.0	1700
182.0	362
187.0	374
192.0	380
197.0	398
212.0	428
217.0	436
222.0	446
227.0	452
232.0	468
247.0	492
NULL	1020
NULL	1140
NULL	1190
NULL	1220
NULL	1490
NULL	1500
NULL	1570
NULL	354
NULL	474
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT a+b*2+c*3,
       b-c
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(b - c):int>
-- !query output
1027	-2
1087	-2
1121	2
1157	1
1187	-1
1273	-3
1296	-1
1331	-1
1364	-1
1392	-1
1483	1
643	-2
674	2
770	-1
793	3
846	1
881	3
970	-3
NULL	-1


-- !query
SELECT e,
       a+b*2+c*3+d*4+e*5,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
   AND d NOT BETWEEN 110 AND 150
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
185	2802	4	374
191	2880	1	380
245	3704	4	492
NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2
  FROM t1
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
338
354
367
383
400
410
426
443
451
469
481
511
529
541
563
578
593
634
648
665
680
696
709
742
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-2
-3
-3
-4
1
1
3
4
4
4
NULL
NULL


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND (e>a AND e<b)
   AND b IS NOT NULL
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
192.0
NULL
NULL


-- !query
SELECT abs(b-c),
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       b-c
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<abs((b - c)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(b - c):int>
-- !query output
1	129	1280	125	-1
1	228	452	225	-1
2	108	1060	105	-2
2	124	1220	121	-2
2	172	1700	174	-2
2	182	362	184	-2
2	186	374	185	2
3	153	1500	NULL	-3
3	163	1600	162	-3
3	179	354	175	-3
3	239	474	238	-3


-- !query
SELECT a+b*2,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b IS NOT NULL
   AND c>d
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
354	NULL
578	192.0
593	197.0
634	212.0
665	222.0
696	232.0
NULL	NULL


-- !query
SELECT c,
       a+b*2+c*3+d*4,
       b,
       abs(b-c),
       (a+b+c+d+e)/5,
       abs(a)
  FROM t1
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int>
-- !query output
108	1079	106	2	107.0	107
112	NULL	114	2	NULL	110
117	1165	119	2	NULL	116
124	NULL	122	2	NULL	123
129	1274	128	1	127.0	127
131	1325	134	3	132.0	132
139	1367	136	3	137.0	138
140	1414	141	1	142.0	144
146	NULL	149	3	NULL	145
153	NULL	150	3	NULL	151
159	NULL	157	2	NULL	155
163	1626	160	3	162.0	161
168	NULL	NULL	NULL	NULL	167
172	1719	170	2	172.0	171
179	NULL	176	3	NULL	177
182	1819	180	2	182.0	181
186	1877	188	2	187.0	187
193	1925	194	1	192.0	190
198	1971	197	1	197.0	199
203	NULL	202	1	NULL	NULL
213	2121	210	3	212.0	214
216	2164	215	1	217.0	218
222	2211	221	1	222.0	223
228	2280	227	1	227.0	226
232	2312	231	1	232.0	234
239	NULL	236	3	NULL	237
240	NULL	244	4	NULL	NULL
247	2479	248	1	247.0	246
NULL	NULL	102	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	208


-- !query
SELECT c-d,
       abs(a)
  FROM t1
-- !query schema
struct<(c - d):int,abs(a):int>
-- !query output
-1	107
-1	161
-1	171
-1	181
-1	218
-1	226
-2	132
-2	144
-2	246
-3	187
-3	NULL
1	190
1	214
2	116
2	199
2	223
2	234
2	NULL
3	127
3	167
4	138
NULL	110
NULL	123
NULL	145
NULL	151
NULL	155
NULL	177
NULL	208
NULL	237
NULL	NULL


-- !query
SELECT a-b,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       b-c,
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d NOT BETWEEN 110 AND 150
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<c:int,(b - c):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
108	-2	643
117	2	705
129	-1	770
131	3	793
139	-3	827
140	1	846
163	-3	970
168	NULL	NULL
172	-2	1027
182	-2	1087
186	2	1121
193	1	1157
198	-1	1187
203	-1	NULL
213	-3	1273
216	-1	1296
222	-1	1331
228	-1	1364
232	-1	1392
240	4	NULL
247	1	1483
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<b:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
106	107.0
128	127.0


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE a IS NULL
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
222	127.0
222	187.0
222	227.0
333	107.0
333	162.0
333	172.0
333	182.0
333	NULL
333	NULL
333	NULL
333	NULL
444	NULL
444	NULL
444	NULL


-- !query
SELECT a+b*2+c*3,
       e,
       c-d,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b IS NOT NULL
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,e:int,(c - d):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1027	174	-1	173	333	171	1719
1087	184	-1	183	333	181	1819
1121	185	-3	189	222	187	1877
1157	191	1	192	111	190	1925
1187	195	2	196	333	199	1971
1273	211	1	212	444	214	2121
1296	219	-1	217	444	218	2164
1331	224	2	220	333	223	2211
1364	225	-1	229	222	226	2280
1392	233	2	230	444	234	2312
1483	245	-2	249	222	246	2479
643	105	-1	109	333	107	1079
970	162	-1	164	333	161	1626
NULL	104	NULL	101	444	NULL	NULL
NULL	204	2	201	444	NULL	NULL
NULL	NULL	-3	243	444	NULL	NULL


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e
  FROM t1
-- !query schema
struct<(d - e):int>
-- !query output
-1
-1
-1
-1
-1
-2
-2
-3
-3
-3
-4
1
1
1
1
2
3
4
4
4
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b IS NOT NULL
    OR coalesce(a,b,c,d,e)<>0
    OR a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a+b*2+c*3+d*4+e*5,
       b-c,
       a,
       d,
       b
  FROM t1
 WHERE b IS NOT NULL
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(b - c):int,a:int,d:int,b:int>
-- !query output
-1	2129	1	144	142	141
-1	2589	-2	171	173	170
-1	2739	-2	181	183	180
-1	NULL	NULL	167	165	NULL
-1	NULL	NULL	208	206	NULL
-2	2052	-3	138	135	136
-2	3259	-1	218	217	215
-3	3477	-1	234	230	231
-3	NULL	-1	NULL	201	202
-3	NULL	NULL	NULL	101	102
-4	3331	-1	223	220	221
1	1899	-1	127	126	128
1	2880	1	190	192	194
1	2946	-1	199	196	197
1	3176	-3	214	212	210
2	2436	-3	161	164	160
3	1975	3	132	133	134
4	1604	-2	107	109	106
4	2802	2	187	189	188
4	3405	-1	226	229	227
4	3704	1	246	249	248
NULL	NULL	-2	123	NULL	122
NULL	NULL	-2	155	NULL	157
NULL	NULL	-3	151	NULL	150
NULL	NULL	-3	177	NULL	176
NULL	NULL	-3	237	NULL	236
NULL	NULL	2	110	NULL	114
NULL	NULL	2	116	115	119
NULL	NULL	3	145	NULL	149
NULL	NULL	4	NULL	243	244


-- !query
SELECT a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       d
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
111	2880
111	NULL
111	NULL
222	1899
222	1975
222	2802
222	3405
222	3704
222	NULL
222	NULL
333	1604
333	2052
333	2436
333	2589
333	2739
333	2946
333	3331
333	NULL
333	NULL
333	NULL
333	NULL
444	2129
444	3176
444	3259
444	3477
444	NULL
444	NULL
444	NULL
444	NULL
444	NULL


-- !query
SELECT a+b*2,
       c,
       d-e,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR a IS NULL
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
111	128
222	106


-- !query
SELECT a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<e:int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
105	109	1060	1079
125	126	1280	1274
130	133	1340	1325
143	142	1410	1414
162	164	1600	1626
174	173	1700	1719
184	183	362	1819
185	189	374	1877
191	192	380	1925
195	196	398	1971
204	201	NULL	NULL
211	212	428	2121
219	217	436	2164
224	220	446	2211
225	229	452	2280
233	230	468	2312
245	249	492	2479
NULL	115	1190	1165


-- !query
SELECT c-d
  FROM t1
 WHERE a>b
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-2
1
2
2
2
4
NULL
NULL
NULL
NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       a,
       abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR e+d BETWEEN a+b-10 AND c+130
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a
  FROM t1
 WHERE b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       b-c,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
108	1060
117	1190
140	1410
163	1600
168	NULL
172	1700
182	362
186	374
193	380
198	398
203	NULL
213	428
216	436
222	446
228	452
232	468
240	NULL
247	492
NULL	1020
NULL	NULL


-- !query
SELECT a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE c>d
    OR (e>c OR e<d)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
107	333	222	1604
110	111	555	NULL
116	222	222	NULL
123	333	222	NULL
127	222	111	1899
132	222	333	1975
138	333	222	2052
144	444	555	2129
145	111	222	NULL
151	333	555	NULL
161	333	444	2436
167	444	222	NULL
171	333	222	2589
177	333	555	NULL
181	333	222	2739
187	222	111	2802
190	111	444	2880
199	333	555	2946
214	444	555	3176
218	444	444	3259
223	333	444	3331
226	222	111	3405
234	444	555	3477
237	333	444	NULL
246	222	222	3704
NULL	444	555	NULL


-- !query
SELECT c,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<c:int,e:int>
-- !query output
108	105


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       a-b,
       b
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
    OR d>e
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int,abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int,(a - b):int,b:int>
-- !query output
111	-1	226	452	-1	-1	227
111	-3	187	374	2	-1	188
111	3	127	1280	-1	-1	128
222	-1	107	1060	-2	1	106
222	-1	171	1700	-2	1	170
222	-1	181	362	-2	1	180
222	-2	246	492	1	-2	248
222	4	138	1360	-3	2	136
222	NULL	123	1220	-2	1	122
333	-2	132	1340	3	-2	134
444	-1	161	1600	-3	1	160
444	-1	218	436	-1	3	215
444	1	190	380	1	-4	194
444	2	223	446	-1	2	221
444	NULL	237	474	-3	1	236
555	-2	144	1410	1	3	141
555	1	214	428	-3	4	210
555	2	199	398	-1	2	197
555	2	234	468	-1	3	231
555	NULL	151	1500	-3	1	150
555	NULL	177	354	-3	1	176


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(d - e):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1	127.0


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1274
1325
1626
1877
1925
1971
2121
2280
2479


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       e,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       c,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
   AND (e>c OR e<d)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1325	131	1975	1340
1414	140	2129	1410
1877	186	2802	374
1925	193	2880	380
2479	247	3704	492
NULL	112	NULL	1140
NULL	146	NULL	1490


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b>c
   AND (e>c OR e<d)
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       c-d,
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d NOT BETWEEN 110 AND 150
   AND b>c
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,(c - d):int,b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int>
-- !query output
374	185	-3	188	222	-1
380	191	1	194	111	-4
492	245	-2	248	222	-2
NULL	NULL	-3	244	444	NULL


-- !query
SELECT e,
       a+b*2+c*3,
       a+b*2,
       a,
       abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b
  FROM t1
 WHERE b>c
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,a:int,abs((b - c)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int>
-- !query output
113	674	338	110	2	1140	114
130	793	400	132	3	1340	134
143	846	426	144	1	1410	141
147	881	443	145	3	1490	149
185	1121	563	187	2	374	188
191	1157	578	190	1	380	194
245	1483	742	246	1	492	248
NULL	705	354	116	2	1190	119
NULL	NULL	NULL	NULL	4	NULL	244


-- !query
SELECT e
  FROM t1
 WHERE b>c
-- !query schema
struct<e:int>
-- !query output
113
130
143
147
185
191
245
NULL
NULL


-- !query
SELECT abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a-b,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d>e
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a+b*2+c*3+d*4+e*5,
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       c-d,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(a + (b * 2)):int,(c - d):int,e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
319	-1	105	1060	106	107.0
338	NULL	113	1140	114	NULL
383	3	125	1280	128	127.0
400	-2	130	1340	134	132.0
426	-2	143	1410	141	142.0
443	NULL	147	1490	149	NULL
481	-1	162	1600	160	162.0
511	-1	174	1700	170	172.0
541	-1	184	362	180	182.0
563	-3	185	374	188	187.0
578	1	191	380	194	192.0
593	2	195	398	197	197.0
634	1	211	428	210	212.0
648	-1	219	436	215	217.0
665	2	224	446	221	222.0
680	-1	225	452	227	227.0
696	2	233	468	231	232.0
742	-2	245	492	248	247.0
NULL	2	204	NULL	202	NULL


-- !query
SELECT b,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e,
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
 WHERE (e>c OR e<d)
   AND b>c
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int>
-- !query output
1975	132.0	1340	-2
2129	142.0	1410	-2
2802	187.0	374	-3
2880	192.0	380	1
3704	247.0	492	-2
NULL	NULL	1140	NULL
NULL	NULL	1490	NULL


-- !query
SELECT d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE a>b
    OR e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
319	1060	222
338	1140	555
354	1190	222
367	1220	222
383	1280	111
400	1340	333
410	1360	222
426	1410	555
443	1490	222
451	1500	555
469	1570	555
481	1600	444
511	1700	222
529	354	555
541	362	222
563	374	111
578	380	444
593	398	555
634	428	555
648	436	444
665	446	444
680	452	111
696	468	555
709	474	444
742	492	222
NULL	1020	555
NULL	NULL	222
NULL	NULL	555
NULL	NULL	555
NULL	NULL	555


-- !query
SELECT b,
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
   AND d>e
-- !query schema
struct<b:int,(a - b):int>
-- !query output
106	1
160	1
197	2
210	4


-- !query
SELECT b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<b:int>
-- !query output
106
114
119
122
128
134
136
141
149
150
157
160
170
176
180
188
194
197
202
210
215
221
227
231
236
244
248


-- !query
SELECT abs(a),
       abs(b-c),
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<abs(a):int,abs((b - c)):int,a:int>
-- !query output
107	2	107
127	1	127


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
107.0	333	-2	1060	1604	319	1079
127.0	222	-1	1280	1899	383	1274
132.0	222	3	1340	1975	400	1325
137.0	333	-3	1360	2052	410	1367
142.0	444	1	1410	2129	426	1414
162.0	333	-3	1600	2436	481	1626
172.0	333	-2	1700	2589	511	1719
182.0	333	-2	362	2739	541	1819
187.0	222	2	374	2802	563	1877
192.0	111	1	380	2880	578	1925
197.0	333	-1	398	2946	593	1971
212.0	444	-3	428	3176	634	2121
217.0	444	-1	436	3259	648	2164
222.0	333	-1	446	3331	665	2211
227.0	222	-1	452	3405	680	2280
232.0	444	-1	468	3477	696	2312
247.0	222	1	492	3704	742	2479
NULL	111	2	1140	NULL	338	NULL
NULL	111	3	1490	NULL	443	NULL
NULL	222	-2	1570	NULL	469	NULL
NULL	222	2	1190	NULL	354	1165
NULL	333	-2	1220	NULL	367	NULL
NULL	333	-3	1500	NULL	451	NULL
NULL	333	-3	354	NULL	529	NULL
NULL	333	-3	474	NULL	709	NULL
NULL	444	-1	NULL	NULL	NULL	NULL
NULL	444	4	NULL	NULL	NULL	NULL
NULL	444	NULL	1020	NULL	NULL	NULL
NULL	444	NULL	NULL	NULL	NULL	NULL
NULL	444	NULL	NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2,
       a-b,
       b,
       d
  FROM t1
 WHERE d>e
    OR d NOT BETWEEN 110 AND 150
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a + (b * 2)):int,(a - b):int,b:int,d:int>
-- !query output
319	1	106	109
354	-3	119	115
383	-1	128	126
400	-2	134	133
410	2	136	135
426	3	141	142
481	1	160	164
511	1	170	173
541	1	180	183
563	-1	188	189
578	-4	194	192
593	2	197	196
634	4	210	212
648	3	215	217
665	2	221	220
680	-1	227	229
696	3	231	230
742	-2	248	249
NULL	NULL	102	101
NULL	NULL	202	201
NULL	NULL	244	243
NULL	NULL	NULL	165
NULL	NULL	NULL	206


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1604	1079	643
1899	1274	770
2436	1626	970
2589	1719	1027
2739	1819	1087
2802	1877	1121
3405	2280	1364
NULL	NULL	1066
NULL	NULL	1426
NULL	NULL	739
NULL	NULL	910


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       d,
       e,
       d-e
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,d:int,e:int,(d - e):int>
-- !query output
111	1	192	191	1
111	2	NULL	113	NULL
111	3	NULL	147	NULL
222	1	126	125	1
222	1	229	225	4
222	1	249	245	4
222	2	115	NULL	NULL
222	2	189	185	4
222	2	NULL	158	NULL
222	3	133	130	3
333	1	196	195	1
333	1	220	224	-4
333	2	109	105	4
333	2	173	174	-1
333	2	183	184	-1
333	2	NULL	121	NULL
333	3	135	137	-2
333	3	164	162	2
333	3	NULL	175	NULL
333	3	NULL	238	NULL
333	3	NULL	NULL	NULL
444	1	142	143	-1
444	1	201	204	-3
444	1	217	219	-2
444	1	230	233	-3
444	3	212	211	1
444	4	243	NULL	NULL
444	NULL	101	104	-3
444	NULL	165	166	-1
444	NULL	206	207	-1


-- !query
SELECT a+b*2,
       b-c,
       c,
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c>d
   AND b>c
-- !query schema
struct<(a + (b * 2)):int,(b - c):int,c:int,b:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output



-- !query
SELECT c-d,
       a,
       a+b*2,
       abs(a),
       (a+b+c+d+e)/5,
       c
  FROM t1
 WHERE a IS NULL
    OR (c<=d-2 OR c>=d+2)
    OR b>c
-- !query schema
struct<(c - d):int,a:int,(a + (b * 2)):int,abs(a):int,(((((a + b) + c) + d) + e) / 5):double,c:int>
-- !query output
-2	132	400	132	132.0	131
-2	144	426	144	142.0	140
-2	246	742	246	247.0	247
-3	187	563	187	187.0	186
-3	NULL	NULL	NULL	NULL	240
1	190	578	190	192.0	193
2	116	354	116	NULL	117
2	199	593	199	197.0	198
2	223	665	223	222.0	222
2	234	696	234	232.0	232
2	NULL	NULL	NULL	NULL	203
3	127	383	127	127.0	129
3	167	NULL	167	NULL	168
4	138	410	138	137.0	139
NULL	110	338	110	NULL	112
NULL	145	443	145	NULL	146
NULL	NULL	NULL	NULL	NULL	NULL


-- !query
SELECT b-c,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR a IS NULL
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	383	770
-1	593	1187
-1	648	1296
-1	665	1331
-1	680	1364
-1	696	1392
-1	NULL	NULL
-2	319	643
-2	367	739
-2	469	946
-2	511	1027
-2	541	1087
-3	410	827
-3	451	910
-3	481	970
-3	529	1066
-3	634	1273
-3	709	1426
1	426	846
1	578	1157
1	742	1483
2	338	674
2	354	705
2	563	1121
3	400	793
3	443	881
4	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT e
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
-- !query schema
struct<e:int>
-- !query output
105
113
125
130
143
147
162
174
184
185
191
195
204
211
219
224
225
233
245


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a - b):int>
-- !query output
1604	1
1899	-1


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b IS NOT NULL
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
111	187.0
111	227.0
222	107.0
222	172.0
222	182.0
222	247.0
444	162.0
444	192.0
444	217.0
444	222.0
555	197.0
555	212.0
555	232.0
555	NULL
555	NULL
555	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1604
1899
1975
2052
2129
2436
2589
2739
2802
2880
2946
3176
3259
3331
3405
3477
3704
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a-b,
       c,
       (a+b+c+d+e)/5,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a - b):int,c:int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int>
-- !query output
-1	129	127.0	-1	1280	128
-1	186	187.0	2	374	188
-1	228	227.0	-1	452	227
-2	131	132.0	3	1340	134
-2	159	NULL	-2	1570	157
-2	247	247.0	1	492	248
-3	117	NULL	2	1190	119
-4	112	NULL	2	1140	114
-4	146	NULL	3	1490	149
-4	193	192.0	1	380	194
1	108	107.0	-2	1060	106
1	124	NULL	-2	1220	122
1	153	NULL	-3	1500	150
1	163	162.0	-3	1600	160
1	172	172.0	-2	1700	170
1	179	NULL	-3	354	176
1	182	182.0	-2	362	180
1	239	NULL	-3	474	236
2	139	137.0	-3	1360	136
2	198	197.0	-1	398	197
2	222	222.0	-1	446	221
3	140	142.0	1	1410	141
3	216	217.0	-1	436	215
3	232	232.0	-1	468	231
4	213	212.0	-3	428	210
NULL	168	NULL	NULL	NULL	NULL
NULL	203	NULL	-1	NULL	202
NULL	240	NULL	4	NULL	244


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       c-d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE a>b
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
NULL	1020	444	NULL	555
NULL	NULL	444	NULL	555
NULL	NULL	444	NULL	555


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       a+b*2+c*3,
       c-d,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       c,
       abs(b-c),
       b-c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR c>d
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<abs(a):int,c:int,abs((b - c)):int,(b - c):int>
-- !query output
107	108	2	-2
110	112	2	2
116	117	2	2
123	124	2	-2
127	129	1	-1
132	131	3	3
138	139	3	-3
144	140	1	1
145	146	3	3
151	153	3	-3
155	159	2	-2
161	163	3	-3
167	168	NULL	NULL
171	172	2	-2
177	179	3	-3
181	182	2	-2
187	186	2	2
190	193	1	1
199	198	1	-1
214	213	3	-3
218	216	1	-1
223	222	1	-1
226	228	1	-1
234	232	1	-1
237	239	3	-3
246	247	1	1
NULL	203	1	-1
NULL	240	4	4


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       abs(a)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND c>d
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,abs(a):int>
-- !query output
222	111	129	127
222	222	117	116
333	222	139	138
333	444	222	223
333	555	198	199
444	222	168	167
444	555	203	NULL
444	555	232	234


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       b,
       a-b,
       a,
       a+b*2+c*3
  FROM t1
 WHERE a IS NULL
    OR b>c
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,(a - b):int,a:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1165	NULL	119	-3	116	705
1325	1975	134	-2	132	793
1414	2129	141	3	144	846
1877	2802	188	-1	187	1121
1925	2880	194	-4	190	1157
2479	3704	248	-2	246	1483
NULL	NULL	102	NULL	NULL	NULL
NULL	NULL	114	-4	110	674
NULL	NULL	149	-4	145	881
NULL	NULL	202	NULL	NULL	NULL
NULL	NULL	244	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       b-c,
       b,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       a+b*2+c*3+d*4,
       abs(b-c),
       d-e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int>
-- !query output
107	1060	-1
161	1600	-1
167	NULL	3
171	1700	-1
181	362	-1
187	374	-3
190	380	1
199	398	2
208	NULL	NULL
214	428	1
218	436	-1
223	446	2
226	452	-1
234	468	2
246	492	-2
NULL	1020	NULL
NULL	NULL	-3
NULL	NULL	2


-- !query
SELECT d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<d:int>
-- !query output
101
109
164
165
173
183
189
192
196
201
206
212
217
220
229
230
243
249


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       abs(a)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(c - d):int,abs(a):int>
-- !query output
-2	132
-2	144
-2	246
-3	187
-3	NULL
2	116
2	199
2	223
2	234
2	NULL
3	127
3	167
4	138


-- !query
SELECT abs(b-c),
       c-d
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<abs((b - c)):int,(c - d):int>
-- !query output
1	-1
1	-1
1	-2
1	-2
1	1
1	2
1	2
1	2
1	2
1	3
2	-1
2	-1
2	-1
2	-3
2	2
2	NULL
2	NULL
2	NULL
3	-1
3	-2
3	1
3	4
3	NULL
3	NULL
3	NULL
3	NULL
4	-3
NULL	NULL


-- !query
SELECT b,
       c,
       e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       c,
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<(a - b):int,c:int,b:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	129	128	1280	770
-1	186	188	374	1121
-1	228	227	452	1364
-2	131	134	1340	793
-2	159	157	1570	946
-2	247	248	492	1483
-3	117	119	1190	705
-4	112	114	1140	674
-4	146	149	1490	881
-4	193	194	380	1157
1	108	106	1060	643
1	124	122	1220	739
1	153	150	1500	910
1	163	160	1600	970
1	172	170	1700	1027
1	179	176	354	1066
1	182	180	362	1087
1	239	236	474	1426
2	139	136	1360	827
2	198	197	398	1187
2	222	221	446	1331
3	140	141	1410	846
3	216	215	436	1296
3	232	231	468	1392
4	213	210	428	1273
NULL	168	NULL	NULL	NULL
NULL	203	202	NULL	NULL
NULL	240	244	NULL	NULL
NULL	NULL	102	1020	NULL
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       a+b*2+c*3+d*4+e*5,
       d
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,d:int>
-- !query output
111	-1	3405	229
111	-3	2802	189
111	3	1899	126
222	-1	1604	109
222	-1	2589	173
222	-1	2739	183
222	-2	3704	249
222	2	NULL	115
222	3	NULL	165
222	4	2052	135
222	NULL	NULL	NULL
222	NULL	NULL	NULL
333	-2	1975	133
444	-1	2436	164
444	-1	3259	217
444	1	2880	192
444	2	3331	220
444	NULL	NULL	NULL
555	-2	2129	142
555	-3	NULL	243
555	1	3176	212
555	2	2946	196
555	2	3477	230
555	2	NULL	201
555	NULL	NULL	101
555	NULL	NULL	206
555	NULL	NULL	NULL
555	NULL	NULL	NULL
555	NULL	NULL	NULL
555	NULL	NULL	NULL


-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       abs(a)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b IS NOT NULL
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(a - b):int,(((((a + b) + c) + d) + e) / 5):double,abs(a):int>
-- !query output
-1	127.0	127
-1	187.0	187
-1	227.0	226
1	107.0	107
1	162.0	161
1	172.0	171
1	182.0	181
1	NULL	123
1	NULL	151
1	NULL	177
1	NULL	237


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       a-b
  FROM t1
 WHERE a>b
   AND d>e
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(a + (b * 2)):int,(a - b):int>
-- !query output
319	1
481	1


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d
  FROM t1
 WHERE (e>a AND e<b)
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c>d
   AND b IS NOT NULL
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       (a+b+c+d+e)/5,
       d-e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       abs(a),
       a+b*2+c*3+d*4+e*5,
       a+b*2
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c>d
-- !query schema
struct<a:int,abs(a):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int>
-- !query output
116	116	NULL	354
127	127	1899	383
132	132	1975	400
138	138	2052	410
144	144	2129	426
167	167	NULL	NULL
187	187	2802	563
190	190	2880	578
199	199	2946	593
214	214	3176	634
223	223	3331	665
234	234	3477	696
246	246	3704	742
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
108	222
112	555
117	222
124	222
129	111
131	333
139	222
140	555
146	222
153	555
159	555
163	444
168	222
172	222
179	555
182	222
186	111
193	444
198	555
203	555
213	555
216	444
222	444
228	111
232	555
239	444
240	555
247	222
NULL	555
NULL	555


-- !query
SELECT b-c,
       a+b*2+c*3+d*4,
       b,
       c-d,
       a+b*2+c*3
  FROM t1
 WHERE d>e
   AND c>d
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(b - c):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int,(c - d):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	1274	128	3	770
-1	1971	197	2	1187
-3	2121	210	1	1273
1	1925	194	1	1157


-- !query
SELECT b,
       (a+b+c+d+e)/5,
       a-b,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e
  FROM t1
 WHERE d>e
-- !query schema
struct<b:int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int>
-- !query output
106	107.0	1	1604	333	4
128	127.0	-1	1899	222	1
134	132.0	-2	1975	222	3
160	162.0	1	2436	333	2
188	187.0	-1	2802	222	4
194	192.0	-4	2880	111	1
197	197.0	2	2946	333	1
210	212.0	4	3176	444	1
227	227.0	-1	3405	222	4
248	247.0	-2	3704	222	4


-- !query
SELECT c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       a+b*2
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
222
222
222
333
333
333
333
333
333
444
444
444
444
444
444
444
444


-- !query
SELECT a+b*2,
       b-c,
       c-d
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,(b - c):int,(c - d):int>
-- !query output
319	-2	-1
338	2	NULL
354	2	2
367	-2	NULL
383	-1	3
400	3	-2
410	-3	4
426	1	-2
443	3	NULL
451	-3	NULL
469	-2	NULL
481	-3	-1
511	-2	-1
529	-3	NULL
541	-2	-1
563	2	-3
578	1	1
593	-1	2
634	-3	1
648	-1	-1
665	-1	2
680	-1	-1
696	-1	2
709	-3	NULL
742	1	-2
NULL	-1	2
NULL	4	-3
NULL	NULL	3
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       c-d,
       abs(a)
  FROM t1
 WHERE d>e
-- !query schema
struct<a:int,(c - d):int,abs(a):int>
-- !query output
107	-1	107
127	3	127
132	-2	132
161	-1	161
187	-3	187
190	1	190
199	2	199
214	1	214
226	-1	226
246	-2	246


-- !query
SELECT abs(b-c),
       a-b,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c
  FROM t1
-- !query schema
struct<abs((b - c)):int,(a - b):int,(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int>
-- !query output
1	-1	-1	111	-1
1	-1	3	111	-1
1	-2	-2	222	1
1	-4	1	444	1
1	2	2	444	-1
1	2	2	555	-1
1	3	-1	444	-1
1	3	-2	555	1
1	3	2	555	-1
1	NULL	2	555	-1
2	-1	-3	111	2
2	-2	NULL	555	-2
2	-3	2	222	2
2	-4	NULL	555	2
2	1	-1	222	-2
2	1	-1	222	-2
2	1	-1	222	-2
2	1	NULL	222	-2
3	-2	-2	333	3
3	-4	NULL	222	3
3	1	-1	444	-3
3	1	NULL	444	-3
3	1	NULL	555	-3
3	1	NULL	555	-3
3	2	4	222	-3
3	4	1	555	-3
4	NULL	-3	555	4
NULL	NULL	3	222	NULL
NULL	NULL	NULL	555	NULL
NULL	NULL	NULL	555	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       d-e,
       a+b*2+c*3
  FROM t1
 WHERE b>c
    OR d NOT BETWEEN 110 AND 150
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
111
111
222
222
222
222
222
444
444
444
444
555
555
555
555
555
555
555


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       c-d,
       d,
       a+b*2+c*3+d*4,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int,(c - d):int,d:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
107.0	333	106	-1	109	1079	643
127.0	222	128	3	126	1274	770
132.0	222	134	-2	133	1325	793
137.0	333	136	4	135	1367	827
142.0	444	141	-2	142	1414	846
162.0	333	160	-1	164	1626	970
172.0	333	170	-1	173	1719	1027
182.0	333	180	-1	183	1819	1087
187.0	222	188	-3	189	1877	1121
192.0	111	194	1	192	1925	1157
197.0	333	197	2	196	1971	1187
212.0	444	210	1	212	2121	1273
217.0	444	215	-1	217	2164	1296
222.0	333	221	2	220	2211	1331
227.0	222	227	-1	229	2280	1364
232.0	444	231	2	230	2312	1392
247.0	222	248	-2	249	2479	1483
NULL	111	114	NULL	NULL	NULL	674
NULL	111	149	NULL	NULL	NULL	881
NULL	222	119	2	115	1165	705
NULL	222	157	NULL	NULL	NULL	946
NULL	333	122	NULL	NULL	NULL	739
NULL	333	150	NULL	NULL	NULL	910
NULL	333	176	NULL	NULL	NULL	1066
NULL	333	236	NULL	NULL	NULL	1426
NULL	444	102	NULL	101	NULL	NULL
NULL	444	202	2	201	NULL	NULL
NULL	444	244	-3	243	NULL	NULL
NULL	444	NULL	3	165	NULL	NULL
NULL	444	NULL	NULL	206	NULL	NULL


-- !query
SELECT a,
       d-e,
       e,
       a+b*2+c*3,
       abs(b-c),
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c>d
-- !query schema
struct<a:int,(d - e):int,e:int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
107	4	105	643	2	108	1060
116	NULL	NULL	705	2	117	1190
123	NULL	121	739	2	124	1220
127	1	125	770	1	129	1280
138	-2	137	827	3	139	1360
151	NULL	NULL	910	3	153	1500
161	2	162	970	3	163	1600
167	-1	166	NULL	NULL	168	NULL
171	-1	174	1027	2	172	1700
177	NULL	175	1066	3	179	354
181	-1	184	1087	2	182	362
187	4	185	1121	2	186	374
190	1	191	1157	1	193	380
199	1	195	1187	1	198	398
214	1	211	1273	3	213	428
223	-4	224	1331	1	222	446
226	4	225	1364	1	228	452
234	-3	233	1392	1	232	468
237	NULL	238	1426	3	239	474
NULL	-3	204	NULL	1	203	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
111
111
222
222
222
222
222
444
444
444
444
555
555
555
555
555


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       d-e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
NULL
NULL


-- !query
SELECT (a+b+c+d+e)/5,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c-d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       d-e,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a IS NULL
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<e:int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
104	NULL	444	NULL
105	319	333	1604
113	338	111	NULL
121	367	333	NULL
125	383	222	1899
130	400	222	1975
137	410	333	2052
143	426	444	2129
147	443	111	NULL
158	469	222	NULL
162	481	333	2436
166	NULL	444	NULL
174	511	333	2589
175	529	333	NULL
184	541	333	2739
185	563	222	2802
191	578	111	2880
195	593	333	2946
204	NULL	444	NULL
207	NULL	444	NULL
211	634	444	3176
219	648	444	3259
224	665	333	3331
225	680	222	3405
233	696	444	3477
238	709	333	NULL
245	742	222	3704
NULL	354	222	NULL
NULL	451	333	NULL
NULL	NULL	444	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       e,
       c-d,
       b-c,
       d
  FROM t1
 WHERE d>e
   AND a>b
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,e:int,(c - d):int,(b - c):int,d:int>
-- !query output
333	1060	106	105	-1	-2	109
333	1600	160	162	-1	-3	164
333	398	197	195	2	-1	196
444	428	210	211	1	-3	212


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,c:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
111	114	1140	112	NULL
111	149	1490	146	NULL
111	194	380	193	192.0
222	119	1190	117	NULL
222	128	1280	129	127.0
222	134	1340	131	132.0
222	157	1570	159	NULL
222	188	374	186	187.0
222	227	452	228	227.0
222	248	492	247	247.0
333	106	1060	108	107.0
333	122	1220	124	NULL
333	136	1360	139	137.0
333	150	1500	153	NULL
333	160	1600	163	162.0
333	170	1700	172	172.0
333	176	354	179	NULL
333	180	362	182	182.0
333	197	398	198	197.0
333	221	446	222	222.0
333	236	474	239	NULL
444	141	1410	140	142.0
444	202	NULL	203	NULL
444	210	428	213	212.0
444	215	436	216	217.0
444	231	468	232	232.0
444	244	NULL	240	NULL


-- !query
SELECT c,
       a-b
  FROM t1
 WHERE a>b
-- !query schema
struct<c:int,(a - b):int>
-- !query output
108	1
124	1
139	2
140	3
153	1
163	1
172	1
179	1
182	1
198	2
213	4
216	3
222	2
232	3
239	1


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c),
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       b,
       abs(a)
  FROM t1
 WHERE c>d
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int,b:int,abs(a):int>
-- !query output
107.0	2	-1	222	107	106	107
127.0	1	3	111	127	128	127
137.0	3	4	222	138	136	138
142.0	1	-2	555	144	141	144
162.0	3	-1	444	161	160	161
172.0	2	-1	222	171	170	171
182.0	2	-1	222	181	180	181
187.0	2	-3	111	187	188	187
192.0	1	1	444	190	194	190
197.0	1	2	555	199	197	199
212.0	3	1	555	214	210	214
217.0	1	-1	444	218	215	218
222.0	1	2	444	223	221	223
227.0	1	-1	111	226	227	226
232.0	1	2	555	234	231	234
247.0	1	-2	222	246	248	246
NULL	1	2	555	NULL	202	NULL
NULL	2	2	222	116	119	116
NULL	NULL	3	222	167	NULL	167


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int>
-- !query output
1020	102
NULL	202
NULL	244


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       a
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2,
       a+b*2+c*3,
       d-e,
       (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
    OR b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       c-d,
       a-b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR a>b
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int,(c - d):int,(a - b):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
109	333	107	-1	1	107.0
115	222	116	2	-3	NULL
126	222	127	3	-1	127.0
133	222	132	-2	-2	132.0
135	333	138	4	2	137.0
142	444	144	-2	3	142.0
164	333	161	-1	1	162.0
173	333	171	-1	1	172.0
183	333	181	-1	1	182.0
189	222	187	-3	-1	187.0
192	111	190	1	-4	192.0
196	333	199	2	2	197.0
201	444	NULL	2	NULL	NULL
212	444	214	1	4	212.0
217	444	218	-1	3	217.0
220	333	223	2	2	222.0
229	222	226	-1	-1	227.0
230	444	234	2	3	232.0
243	444	NULL	-3	NULL	NULL
249	222	246	-2	-2	247.0
NULL	111	110	NULL	-4	NULL
NULL	111	145	NULL	-4	NULL
NULL	222	155	NULL	-2	NULL
NULL	333	123	NULL	1	NULL
NULL	333	151	NULL	1	NULL
NULL	333	177	NULL	1	NULL
NULL	333	237	NULL	1	NULL


-- !query
SELECT a-b,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       a+b*2,
       d-e
  FROM t1
 WHERE c>d
-- !query schema
struct<(c - d):int,(a + (b * 2)):int,(d - e):int>
-- !query output
1	578	1
1	634	1
2	354	NULL
2	593	1
2	665	-4
2	696	-3
2	NULL	-3
3	383	1
3	NULL	-1
4	410	-2


-- !query
SELECT (a+b+c+d+e)/5,
       abs(b-c),
       a+b*2+c*3,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
107.0	2	643	1079
127.0	1	770	1274
132.0	3	793	1325
137.0	3	827	1367
142.0	1	846	1414
162.0	3	970	1626
172.0	2	1027	1719
182.0	2	1087	1819
187.0	2	1121	1877
192.0	1	1157	1925
197.0	1	1187	1971
212.0	3	1273	2121
217.0	1	1296	2164
222.0	1	1331	2211
227.0	1	1364	2280
232.0	1	1392	2312
247.0	1	1483	2479
NULL	1	NULL	NULL
NULL	2	674	NULL
NULL	2	705	1165
NULL	2	739	NULL
NULL	2	946	NULL
NULL	3	1066	NULL
NULL	3	1426	NULL
NULL	3	881	NULL
NULL	3	910	NULL
NULL	4	NULL	NULL
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
-- !query schema
struct<(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-1	1280
-1	374
-1	452
-2	1340
-2	492
-4	380
1	1060
1	1600
2	398
4	428


-- !query
SELECT a-b
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-1
-2
-2
-4
-4
-4
1
1
1
1
2
2
3
3
3
4
NULL


-- !query
SELECT d-e,
       c-d
  FROM t1
-- !query schema
struct<(d - e):int,(c - d):int>
-- !query output
-1	-1
-1	-1
-1	-2
-1	3
-1	NULL
-2	-1
-2	4
-3	2
-3	2
-3	NULL
-4	2
1	1
1	1
1	2
1	3
2	-1
3	-2
4	-1
4	-1
4	-2
4	-3
NULL	-3
NULL	2
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT c-d,
       d,
       abs(b-c),
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND (e>c OR e<d)
-- !query schema
struct<(c - d):int,d:int,abs((b - c)):int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int>
-- !query output
-1	109	2	4	222	-2
-1	164	3	2	444	-3
-1	173	2	-1	222	-2
-1	183	2	-1	222	-2
-1	217	1	-2	444	-1
-1	229	1	4	111	-1
-2	133	3	3	333	3
-2	142	1	-1	555	1
-2	249	1	4	222	1
-3	189	2	4	111	2
1	192	1	1	444	1
1	212	3	1	555	-3
2	196	1	1	555	-1
2	201	1	-3	555	-1
2	220	1	-4	444	-1
2	230	1	-3	555	-1
3	126	1	1	111	-1
NULL	NULL	2	NULL	555	2
NULL	NULL	3	NULL	222	3


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       b,
       abs(b-c),
       abs(a)
  FROM t1
 WHERE b IS NOT NULL
    OR (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,abs((b - c)):int,abs(a):int>
-- !query output
111	2880	194	1	190
111	NULL	114	2	110
111	NULL	149	3	145
222	1899	128	1	127
222	1975	134	3	132
222	2802	188	2	187
222	3405	227	1	226
222	3704	248	1	246
222	NULL	119	2	116
222	NULL	157	2	155
333	1604	106	2	107
333	2052	136	3	138
333	2436	160	3	161
333	2589	170	2	171
333	2739	180	2	181
333	2946	197	1	199
333	3331	221	1	223
333	NULL	122	2	123
333	NULL	150	3	151
333	NULL	176	3	177
333	NULL	236	3	237
444	2129	141	1	144
444	3176	210	3	214
444	3259	215	1	218
444	3477	231	1	234
444	NULL	102	NULL	NULL
444	NULL	202	1	NULL
444	NULL	244	4	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       e,
       d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       abs(a),
       a+b*2,
       a+b*2+c*3+d*4,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<(c - d):int,abs(a):int,(a + (b * 2)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int>
-- !query output
-2	132	400	1325	3	1340	132
-2	144	426	1414	-1	1410	144
-2	246	742	2479	4	492	246
-3	187	563	1877	4	374	187
-3	NULL	NULL	NULL	NULL	NULL	NULL
2	116	354	1165	NULL	1190	116
2	199	593	1971	1	398	199
2	223	665	2211	-4	446	223
2	234	696	2312	-3	468	234
2	NULL	NULL	NULL	-3	NULL	NULL
3	127	383	1274	1	1280	127
3	167	NULL	NULL	-1	NULL	167
4	138	410	1367	-2	1360	138


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       d
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,d:int>
-- !query output
107	1079	109
110	NULL	NULL
116	1165	115
123	NULL	NULL
127	1274	126
132	1325	133
138	1367	135
144	1414	142
145	NULL	NULL
151	NULL	NULL
155	NULL	NULL
161	1626	164
171	1719	173
177	NULL	NULL
181	1819	183
187	1877	189
190	1925	192
199	1971	196
214	2121	212
218	2164	217
223	2211	220
226	2280	229
234	2312	230
237	NULL	NULL
246	2479	249
NULL	NULL	101
NULL	NULL	201
NULL	NULL	243


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       abs(b-c)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       c,
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d-e,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       a,
       b,
       abs(a)
  FROM t1
 WHERE c>d
-- !query schema
struct<abs((b - c)):int,(d - e):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,b:int,abs(a):int>
-- !query output
1	-3	1392	3477	234	231	234
1	-3	NULL	NULL	NULL	202	NULL
1	-4	1331	3331	223	221	223
1	1	1157	2880	190	194	190
1	1	1187	2946	199	197	199
1	1	770	1899	127	128	127
2	NULL	705	NULL	116	119	116
3	-2	827	2052	138	136	138
3	1	1273	3176	214	210	214
NULL	-1	NULL	NULL	167	NULL	167


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e,
       abs(b-c),
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       d-e,
       c-d,
       abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int,(c - d):int,abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1165	NULL	2	116	1190
1274	1	3	127	1280
1325	3	-2	132	1340
1367	-2	4	138	1360
1414	-1	-2	144	1410
1877	4	-3	187	374
1971	1	2	199	398
2211	-4	2	223	446
2312	-3	2	234	468
2479	4	-2	246	492
NULL	-3	2	NULL	NULL
NULL	NULL	-3	NULL	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2,
       b-c,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<b:int,(a + (b * 2)):int,(b - c):int,a:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int>
-- !query output
119	354	2	116	222	NULL
128	383	-1	127	222	1
134	400	3	132	222	3
136	410	-3	138	333	-2
141	426	1	144	444	-1
188	563	2	187	222	4
197	593	-1	199	333	1
202	NULL	-1	NULL	444	-3
221	665	-1	223	333	-4
231	696	-1	234	444	-3
244	NULL	4	NULL	444	NULL
248	742	1	246	222	4
NULL	NULL	NULL	167	444	-1


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1274
1626
1719
1819
1877
2280
NULL
NULL
NULL
NULL


-- !query
SELECT d-e,
       b-c,
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<(d - e):int,(b - c):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
-1	-2	1	333
-1	-2	1	333
-1	1	3	444
-1	NULL	NULL	444
-1	NULL	NULL	444
-2	-1	3	444
-2	-3	2	333
-3	-1	3	444
-3	-1	NULL	444
-3	NULL	NULL	444
-4	-1	2	333
1	-1	-1	222
1	-1	2	333
1	-3	4	444
1	1	-4	111
2	-3	1	333
3	3	-2	222
4	-1	-1	222
4	-2	1	333
4	1	-2	222
4	2	-1	222
NULL	-2	-2	222
NULL	-2	1	333
NULL	-3	1	333
NULL	-3	1	333
NULL	-3	1	333
NULL	2	-3	222
NULL	2	-4	111
NULL	3	-4	111
NULL	4	NULL	444


-- !query
SELECT b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<b:int>
-- !query output
106
160
188
194
197
210
227
248


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
367
383
451
481
511
529
541
563
680
709


-- !query
SELECT d-e
  FROM t1
 WHERE c>d
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(d - e):int>
-- !query output
-1
-3
-3
-4
1
1
1


-- !query
SELECT (a+b+c+d+e)/5,
       c-d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int>
-- !query output
187.0	-3
197.0	2
222.0	2
232.0	2
247.0	-2
NULL	-3
NULL	2
NULL	3


-- !query
SELECT a-b
  FROM t1
 WHERE b IS NOT NULL
   AND c>d
-- !query schema
struct<(a - b):int>
-- !query output
-1
-3
-4
2
2
2
3
4
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
    OR c>d
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1060
1190
1220
1280
1360
1410
1500
1600
1700
354
362
380
398
428
436
446
468
474
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       e,
       a+b*2+c*3,
       abs(b-c),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,e:int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1604	107	105	643	2	1	333
1899	127	125	770	1	-1	222
1975	132	130	793	3	-2	222
2129	144	143	846	1	3	444
2436	161	162	970	3	1	333
2589	171	174	1027	2	1	333
2739	181	184	1087	2	1	333
2802	187	185	1121	2	-1	222
2880	190	191	1157	1	-4	111
2946	199	195	1187	1	2	333
3176	214	211	1273	3	4	444
3259	218	219	1296	1	3	444
3331	223	224	1331	1	2	333
3405	226	225	1364	1	-1	222
3477	234	233	1392	1	3	444
3704	246	245	1483	1	-2	222
NULL	110	113	674	2	-4	111
NULL	145	147	881	3	-4	111
NULL	NULL	204	NULL	1	NULL	444


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       d,
       c-d,
       a+b*2
  FROM t1
 WHERE a>b
    OR (c<=d-2 OR c>=d+2)
    OR a IS NULL
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,d:int,(c - d):int,(a + (b * 2)):int>
-- !query output
1079	1060	106	109	-1	319
1165	1190	119	115	2	354
1274	1280	128	126	3	383
1325	1340	134	133	-2	400
1367	1360	136	135	4	410
1414	1410	141	142	-2	426
1626	1600	160	164	-1	481
1719	1700	170	173	-1	511
1819	362	180	183	-1	541
1877	374	188	189	-3	563
1971	398	197	196	2	593
2121	428	210	212	1	634
2164	436	215	217	-1	648
2211	446	221	220	2	665
2312	468	231	230	2	696
2479	492	248	249	-2	742
NULL	1020	102	101	NULL	NULL
NULL	1220	122	NULL	NULL	367
NULL	1500	150	NULL	NULL	451
NULL	354	176	NULL	NULL	529
NULL	474	236	NULL	NULL	709
NULL	NULL	202	201	2	NULL
NULL	NULL	244	243	-3	NULL
NULL	NULL	NULL	165	3	NULL


-- !query
SELECT b-c,
       a+b*2
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(b - c):int,(a + (b * 2)):int>
-- !query output
-1	383
-1	593
-1	648
-1	665
-1	680
-1	696
-1	NULL
-2	319
-2	367
-2	469
-2	511
-2	541
-3	410
-3	451
-3	481
-3	529
-3	634
-3	709
1	426
1	578
1	742
2	338
2	354
2	563
3	400
3	443
4	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       a,
       b-c,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d
  FROM t1
 WHERE d>e
    OR c BETWEEN b-2 AND d+2
    OR (e>a AND e<b)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,a:int,(b - c):int,(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int>
-- !query output
107.0	107	-2	319	222	-1
127.0	127	-1	383	111	3
132.0	132	3	400	333	-2
142.0	144	1	426	555	-2
162.0	161	-3	481	444	-1
172.0	171	-2	511	222	-1
182.0	181	-2	541	222	-1
187.0	187	2	563	111	-3
192.0	190	1	578	444	1
197.0	199	-1	593	555	2
212.0	214	-3	634	555	1
217.0	218	-1	648	444	-1
222.0	223	-1	665	444	2
227.0	226	-1	680	111	-1
232.0	234	-1	696	555	2
247.0	246	1	742	222	-2
NULL	110	2	338	555	NULL
NULL	116	2	354	222	2
NULL	145	3	443	222	NULL
NULL	NULL	-1	NULL	555	2


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>a AND e<b)
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       a-b,
       a+b*2,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2+c*3,
       (a+b+c+d+e)/5,
       a-b,
       d
  FROM t1
 WHERE (e>a AND e<b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<c:int,((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int,d:int>
-- !query output
108	643	107.0	1	109
112	674	NULL	-4	NULL
117	705	NULL	-3	115
140	846	142.0	3	142
146	881	NULL	-4	NULL
163	970	162.0	1	164
172	1027	172.0	1	173
182	1087	182.0	1	183
186	1121	187.0	-1	189
193	1157	192.0	-4	192
198	1187	197.0	2	196
203	NULL	NULL	NULL	201
213	1273	212.0	4	212
216	1296	217.0	3	217
222	1331	222.0	2	220
228	1364	227.0	-1	229
232	1392	232.0	3	230
247	1483	247.0	-2	249


-- !query
SELECT abs(b-c),
       d-e,
       b,
       c
  FROM t1
-- !query schema
struct<abs((b - c)):int,(d - e):int,b:int,c:int>
-- !query output
1	-1	141	140
1	-2	215	216
1	-3	202	203
1	-3	231	232
1	-4	221	222
1	1	128	129
1	1	194	193
1	1	197	198
1	4	227	228
1	4	248	247
2	-1	170	172
2	-1	180	182
2	4	106	108
2	4	188	186
2	NULL	114	112
2	NULL	119	117
2	NULL	122	124
2	NULL	157	159
3	-2	136	139
3	1	210	213
3	2	160	163
3	3	134	131
3	NULL	149	146
3	NULL	150	153
3	NULL	176	179
3	NULL	236	239
4	NULL	244	240
NULL	-1	NULL	168
NULL	-1	NULL	NULL
NULL	-3	102	NULL


-- !query
SELECT abs(b-c),
       c-d,
       d-e,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d>e
   AND b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND d NOT BETWEEN 110 AND 150
   AND b IS NOT NULL
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1020	NULL	NULL	444
1060	107	107	333
1600	161	161	333
1700	171	171	333
362	181	181	333
374	187	187	222
380	190	190	111
398	199	199	333
428	214	214	444
436	218	218	444
446	223	223	333
452	226	226	222
468	234	234	444
492	246	246	222
NULL	NULL	NULL	444
NULL	NULL	NULL	444


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       (a+b+c+d+e)/5
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a-b,
       abs(a)
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a - b):int,abs(a):int>
-- !query output
1604	1	107
1899	-1	127
1975	-2	132
2052	2	138
2129	3	144
2436	1	161
2589	1	171
2739	1	181
2802	-1	187
2880	-4	190
2946	2	199
3176	4	214
3259	3	218
3331	2	223
3405	-1	226
3477	3	234
3704	-2	246
NULL	-2	155
NULL	-3	116
NULL	-4	110
NULL	-4	145
NULL	1	123
NULL	1	151
NULL	1	177
NULL	1	237
NULL	NULL	167
NULL	NULL	208
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1079	333
1165	222
1274	222
1325	222
1367	333
1414	444
1626	333
1719	333
1819	333
1877	222
1925	111
1971	333
2121	444
2164	444
2211	333
2280	222
2312	444
2479	222
NULL	111
NULL	111
NULL	222
NULL	333
NULL	333
NULL	333
NULL	333
NULL	444
NULL	444


-- !query
SELECT a-b,
       c,
       abs(a),
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(a - b):int,c:int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	129	127	1274
-1	186	187	1877
-1	228	226	2280
-2	131	132	1325
-2	159	155	NULL
-2	247	246	2479
-3	117	116	1165
-4	112	110	NULL
-4	146	145	NULL
-4	193	190	1925
1	108	107	1079
1	124	123	NULL
1	153	151	NULL
1	163	161	1626
1	172	171	1719
1	179	177	NULL
1	182	181	1819
1	239	237	NULL
2	139	138	1367
2	198	199	1971
2	222	223	2211
3	140	144	1414
3	216	218	2164
3	232	234	2312
4	213	214	2121
NULL	168	167	NULL
NULL	203	NULL	NULL
NULL	240	NULL	NULL
NULL	NULL	208	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2,
       b,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       abs(b-c),
       a+b*2+c*3+d*4+e*5,
       d
  FROM t1
 WHERE d>e
-- !query schema
struct<(b - c):int,abs((b - c)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,d:int>
-- !query output
-1	1	1899	126
-1	1	2946	196
-1	1	3405	229
-2	2	1604	109
-3	3	2436	164
-3	3	3176	212
1	1	2880	192
1	1	3704	249
2	2	2802	189
3	3	1975	133


-- !query
SELECT d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c)
  FROM t1
 WHERE b>c
   AND d>e
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs((b - c)):int>
-- !query output
133	1340	3
189	374	2
192	380	1
249	492	1


-- !query
SELECT d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR a IS NULL
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,(d - e):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1020	NULL	-3	555	444
1060	-1	4	222	333
1140	NULL	NULL	555	111
1190	2	NULL	222	222
1220	NULL	NULL	222	333
1280	3	1	111	222
1340	-2	3	333	222
1360	4	-2	222	333
1410	-2	-1	555	444
1490	NULL	NULL	222	111
1500	NULL	NULL	555	333
1570	NULL	NULL	555	222
1600	-1	2	444	333
1700	-1	-1	222	333
354	NULL	NULL	555	333
362	-1	-1	222	333
374	-3	4	111	222
380	1	1	444	111
398	2	1	555	333
428	1	1	555	444
436	-1	-2	444	444
446	2	-4	444	333
452	-1	4	111	222
468	2	-3	555	444
474	NULL	NULL	444	333
492	-2	4	222	222
NULL	-3	NULL	555	444
NULL	2	-3	555	444
NULL	3	-1	222	444
NULL	NULL	-1	555	444


-- !query
SELECT a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>a AND e<b)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       e,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (e>c OR e<d)
    OR a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       abs(b-c)
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,abs((b - c)):int>
-- !query output
1027	2
1066	3
1087	2
1121	2
1157	1
1187	1
1273	3
1296	1
1331	1
1364	1
1392	1
1426	3
1483	1
643	2
674	2
705	2
739	2
770	1
793	3
827	3
846	1
881	3
910	3
946	2
970	3
NULL	1
NULL	4
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<d:int>
-- !query output
101
109
164
165
173
183
189
192
196
201
206
212
217
220
229
230
243
249


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c,
       a+b*2,
       a+b*2+c*3
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,c:int,(a + (b * 2)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1060	108	319	643
1140	112	338	674
1280	129	383	770
1340	131	400	793
1410	140	426	846
1490	146	443	881
1600	163	481	970
1700	172	511	1027
362	182	541	1087
374	186	563	1121
380	193	578	1157
398	198	593	1187
428	213	634	1273
436	216	648	1296
446	222	665	1331
452	228	680	1364
468	232	696	1392
492	247	742	1483
NULL	203	NULL	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3
  FROM t1
 WHERE a IS NULL
    OR (c<=d-2 OR c>=d+2)
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1604	643
1899	770
1975	793
2052	827
2129	846
2436	970
2589	1027
2739	1087
2802	1121
2880	1157
2946	1187
3176	1273
3259	1296
3331	1331
3405	1364
3477	1392
3704	1483
NULL	1066
NULL	1426
NULL	674
NULL	705
NULL	739
NULL	881
NULL	910
NULL	946
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT b
  FROM t1
-- !query schema
struct<b:int>
-- !query output
102
106
114
119
122
128
134
136
141
149
150
157
160
170
176
180
188
194
197
202
210
215
221
227
231
236
244
248
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a+b*2+c*3+d*4
  FROM t1
 WHERE a IS NULL
   AND c>d
   AND (e>a AND e<b)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output



-- !query
SELECT c-d
  FROM t1
 WHERE (e>c OR e<d)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-3
1
1
2
2
2
2


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c
  FROM t1
 WHERE a>b
    OR a IS NULL
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int>
-- !query output
222	-2
222	-2
222	-2
222	-2
222	-3
444	-1
444	-1
444	-3
444	-3
555	-1
555	-1
555	-1
555	-3
555	-3
555	-3
555	1
555	4
555	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       c-d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int,(c - d):int>
-- !query output
111	187	-3
222	116	2
222	145	NULL
222	246	-2
333	132	-2
444	190	1
555	110	NULL
555	144	-2
555	NULL	-3


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2,
       b,
       d-e
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       b-c,
       d-e
  FROM t1
-- !query schema
struct<e:int,((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(b - c):int,(d - e):int>
-- !query output
104	NULL	NULL	NULL	-3
105	643	1079	-2	4
113	674	NULL	2	NULL
121	739	NULL	-2	NULL
125	770	1274	-1	1
130	793	1325	3	3
137	827	1367	-3	-2
143	846	1414	1	-1
147	881	NULL	3	NULL
158	946	NULL	-2	NULL
162	970	1626	-3	2
166	NULL	NULL	NULL	-1
174	1027	1719	-2	-1
175	1066	NULL	-3	NULL
184	1087	1819	-2	-1
185	1121	1877	2	4
191	1157	1925	1	1
195	1187	1971	-1	1
204	NULL	NULL	-1	-3
207	NULL	NULL	NULL	-1
211	1273	2121	-3	1
219	1296	2164	-1	-2
224	1331	2211	-1	-4
225	1364	2280	-1	4
233	1392	2312	-1	-3
238	1426	NULL	-3	NULL
245	1483	2479	1	4
NULL	705	1165	2	NULL
NULL	910	NULL	-3	NULL
NULL	NULL	NULL	4	NULL


-- !query
SELECT c,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       a+b*2
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c>d
    OR a IS NULL
-- !query schema
struct<c:int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int,(a + (b * 2)):int>
-- !query output
117	2	222	2	354
129	1	111	3	383
131	3	333	-2	400
139	3	222	4	410
140	1	555	-2	426
168	NULL	222	3	NULL
186	2	111	-3	563
193	1	444	1	578
198	1	555	2	593
203	1	555	2	NULL
213	3	555	1	634
222	1	444	2	665
232	1	555	2	696
240	4	555	-3	NULL
247	1	222	-2	742
NULL	NULL	555	NULL	NULL


-- !query
SELECT b-c,
       abs(a)
  FROM t1
-- !query schema
struct<(b - c):int,abs(a):int>
-- !query output
-1	127
-1	199
-1	218
-1	223
-1	226
-1	234
-1	NULL
-2	107
-2	123
-2	155
-2	171
-2	181
-3	138
-3	151
-3	161
-3	177
-3	214
-3	237
1	144
1	190
1	246
2	110
2	116
2	187
3	132
3	145
4	NULL
NULL	167
NULL	208
NULL	NULL


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b,
       a
  FROM t1
 WHERE b>c
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       c
  FROM t1
 WHERE d>e
   AND b>c
-- !query schema
struct<a:int,c:int>
-- !query output
132	131
187	186
190	193
246	247


-- !query
SELECT b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(b - c):int>
-- !query output
-1
-1
-1
-1
-1
-1
-1
-2
-2
-2
-2
-2
-3
-3
-3
-3
-3
-3
1
1
1
2
2
2
3
3
4
NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       a+b*2+c*3,
       e
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int,((a + (b * 2)) + (c * 3)):int,e:int>
-- !query output
1079	1	643	105
1165	-3	705	NULL
1274	-1	770	125
1325	-2	793	130
1367	2	827	137
1414	3	846	143
1626	1	970	162
1719	1	1027	174
1819	1	1087	184
1877	-1	1121	185
1925	-4	1157	191
1971	2	1187	195
2121	4	1273	211
2164	3	1296	219
2211	2	1331	224
2280	-1	1364	225
2312	3	1392	233
2479	-2	1483	245
NULL	-2	946	158
NULL	-4	674	113
NULL	-4	881	147
NULL	1	1066	175
NULL	1	1426	238
NULL	1	739	121
NULL	1	910	NULL
NULL	NULL	NULL	204
NULL	NULL	NULL	NULL


-- !query
SELECT d-e,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
-- !query schema
struct<(d - e):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,abs((b - c)):int>
-- !query output
-1	1414	2129	444	555	142	1
-1	1719	2589	333	222	173	2
-1	1819	2739	333	222	183	2
-1	NULL	NULL	444	222	165	NULL
-1	NULL	NULL	444	555	206	NULL
-2	2164	3259	444	444	217	1
-3	2312	3477	444	555	230	1
-3	NULL	NULL	444	555	101	NULL
-3	NULL	NULL	444	555	201	1
-4	2211	3331	333	444	220	1
1	1274	1899	222	111	126	1
1	1925	2880	111	444	192	1
1	1971	2946	333	555	196	1
1	2121	3176	444	555	212	3
2	1626	2436	333	444	164	3
3	1325	1975	222	333	133	3
4	1079	1604	333	222	109	2
4	1877	2802	222	111	189	2
4	2280	3405	222	111	229	1
4	2479	3704	222	222	249	1
NULL	NULL	NULL	111	222	NULL	3
NULL	NULL	NULL	111	555	NULL	2
NULL	NULL	NULL	444	555	243	4


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       c
  FROM t1
 WHERE b>c
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,d:int,c:int>
-- !query output
132.0	133	131
142.0	142	140
187.0	189	186
192.0	192	193
247.0	249	247
NULL	115	117
NULL	243	240
NULL	NULL	112
NULL	NULL	146


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int>
-- !query output
111	383
111	563
111	680
222	319
222	354
222	367
222	410
222	443
222	511
222	541
222	742
222	NULL
333	400
444	481
444	578
444	648
444	665
444	709
555	338
555	426
555	451
555	469
555	529
555	593
555	634
555	696
555	NULL
555	NULL
555	NULL
555	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4+e*5,
       d,
       e
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,d:int,e:int>
-- !query output
444	NULL	101	104
444	NULL	201	204
444	NULL	243	NULL


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR a IS NULL
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1165
1274
1325
1367
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT abs(a)
  FROM t1
 WHERE d>e
   AND a IS NULL
-- !query schema
struct<abs(a):int>
-- !query output



-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a)
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int>
-- !query output
1027	1719	333	222	171
1066	NULL	333	555	177
1087	1819	333	222	181
1121	1877	222	111	187
1157	1925	111	444	190
1187	1971	333	555	199
1273	2121	444	555	214
1296	2164	444	444	218
1331	2211	333	444	223
1364	2280	222	111	226
1392	2312	444	555	234
1426	NULL	333	444	237
1483	2479	222	222	246
643	1079	333	222	107
674	NULL	111	555	110
705	1165	222	222	116
739	NULL	333	222	123
770	1274	222	111	127
793	1325	222	333	132
827	1367	333	222	138
846	1414	444	555	144
881	NULL	111	222	145
910	NULL	333	555	151
946	NULL	222	555	155
970	1626	333	444	161
NULL	NULL	444	222	167
NULL	NULL	444	555	208
NULL	NULL	444	555	NULL
NULL	NULL	444	555	NULL
NULL	NULL	444	555	NULL


-- !query
SELECT b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1165
1274
1325
1367
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(a),
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       d
  FROM t1
 WHERE (e>a AND e<b)
    OR (a>b-2 AND a<b+2)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       (a+b+c+d+e)/5,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
333
333
333
333
333
333
333
333
333
333
333
444
444
444
444
444
444
444
444
444


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b-c,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<(c - d):int,c:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	108	222
-1	163	444
-1	172	222
-1	182	222
-1	216	444
-1	228	111
-2	131	333
-2	140	555
-2	247	222
-3	186	111
-3	240	555
1	193	444
1	213	555
2	117	222
2	198	555
2	203	555
2	222	444
2	232	555
3	129	111
3	168	222
4	139	222
NULL	112	555
NULL	124	222
NULL	146	222
NULL	153	555
NULL	159	555
NULL	179	555
NULL	239	444
NULL	NULL	555
NULL	NULL	555


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
111	192.0
111	NULL
111	NULL
222	132.0
222	187.0
222	247.0
222	NULL
444	142.0
444	NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR coalesce(a,b,c,d,e)<>0
    OR (e>c OR e<d)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1066
1087
1121
1157
1187
1273
1296
1331
1364
1392
1426
1483
643
674
705
739
770
793
827
846
881
910
946
970
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT a+b*2,
       abs(b-c),
       a
  FROM t1
 WHERE a IS NULL
   AND (e>c OR e<d)
   AND c>d
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int,a:int>
-- !query output
NULL	1	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       a+b*2+c*3,
       d,
       d-e
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int,((a + (b * 2)) + (c * 3)):int,d:int,(d - e):int>
-- !query output
222	146	881	NULL	NULL
444	193	1157	192	1
555	112	674	NULL	NULL


-- !query
SELECT d-e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
-- !query schema
struct<(d - e):int>
-- !query output
-1
1
4
4
NULL


-- !query
SELECT abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a,
       b,
       abs(b-c)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,b:int,abs((b - c)):int>
-- !query output
1079	107	106	2
1165	116	119	2
1274	127	128	1
1325	132	134	3
1367	138	136	3
1414	144	141	1
1626	161	160	3
1719	171	170	2
1819	181	180	2
1877	187	188	2
1925	190	194	1
1971	199	197	1
2121	214	210	3
2164	218	215	1
2211	223	221	1
2280	226	227	1
2312	234	231	1
2479	246	248	1
NULL	110	114	2
NULL	123	122	2
NULL	145	149	3
NULL	151	150	3
NULL	155	157	2
NULL	167	NULL	NULL
NULL	177	176	3
NULL	208	NULL	NULL
NULL	237	236	3
NULL	NULL	102	NULL
NULL	NULL	202	1
NULL	NULL	244	4


-- !query
SELECT a
  FROM t1
-- !query schema
struct<a:int>
-- !query output
107
110
116
123
127
132
138
144
145
151
155
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246
NULL
NULL
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b IS NOT NULL
    OR c BETWEEN b-2 AND d+2
    OR (e>c OR e<d)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1020
1060
1140
1190
1220
1280
1340
1360
1410
1490
1500
1570
1600
1700
354
362
374
380
398
428
436
446
452
468
474
492
NULL
NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a+b*2
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND a>b
   AND b IS NOT NULL
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int>
-- !query output
222	1027	511
222	1087	541
222	643	319
222	739	367
222	827	410
444	1296	648
444	1331	665
444	1426	709
444	970	481
555	1066	529
555	1187	593
555	1273	634
555	1392	696
555	846	426
555	910	451


-- !query
SELECT a-b,
       a+b*2+c*3,
       c-d,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c
  FROM t1
 WHERE a IS NULL
   AND (c<=d-2 OR c>=d+2)
   AND c>d
-- !query schema
struct<c:int>
-- !query output
203


-- !query
SELECT e,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR e+d BETWEEN a+b-10 AND c+130
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       d
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,b:int,d:int>
-- !query output
1060	106	109
1190	119	115
1410	141	142
1600	160	164
1700	170	173
362	180	183
374	188	189
380	194	192
398	197	196
428	210	212
436	215	217
446	221	220
452	227	229
468	231	230
492	248	249
NULL	202	201


-- !query
SELECT c-d,
       a+b*2+c*3+d*4+e*5,
       b,
       d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND b IS NOT NULL
-- !query schema
struct<(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,d:int>
-- !query output
-2	1975	134	133
-2	2129	141	142
-2	3704	248	249
-3	2802	188	189
-3	NULL	244	243
2	2946	197	196
2	3331	221	220
2	3477	231	230
2	NULL	119	115
2	NULL	202	201
3	1899	128	126
4	2052	136	135


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1060
1190
1410
1600
1700
362
374
380
398
428
436
446
452
468
492
NULL


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
-- !query schema
struct<(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-2	222	492
-2	333	1340
-2	555	1410
-3	111	374
-3	555	NULL
1	444	380
2	222	1190
NULL	222	1490
NULL	555	1140


-- !query
SELECT a+b*2+c*3+d*4,
       a,
       abs(b-c),
       d-e,
       a+b*2
  FROM t1
 WHERE b IS NOT NULL
   AND a>b
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int,abs((b - c)):int,(d - e):int,(a + (b * 2)):int>
-- !query output
1079	107	2	4	319
1414	144	1	-1	426
1626	161	3	2	481
1719	171	2	-1	511
1819	181	2	-1	541
1971	199	1	1	593
2121	214	3	1	634
2164	218	1	-2	648
2211	223	1	-4	665
2312	234	1	-3	696


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR d>e
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1066
1087
1121
1157
1187
1273
1296
1331
1364
1392
1426
1483
643
674
705
739
770
793
827
846
881
910
946
970
NULL
NULL


-- !query
SELECT c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       a+b*2,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-1	111	2280	680	228	452
-1	222	1079	319	108	1060
-1	222	1719	511	172	1700
-1	222	1819	541	182	362
-1	444	1626	481	163	1600
-1	444	2164	648	216	436
-2	222	2479	742	247	492
-2	333	1325	400	131	1340
-2	555	1414	426	140	1410
-3	111	1877	563	186	374
-3	555	NULL	NULL	240	NULL
1	444	1925	578	193	380
1	555	2121	634	213	428
2	222	1165	354	117	1190
2	444	2211	665	222	446
2	555	1971	593	198	398
2	555	2312	696	232	468
2	555	NULL	NULL	203	NULL
3	111	1274	383	129	1280
3	222	NULL	NULL	168	NULL
4	222	1367	410	139	1360
NULL	222	NULL	367	124	1220
NULL	222	NULL	443	146	1490
NULL	444	NULL	709	239	474
NULL	555	NULL	338	112	1140
NULL	555	NULL	451	153	1500
NULL	555	NULL	469	159	1570
NULL	555	NULL	529	179	354
NULL	555	NULL	NULL	NULL	1020
NULL	555	NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2
  FROM t1
 WHERE (e>a AND e<b)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
338
367
383
443
451
481
511
529
541
563
578
680
709


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       e
  FROM t1
 WHERE (e>a AND e<b)
   AND (e>c OR e<d)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,e:int>
-- !query output
2880	191
NULL	113
NULL	147


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c>d
    OR (c<=d-2 OR c>=d+2)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-1	1410
-1	NULL
-2	1360
-3	468
-3	NULL
-4	446
1	1280
1	380
1	398
1	428
3	1340
4	1060
4	374
4	492
NULL	1190
NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
107.0	222	106
127.0	111	128
132.0	333	134
137.0	222	136
142.0	555	141
162.0	444	160
172.0	222	170
182.0	222	180
187.0	111	188
192.0	444	194
197.0	555	197
212.0	555	210
217.0	444	215
222.0	444	221
227.0	111	227
232.0	555	231
247.0	222	248
NULL	222	119
NULL	222	122
NULL	222	149
NULL	222	NULL
NULL	444	236
NULL	555	102
NULL	555	114
NULL	555	150
NULL	555	157
NULL	555	176
NULL	555	202
NULL	555	244
NULL	555	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4
  FROM t1
 WHERE a IS NULL
   AND b IS NOT NULL
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       c-d,
       a+b*2+c*3,
       abs(b-c)
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a+b*2,
       b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
   AND b IS NOT NULL
   AND (e>a AND e<b)
-- !query schema
struct<c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
193	1925


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1165
1274
1325
1367
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT d-e,
       b
  FROM t1
 WHERE a>b
-- !query schema
struct<(d - e):int,b:int>
-- !query output
-1	141
-1	170
-1	180
-2	136
-2	215
-3	231
-4	221
1	197
1	210
2	160
4	106
NULL	122
NULL	150
NULL	176
NULL	236


-- !query
SELECT d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE a>b
    OR b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b
  FROM t1
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-1
-2
-2
-2
-3
-4
-4
-4
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e,
       (a+b+c+d+e)/5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       c,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<abs((b - c)):int,c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1	129	1899
1	140	2129
1	193	2880
1	198	2946
1	203	NULL
1	216	3259
1	222	3331
1	228	3405
1	232	3477
1	247	3704
2	108	1604
2	112	NULL
2	117	NULL
2	124	NULL
2	159	NULL
2	172	2589
2	182	2739
2	186	2802
3	131	1975
3	139	2052
3	146	NULL
3	153	NULL
3	163	2436
3	179	NULL
3	213	3176
3	239	NULL
4	240	NULL
NULL	168	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT abs(a),
       d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND d NOT BETWEEN 110 AND 150
   AND c>d
-- !query schema
struct<abs(a):int,d:int>
-- !query output
190	192
199	196
214	212
223	220
234	230
NULL	201


-- !query
SELECT d-e,
       c-d,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4,
       a
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(d - e):int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,a:int>
-- !query output
1	3	1899	1274	127
4	-1	1604	1079	107


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       b-c,
       e,
       a-b
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(b - c):int,e:int,(a - b):int>
-- !query output
1604	333	222	643	-2	105	1
1899	222	111	770	-1	125	-1
1975	222	333	793	3	130	-2
2052	333	222	827	-3	137	2
2129	444	555	846	1	143	3
2436	333	444	970	-3	162	1
2589	333	222	1027	-2	174	1
2739	333	222	1087	-2	184	1
2802	222	111	1121	2	185	-1
2880	111	444	1157	1	191	-4
2946	333	555	1187	-1	195	2
3176	444	555	1273	-3	211	4
3259	444	444	1296	-1	219	3
3331	333	444	1331	-1	224	2
3405	222	111	1364	-1	225	-1
3477	444	555	1392	-1	233	3
3704	222	222	1483	1	245	-2
NULL	111	222	881	3	147	-4
NULL	111	555	674	2	113	-4
NULL	222	222	705	2	NULL	-3
NULL	222	555	946	-2	158	-2
NULL	333	222	739	-2	121	1
NULL	333	444	1426	-3	238	1
NULL	333	555	1066	-3	175	1
NULL	333	555	910	-3	NULL	1
NULL	444	222	NULL	NULL	166	NULL
NULL	444	555	NULL	-1	204	NULL
NULL	444	555	NULL	4	NULL	NULL
NULL	444	555	NULL	NULL	104	NULL
NULL	444	555	NULL	NULL	207	NULL


-- !query
SELECT c-d,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
-- !query schema
struct<(c - d):int,d:int>
-- !query output
-3	189


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a)
  FROM t1
 WHERE a>b
    OR (e>c OR e<d)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int>
-- !query output
1604	107
1899	127
1975	132
2052	138
2129	144
2436	161
2589	171
2739	181
2802	187
2880	190
2946	199
3176	214
3259	218
3331	223
3405	226
3477	234
3704	246
NULL	110
NULL	123
NULL	145
NULL	151
NULL	177
NULL	237
NULL	NULL


-- !query
SELECT d,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<d:int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
101	NULL	555
109	107.0	222
115	NULL	222
126	127.0	111
133	132.0	333
135	137.0	222
142	142.0	555
164	162.0	444
165	NULL	222
173	172.0	222
183	182.0	222
189	187.0	111
192	192.0	444
196	197.0	555
201	NULL	555
206	NULL	555
212	212.0	555
217	217.0	444
220	222.0	444
229	227.0	111
230	232.0	555
243	NULL	555
249	247.0	222
NULL	NULL	222
NULL	NULL	222
NULL	NULL	444
NULL	NULL	555
NULL	NULL	555
NULL	NULL	555
NULL	NULL	555


-- !query
SELECT abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
1	111	128
1	111	227
2	111	188
2	222	106
2	222	170
2	222	180
3	444	160


-- !query
SELECT d,
       b-c,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,d:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
319	109	333	2	222	107	1079
338	NULL	111	2	555	110	NULL
354	115	222	2	222	116	1165
367	NULL	333	2	222	123	NULL
383	126	222	1	111	127	1274
400	133	222	3	333	132	1325
410	135	333	3	222	138	1367
426	142	444	1	555	144	1414
443	NULL	111	3	222	145	NULL
451	NULL	333	3	555	151	NULL
469	NULL	222	2	555	155	NULL
481	164	333	3	444	161	1626
511	173	333	2	222	171	1719
529	NULL	333	3	555	177	NULL
541	183	333	2	222	181	1819
563	189	222	2	111	187	1877
578	192	111	1	444	190	1925
593	196	333	1	555	199	1971
634	212	444	3	555	214	2121
648	217	444	1	444	218	2164
665	220	333	1	444	223	2211
680	229	222	1	111	226	2280
696	230	444	1	555	234	2312
709	NULL	333	3	444	237	NULL
742	249	222	1	222	246	2479
NULL	101	444	NULL	555	NULL	NULL
NULL	165	444	NULL	222	167	NULL
NULL	201	444	1	555	NULL	NULL
NULL	206	444	NULL	555	208	NULL
NULL	243	444	4	555	NULL	NULL


-- !query
SELECT abs(a),
       a+b*2+c*3,
       d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<abs(a):int,((a + (b * 2)) + (c * 3)):int,d:int>
-- !query output
107	643	109
123	739	NULL
127	770	126
151	910	NULL
161	970	164
171	1027	173
177	1066	NULL
181	1087	183
187	1121	189
226	1364	229
237	1426	NULL


-- !query
SELECT a,
       a+b*2,
       a+b*2+c*3,
       b,
       abs(b-c),
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>a AND e<b)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
111
111
111
222
222
222
222
333
333
333
333
333
333
444
444
444
444
444


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(c - d):int>
-- !query output
-1
-1
-1
-1
-1
-1
-2
-2
-2
-3
-3
1
1
2
2
2
2
2
3
3
4
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT b,
       b-c,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b IS NOT NULL
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<b:int,(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
102	NULL	NULL	NULL	1020
106	-2	1604	107	1060
114	2	NULL	110	1140
119	2	NULL	116	1190
122	-2	NULL	123	1220
128	-1	1899	127	1280
134	3	1975	132	1340
136	-3	2052	138	1360
141	1	2129	144	1410
149	3	NULL	145	1490
150	-3	NULL	151	1500
157	-2	NULL	155	1570
160	-3	2436	161	1600
170	-2	2589	171	1700
176	-3	NULL	177	354
180	-2	2739	181	362
188	2	2802	187	374
194	1	2880	190	380
197	-1	2946	199	398
202	-1	NULL	NULL	NULL
210	-3	3176	214	428
215	-1	3259	218	436
221	-1	3331	223	446
227	-1	3405	226	452
231	-1	3477	234	468
236	-3	NULL	237	474
244	4	NULL	NULL	NULL
248	1	3704	246	492


-- !query
SELECT e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR b IS NOT NULL
-- !query schema
struct<e:int>
-- !query output
104
105
113
121
125
130
137
143
147
158
162
166
174
175
184
185
191
195
204
211
219
224
225
233
238
245
NULL
NULL
NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       a+b*2+c*3,
       c-d,
       e,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       a-b,
       a+b*2+c*3+d*4,
       a+b*2
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<abs(a):int,(a - b):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int>
-- !query output
107	1	1079	319
110	-4	NULL	338
116	-3	1165	354
123	1	NULL	367
127	-1	1274	383
132	-2	1325	400
138	2	1367	410
144	3	1414	426
145	-4	NULL	443
151	1	NULL	451
155	-2	NULL	469
161	1	1626	481
167	NULL	NULL	NULL
171	1	1719	511
177	1	NULL	529
181	1	1819	541
187	-1	1877	563
190	-4	1925	578
199	2	1971	593
208	NULL	NULL	NULL
214	4	2121	634
218	3	2164	648
223	2	2211	665
226	-1	2280	680
234	3	2312	696
237	1	NULL	709
246	-2	2479	742
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       a-b
  FROM t1
 WHERE a>b
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a
  FROM t1
 WHERE (e>a AND e<b)
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       b-c,
       abs(b-c),
       c,
       c-d
  FROM t1
 WHERE a>b
-- !query schema
struct<e:int,(b - c):int,abs((b - c)):int,c:int,(c - d):int>
-- !query output
105	-2	2	108	-1
121	-2	2	124	NULL
137	-3	3	139	4
143	1	1	140	-2
162	-3	3	163	-1
174	-2	2	172	-1
175	-3	3	179	NULL
184	-2	2	182	-1
195	-1	1	198	2
211	-3	3	213	1
219	-1	1	216	-1
224	-1	1	222	2
233	-1	1	232	2
238	-3	3	239	NULL
NULL	-3	3	153	NULL


-- !query
SELECT b,
       a-b,
       d,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       a+b*2+c*3
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<b:int,(a - b):int,d:int,(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(b - c):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
102	NULL	101	NULL	555	NULL	NULL
106	1	109	319	222	-2	643
160	1	164	481	444	-3	970
170	1	173	511	222	-2	1027
180	1	183	541	222	-2	1087
188	-1	189	563	111	2	1121
194	-4	192	578	444	1	1157
197	2	196	593	555	-1	1187
202	NULL	201	NULL	555	-1	NULL
210	4	212	634	555	-3	1273
215	3	217	648	444	-1	1296
221	2	220	665	444	-1	1331
227	-1	229	680	111	-1	1364
231	3	230	696	555	-1	1392
244	NULL	243	NULL	555	4	NULL
248	-2	249	742	222	1	1483
NULL	NULL	165	NULL	222	NULL	NULL
NULL	NULL	206	NULL	555	NULL	NULL


-- !query
SELECT d-e,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       abs(b-c),
       c-d
  FROM t1
 WHERE (e>a AND e<b)
    OR a IS NULL
    OR c>d
-- !query schema
struct<(d - e):int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,abs((b - c)):int,(c - d):int>
-- !query output
-1	NULL	NULL	NULL	NULL	3
-2	2	1360	410	3	4
-3	3	468	696	1	2
-3	NULL	1020	NULL	NULL	NULL
-3	NULL	NULL	NULL	1	2
-4	2	446	665	1	2
1	-1	1280	383	1	3
1	-4	380	578	1	1
1	2	398	593	1	2
1	4	428	634	3	1
NULL	-3	1190	354	2	2
NULL	-4	1140	338	2	NULL
NULL	-4	1490	443	3	NULL
NULL	NULL	NULL	NULL	4	-3


-- !query
SELECT a+b*2
  FROM t1
 WHERE c>d
    OR a>b
    OR d>e
-- !query schema
struct<(a + (b * 2)):int>
-- !query output
319
354
367
383
400
410
426
451
481
511
529
541
563
578
593
634
648
665
680
696
709
742
NULL
NULL


-- !query
SELECT c-d,
       b-c,
       e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE d>e
-- !query schema
struct<(c - d):int,(b - c):int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-1	-1	225	3405
-1	-2	105	1604
-1	-3	162	2436
-2	1	245	3704
-2	3	130	1975
-3	2	185	2802
1	-3	211	3176
1	1	191	2880
2	-1	195	2946
3	-1	125	1899


-- !query
SELECT e
  FROM t1
 WHERE a>b
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<e:int>
-- !query output
104
105
113
121
125
130
137
143
147
158
162
166
174
175
184
185
191
195
204
207
211
219
224
225
233
238
245
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a>b
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
1079	643	222	106


-- !query
SELECT c
  FROM t1
 WHERE c>d
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<c:int>
-- !query output
108
112
117
124
129
131
139
140
146
153
159
163
168
172
179
182
186
193
198
203
213
216
222
228
232
239
240
247


-- !query
SELECT e,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a,
       b-c
  FROM t1
 WHERE a>b
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
-- !query schema
struct<e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,a:int,(b - c):int>
-- !query output
105	1604	107.0	222	107	-2
162	2436	162.0	444	161	-3
195	2946	197.0	555	199	-1
211	3176	212.0	555	214	-3


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(b-c),
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (c<=d-2 OR c>=d+2)
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c),
       abs(a)
  FROM t1
 WHERE a>b
    OR c>d
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs((b - c)):int,abs(a):int>
-- !query output
1060	2	107
1190	2	116
1220	2	123
1280	1	127
1360	3	138
1410	1	144
1500	3	151
1600	3	161
1700	2	171
354	3	177
362	2	181
380	1	190
398	1	199
428	3	214
436	1	218
446	1	223
468	1	234
474	3	237
NULL	1	NULL
NULL	NULL	167


-- !query
SELECT c,
       b,
       abs(b-c),
       e,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(c - d):int,d:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-1	109	1060
-1	164	1600
-1	173	1700
-1	183	362
-1	229	452
-3	189	374


-- !query
SELECT a-b,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>c OR e<d)
    OR d NOT BETWEEN 110 AND 150
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       c,
       a+b*2
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,c:int,(a + (b * 2)):int>
-- !query output
107.0	108	319
127.0	129	383
132.0	131	400
137.0	139	410
142.0	140	426
162.0	163	481
172.0	172	511
182.0	182	541
187.0	186	563
192.0	193	578
197.0	198	593
212.0	213	634
217.0	216	648
222.0	222	665
227.0	228	680
232.0	232	696
247.0	247	742
NULL	112	338
NULL	117	354
NULL	124	367
NULL	146	443
NULL	153	451
NULL	159	469
NULL	168	NULL
NULL	179	529
NULL	203	NULL
NULL	239	709
NULL	240	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,abs((b - c)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
1079	1060	1	2	222
1165	1190	-3	2	222
1274	1280	-1	1	111
1325	1340	-2	3	333
1367	1360	2	3	222
1414	1410	3	1	555
1626	1600	1	3	444
1719	1700	1	2	222
1819	362	1	2	222
1877	374	-1	2	111
1925	380	-4	1	444
1971	398	2	1	555
2121	428	4	3	555
2164	436	3	1	444
2211	446	2	1	444
2280	452	-1	1	111
2312	468	3	1	555
2479	492	-2	1	222
NULL	1140	-4	2	555
NULL	1220	1	2	222
NULL	1490	-4	3	222
NULL	1500	1	3	555
NULL	1570	-2	2	555
NULL	354	1	3	555
NULL	474	1	3	444
NULL	NULL	NULL	1	555
NULL	NULL	NULL	4	555


-- !query
SELECT a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       abs(b-c),
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>c OR e<d)
    OR b>c
-- !query schema
struct<(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,abs((b - c)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	1410	426	1	1414
-1	1700	511	2	1719
-1	362	541	2	1819
-2	436	648	1	2164
-3	468	696	1	2312
-3	NULL	NULL	1	NULL
-4	446	665	1	2211
1	1280	383	1	1274
1	380	578	1	1925
1	398	593	1	1971
1	428	634	3	2121
2	1600	481	3	1626
3	1340	400	3	1325
4	1060	319	2	1079
4	374	563	2	1877
4	452	680	1	2280
4	492	742	1	2479
NULL	1140	338	2	NULL
NULL	1190	354	2	1165
NULL	1220	367	2	NULL
NULL	1490	443	3	NULL
NULL	1500	451	3	NULL
NULL	354	529	3	NULL
NULL	474	709	3	NULL
NULL	NULL	NULL	4	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       d,
       b-c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d>e
    OR b IS NOT NULL
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       b
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2+c*3+d*4+e*5,
       b,
       a+b*2
  FROM t1
-- !query schema
struct<c:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,(a + (b * 2)):int>
-- !query output
108	1604	106	319
112	NULL	114	338
117	NULL	119	354
124	NULL	122	367
129	1899	128	383
131	1975	134	400
139	2052	136	410
140	2129	141	426
146	NULL	149	443
153	NULL	150	451
159	NULL	157	469
163	2436	160	481
168	NULL	NULL	NULL
172	2589	170	511
179	NULL	176	529
182	2739	180	541
186	2802	188	563
193	2880	194	578
198	2946	197	593
203	NULL	202	NULL
213	3176	210	634
216	3259	215	648
222	3331	221	665
228	3405	227	680
232	3477	231	696
239	NULL	236	709
240	NULL	244	NULL
247	3704	248	742
NULL	NULL	102	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT b-c,
       b,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       d-e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4,
       abs(b-c)
  FROM t1
 WHERE a IS NULL
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       b-c,
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a
  FROM t1
 WHERE a IS NULL
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<b:int,(b - c):int,e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,a:int>
-- !query output
102	NULL	104	444	1020	NULL
119	2	NULL	222	1190	116
128	-1	125	222	1280	127
134	3	130	222	1340	132
136	-3	137	333	1360	138
141	1	143	444	1410	144
188	2	185	222	374	187
197	-1	195	333	398	199
202	-1	204	444	NULL	NULL
221	-1	224	333	446	223
231	-1	233	444	468	234
244	4	NULL	444	NULL	NULL
248	1	245	222	492	246
NULL	NULL	166	444	NULL	167


-- !query
SELECT a-b,
       d-e
  FROM t1
-- !query schema
struct<(a - b):int,(d - e):int>
-- !query output
-1	1
-1	4
-1	4
-2	3
-2	4
-2	NULL
-3	NULL
-4	1
-4	NULL
-4	NULL
1	-1
1	-1
1	2
1	4
1	NULL
1	NULL
1	NULL
1	NULL
2	-2
2	-4
2	1
3	-1
3	-2
3	-3
4	1
NULL	-1
NULL	-1
NULL	-3
NULL	-3
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1604
1899
2436
2589
2739
2802
3405
NULL
NULL
NULL
NULL


-- !query
SELECT d-e,
       a,
       b-c,
       e,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(d - e):int,a:int,(b - c):int,e:int,d:int>
-- !query output
1	127	-1	125	126
4	107	-2	105	109


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2
  FROM t1
 WHERE d>e
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a + (b * 2)):int>
-- !query output
111	383
111	563
111	680
222	319
222	354
222	410
222	742
222	NULL
333	400
444	481
444	578
444	665
555	426
555	593
555	634
555	696
555	NULL
555	NULL


-- !query
SELECT a-b,
       a+b*2+c*3,
       abs(b-c),
       d,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1274
1626
1719
1819
1877
2280


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       abs(b-c),
       a+b*2
  FROM t1
 WHERE a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND coalesce(a,b,c,d,e)<>0
   AND a IS NULL
-- !query schema
struct<abs(a):int>
-- !query output
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       b
  FROM t1
 WHERE c>d
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,b:int>
-- !query output
1165	2	222	NULL	1190	NULL	119
1274	3	111	125	1280	127.0	128
1367	4	222	137	1360	137.0	136
1925	1	444	191	380	192.0	194
1971	2	555	195	398	197.0	197
2121	1	555	211	428	212.0	210
2211	2	444	224	446	222.0	221
2312	2	555	233	468	232.0	231
NULL	2	555	204	NULL	NULL	202
NULL	3	222	166	NULL	NULL	NULL


-- !query
SELECT a+b*2,
       a-b,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       a+b*2+c*3+d*4,
       d-e,
       a+b*2+c*3
  FROM t1
 WHERE a>b
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
333	-1	1971	1	1187
333	-1	2211	-4	1331
333	-2	1079	4	643
333	-2	1719	-1	1027
333	-2	1819	-1	1087
333	-3	1626	2	970
444	-1	2164	-2	1296
444	-1	2312	-3	1392
444	-3	2121	1	1273
444	1	1414	-1	846


-- !query
SELECT a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       b
  FROM t1
-- !query schema
struct<(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(c - d):int,b:int>
-- !query output
-1	1280	3	128
-1	374	-3	188
-1	452	-1	227
-2	1340	-2	134
-2	1570	NULL	157
-2	492	-2	248
-3	1190	2	119
-4	1140	NULL	114
-4	1490	NULL	149
-4	380	1	194
1	1060	-1	106
1	1220	NULL	122
1	1500	NULL	150
1	1600	-1	160
1	1700	-1	170
1	354	NULL	176
1	362	-1	180
1	474	NULL	236
2	1360	4	136
2	398	2	197
2	446	2	221
3	1410	-2	141
3	436	-1	215
3	468	2	231
4	428	1	210
NULL	1020	NULL	102
NULL	NULL	-3	244
NULL	NULL	2	202
NULL	NULL	3	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT c-d,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a>b
-- !query schema
struct<(c - d):int,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
-1	1	444
-1	2	333
-1	2	333
-1	2	333
-1	3	333
1	3	444
2	1	333
2	1	333
2	1	444


-- !query
SELECT b,
       a
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<b:int,a:int>
-- !query output
106	107
122	123
128	127
150	151
160	161
170	171
176	177
180	181
188	187
227	226
236	237


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       a,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       d-e
  FROM t1
 WHERE b>c
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       abs(a),
       d-e,
       e,
       b
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,abs(a):int,(d - e):int,e:int,b:int>
-- !query output
107.0	107	4	105	106
127.0	127	1	125	128
132.0	132	3	130	134
137.0	138	-2	137	136
142.0	144	-1	143	141
162.0	161	2	162	160
172.0	171	-1	174	170
182.0	181	-1	184	180
187.0	187	4	185	188
192.0	190	1	191	194
197.0	199	1	195	197
212.0	214	1	211	210
217.0	218	-2	219	215
222.0	223	-4	224	221
227.0	226	4	225	227
232.0	234	-3	233	231
247.0	246	4	245	248
NULL	110	NULL	113	114
NULL	116	NULL	NULL	119
NULL	123	NULL	121	122
NULL	145	NULL	147	149
NULL	151	NULL	NULL	150
NULL	155	NULL	158	157
NULL	167	-1	166	NULL
NULL	177	NULL	175	176
NULL	208	-1	207	NULL
NULL	237	NULL	238	236
NULL	NULL	-3	104	102
NULL	NULL	-3	204	202
NULL	NULL	NULL	NULL	244


-- !query
SELECT d,
       abs(a),
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND a>b
   AND (e>c OR e<d)
-- !query schema
struct<d:int,abs(a):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int>
-- !query output
142	144	140	1410	143
196	199	198	398	195
220	223	222	446	224
230	234	232	468	233


-- !query
SELECT d-e,
       a+b*2,
       b-c,
       abs(b-c),
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3
  FROM t1
 WHERE b>c
-- !query schema
struct<(d - e):int,(a + (b * 2)):int,(b - c):int,abs((b - c)):int,(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	426	1	1	-2	555	846
1	578	1	1	1	444	1157
3	400	3	3	-2	333	793
4	563	2	2	-3	111	1121
4	742	1	1	-2	222	1483
NULL	338	2	2	NULL	555	674
NULL	354	2	2	2	222	705
NULL	443	3	3	NULL	222	881
NULL	NULL	4	4	-3	555	NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE b IS NOT NULL
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1027
1066
1087
1121
1157
1187
1273
1296
1331
1364
1392
1426
1483
643
674
705
739
770
793
827
846
881
910
946
970
NULL
NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int>
-- !query output
111	-1
111	-3
111	3
222	-1
222	-1
222	-1
222	-2
222	2
222	3
222	4
222	NULL
222	NULL
333	-2
444	-1
444	-1
444	1
444	2
444	NULL
555	-2
555	-3
555	1
555	2
555	2
555	2
555	NULL
555	NULL
555	NULL
555	NULL
555	NULL
555	NULL


-- !query
SELECT abs(a),
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       a-b,
       c,
       c-d
  FROM t1
 WHERE a>b
   AND (a>b-2 AND a<b+2)
   AND c>d
-- !query schema
struct<abs(a):int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int,c:int,(c - d):int>
-- !query output



-- !query
SELECT (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d-e
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(d - e):int>
-- !query output
107.0	222	4
127.0	111	1
132.0	333	3
137.0	222	-2
142.0	555	-1
162.0	444	2
172.0	222	-1
182.0	222	-1
187.0	111	4
192.0	444	1
197.0	555	1
212.0	555	1
217.0	444	-2
222.0	444	-4
227.0	111	4
232.0	555	-3
247.0	222	4
NULL	222	-1
NULL	222	NULL
NULL	222	NULL
NULL	222	NULL
NULL	444	NULL
NULL	555	-1
NULL	555	-3
NULL	555	-3
NULL	555	NULL
NULL	555	NULL
NULL	555	NULL
NULL	555	NULL
NULL	555	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e,
       a
  FROM t1
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int,a:int>
-- !query output
111	1140	113	110
111	1490	147	145
111	380	191	190
222	1190	NULL	116
222	1280	125	127
222	1340	130	132
222	1570	158	155
222	374	185	187
222	452	225	226
222	492	245	246
333	1060	105	107
333	1220	121	123
333	1360	137	138
333	1500	NULL	151
333	1600	162	161
333	1700	174	171
333	354	175	177
333	362	184	181
333	398	195	199
333	446	224	223
333	474	238	237
444	1020	104	NULL
444	1410	143	144
444	428	211	214
444	436	219	218
444	468	233	234
444	NULL	166	167
444	NULL	204	NULL
444	NULL	207	208
444	NULL	NULL	NULL


-- !query
SELECT b-c,
       e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c>d
-- !query schema
struct<(b - c):int,e:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
-1	125	1280
-1	195	398
-1	204	NULL
-1	224	446
-1	233	468
-3	137	1360
-3	211	428
1	143	1410
1	191	380
1	245	492
2	185	374
2	NULL	1190
3	130	1340
4	NULL	NULL
NULL	166	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3,
       a+b*2,
       a,
       a-b,
       b,
       e
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       a+b*2+c*3+d*4,
       a+b*2,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b IS NOT NULL
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,(d - e):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1027	1719	511	-1	1700	222	333
1087	1819	541	-1	362	222	333
1121	1877	563	4	374	111	222
1157	1925	578	1	380	444	111
1187	1971	593	1	398	555	333
1273	2121	634	1	428	555	444
1296	2164	648	-2	436	444	444
1331	2211	665	-4	446	444	333
1364	2280	680	4	452	111	222
1392	2312	696	-3	468	555	444
1483	2479	742	4	492	222	222
643	1079	319	4	1060	222	333
705	1165	354	NULL	1190	222	222
846	1414	426	-1	1410	555	444
970	1626	481	2	1600	444	333
NULL	NULL	NULL	-3	NULL	555	444


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c,
       a+b*2+c*3,
       b
  FROM t1
 WHERE b>c
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       d
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND b>c
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2
  FROM t1
 WHERE a>b
   AND coalesce(a,b,c,d,e)<>0
   AND a IS NULL
-- !query schema
struct<(a + (b * 2)):int>
-- !query output



-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       e,
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,a:int,e:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
222	127	125	770
222	187	185	1121
222	226	225	1364
333	107	105	643
333	123	121	739
333	151	NULL	910
333	161	162	970
333	171	174	1027
333	177	175	1066
333	181	184	1087
333	237	238	1426


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR coalesce(a,b,c,d,e)<>0
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
-- !query schema
struct<(c - d):int,(b - c):int>
-- !query output
-2	1
-2	1
-2	3
-3	2
-3	4
1	1
2	2
NULL	2
NULL	3


-- !query
SELECT b,
       a+b*2+c*3,
       (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2+c*3+d*4,
       a+b*2,
       c
  FROM t1
 WHERE d>e
-- !query schema
struct<b:int,((a + (b * 2)) + (c * 3)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int,c:int>
-- !query output
106	643	107.0	333	1079	319	108
128	770	127.0	222	1274	383	129
134	793	132.0	222	1325	400	131
160	970	162.0	333	1626	481	163
188	1121	187.0	222	1877	563	186
194	1157	192.0	111	1925	578	193
197	1187	197.0	333	1971	593	198
210	1273	212.0	444	2121	634	213
227	1364	227.0	222	2280	680	228
248	1483	247.0	222	2479	742	247


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR b IS NOT NULL
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,(c - d):int>
-- !query output
111	222	149	NULL
111	444	194	1
111	555	114	NULL
222	111	128	3
222	111	188	-3
222	111	227	-1
222	222	119	2
222	222	248	-2
222	333	134	-2
222	555	157	NULL
333	222	106	-1
333	222	122	NULL
333	222	136	4
333	222	170	-1
333	222	180	-1
333	444	160	-1
333	444	221	2
333	444	236	NULL
333	555	150	NULL
333	555	176	NULL
333	555	197	2
444	444	215	-1
444	555	102	NULL
444	555	141	-2
444	555	202	2
444	555	210	1
444	555	231	2
444	555	244	-3


-- !query
SELECT b-c,
       abs(b-c),
       d-e,
       a+b*2,
       c-d
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
-- !query schema
struct<(b - c):int,abs((b - c)):int,(d - e):int,(a + (b * 2)):int,(c - d):int>
-- !query output



-- !query
SELECT c-d,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR a IS NULL
-- !query schema
struct<(c - d):int,b:int>
-- !query output
-1	106
-1	160
-1	170
-1	180
-1	215
-1	227
-2	134
-2	141
-2	248
-3	188
-3	244
1	194
1	210
2	119
2	197
2	202
2	221
2	231
3	128
4	136
NULL	102
NULL	114
NULL	122
NULL	149
NULL	150
NULL	157
NULL	176
NULL	236


-- !query
SELECT b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<b:int>
-- !query output
106
114
119
122
128
134
136
141
149
150
157
160
170
176
180
188
194
197
202
210
215
221
227
231
236
244
248


-- !query
SELECT abs(a)
  FROM t1
 WHERE b IS NOT NULL
    OR a>b
-- !query schema
struct<abs(a):int>
-- !query output
107
110
116
123
127
132
138
144
145
151
155
161
171
177
181
187
190
199
214
218
223
226
234
237
246
NULL
NULL
NULL


-- !query
SELECT c,
       b-c,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3,
       a,
       c-d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       abs(b-c),
       b-c,
       d-e,
       a+b*2,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR b>c
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,abs((b - c)):int,(b - c):int,(d - e):int,(a + (b * 2)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1079	2	-2	4	319	1604
1165	2	2	NULL	354	NULL
1274	1	-1	1	383	1899
1325	3	3	3	400	1975
1414	1	1	-1	426	2129
1626	3	-3	2	481	2436
1719	2	-2	-1	511	2589
1819	2	-2	-1	541	2739
1877	2	2	4	563	2802
1925	1	1	1	578	2880
1971	1	-1	1	593	2946
2121	3	-3	1	634	3176
2164	1	-1	-2	648	3259
2211	1	-1	-4	665	3331
2280	1	-1	4	680	3405
2312	1	-1	-3	696	3477
2479	1	1	4	742	3704
NULL	1	-1	-3	NULL	NULL
NULL	2	2	NULL	338	NULL
NULL	3	3	NULL	443	NULL
NULL	4	4	NULL	NULL	NULL


-- !query
SELECT c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       c,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,c:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	1060	1	108	1079
-1	1600	1	163	1626
-1	1700	1	172	1719
-1	362	1	182	1819
-1	436	3	216	2164
-1	452	-1	228	2280
-2	1340	-2	131	1325
-2	1410	3	140	1414
-2	492	-2	247	2479
-3	374	-1	186	1877
-3	NULL	NULL	240	NULL
1	380	-4	193	1925
1	428	4	213	2121
2	1190	-3	117	1165
2	398	2	198	1971
2	446	2	222	2211
2	468	3	232	2312
2	NULL	NULL	203	NULL
3	1280	-1	129	1274
3	NULL	NULL	168	NULL
4	1360	2	139	1367
NULL	1020	NULL	NULL	NULL
NULL	1140	-4	112	NULL
NULL	1220	1	124	NULL
NULL	1490	-4	146	NULL
NULL	1500	1	153	NULL
NULL	1570	-2	159	NULL
NULL	354	1	179	NULL
NULL	474	1	239	NULL
NULL	NULL	NULL	NULL	NULL


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       c-d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a+b*2+c*3+d*4,
       c,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
102	NULL	NULL	NULL	444
106	1079	108	319	333
114	NULL	112	338	111
119	1165	117	354	222
122	NULL	124	367	333
128	1274	129	383	222
134	1325	131	400	222
136	1367	139	410	333
141	1414	140	426	444
149	NULL	146	443	111
150	NULL	153	451	333
157	NULL	159	469	222
160	1626	163	481	333
170	1719	172	511	333
176	NULL	179	529	333
180	1819	182	541	333
188	1877	186	563	222
194	1925	193	578	111
197	1971	198	593	333
202	NULL	203	NULL	444
210	2121	213	634	444
215	2164	216	648	444
221	2211	222	665	333
227	2280	228	680	222
231	2312	232	696	444
236	NULL	239	709	333
244	NULL	240	NULL	444
248	2479	247	742	222
NULL	NULL	168	NULL	444
NULL	NULL	NULL	NULL	444


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
 WHERE b IS NOT NULL
   AND b>c
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
132.0
142.0
187.0
192.0
247.0
NULL
NULL
NULL
NULL


-- !query
SELECT d-e
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<(d - e):int>
-- !query output
1
NULL
NULL


-- !query
SELECT a+b*2+c*3,
       c,
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,c:int,a:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int>
-- !query output
1121	186	187	111	-1
770	129	127	111	-1


-- !query
SELECT e,
       c-d,
       (a+b+c+d+e)/5,
       a+b*2,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR a>b
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1060	1	333
1190	-3	222
1220	1	333
1360	2	333
1410	3	444
1500	1	333
1600	1	333
1700	1	333
354	1	333
362	1	333
374	-1	222
380	-4	111
398	2	333
428	4	444
436	3	444
446	2	333
452	-1	222
468	3	444
474	1	333
492	-2	222
NULL	NULL	444


-- !query
SELECT a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1079
1165
1274
1325
1367
1414
1626
1719
1819
1877
1925
1971
2121
2164
2211
2280
2312
2479
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT c-d,
       a,
       b,
       d,
       b-c
  FROM t1
-- !query schema
struct<(c - d):int,a:int,b:int,d:int,(b - c):int>
-- !query output
-1	107	106	109	-2
-1	161	160	164	-3
-1	171	170	173	-2
-1	181	180	183	-2
-1	218	215	217	-1
-1	226	227	229	-1
-2	132	134	133	3
-2	144	141	142	1
-2	246	248	249	1
-3	187	188	189	2
-3	NULL	244	243	4
1	190	194	192	1
1	214	210	212	-3
2	116	119	115	2
2	199	197	196	-1
2	223	221	220	-1
2	234	231	230	-1
2	NULL	202	201	-1
3	127	128	126	-1
3	167	NULL	165	NULL
4	138	136	135	-3
NULL	110	114	NULL	2
NULL	123	122	NULL	-2
NULL	145	149	NULL	3
NULL	151	150	NULL	-3
NULL	155	157	NULL	-2
NULL	177	176	NULL	-3
NULL	208	NULL	206	NULL
NULL	237	236	NULL	-3
NULL	NULL	102	101	NULL


-- !query
SELECT a,
       c,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       (a+b+c+d+e)/5,
       abs(a)
  FROM t1
 WHERE b IS NOT NULL
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       abs(a),
       c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,c:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int>
-- !query output
1604	107	108	333	109
1899	127	129	222	126
1975	132	131	222	133
2052	138	139	333	135
2129	144	140	444	142
2436	161	163	333	164
2589	171	172	333	173
2739	181	182	333	183
2802	187	186	222	189
2880	190	193	111	192
2946	199	198	333	196
3176	214	213	444	212
3259	218	216	444	217
3331	223	222	333	220
3405	226	228	222	229
3477	234	232	444	230
3704	246	247	222	249
NULL	110	112	111	NULL
NULL	116	117	222	115
NULL	123	124	333	NULL
NULL	145	146	111	NULL
NULL	151	153	333	NULL
NULL	155	159	222	NULL
NULL	167	168	444	165
NULL	177	179	333	NULL
NULL	208	NULL	444	206
NULL	237	239	333	NULL
NULL	NULL	203	444	201
NULL	NULL	240	444	243
NULL	NULL	NULL	444	101


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       c,
       d,
       b
  FROM t1
 WHERE b IS NOT NULL
   AND c BETWEEN b-2 AND d+2
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,c:int,d:int,b:int>
-- !query output
1060	1079	108	109	106
1190	1165	117	115	119
1410	1414	140	142	141
1600	1626	163	164	160
1700	1719	172	173	170
362	1819	182	183	180
374	1877	186	189	188
380	1925	193	192	194
398	1971	198	196	197
428	2121	213	212	210
436	2164	216	217	215
446	2211	222	220	221
452	2280	228	229	227
468	2312	232	230	231
492	2479	247	249	248
NULL	NULL	203	201	202


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       d,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a-b,
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR a IS NULL
-- !query schema
struct<abs(a):int>
-- !query output
107
116
144
161
171
181
187
190
199
214
218
223
226
234
246
NULL
NULL
NULL


-- !query
SELECT abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c,
       e
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,c:int,e:int>
-- !query output
107	1060	108	105
110	1140	112	113
116	1190	117	NULL
123	1220	124	121
127	1280	129	125
132	1340	131	130
138	1360	139	137
144	1410	140	143
145	1490	146	147
151	1500	153	NULL
155	1570	159	158
161	1600	163	162
167	NULL	168	166
171	1700	172	174
177	354	179	175
181	362	182	184
187	374	186	185
190	380	193	191
199	398	198	195
208	NULL	NULL	207
214	428	213	211
218	436	216	219
223	446	222	224
226	452	228	225
234	468	232	233
237	474	239	238
246	492	247	245
NULL	1020	NULL	104
NULL	NULL	203	204
NULL	NULL	240	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       (a+b+c+d+e)/5,
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND c BETWEEN b-2 AND d+2
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c,
       a+b*2,
       d,
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND b>c
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<(b - c):int,(a + (b * 2)):int,d:int,abs((b - c)):int>
-- !query output
1	426	142	1
1	742	249	1
2	354	115	2
2	563	189	2
3	400	133	3
4	NULL	243	4


-- !query
SELECT d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       a+b*2+c*3+d*4+e*5,
       b-c
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b-c
  FROM t1
 WHERE c>d
    OR d>e
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<(b - c):int>
-- !query output
-1
-1
-1
-1
-1
-1
-1
-2
-2
-2
-2
-2
-3
-3
-3
-3
-3
-3
1
1
1
2
2
2
3
3
4
NULL


-- !query
SELECT c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       a-b
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,(a - b):int>
-- !query output
108	1060	319	1
129	1280	383	-1
163	1600	481	1
168	NULL	NULL	NULL
172	1700	511	1
182	362	541	1
186	374	563	-1
193	380	578	-4
198	398	593	2
203	NULL	NULL	NULL
213	428	634	4
216	436	648	3
222	446	665	2
228	452	680	-1
232	468	696	3
240	NULL	NULL	NULL
247	492	742	-2
NULL	1020	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT abs(b-c),
       d,
       a+b*2+c*3+d*4+e*5,
       b,
       a
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
-- !query schema
struct<abs((b - c)):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,b:int,a:int>
-- !query output
1	126	1899	128	127
1	142	2129	141	144
1	196	2946	197	199
1	201	NULL	202	NULL
1	220	3331	221	223
1	230	3477	231	234
1	249	3704	248	246
2	115	NULL	119	116
2	189	2802	188	187
3	133	1975	134	132
3	135	2052	136	138
4	243	NULL	244	NULL
NULL	165	NULL	NULL	167


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE a IS NULL
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3
  FROM t1
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,((a + (b * 2)) + (c * 3)):int>
-- !query output
107.0	643
127.0	770
132.0	793
137.0	827
142.0	846
162.0	970
172.0	1027
182.0	1087
187.0	1121
192.0	1157
197.0	1187
212.0	1273
217.0	1296
222.0	1331
227.0	1364
232.0	1392
247.0	1483
NULL	1066
NULL	1426
NULL	674
NULL	705
NULL	739
NULL	881
NULL	910
NULL	946
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT b,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       d-e
  FROM t1
 WHERE (e>a AND e<b)
    OR d>e
-- !query schema
struct<b:int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,(d - e):int>
-- !query output
106	107	333	2	4
114	110	111	2	NULL
128	127	222	1	1
134	132	222	3	3
149	145	111	3	NULL
160	161	333	3	2
188	187	222	2	4
194	190	111	1	1
197	199	333	1	1
210	214	444	3	1
227	226	222	1	4
248	246	222	1	4


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       e,
       abs(a),
       a+b*2+c*3,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND (e>a AND e<b)
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,e:int,abs(a):int,((a + (b * 2)) + (c * 3)):int,abs((b - c)):int>
-- !query output
111	1	191	190	1157	1


-- !query
SELECT d-e,
       a+b*2+c*3+d*4+e*5,
       a
  FROM t1
 WHERE (e>c OR e<d)
   AND a IS NULL
   AND a>b
-- !query schema
struct<(d - e):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int>
-- !query output



-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2,
       c-d,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a + (b * 2)):int,(c - d):int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1020	NULL	NULL	NULL	444
1060	319	-1	-2	333
1140	338	NULL	2	111
1190	354	2	2	222
1220	367	NULL	-2	333
1280	383	3	-1	222
1340	400	-2	3	222
1360	410	4	-3	333
1410	426	-2	1	444
1490	443	NULL	3	111
1500	451	NULL	-3	333
1570	469	NULL	-2	222
1600	481	-1	-3	333
1700	511	-1	-2	333
354	529	NULL	-3	333
362	541	-1	-2	333
374	563	-3	2	222
380	578	1	1	111
398	593	2	-1	333
428	634	1	-3	444
436	648	-1	-1	444
446	665	2	-1	333
452	680	-1	-1	222
468	696	2	-1	444
474	709	NULL	-3	333
492	742	-2	1	222
NULL	NULL	-3	4	444
NULL	NULL	2	-1	444
NULL	NULL	3	NULL	444
NULL	NULL	NULL	NULL	444


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2,
       a+b*2+c*3+d*4+e*5,
       (a+b+c+d+e)/5,
       d-e,
       abs(b-c)
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c)
  FROM t1
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
2
2
3
3
3
3
3
3
3
3
4
NULL
NULL
NULL


-- !query
SELECT b-c
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(b - c):int>
-- !query output
-1
-2


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       a,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
   AND a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       b
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>c OR e<d)
    OR b>c
-- !query schema
struct<(d - e):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	1414
-1	1719
-1	1819
-1	NULL
-2	1367
-2	2164
-3	2312
-3	NULL
-4	2211
1	1274
1	1925
1	1971
1	2121
2	1626
3	1325
4	1079
4	1877
4	2280
4	2479
NULL	1165
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT abs(b-c),
       a-b,
       d-e,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4,
       a
  FROM t1
 WHERE c>d
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       a-b,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       c,
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<b:int,(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,c:int,(c - d):int>
-- !query output
106	1	1604	643	108	-1
128	-1	1899	770	129	3


-- !query
SELECT a,
       a+b*2,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR a IS NULL
    OR d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2+c*3+d*4,
       b,
       b-c,
       d-e
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       (a+b+c+d+e)/5,
       c,
       d-e,
       a+b*2,
       e,
       b
  FROM t1
 WHERE a>b
-- !query schema
struct<abs(a):int,(((((a + b) + c) + d) + e) / 5):double,c:int,(d - e):int,(a + (b * 2)):int,e:int,b:int>
-- !query output
107	107.0	108	4	319	105	106
123	NULL	124	NULL	367	121	122
138	137.0	139	-2	410	137	136
144	142.0	140	-1	426	143	141
151	NULL	153	NULL	451	NULL	150
161	162.0	163	2	481	162	160
171	172.0	172	-1	511	174	170
177	NULL	179	NULL	529	175	176
181	182.0	182	-1	541	184	180
199	197.0	198	1	593	195	197
214	212.0	213	1	634	211	210
218	217.0	216	-2	648	219	215
223	222.0	222	-4	665	224	221
234	232.0	232	-3	696	233	231
237	NULL	239	NULL	709	238	236


-- !query
SELECT a-b,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR (e>a AND e<b)
    OR c>d
-- !query schema
struct<(a - b):int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
-1	1	1364
-1	1	770
-1	2	1121
-3	2	705
-4	1	1157
-4	2	674
-4	3	881
1	2	1027
1	2	1087
1	2	643
1	2	739
1	3	1066
1	3	1426
1	3	910
1	3	970
2	1	1187
2	1	1331
2	3	827
3	1	1392
4	3	1273
NULL	1	NULL
NULL	NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1020	NULL	NULL
1060	107.0	1604
1140	NULL	NULL
1190	NULL	NULL
1220	NULL	NULL
1280	127.0	1899
1340	132.0	1975
1360	137.0	2052
1410	142.0	2129
1490	NULL	NULL
1500	NULL	NULL
1570	NULL	NULL
1600	162.0	2436
1700	172.0	2589
354	NULL	NULL
362	182.0	2739
374	187.0	2802
380	192.0	2880
398	197.0	2946
428	212.0	3176
436	217.0	3259
446	222.0	3331
452	227.0	3405
468	232.0	3477
474	NULL	NULL
492	247.0	3704
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT a+b*2,
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b,
       c-d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       b
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       b
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d
  FROM t1
-- !query schema
struct<d:int>
-- !query output
101
109
115
126
133
135
142
164
165
173
183
189
192
196
201
206
212
217
220
229
230
243
249
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       a,
       b-c,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE a>b
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1604
2052
2129
2436
2589
2739
2946
3176
3259
3331
3477
NULL
NULL
NULL
NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       b-c,
       a+b*2+c*3
  FROM t1
 WHERE b>c
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<c:int,(b - c):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
112	2	674
117	2	705
131	3	793
140	1	846
146	3	881
186	2	1121
193	1	1157
240	4	NULL
247	1	1483


-- !query
SELECT a
  FROM t1
 WHERE a IS NULL
    OR b IS NOT NULL
-- !query schema
struct<a:int>
-- !query output
107
110
116
123
127
132
138
144
145
151
155
161
171
177
181
187
190
199
214
218
223
226
234
237
246
NULL
NULL
NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       b-c,
       c-d,
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (a+b+c+d+e)/5
  FROM t1
 WHERE a>b
-- !query schema
struct<b:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
106	107.0
122	NULL
136	137.0
141	142.0
150	NULL
160	162.0
170	172.0
176	NULL
180	182.0
197	197.0
210	212.0
215	217.0
221	222.0
231	232.0
236	NULL


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107.0
127.0


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       c
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b
  FROM t1
 WHERE a>b
   AND c BETWEEN b-2 AND d+2
   AND (e>c OR e<d)
-- !query schema
struct<(a - b):int>
-- !query output
1
1
1
1
2
2
3
3
3
4


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c-d,
       b,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       a-b
  FROM t1
 WHERE d>e
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       e,
       a+b*2+c*3
  FROM t1
 WHERE a>b
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,e:int,((a + (b * 2)) + (c * 3)):int>
-- !query output
1079	105	643
1367	137	827
1414	143	846
1626	162	970
1719	174	1027
1819	184	1087
1971	195	1187
2121	211	1273
2164	219	1296
2211	224	1331
2312	233	1392
NULL	121	739
NULL	175	1066
NULL	238	1426
NULL	NULL	910


-- !query
SELECT b,
       d,
       b-c
  FROM t1
 WHERE a IS NULL
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<b:int,d:int,(b - c):int>
-- !query output
102	101	NULL
106	109	-2
114	NULL	2
119	115	2
122	NULL	-2
128	126	-1
134	133	3
136	135	-3
141	142	1
149	NULL	3
150	NULL	-3
157	NULL	-2
160	164	-3
170	173	-2
176	NULL	-3
180	183	-2
188	189	2
194	192	1
197	196	-1
202	201	-1
210	212	-3
215	217	-1
221	220	-1
227	229	-1
231	230	-1
236	NULL	-3
244	243	4
248	249	1


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1060
1280
1600
1700
362
374
452


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       c,
       a,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>a AND e<b)
    OR b>c
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND e+d BETWEEN a+b-10 AND c+130
   AND a IS NULL
-- !query schema
struct<(d - e):int>
-- !query output



-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       a,
       (a+b+c+d+e)/5,
       e,
       d
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,(((((a + b) + c) + d) + e) / 5):double,e:int,d:int>
-- !query output
1020	NULL	NULL	NULL	NULL	104	101
1060	1079	1604	107	107.0	105	109
1140	NULL	NULL	110	NULL	113	NULL
1190	1165	NULL	116	NULL	NULL	115
1220	NULL	NULL	123	NULL	121	NULL
1280	1274	1899	127	127.0	125	126
1340	1325	1975	132	132.0	130	133
1360	1367	2052	138	137.0	137	135
1410	1414	2129	144	142.0	143	142
1490	NULL	NULL	145	NULL	147	NULL
1500	NULL	NULL	151	NULL	NULL	NULL
1570	NULL	NULL	155	NULL	158	NULL
1600	1626	2436	161	162.0	162	164
1700	1719	2589	171	172.0	174	173
354	NULL	NULL	177	NULL	175	NULL
362	1819	2739	181	182.0	184	183
374	1877	2802	187	187.0	185	189
380	1925	2880	190	192.0	191	192
398	1971	2946	199	197.0	195	196
428	2121	3176	214	212.0	211	212
436	2164	3259	218	217.0	219	217
446	2211	3331	223	222.0	224	220
452	2280	3405	226	227.0	225	229
468	2312	3477	234	232.0	233	230
474	NULL	NULL	237	NULL	238	NULL
492	2479	3704	246	247.0	245	249
NULL	NULL	NULL	167	NULL	166	165
NULL	NULL	NULL	208	NULL	207	206
NULL	NULL	NULL	NULL	NULL	204	201
NULL	NULL	NULL	NULL	NULL	NULL	243


-- !query
SELECT a
  FROM t1
-- !query schema
struct<a:int>
-- !query output
107
110
116
123
127
132
138
144
145
151
155
161
167
171
177
181
187
190
199
208
214
218
223
226
234
237
246
NULL
NULL
NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c>d
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1060
1140
1190
1220
1280
1340
1360
1410
1490
1500
1570
1600
1700
354
362
374
380
398
428
436
446
452
468
474
492
NULL
NULL
NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       c-d,
       a+b*2
  FROM t1
 WHERE (e>c OR e<d)
    OR d>e
    OR a>b
-- !query schema
struct<d:int,(c - d):int,(a + (b * 2)):int>
-- !query output
109	-1	319
126	3	383
133	-2	400
135	4	410
142	-2	426
164	-1	481
173	-1	511
183	-1	541
189	-3	563
192	1	578
196	2	593
201	2	NULL
212	1	634
217	-1	648
220	2	665
229	-1	680
230	2	696
249	-2	742
NULL	NULL	338
NULL	NULL	367
NULL	NULL	443
NULL	NULL	451
NULL	NULL	529
NULL	NULL	709


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       abs(a),
       a+b*2+c*3+d*4,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a-b
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       a-b,
       b-c,
       d
  FROM t1
 WHERE b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       abs(b-c),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d,
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<(a + (b * 2)):int,abs((b - c)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,d:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
319	2	333	109	107.0
338	2	111	NULL	NULL
354	2	222	115	NULL
367	2	333	NULL	NULL
383	1	222	126	127.0
400	3	222	133	132.0
410	3	333	135	137.0
426	1	444	142	142.0
443	3	111	NULL	NULL
451	3	333	NULL	NULL
469	2	222	NULL	NULL
481	3	333	164	162.0
511	2	333	173	172.0
529	3	333	NULL	NULL
541	2	333	183	182.0
563	2	222	189	187.0
578	1	111	192	192.0
593	1	333	196	197.0
634	3	444	212	212.0
648	1	444	217	217.0
665	1	333	220	222.0
680	1	222	229	227.0
696	1	444	230	232.0
709	3	333	NULL	NULL
742	1	222	249	247.0
NULL	1	444	201	NULL
NULL	4	444	243	NULL
NULL	NULL	444	101	NULL
NULL	NULL	444	165	NULL
NULL	NULL	444	206	NULL


-- !query
SELECT a,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<a:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
107	1060
127	1280
161	1600
171	1700
181	362
187	374
226	452


-- !query
SELECT e,
       b-c,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       d-e,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE a>b
   AND e+d BETWEEN a+b-10 AND c+130
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b-c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
-- !query schema
struct<d:int,(b - c):int>
-- !query output
109	-2
126	-1
133	3
164	-3
189	2
192	1
196	-1
212	-3
229	-1
249	1


-- !query
SELECT b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c,
       a+b*2,
       d-e,
       a+b*2+c*3+d*4,
       c-d
  FROM t1
 WHERE a IS NULL
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a+b*2
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT e,
       b-c,
       abs(b-c),
       abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>a AND e<b)
-- !query schema
struct<e:int,(b - c):int,abs((b - c)):int,abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,d:int>
-- !query output
105	-2	2	107	1060	109
113	2	2	110	1140	NULL
125	-1	1	127	1280	126
147	3	3	145	1490	NULL
191	1	1	190	380	192


-- !query
SELECT d,
       c-d,
       abs(b-c),
       b-c,
       a+b*2+c*3
  FROM t1
 WHERE b>c
-- !query schema
struct<d:int,(c - d):int,abs((b - c)):int,(b - c):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
115	2	2	2	705
133	-2	3	3	793
142	-2	1	1	846
189	-3	2	2	1121
192	1	1	1	1157
243	-3	4	4	NULL
249	-2	1	1	1483
NULL	NULL	2	2	674
NULL	NULL	3	3	881


-- !query
SELECT a-b,
       a,
       a+b*2+c*3,
       abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c
  FROM t1
 WHERE b IS NOT NULL
   AND (e>c OR e<d)
   AND c>d
-- !query schema
struct<(a - b):int,a:int,((a + (b * 2)) + (c * 3)):int,abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int>
-- !query output
-1	127	770	127	1280	-1
-4	190	1157	190	380	1
2	199	1187	199	398	-1
2	223	1331	223	446	-1
3	234	1392	234	468	-1
4	214	1273	214	428	-3
NULL	NULL	NULL	NULL	NULL	-1


-- !query
SELECT abs(b-c),
       e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       e,
       c-d,
       a,
       abs(a),
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c),
       (a+b+c+d+e)/5
  FROM t1
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,b:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1604	643	106	1060	2	107.0
1899	770	128	1280	1	127.0
1975	793	134	1340	3	132.0
2052	827	136	1360	3	137.0
2129	846	141	1410	1	142.0
2436	970	160	1600	3	162.0
2589	1027	170	1700	2	172.0
2739	1087	180	362	2	182.0
2802	1121	188	374	2	187.0
2880	1157	194	380	1	192.0
2946	1187	197	398	1	197.0
3176	1273	210	428	3	212.0
3259	1296	215	436	1	217.0
3331	1331	221	446	1	222.0
3405	1364	227	452	1	227.0
3477	1392	231	468	1	232.0
3704	1483	248	492	1	247.0
NULL	1066	176	354	3	NULL
NULL	1426	236	474	3	NULL
NULL	674	114	1140	2	NULL
NULL	705	119	1190	2	NULL
NULL	739	122	1220	2	NULL
NULL	881	149	1490	3	NULL
NULL	910	150	1500	3	NULL
NULL	946	157	1570	2	NULL
NULL	NULL	102	1020	NULL	NULL
NULL	NULL	202	NULL	1	NULL
NULL	NULL	244	NULL	4	NULL
NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL


-- !query
SELECT b,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(b-c),
       a+b*2+c*3
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<b:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs((b - c)):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
102	444	NULL	NULL
106	333	2	643
114	111	2	674
119	222	2	705
122	333	2	739
128	222	1	770
134	222	3	793
136	333	3	827
141	444	1	846
149	111	3	881
150	333	3	910
157	222	2	946
160	333	3	970
170	333	2	1027
176	333	3	1066
180	333	2	1087
188	222	2	1121
194	111	1	1157
197	333	1	1187
202	444	1	NULL
210	444	3	1273
215	444	1	1296
221	333	1	1331
227	222	1	1364
231	444	1	1392
236	333	3	1426
244	444	4	NULL
248	222	1	1483
NULL	444	NULL	NULL
NULL	444	NULL	NULL


-- !query
SELECT abs(a),
       c,
       (a+b+c+d+e)/5,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a IS NULL
-- !query schema
struct<abs(a):int,c:int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
NULL	203	NULL	444
NULL	240	NULL	444
NULL	NULL	NULL	444


-- !query
SELECT abs(b-c),
       d,
       a+b*2+c*3+d*4+e*5,
       a-b,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE d>e
-- !query schema
struct<abs((b - c)):int,d:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a - b):int,(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
1	126	1899	-1	3	1280	127.0
1	192	2880	-4	1	380	192.0
1	196	2946	2	2	398	197.0
1	229	3405	-1	-1	452	227.0
1	249	3704	-2	-2	492	247.0
2	109	1604	1	-1	1060	107.0
2	189	2802	-1	-3	374	187.0
3	133	1975	-2	-2	1340	132.0
3	164	2436	1	-1	1600	162.0
3	212	3176	4	1	428	212.0


-- !query
SELECT c,
       a-b,
       a+b*2+c*3+d*4+e*5,
       e,
       abs(a)
  FROM t1
-- !query schema
struct<c:int,(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,e:int,abs(a):int>
-- !query output
108	1	1604	105	107
112	-4	NULL	113	110
117	-3	NULL	NULL	116
124	1	NULL	121	123
129	-1	1899	125	127
131	-2	1975	130	132
139	2	2052	137	138
140	3	2129	143	144
146	-4	NULL	147	145
153	1	NULL	NULL	151
159	-2	NULL	158	155
163	1	2436	162	161
168	NULL	NULL	166	167
172	1	2589	174	171
179	1	NULL	175	177
182	1	2739	184	181
186	-1	2802	185	187
193	-4	2880	191	190
198	2	2946	195	199
203	NULL	NULL	204	NULL
213	4	3176	211	214
216	3	3259	219	218
222	2	3331	224	223
228	-1	3405	225	226
232	3	3477	233	234
239	1	NULL	238	237
240	NULL	NULL	NULL	NULL
247	-2	3704	245	246
NULL	NULL	NULL	104	NULL
NULL	NULL	NULL	207	208


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       c,
       a+b*2
  FROM t1
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int,c:int,(a + (b * 2)):int>
-- !query output
111	128	129	383
111	188	186	563
111	227	228	680
222	106	108	319
222	119	117	354
222	122	124	367
222	136	139	410
222	149	146	443
222	170	172	511
222	180	182	541
222	248	247	742
222	NULL	168	NULL
333	134	131	400
444	160	163	481
444	194	193	578
444	215	216	648
444	221	222	665
444	236	239	709
555	102	NULL	NULL
555	114	112	338
555	141	140	426
555	150	153	451
555	157	159	469
555	176	179	529
555	197	198	593
555	202	203	NULL
555	210	213	634
555	231	232	696
555	244	240	NULL
555	NULL	NULL	NULL


-- !query
SELECT a-b,
       b-c,
       a+b*2,
       c-d
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(a - b):int,(b - c):int,(a + (b * 2)):int,(c - d):int>
-- !query output
-1	-1	680	-1
-1	2	563	-3
-2	1	742	-2
-3	2	354	2
-4	1	578	1
1	-2	319	-1
1	-2	511	-1
1	-2	541	-1
1	-3	481	-1
2	-1	593	2
2	-1	665	2
3	-1	648	-1
3	-1	696	2
3	1	426	-2
4	-3	634	1
NULL	-1	NULL	2
NULL	4	NULL	-3
NULL	NULL	NULL	3
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       d-e
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(d - e):int>
-- !query output
1027	511	333	-1
1087	541	333	-1
1121	563	222	4
1157	578	111	1
1187	593	333	1
1273	634	444	1
1296	648	444	-2
1331	665	333	-4
1364	680	222	4
1392	696	444	-3
1483	742	222	4
643	319	333	4
674	338	111	NULL
770	383	222	1
793	400	222	3
846	426	444	-1
881	443	111	NULL
970	481	333	2
NULL	NULL	444	-3


-- !query
SELECT (a+b+c+d+e)/5,
       c-d
  FROM t1
 WHERE d>e
   AND c>d
   AND a IS NULL
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(c - d):int>
-- !query output



-- !query
SELECT b,
       a-b,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       b,
       a,
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR b>c
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int,a:int,e:int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1079	106	107	105	333
1165	119	116	NULL	222
1274	128	127	125	222
1325	134	132	130	222
1367	136	138	137	333
1414	141	144	143	444
1626	160	161	162	333
1719	170	171	174	333
1819	180	181	184	333
1877	188	187	185	222
1925	194	190	191	111
1971	197	199	195	333
2121	210	214	211	444
2164	215	218	219	444
2211	221	223	224	333
2280	227	226	225	222
2312	231	234	233	444
2479	248	246	245	222
NULL	102	NULL	104	444
NULL	114	110	113	111
NULL	122	123	121	333
NULL	149	145	147	111
NULL	150	151	NULL	333
NULL	157	155	158	222
NULL	176	177	175	333
NULL	202	NULL	204	444
NULL	236	237	238	333
NULL	244	NULL	NULL	444
NULL	NULL	167	166	444
NULL	NULL	208	207	444


-- !query
SELECT b-c,
       a,
       (a+b+c+d+e)/5,
       c-d,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR d NOT BETWEEN 110 AND 150
    OR (e>c OR e<d)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       c-d,
       (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d
  FROM t1
-- !query schema
struct<(a - b):int,(c - d):int,(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int>
-- !query output
-1	-1	227.0	3405	111	229
-1	-3	187.0	2802	111	189
-1	3	127.0	1899	111	126
-2	-2	132.0	1975	333	133
-2	-2	247.0	3704	222	249
-2	NULL	NULL	NULL	555	NULL
-3	2	NULL	NULL	222	115
-4	1	192.0	2880	444	192
-4	NULL	NULL	NULL	222	NULL
-4	NULL	NULL	NULL	555	NULL
1	-1	107.0	1604	222	109
1	-1	162.0	2436	444	164
1	-1	172.0	2589	222	173
1	-1	182.0	2739	222	183
1	NULL	NULL	NULL	222	NULL
1	NULL	NULL	NULL	444	NULL
1	NULL	NULL	NULL	555	NULL
1	NULL	NULL	NULL	555	NULL
2	2	197.0	2946	555	196
2	2	222.0	3331	444	220
2	4	137.0	2052	222	135
3	-1	217.0	3259	444	217
3	-2	142.0	2129	555	142
3	2	232.0	3477	555	230
4	1	212.0	3176	555	212
NULL	-3	NULL	NULL	555	243
NULL	2	NULL	NULL	555	201
NULL	3	NULL	NULL	222	165
NULL	NULL	NULL	NULL	555	101
NULL	NULL	NULL	NULL	555	206


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5,
       a+b*2+c*3+d*4
  FROM t1
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
1020	NULL	NULL
1060	1604	1079
1140	NULL	NULL
1190	NULL	1165
1220	NULL	NULL
1280	1899	1274
1340	1975	1325
1360	2052	1367
1410	2129	1414
1490	NULL	NULL
1500	NULL	NULL
1570	NULL	NULL
1600	2436	1626
1700	2589	1719
354	NULL	NULL
362	2739	1819
374	2802	1877
380	2880	1925
398	2946	1971
428	3176	2121
436	3259	2164
446	3331	2211
452	3405	2280
468	3477	2312
474	NULL	NULL
492	3704	2479
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT c
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR c>d
    OR a>b
-- !query schema
struct<c:int>
-- !query output
108
112
117
124
129
131
139
140
146
153
159
163
168
172
179
182
186
193
198
203
213
216
222
228
232
239
240
247


-- !query
SELECT a+b*2+c*3+d*4,
       b,
       abs(a)
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,b:int,abs(a):int>
-- !query output
1079	106	107
1165	119	116
1274	128	127
1325	134	132
1367	136	138
1414	141	144
1626	160	161
1719	170	171
1819	180	181
1877	188	187
1925	194	190
1971	197	199
2121	210	214
2164	215	218
2211	221	223
2280	227	226
2312	231	234
2479	248	246
NULL	102	NULL
NULL	114	110
NULL	122	123
NULL	149	145
NULL	150	151
NULL	157	155
NULL	176	177
NULL	202	NULL
NULL	236	237
NULL	244	NULL
NULL	NULL	167
NULL	NULL	208


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE b>c
   AND c>d
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
222
444


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,d:int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	189	187.0	374
222	115	NULL	1190
222	249	247.0	492
222	NULL	NULL	1490
333	133	132.0	1340
444	192	192.0	380
555	142	142.0	1410
555	243	NULL	NULL
555	NULL	NULL	1140


-- !query
SELECT (a+b+c+d+e)/5,
       d-e,
       a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d>e
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3+d*4,
       a+b*2
  FROM t1
 WHERE b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a + (b * 2)):int>
-- !query output
111	1877	563
222	1165	354
222	2479	742
222	NULL	443
333	1325	400
444	1925	578
555	1414	426
555	NULL	338
555	NULL	NULL


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
    OR b>c
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1060
1140
1190
1280
1340
1410
1490
1600
1700
362
374
380
398
428
436
446
452
468
492
NULL
NULL


-- !query
SELECT d-e,
       a,
       d
  FROM t1
 WHERE (e>c OR e<d)
   AND a IS NULL
-- !query schema
struct<(d - e):int,a:int,d:int>
-- !query output
-3	NULL	201


-- !query
SELECT a,
       (a+b+c+d+e)/5,
       b-c,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<a:int,(((((a + b) + c) + d) + e) / 5):double,(b - c):int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
107	107.0	-2	319	333
110	NULL	2	338	111
127	127.0	-1	383	222
132	132.0	3	400	222
144	142.0	1	426	444
145	NULL	3	443	111
161	162.0	-3	481	333
171	172.0	-2	511	333
181	182.0	-2	541	333
187	187.0	2	563	222
190	192.0	1	578	111
199	197.0	-1	593	333
214	212.0	-3	634	444
218	217.0	-1	648	444
223	222.0	-1	665	333
226	227.0	-1	680	222
234	232.0	-1	696	444
246	247.0	1	742	222
NULL	NULL	-1	NULL	444


-- !query
SELECT abs(a),
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       e
  FROM t1
 WHERE b IS NOT NULL
-- !query schema
struct<abs(a):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,e:int>
-- !query output
107	1060	105
110	1140	113
116	1190	NULL
123	1220	121
127	1280	125
132	1340	130
138	1360	137
144	1410	143
145	1490	147
151	1500	NULL
155	1570	158
161	1600	162
171	1700	174
177	354	175
181	362	184
187	374	185
190	380	191
199	398	195
214	428	211
218	436	219
223	446	224
226	452	225
234	468	233
237	474	238
246	492	245
NULL	1020	104
NULL	NULL	204
NULL	NULL	NULL


-- !query
SELECT d-e,
       a-b,
       c,
       c-d,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<(d - e):int,(a - b):int,c:int,(c - d):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	1	172	-1	222
-1	1	182	-1	222
-1	3	140	-2	555
-1	NULL	168	3	222
-1	NULL	NULL	NULL	555
-2	2	139	4	222
-2	3	216	-1	444
-3	3	232	2	555
-3	NULL	203	2	555
-3	NULL	NULL	NULL	555
-4	2	222	2	444
1	-1	129	3	111
1	-4	193	1	444
1	2	198	2	555
1	4	213	1	555
2	1	163	-1	444
3	-2	131	-2	333
4	-1	186	-3	111
4	-1	228	-1	111
4	-2	247	-2	222
4	1	108	-1	222
NULL	-2	159	NULL	555
NULL	-3	117	2	222
NULL	-4	112	NULL	555
NULL	-4	146	NULL	222
NULL	1	124	NULL	222
NULL	1	153	NULL	555
NULL	1	179	NULL	555
NULL	1	239	NULL	444
NULL	NULL	240	-3	555


-- !query
SELECT abs(b-c),
       a+b*2+c*3,
       a+b*2+c*3+d*4,
       abs(a),
       a,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND c>d
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int>
-- !query output
111	190	1925	380	1
222	116	1165	1190	2
333	199	1971	398	-1
333	223	2211	446	-1
444	214	2121	428	-3
444	234	2312	468	-1
444	NULL	NULL	NULL	-1


-- !query
SELECT d-e,
       a,
       a+b*2+c*3+d*4+e*5,
       abs(a),
       b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND c>d
   AND d NOT BETWEEN 110 AND 150
-- !query schema
struct<(d - e):int,a:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,abs(a):int,b:int>
-- !query output
-1	167	NULL	167	NULL
-3	234	3477	234	231
-3	NULL	NULL	NULL	202
-4	223	3331	223	221
1	199	2946	199	197


-- !query
SELECT CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c-d,
       e
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(c - d):int,e:int>
-- !query output
-1	105
-1	162
-1	174
-1	184
-1	219
-1	225
-2	130
-2	143
-2	245
-3	185
-3	NULL
1	191
1	211
2	195
2	204
2	224
2	233
2	NULL
3	125
3	166
4	137
NULL	104
NULL	113
NULL	121
NULL	147
NULL	158
NULL	175
NULL	207
NULL	238
NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       d-e,
       abs(a),
       a+b*2,
       c
  FROM t1
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(d - e):int,abs(a):int,(a + (b * 2)):int,c:int>
-- !query output
1079	4	107	319	108
1165	NULL	116	354	117
1274	1	127	383	129
1325	3	132	400	131
1367	-2	138	410	139
1414	-1	144	426	140
1626	2	161	481	163
1719	-1	171	511	172
1819	-1	181	541	182
1877	4	187	563	186
1925	1	190	578	193
1971	1	199	593	198
2121	1	214	634	213
2164	-2	218	648	216
2211	-4	223	665	222
2280	4	226	680	228
2312	-3	234	696	232
2479	4	246	742	247
NULL	-1	167	NULL	168
NULL	-1	208	NULL	NULL
NULL	-3	NULL	NULL	203
NULL	-3	NULL	NULL	NULL
NULL	NULL	110	338	112
NULL	NULL	123	367	124
NULL	NULL	145	443	146
NULL	NULL	151	451	153
NULL	NULL	155	469	159
NULL	NULL	177	529	179
NULL	NULL	237	709	239
NULL	NULL	NULL	NULL	240


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a-b,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       b-c
  FROM t1
-- !query schema
struct<(a - b):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(c - d):int,(b - c):int>
-- !query output
-1	1899	383	222	3	-1
-1	2802	563	222	-3	2
-1	3405	680	222	-1	-1
-2	1975	400	222	-2	3
-2	3704	742	222	-2	1
-2	NULL	469	222	NULL	-2
-3	NULL	354	222	2	2
-4	2880	578	111	1	1
-4	NULL	338	111	NULL	2
-4	NULL	443	111	NULL	3
1	1604	319	333	-1	-2
1	2436	481	333	-1	-3
1	2589	511	333	-1	-2
1	2739	541	333	-1	-2
1	NULL	367	333	NULL	-2
1	NULL	451	333	NULL	-3
1	NULL	529	333	NULL	-3
1	NULL	709	333	NULL	-3
2	2052	410	333	4	-3
2	2946	593	333	2	-1
2	3331	665	333	2	-1
3	2129	426	444	-2	1
3	3259	648	444	-1	-1
3	3477	696	444	2	-1
4	3176	634	444	1	-3
NULL	NULL	NULL	444	-3	4
NULL	NULL	NULL	444	2	-1
NULL	NULL	NULL	444	3	NULL
NULL	NULL	NULL	444	NULL	NULL
NULL	NULL	NULL	444	NULL	NULL


-- !query
SELECT abs(a),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
   AND a IS NULL
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<abs(a):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output



-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       c-d,
       a+b*2+c*3+d*4+e*5,
       a+b*2,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       e
  FROM t1
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(a + (b * 2)):int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,e:int>
-- !query output
1027	-1	2589	511	171	333	174
1066	NULL	NULL	529	177	333	175
1087	-1	2739	541	181	333	184
1121	-3	2802	563	187	222	185
1157	1	2880	578	190	111	191
1187	2	2946	593	199	333	195
1273	1	3176	634	214	444	211
1296	-1	3259	648	218	444	219
1331	2	3331	665	223	333	224
1364	-1	3405	680	226	222	225
1392	2	3477	696	234	444	233
1426	NULL	NULL	709	237	333	238
1483	-2	3704	742	246	222	245
643	-1	1604	319	107	333	105
674	NULL	NULL	338	110	111	113
705	2	NULL	354	116	222	NULL
739	NULL	NULL	367	123	333	121
770	3	1899	383	127	222	125
793	-2	1975	400	132	222	130
827	4	2052	410	138	333	137
846	-2	2129	426	144	444	143
881	NULL	NULL	443	145	111	147
910	NULL	NULL	451	151	333	NULL
946	NULL	NULL	469	155	222	158
970	-1	2436	481	161	333	162
NULL	-3	NULL	NULL	NULL	444	NULL
NULL	2	NULL	NULL	NULL	444	204
NULL	3	NULL	NULL	167	444	166
NULL	NULL	NULL	NULL	208	444	207
NULL	NULL	NULL	NULL	NULL	444	104


-- !query
SELECT abs(a),
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (e>c OR e<d)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       b-c,
       c-d,
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<d:int,(b - c):int,(c - d):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
109	-2	-1	1079	1060
126	-1	3	1274	1280
133	3	-2	1325	1340
142	1	-2	1414	1410
164	-3	-1	1626	1600
173	-2	-1	1719	1700
183	-2	-1	1819	362
189	2	-3	1877	374
192	1	1	1925	380
196	-1	2	1971	398
201	-1	2	NULL	NULL
212	-3	1	2121	428
217	-1	-1	2164	436
220	-1	2	2211	446
229	-1	-1	2280	452
230	-1	2	2312	468
249	1	-2	2479	492
NULL	2	NULL	NULL	1140
NULL	3	NULL	NULL	1490


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b,
       abs(a),
       a+b*2+c*3+d*4
  FROM t1
 WHERE b>c
   AND (e>a AND e<b)
   AND b IS NOT NULL
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,b:int,abs(a):int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
111	114	110	NULL
111	149	145	NULL
111	194	190	1925


-- !query
SELECT a+b*2,
       abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND a IS NULL
-- !query schema
struct<(a + (b * 2)):int,abs(a):int>
-- !query output
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT c-d,
       abs(b-c),
       a-b,
       a
  FROM t1
-- !query schema
struct<(c - d):int,abs((b - c)):int,(a - b):int,a:int>
-- !query output
-1	1	-1	226
-1	1	3	218
-1	2	1	107
-1	2	1	171
-1	2	1	181
-1	3	1	161
-2	1	-2	246
-2	1	3	144
-2	3	-2	132
-3	2	-1	187
-3	4	NULL	NULL
1	1	-4	190
1	3	4	214
2	1	2	199
2	1	2	223
2	1	3	234
2	1	NULL	NULL
2	2	-3	116
3	1	-1	127
3	NULL	NULL	167
4	3	2	138
NULL	2	-2	155
NULL	2	-4	110
NULL	2	1	123
NULL	3	-4	145
NULL	3	1	151
NULL	3	1	177
NULL	3	1	237
NULL	NULL	NULL	208
NULL	NULL	NULL	NULL


-- !query
SELECT a,
       a+b*2+c*3+d*4+e*5,
       e,
       a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       d,
       abs(a),
       a-b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c-d,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE b>c
    OR c>d
-- !query schema
struct<abs((b - c)):int,d:int,abs(a):int,(a - b):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(c - d):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1	126	127	-1	111	3	1280
1	142	144	3	555	-2	1410
1	192	190	-4	444	1	380
1	196	199	2	555	2	398
1	201	NULL	NULL	555	2	NULL
1	220	223	2	444	2	446
1	230	234	3	555	2	468
1	249	246	-2	222	-2	492
2	115	116	-3	222	2	1190
2	189	187	-1	111	-3	374
2	NULL	110	-4	555	NULL	1140
3	133	132	-2	333	-2	1340
3	135	138	2	222	4	1360
3	212	214	4	555	1	428
3	NULL	145	-4	222	NULL	1490
4	243	NULL	NULL	555	-3	NULL
NULL	165	167	NULL	222	3	NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       e,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a,
       a+b*2+c*3+d*4,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
   AND c>d
   AND b IS NOT NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<c:int>
-- !query output
112
146
193


-- !query
SELECT (a+b+c+d+e)/5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
   AND c>d
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
127.0	1280
192.0	380
197.0	398
212.0	428


-- !query
SELECT b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND d NOT BETWEEN 110 AND 150
   AND a>b
-- !query schema
struct<(b - c):int>
-- !query output
-1
-1
-1


-- !query
SELECT e,
       a-b,
       b-c,
       d-e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a IS NULL
    OR (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       c-d,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d-e,
       a-b,
       b-c
  FROM t1
-- !query schema
struct<(d - e):int,(a - b):int,(b - c):int>
-- !query output
-1	1	-2
-1	1	-2
-1	3	1
-1	NULL	NULL
-1	NULL	NULL
-2	2	-3
-2	3	-1
-3	3	-1
-3	NULL	-1
-3	NULL	NULL
-4	2	-1
1	-1	-1
1	-4	1
1	2	-1
1	4	-3
2	1	-3
3	-2	3
4	-1	-1
4	-1	2
4	-2	1
4	1	-2
NULL	-2	-2
NULL	-3	2
NULL	-4	2
NULL	-4	3
NULL	1	-2
NULL	1	-3
NULL	1	-3
NULL	1	-3
NULL	NULL	4


-- !query
SELECT c
  FROM t1
 WHERE b>c
    OR b IS NOT NULL
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<c:int>
-- !query output
108
112
117
124
129
131
139
140
146
153
159
163
172
179
182
186
193
198
203
213
216
222
228
232
239
240
247
NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       e,
       d-e,
       a-b,
       a+b*2+c*3,
       a
  FROM t1
 WHERE c>d
    OR d>e
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,e:int,(d - e):int,(a - b):int,((a + (b * 2)) + (c * 3)):int,a:int>
-- !query output
1604	105	4	1	643	107
1899	125	1	-1	770	127
1975	130	3	-2	793	132
2052	137	-2	2	827	138
2436	162	2	1	970	161
2802	185	4	-1	1121	187
2880	191	1	-4	1157	190
2946	195	1	2	1187	199
3176	211	1	4	1273	214
3331	224	-4	2	1331	223
3405	225	4	-1	1364	226
3477	233	-3	3	1392	234
3704	245	4	-2	1483	246
NULL	166	-1	NULL	NULL	167
NULL	204	-3	NULL	NULL	NULL
NULL	NULL	NULL	-3	705	116


-- !query
SELECT a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT c,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       d
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       abs(b-c),
       e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,abs((b - c)):int,e:int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1079	1060	2	105	1604
1274	1280	1	125	1899
1325	1340	3	130	1975
1414	1410	1	143	2129
1626	1600	3	162	2436
1719	1700	2	174	2589
1819	362	2	184	2739
1877	374	2	185	2802
1925	380	1	191	2880
1971	398	1	195	2946
2121	428	3	211	3176
2164	436	1	219	3259
2211	446	1	224	3331
2280	452	1	225	3405
2312	468	1	233	3477
2479	492	1	245	3704
NULL	1140	2	113	NULL
NULL	1490	3	147	NULL
NULL	NULL	1	204	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR c BETWEEN b-2 AND d+2
    OR a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       e
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       a+b*2,
       e,
       c,
       abs(a),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE (e>c OR e<d)
   AND c>d
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int,(a + (b * 2)):int,e:int,c:int,abs(a):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1157	578	191	193	190	111
1187	593	195	198	199	333
1273	634	211	213	214	444
1331	665	224	222	223	333
1392	696	233	232	234	444
770	383	125	129	127	222
NULL	NULL	204	203	NULL	444


-- !query
SELECT d,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       e,
       a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a-b
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (e>c OR e<d)
    OR c>d
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(a - b):int>
-- !query output
1079	1
1165	-3
1274	-1
1325	-2
1367	2
1414	3
1626	1
1719	1
1819	1
1877	-1
1925	-4
1971	2
2121	4
2164	3
2211	2
2280	-1
2312	3
2479	-2
NULL	-4
NULL	-4
NULL	NULL
NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5
  FROM t1
 WHERE (e>c OR e<d)
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double>
-- !query output
107.0
127.0
132.0
142.0
162.0
172.0
182.0
187.0
192.0
197.0
212.0
217.0
222.0
227.0
232.0
247.0
NULL
NULL
NULL


-- !query
SELECT a+b*2,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       abs(b-c),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       c,
       a,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b,
       a+b*2+c*3+d*4+e*5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       b
  FROM t1
 WHERE d>e
   AND EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3,
       b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       (a+b+c+d+e)/5,
       a,
       d
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a+b*2,
       (a+b+c+d+e)/5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE a>b
    OR c BETWEEN b-2 AND d+2
    OR e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a + (b * 2)):int,(((((a + b) + c) + d) + e) / 5):double,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(a - b):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
111	578	192.0	444	-4	380
222	354	NULL	222	-3	1190
222	383	127.0	111	-1	1280
222	563	187.0	111	-1	374
222	680	227.0	111	-1	452
222	742	247.0	222	-2	492
333	319	107.0	222	1	1060
333	367	NULL	222	1	1220
333	410	137.0	222	2	1360
333	451	NULL	555	1	1500
333	481	162.0	444	1	1600
333	511	172.0	222	1	1700
333	529	NULL	555	1	354
333	541	182.0	222	1	362
333	593	197.0	555	2	398
333	665	222.0	444	2	446
333	709	NULL	444	1	474
444	426	142.0	555	3	1410
444	634	212.0	555	4	428
444	648	217.0	444	3	436
444	696	232.0	555	3	468
444	NULL	NULL	555	NULL	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND d>e
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a+b*2+c*3,
       d
  FROM t1
 WHERE b>c
   AND (c<=d-2 OR c>=d+2)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,((a + (b * 2)) + (c * 3)):int,d:int>
-- !query output
1975	793	133
2129	846	142
2802	1121	189
3704	1483	249
NULL	705	115
NULL	NULL	243


-- !query
SELECT a-b
  FROM t1
-- !query schema
struct<(a - b):int>
-- !query output
-1
-1
-1
-2
-2
-2
-3
-4
-4
-4
1
1
1
1
1
1
1
1
2
2
2
3
3
3
4
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT c-d,
       abs(a),
       a,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
    OR c>d
-- !query schema
struct<(c - d):int,abs(a):int,a:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
-1	107	107	222	106
-1	161	161	444	160
-1	171	171	222	170
-1	181	181	222	180
-1	218	218	444	215
-1	226	226	111	227
-2	132	132	333	134
-2	144	144	555	141
-2	246	246	222	248
-3	187	187	111	188
-3	NULL	NULL	555	244
1	190	190	444	194
1	214	214	555	210
2	116	116	222	119
2	199	199	555	197
2	223	223	444	221
2	234	234	555	231
2	NULL	NULL	555	202
3	127	127	111	128
3	167	167	222	NULL
4	138	138	222	136
NULL	110	110	555	114
NULL	123	123	222	122
NULL	145	145	222	149
NULL	151	151	555	150
NULL	155	155	555	157
NULL	177	177	555	176
NULL	237	237	444	236


-- !query
SELECT c-d,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a+b*2+c*3+d*4+e*5,
       d
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR b>c
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       b-c,
       abs(b-c),
       e,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (a+b+c+d+e)/5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR a IS NULL
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(b - c):int,abs((b - c)):int,e:int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output
111	1	1	191	1157	380	192.0
222	-1	1	125	770	1280	127.0
222	-1	1	225	1364	452	227.0
222	1	1	245	1483	492	247.0
222	2	2	185	1121	374	187.0
333	-1	1	195	1187	398	197.0
333	-1	1	224	1331	446	222.0
333	-2	2	105	643	1060	107.0
333	-2	2	121	739	1220	NULL
333	-2	2	174	1027	1700	172.0
333	-2	2	184	1087	362	182.0
333	-3	3	162	970	1600	162.0
333	-3	3	175	1066	354	NULL
333	-3	3	238	1426	474	NULL
333	-3	3	NULL	910	1500	NULL
444	-1	1	204	NULL	NULL	NULL
444	-1	1	219	1296	436	217.0
444	-1	1	233	1392	468	232.0
444	-3	3	211	1273	428	212.0
444	4	4	NULL	NULL	NULL	NULL
444	NULL	NULL	104	NULL	1020	NULL
444	NULL	NULL	166	NULL	NULL	NULL
444	NULL	NULL	207	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3+d*4,
       (a+b+c+d+e)/5,
       abs(b-c)
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR (e>a AND e<b)
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double,abs((b - c)):int>
-- !query output
1079	107.0	2
1165	NULL	2
1274	127.0	1
1325	132.0	3
1367	137.0	3
1414	142.0	1
1626	162.0	3
1719	172.0	2
1819	182.0	2
1877	187.0	2
1925	192.0	1
1971	197.0	1
2121	212.0	3
2164	217.0	1
2211	222.0	1
2280	227.0	1
2312	232.0	1
2479	247.0	1
NULL	NULL	1
NULL	NULL	2
NULL	NULL	2
NULL	NULL	2
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	NULL	3
NULL	NULL	4
NULL	NULL	NULL
NULL	NULL	NULL
NULL	NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       abs(a),
       c-d
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR (c<=d-2 OR c>=d+2)
    OR b>c
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,abs(a):int,(c - d):int>
-- !query output
111	127	3
111	187	-3
222	107	-1
222	116	2
222	138	4
222	145	NULL
222	167	3
222	246	-2
333	132	-2
444	190	1
444	223	2
555	110	NULL
555	144	-2
555	199	2
555	234	2
555	NULL	-3
555	NULL	2


-- !query
SELECT a-b,
       d-e,
       abs(b-c),
       e,
       a+b*2,
       b-c
  FROM t1
 WHERE a IS NULL
   AND b>c
   AND (a>b-2 AND a<b+2)
-- !query schema
struct<(a - b):int,(d - e):int,abs((b - c)):int,e:int,(a + (b * 2)):int,(b - c):int>
-- !query output



-- !query
SELECT b-c,
       a+b*2+c*3,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE b>c
    OR e+d BETWEEN a+b-10 AND c+130
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<(b - c):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
-1	1364	111
-1	770	111
-2	1027	222
-2	1087	222
-2	643	222
-2	739	222
-3	1066	555
-3	1426	444
-3	910	555
-3	970	444
1	1157	444
1	1483	222
1	846	555
2	1121	111
2	674	555
2	705	222
3	793	333
3	881	222
4	NULL	555


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       c-d,
       e
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       a,
       b
  FROM t1
-- !query schema
struct<d:int,a:int,b:int>
-- !query output
101	NULL	102
109	107	106
115	116	119
126	127	128
133	132	134
135	138	136
142	144	141
164	161	160
165	167	NULL
173	171	170
183	181	180
189	187	188
192	190	194
196	199	197
201	NULL	202
206	208	NULL
212	214	210
217	218	215
220	223	221
229	226	227
230	234	231
243	NULL	244
249	246	248
NULL	110	114
NULL	123	122
NULL	145	149
NULL	151	150
NULL	155	157
NULL	177	176
NULL	237	236


-- !query
SELECT b,
       a,
       a+b*2+c*3+d*4,
       (a+b+c+d+e)/5
  FROM t1
 WHERE b>c
   AND (a>b-2 AND a<b+2)
   AND e+d BETWEEN a+b-10 AND c+130
-- !query schema
struct<b:int,a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,(((((a + b) + c) + d) + e) / 5):double>
-- !query output



-- !query
SELECT a,
       a+b*2,
       b-c,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       b-c,
       c-d,
       a+b*2+c*3,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE d>e
    OR a IS NULL
    OR d NOT BETWEEN 110 AND 150
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a),
       d,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       c
  FROM t1
 WHERE a IS NULL
   AND c>d
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c),
       (a+b+c+d+e)/5,
       a-b,
       c,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       b-c,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END
  FROM t1
 WHERE a IS NULL
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<abs((b - c)):int,(((((a + b) + c) + d) + e) / 5):double,(a - b):int,c:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(b - c):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int>
-- !query output
1	NULL	NULL	203	NULL	-1	444
4	NULL	NULL	240	NULL	4	444
NULL	NULL	NULL	NULL	1020	NULL	444


-- !query
SELECT b-c,
       abs(a)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR (e>a AND e<b)
-- !query schema
struct<(b - c):int,abs(a):int>
-- !query output
-1	127
-1	199
-1	218
-1	223
-1	226
-1	234
-1	NULL
-2	107
-2	123
-2	155
-2	171
-2	181
-3	138
-3	151
-3	161
-3	177
-3	214
-3	237
1	144
1	190
1	246
2	110
2	116
2	187
3	132
3	145
4	NULL
NULL	167
NULL	208
NULL	NULL


-- !query
SELECT b-c
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR (e>a AND e<b)
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(b - c):int>
-- !query output
-1
-1
-1
-1
-1
-1
-1
-2
-2
-2
-2
-2
-3
-3
-3
-3
-3
-3
1
1
1
2
2
2
3
3
4
NULL
NULL
NULL


-- !query
SELECT a+b*2+c*3+d*4+e*5,
       a,
       a+b*2+c*3+d*4,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int>
-- !query output
1604	107	1079	1060
1899	127	1274	1280
1975	132	1325	1340
2052	138	1367	1360
2129	144	1414	1410
2436	161	1626	1600
2589	171	1719	1700
2739	181	1819	362
2802	187	1877	374
2880	190	1925	380
2946	199	1971	398
3176	214	2121	428
3259	218	2164	436
3331	223	2211	446
3405	226	2280	452
3477	234	2312	468
3704	246	2479	492
NULL	110	NULL	1140
NULL	116	1165	1190
NULL	123	NULL	1220
NULL	145	NULL	1490
NULL	151	NULL	1500
NULL	155	NULL	1570
NULL	167	NULL	NULL
NULL	177	NULL	354
NULL	237	NULL	474
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
   AND a IS NULL
   AND coalesce(a,b,c,d,e)<>0
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
NULL
NULL


-- !query
SELECT e,
       a+b*2,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
-- !query schema
struct<e:int,(a + (b * 2)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
104	NULL	444	555	102
105	319	333	222	106
113	338	111	555	114
121	367	333	222	122
125	383	222	111	128
130	400	222	333	134
137	410	333	222	136
143	426	444	555	141
147	443	111	222	149
158	469	222	555	157
162	481	333	444	160
166	NULL	444	222	NULL
174	511	333	222	170
175	529	333	555	176
184	541	333	222	180
185	563	222	111	188
191	578	111	444	194
195	593	333	555	197
204	NULL	444	555	202
207	NULL	444	555	NULL
211	634	444	555	210
219	648	444	444	215
224	665	333	444	221
225	680	222	111	227
233	696	444	555	231
238	709	333	444	236
245	742	222	222	248
NULL	354	222	222	119
NULL	451	333	555	150
NULL	NULL	444	555	244


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       a+b*2,
       a-b,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       d-e
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       a-b,
       abs(b-c)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
   AND c>d
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(a)
  FROM t1
 WHERE c>d
-- !query schema
struct<abs(a):int>
-- !query output
116
127
138
167
190
199
214
223
234
NULL


-- !query
SELECT e,
       a+b*2,
       c,
       d-e
  FROM t1
-- !query schema
struct<e:int,(a + (b * 2)):int,c:int,(d - e):int>
-- !query output
104	NULL	NULL	-3
105	319	108	4
113	338	112	NULL
121	367	124	NULL
125	383	129	1
130	400	131	3
137	410	139	-2
143	426	140	-1
147	443	146	NULL
158	469	159	NULL
162	481	163	2
166	NULL	168	-1
174	511	172	-1
175	529	179	NULL
184	541	182	-1
185	563	186	4
191	578	193	1
195	593	198	1
204	NULL	203	-3
207	NULL	NULL	-1
211	634	213	1
219	648	216	-2
224	665	222	-4
225	680	228	4
233	696	232	-3
238	709	239	NULL
245	742	247	4
NULL	354	117	NULL
NULL	451	153	NULL
NULL	NULL	240	NULL


-- !query
SELECT d-e,
       d,
       a,
       a+b*2
  FROM t1
-- !query schema
struct<(d - e):int,d:int,a:int,(a + (b * 2)):int>
-- !query output
-1	142	144	426
-1	165	167	NULL
-1	173	171	511
-1	183	181	541
-1	206	208	NULL
-2	135	138	410
-2	217	218	648
-3	101	NULL	NULL
-3	201	NULL	NULL
-3	230	234	696
-4	220	223	665
1	126	127	383
1	192	190	578
1	196	199	593
1	212	214	634
2	164	161	481
3	133	132	400
4	109	107	319
4	189	187	563
4	229	226	680
4	249	246	742
NULL	115	116	354
NULL	243	NULL	NULL
NULL	NULL	110	338
NULL	NULL	123	367
NULL	NULL	145	443
NULL	NULL	151	451
NULL	NULL	155	469
NULL	NULL	177	529
NULL	NULL	237	709


-- !query
SELECT a
  FROM t1
 WHERE c>d
-- !query schema
struct<a:int>
-- !query output
116
127
138
167
190
199
214
223
234
NULL


-- !query
SELECT c-d,
       a+b*2+c*3,
       a+b*2+c*3+d*4+e*5,
       a,
       b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
-- !query schema
struct<(c - d):int,((a + (b * 2)) + (c * 3)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,a:int,b:int,(((a + (b * 2)) + (c * 3)) + (d * 4)):int>
-- !query output
-1	1027	2589	171	170	1719
-1	1087	2739	181	180	1819
-1	1296	3259	218	215	2164
-1	1364	3405	226	227	2280
-1	643	1604	107	106	1079
-1	970	2436	161	160	1626
-2	1483	3704	246	248	2479
-3	1121	2802	187	188	1877
-3	NULL	NULL	NULL	244	NULL
1	1157	2880	190	194	1925
1	1273	3176	214	210	2121
2	1187	2946	199	197	1971
2	1331	3331	223	221	2211
2	1392	3477	234	231	2312
2	NULL	NULL	NULL	202	NULL
3	NULL	NULL	167	NULL	NULL
NULL	NULL	NULL	208	NULL	NULL
NULL	NULL	NULL	NULL	102	NULL


-- !query
SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       abs(a),
       a+b*2+c*3
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
-- !query schema
struct<CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,abs(a):int,((a + (b * 2)) + (c * 3)):int>
-- !query output
111	110	674
111	145	881
111	190	1157
222	116	705
222	127	770
222	132	793
222	155	946
222	187	1121
222	226	1364
222	246	1483
333	107	643
333	123	739
333	138	827
333	151	910
333	161	970
333	171	1027
333	177	1066
333	181	1087
333	199	1187
333	223	1331
333	237	1426
444	144	846
444	167	NULL
444	208	NULL
444	214	1273
444	218	1296
444	234	1392
444	NULL	NULL
444	NULL	NULL
444	NULL	NULL


-- !query
SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       abs(a),
       b,
       a-b,
       a+b*2+c*3+d*4
  FROM t1
 WHERE (a>b-2 AND a<b+2)
   AND (e>c OR e<d)
   AND a>b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4,
       a+b*2+c*3+d*4+e*5,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d),
       (a+b+c+d+e)/5
  FROM t1
 WHERE a>b
    OR (a>b-2 AND a<b+2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.c > outer(spark_catalog.mydb1.t1.c))(x.d < outer(spark_catalog.mydb1.t1.d)):
Aggregate [count(1) AS count(1)#xL]
+- Filter ((c#x > outer(c#x)) AND (d#x < outer(d#x)))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT d,
       abs(b-c),
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       b
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND a IS NULL
   AND c>d
-- !query schema
struct<d:int,abs((b - c)):int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,b:int>
-- !query output
201	1	-1	555	202


-- !query
SELECT b,
       d-e,
       a+b*2,
       b-c
  FROM t1
-- !query schema
struct<b:int,(d - e):int,(a + (b * 2)):int,(b - c):int>
-- !query output
102	-3	NULL	NULL
106	4	319	-2
114	NULL	338	2
119	NULL	354	2
122	NULL	367	-2
128	1	383	-1
134	3	400	3
136	-2	410	-3
141	-1	426	1
149	NULL	443	3
150	NULL	451	-3
157	NULL	469	-2
160	2	481	-3
170	-1	511	-2
176	NULL	529	-3
180	-1	541	-2
188	4	563	2
194	1	578	1
197	1	593	-1
202	-3	NULL	-1
210	1	634	-3
215	-2	648	-1
221	-4	665	-1
227	4	680	-1
231	-3	696	-1
236	NULL	709	-3
244	NULL	NULL	4
248	4	742	1
NULL	-1	NULL	NULL
NULL	-1	NULL	NULL


-- !query
SELECT c,
       e,
       a+b*2,
       abs(b-c),
       b-c,
       a
  FROM t1
 WHERE a IS NULL
   AND (e>a AND e<b)
   AND b IS NOT NULL
-- !query schema
struct<c:int,e:int,(a + (b * 2)):int,abs((b - c)):int,(b - c):int,a:int>
-- !query output



-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2,
       a+b*2+c*3+d*4+e*5,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       a+b*2+c*3,
       a-b,
       a
  FROM t1
 WHERE b>c
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,(a + (b * 2)):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,((a + (b * 2)) + (c * 3)):int,(a - b):int,a:int>
-- !query output
132.0	400	1975	333	793	-2	132
142.0	426	2129	555	846	3	144
187.0	563	2802	111	1121	-1	187
192.0	578	2880	444	1157	-4	190
247.0	742	3704	222	1483	-2	246
NULL	338	NULL	555	674	-4	110
NULL	354	NULL	222	705	-3	116
NULL	443	NULL	222	881	-4	145
NULL	NULL	NULL	555	NULL	NULL	NULL


-- !query
SELECT e,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END,
       a-b,
       abs(b-c),
       abs(a)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR b>c
-- !query schema
struct<e:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,CASE WHEN (c > scalarsubquery()) THEN (a * 2) ELSE (b * 10) END:int,(a - b):int,abs((b - c)):int,abs(a):int>
-- !query output
104	NULL	555	1020	NULL	NULL	NULL
105	-2	222	1060	1	2	107
113	2	555	1140	-4	2	110
130	3	333	1340	-2	3	132
143	1	555	1410	3	1	144
147	3	222	1490	-4	3	145
162	-3	444	1600	1	3	161
166	NULL	222	NULL	NULL	NULL	167
174	-2	222	1700	1	2	171
184	-2	222	362	1	2	181
185	2	111	374	-1	2	187
191	1	444	380	-4	1	190
195	-1	555	398	2	1	199
204	-1	555	NULL	NULL	1	NULL
207	NULL	555	NULL	NULL	NULL	208
211	-3	555	428	4	3	214
219	-1	444	436	3	1	218
224	-1	444	446	2	1	223
225	-1	111	452	-1	1	226
233	-1	555	468	3	1	234
245	1	222	492	-2	1	246
NULL	2	222	1190	-3	2	116
NULL	4	555	NULL	NULL	4	NULL


-- !query
SELECT a-b,
       c,
       b,
       b-c,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       (a+b+c+d+e)/5,
       d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR (c<=d-2 OR c>=d+2)
-- !query schema
struct<(a - b):int,c:int,b:int,(b - c):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,(((((a + b) + c) + d) + e) / 5):double,d:int>
-- !query output
-1	129	128	-1	111	127.0	126
-1	186	188	2	111	187.0	189
-1	228	227	-1	111	227.0	229
-2	131	134	3	333	132.0	133
-2	159	157	-2	555	NULL	NULL
-2	247	248	1	222	247.0	249
-3	117	119	2	222	NULL	115
-4	112	114	2	555	NULL	NULL
-4	146	149	3	222	NULL	NULL
-4	193	194	1	444	192.0	192
1	108	106	-2	222	107.0	109
1	124	122	-2	222	NULL	NULL
1	153	150	-3	555	NULL	NULL
1	163	160	-3	444	162.0	164
1	172	170	-2	222	172.0	173
1	179	176	-3	555	NULL	NULL
1	182	180	-2	222	182.0	183
1	239	236	-3	444	NULL	NULL
2	139	136	-3	222	137.0	135
2	198	197	-1	555	197.0	196
2	222	221	-1	444	222.0	220
3	140	141	1	555	142.0	142
3	216	215	-1	444	217.0	217
3	232	231	-1	555	232.0	230
4	213	210	-3	555	212.0	212
NULL	168	NULL	NULL	222	NULL	165
NULL	203	202	-1	555	NULL	201
NULL	240	244	4	555	NULL	243
NULL	NULL	102	NULL	555	NULL	101
NULL	NULL	NULL	NULL	555	NULL	206


-- !query
SELECT abs(b-c),
       d-e,
       c-d,
       a+b*2+c*3+d*4+e*5,
       d
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
    OR c>d
    OR d>e
-- !query schema
struct<abs((b - c)):int,(d - e):int,(c - d):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,d:int>
-- !query output
1	-1	-2	2129	142
1	-2	-1	3259	217
1	-3	2	3477	230
1	-3	2	NULL	201
1	-4	2	3331	220
1	1	1	2880	192
1	1	2	2946	196
1	1	3	1899	126
1	4	-1	3405	229
1	4	-2	3704	249
2	-1	-1	2589	173
2	-1	-1	2739	183
2	4	-1	1604	109
2	4	-3	2802	189
2	NULL	2	NULL	115
2	NULL	NULL	NULL	NULL
2	NULL	NULL	NULL	NULL
2	NULL	NULL	NULL	NULL
3	-2	4	2052	135
3	1	1	3176	212
3	2	-1	2436	164
3	3	-2	1975	133
3	NULL	NULL	NULL	NULL
3	NULL	NULL	NULL	NULL
3	NULL	NULL	NULL	NULL
3	NULL	NULL	NULL	NULL
4	NULL	-3	NULL	243
NULL	-1	3	NULL	165
NULL	-1	NULL	NULL	206
NULL	-3	NULL	NULL	101


-- !query
SELECT a-b,
       (a+b+c+d+e)/5,
       abs(b-c),
       c,
       abs(a),
       e,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
    OR a IS NULL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2,
       c,
       e,
       b
  FROM t1
 WHERE (e>a AND e<b)
    OR coalesce(a,b,c,d,e)<>0
-- !query schema
struct<(a + (b * 2)):int,c:int,e:int,b:int>
-- !query output
319	108	105	106
338	112	113	114
354	117	NULL	119
367	124	121	122
383	129	125	128
400	131	130	134
410	139	137	136
426	140	143	141
443	146	147	149
451	153	NULL	150
469	159	158	157
481	163	162	160
511	172	174	170
529	179	175	176
541	182	184	180
563	186	185	188
578	193	191	194
593	198	195	197
634	213	211	210
648	216	219	215
665	222	224	221
680	228	225	227
696	232	233	231
709	239	238	236
742	247	245	248
NULL	168	166	NULL
NULL	203	204	202
NULL	240	NULL	244
NULL	NULL	104	102
NULL	NULL	207	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       d,
       (a+b+c+d+e)/5,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b)
  FROM t1
 WHERE a>b
   AND (e>a AND e<b)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT a+b*2+c*3+d*4+e*5
  FROM t1
 WHERE (a>b-2 AND a<b+2)
    OR d NOT BETWEEN 110 AND 150
    OR EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
1604
1899
1975
2052
2129
2436
2589
2739
2802
2880
2946
3176
3259
3331
3405
3477
3704
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL


-- !query
SELECT b-c,
       a+b*2+c*3+d*4+e*5
  FROM t1
-- !query schema
struct<(b - c):int,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int>
-- !query output
-1	1899
-1	2946
-1	3259
-1	3331
-1	3405
-1	3477
-1	NULL
-2	1604
-2	2589
-2	2739
-2	NULL
-2	NULL
-3	2052
-3	2436
-3	3176
-3	NULL
-3	NULL
-3	NULL
1	2129
1	2880
1	3704
2	2802
2	NULL
2	NULL
3	1975
3	NULL
4	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END
  FROM t1
 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b)
-- !query schema
struct<CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int>
-- !query output
111
111
111
222
222
222
222
222
222
222
222
333
444
444
444
444
444
555
555
555
555
555
555
555
555
555
555


-- !query
SELECT a-b,
       (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b),
       a
  FROM t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Correlated column is not allowed in predicate (x.b < outer(spark_catalog.mydb1.t1.b)):
Aggregate [count(1) AS count(1)#xL]
+- Filter (b#x < outer(b#x))
   +- SubqueryAlias x
      +- SubqueryAlias spark_catalog.mydb1.t1
         +- Relation mydb1.t1[a#x,b#x,c#x,d#x,e#x] parquet


-- !query
SELECT abs(b-c)
  FROM t1
 WHERE coalesce(a,b,c,d,e)<>0
   AND b IS NOT NULL
-- !query schema
struct<abs((b - c)):int>
-- !query output
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
2
2
3
3
3
3
3
3
3
3
4
NULL


-- !query
SELECT c-d,
       abs(b-c)
  FROM t1
 WHERE (c<=d-2 OR c>=d+2)
   AND e+d BETWEEN a+b-10 AND c+130
   AND b IS NOT NULL
-- !query schema
struct<(c - d):int,abs((b - c)):int>
-- !query output
3	1


-- !query
SELECT (a+b+c+d+e)/5,
       e,
       c-d,
       a+b*2+c*3,
       CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222
        WHEN a<b+3 THEN 333 ELSE 444 END,
       a-b
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
    OR coalesce(a,b,c,d,e)<>0
    OR a IS NULL
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,e:int,(c - d):int,((a + (b * 2)) + (c * 3)):int,CASE WHEN (a < (b - 3)) THEN 111 WHEN (a <= b) THEN 222 WHEN (a < (b + 3)) THEN 333 ELSE 444 END:int,(a - b):int>
-- !query output
107.0	105	-1	643	333	1
127.0	125	3	770	222	-1
132.0	130	-2	793	222	-2
137.0	137	4	827	333	2
142.0	143	-2	846	444	3
162.0	162	-1	970	333	1
172.0	174	-1	1027	333	1
182.0	184	-1	1087	333	1
187.0	185	-3	1121	222	-1
192.0	191	1	1157	111	-4
197.0	195	2	1187	333	2
212.0	211	1	1273	444	4
217.0	219	-1	1296	444	3
222.0	224	2	1331	333	2
227.0	225	-1	1364	222	-1
232.0	233	2	1392	444	3
247.0	245	-2	1483	222	-2
NULL	104	NULL	NULL	444	NULL
NULL	113	NULL	674	111	-4
NULL	121	NULL	739	333	1
NULL	147	NULL	881	111	-4
NULL	158	NULL	946	222	-2
NULL	166	3	NULL	444	NULL
NULL	175	NULL	1066	333	1
NULL	204	2	NULL	444	NULL
NULL	207	NULL	NULL	444	NULL
NULL	238	NULL	1426	333	1
NULL	NULL	-3	NULL	444	NULL
NULL	NULL	2	705	222	-3
NULL	NULL	NULL	910	333	1


-- !query
SELECT a-b,
       a
  FROM t1
 WHERE c>d
-- !query schema
struct<(a - b):int,a:int>
-- !query output
-1	127
-3	116
-4	190
2	138
2	199
2	223
3	234
4	214
NULL	167
NULL	NULL


-- !query
SELECT (a+b+c+d+e)/5,
       a+b*2+c*3+d*4+e*5,
       d-e,
       a+b*2,
       CASE a+1 WHEN b THEN 111 WHEN c THEN 222
        WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END,
       c
  FROM t1
 WHERE c BETWEEN b-2 AND d+2
   AND b>c
   AND a>b
-- !query schema
struct<(((((a + b) + c) + d) + e) / 5):double,((((a + (b * 2)) + (c * 3)) + (d * 4)) + (e * 5)):int,(d - e):int,(a + (b * 2)):int,CASE WHEN ((a + 1) = b) THEN 111 WHEN ((a + 1) = c) THEN 222 WHEN ((a + 1) = d) THEN 333 WHEN ((a + 1) = e) THEN 444 ELSE 555 END:int,c:int>
-- !query output
142.0	2129	-1	426	555	140


-- !query
SELECT a+b*2+c*3
  FROM t1
 WHERE e+d BETWEEN a+b-10 AND c+130
    OR c>d
    OR a IS NULL
-- !query schema
struct<((a + (b * 2)) + (c * 3)):int>
-- !query output
1157
1187
1273
1331
1392
643
705
770
827
NULL
NULL
NULL
NULL
